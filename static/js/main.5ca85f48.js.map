{"version":3,"file":"static/js/main.5ca85f48.js","mappings":"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AAY,WACpF,WAAY,UAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WACpF,UAAY,WAAY,QAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UACpF,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,SAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,SAAY,WAAY,WACpF,WAAY,QAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UACpF,WAAY,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,SACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,SAAY,WAAY,UAAY,UAAY,WAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,UAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WAAY,YAGtFA,EAAK,GAAK,CACR,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,SAAY,WAAY,UAAY,WACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UACpF,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UACpF,WAAY,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WACpF,WAAY,WAAY,UAAY,SAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WACpF,WAAY,SAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,UAAY,UAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UA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AY,UAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,UAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WAAY,UAAY,UAAY,WAAY,UAAY,WACpF,UAAY,WAAY,SAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,UAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,YAGtFA,EAAK,GAAK,CACR,WAAY,UAAY,WAAY,WAAY,WAAY,SAAY,WAAY,UACpF,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UACpF,SAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,UACpF,UAAY,WAAY,WAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,UAAY,WAAY,UAAY,UAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WACpF,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WACpF,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,UAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UACpF,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,SAAY,WACpF,WAAY,WAAY,WAAY,WAAY,UAAY,SAAY,UAAY,WACpF,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,YAGtFA,EAAK,GAAK,CACR,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,WAAY,UACpF,SAAY,WAAY,UAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UACpF,WAAY,UAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WACpF,UAAY,WAAY,WAAY,WAAY,WAAY,UAAY,UAAY,UACpF,UAAY,WAAY,SAAY,UAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WAAY,WACpF,UAAY,WAAY,UAAY,WAAY,WAAY,WAAY,WAAY,WACpF,WAAY,UAAY,WAAY,WAAY,WAAY,UAAY,WAAY,WACpF,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UACpF,WAAY,SAAY,WAAY,WAAY,UAAY,WAAY,UAAY,WACpF,UAAY,WAAY,WAAY,WAAY,WAAY,WAAY,UAAY,WACpF,WAAY,WAAY,WA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AAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,QAAY,UAC5D,UAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,SAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,UAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,YAEtC,CACE,WAAY,WAAY,WAAY,WAAY,SAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,SAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,SAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,UAAY,UAAY,UAAY,WAAY,UAC5D,WAAY,UAAY,WAAY,WAAY,SAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,UAC5D,UAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,SAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,UAAY,WAAY,WAAY,UAAY,WAC5D,SAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,UAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,UAAY,UAAY,WAAY,UAC5D,UAAY,UAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,YAEtC,CACE,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,UAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,SAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,UAC5D,UAAY,WAAY,UAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,SAAY,WAAY,SAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,UAAY,UAAY,SAAY,WAAY,WAC5D,WAAY,UAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,UAAY,UAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,UAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,UAC5D,UAAY,UAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,UAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,QAAY,UAAY,UAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,YAEtC,CACE,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,UAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,UAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,UAAY,SAAY,WAAY,SAAY,WAAY,WAC5D,UAAY,WAAY,WAAY,WAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,UAAY,WAAY,WAC5D,WAAY,WAAY,WAAY,WAAY,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G,EAAKvG,EAAO,IAAI,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC3EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,GAAKuG,EAAKvG,EAAO,KAAK,EAAIuG,EAAKvG,EAAO,IAC7EuG,EAAKvG,EAAO,KAAK,GAAKuG,EA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A,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,kEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,sEAINiB,IAAK,CACHb,IAAK,EACLJ,OAAQ,CACN,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,iEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,kEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,mEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,oEAEF,CACE,mEACA,uEAAA8F,GAAA3qC,IAAA,SAAA90G,EAAA+L,GCrwBR,IAsOIyyB,EAtOAxhC,EAAS+O,EAMT3M,EAASi4I,GAAMC,OAEnB,SAAS13I,EAAYI,GACnB,GAAqB,UAAjBA,EAAQ9H,KACVgQ,KAAK46F,MAAQ,IAAIw7C,GAAMC,MAAMv+I,QAC1B,GAAqB,YAAjBA,EAAQ9H,KACfgQ,KAAK46F,MAAQ,IAAIw7C,GAAME,QAAQx+I,OAC5B,IAAqB,SAAjBA,EAAQ9H,KAEZ,MAAUC,MAAM,uBADnB+P,KAAK46F,MAAQ,IAAIw7C,GAAMtH,KAAKh3I,EACa,CAC3CkI,KAAKrI,EAAIqI,KAAK46F,MAAMjjG,EACpBqI,KAAK9I,EAAI8I,KAAK46F,MAAM1jG,EACpB8I,KAAKq1C,KAAOv9C,EAAQu9C,KAEpBn+C,EAAO8I,KAAKrI,EAAEqhD,WAAY,iBAC1B9hD,EAAO8I,KAAKrI,EAAE4hG,IAAIv5F,KAAK9I,GAAGs9I,aAAc,0BAC1C,CAGA,SAASxhJ,EAAY8E,EAAM+L,GACzB9M,OAAO+W,eAAehZ,EAAQgD,EAAM,CAClCoX,cAAA,EACAC,YAAA,EACAlI,IAAK,WACH,IAAIqvB,EAAQ,IAAI5+B,EAAYmM,GAM5B,OALA9M,OAAO+W,eAAehZ,EAAQgD,EAAM,CAClCoX,cAAA,EACAC,YAAA,EACAO,MAAO4mB,IAEFA,CAAA,GAGb,CAhBAxhC,EAAO0iJ,YAAc9/I,EAkBrB1E,EAAY,OAAQ,CAClBhD,KAAM,QACN2pF,MAAO,OACPtiF,EAAG,wDACHK,EAAG,wDACHE,EAAG,wDACHV,EAAG,wDACHm+C,KAAM8hG,GAAKvlG,OACX6+F,MAAA,EACA94I,EAAG,CACD,wDACA,2DAIJ3E,EAAY,OAAQ,CAClBhD,KAAM,QACN2pF,MAAO,OACPtiF,EAAG,iEACHK,EAAG,iEACHE,EAAG,iEACHV,EAAG,iEACHm+C,KAAM8hG,GAAKvlG,OACX6+F,MAAA,EACA94I,EAAG,CACD,iEACA,oEAIJ3E,EAAY,OAAQ,CAClBhD,KAAM,QACN2pF,MAAO,KACPtiF,EAAG,0EACHK,EAAG,0EACHE,EAAG,0EACHV,EAAG,0EACHm+C,KAAM8hG,GAAKvlG,OACX6+F,MAAA,EACA94I,EAAG,CACD,0EACA,6EAIJ3E,EAAY,OAAQ,CAClBhD,KAAM,QACN2pF,MAAO,KACPtiF,EAAG,8GAEHK,EAAG,8GAEHE,EAAG,8GAEHV,EAAG,8GAEHm+C,KAAM8hG,GAAKp4F,OACX0xF,MAAA,EACA94I,EAAG,CACD,8GAEA,iHAKJ3E,EAAY,OAAQ,CAClBhD,KAAM,QACN2pF,MAAO,KACPtiF,EAAG,2JAGHK,EAAG,2JAGHE,EAAG,2JAGHV,EAAG,2JAGHm+C,KAAM8hG,GAAKx/F,OACX84F,MAAA,EACA94I,EAAG,CACD,2JAGA,8JAOJ3E,EAAY,aAAc,CACxBhD,KAAM,OACN2pF,MAAO,SACPtiF,EAAG,sEACHK,EAAG,QACHE,EAAG,IACHV,EAAG,sEACHugJ,SAAU,IACVpiG,KAAM8hG,GAAKvlG,OACX6+F,MAAA,EACA94I,EAAG,CACD,OAIJ3E,EAAY,UAAW,CACrBhD,KAAM,UACN2pF,MAAO,SACPtiF,EAAG,sEACHK,EAAG,KACHpG,EAAG,IAEHuG,EAAG,sEACHX,EAAG,sEACHugJ,SAAU,IACVpiG,KAAM8hG,GAAKvlG,OACX6+F,MAAA,EACA94I,EAAG,CACD,mEAEA,sEAKJ3E,EAAY,kBAAmB,CAC7BhD,KAAM,QACN2pF,MAAO,KACPtiF,EAAG,0EACHK,EAAG,0EACHE,EAAG,0EACHV,EAAG,0EACHm+C,KAAM8hG,GAAKvlG,OACX6+F,MAAA,EACA94I,EAAG,CACD,mEACA,sEAKJ3E,EAAY,kBAAmB,CAC7BhD,KAAM,QACN2pF,MAAO,KACPtiF,EAAG,6GAEHK,EAAG,6GAEHE,EAAG,6GAEHV,EAAG,6GAEHm+C,KAAM8hG,GAAKp4F,OACX0xF,MAAA,EACA94I,EAAG,CACD,mGAEA,sGAMJ3E,EAAY,kBAAmB,CAC7BhD,KAAM,QACN2pF,MAAO,KACPtiF,EAAG,iJAEHK,EAAG,iJAEHE,EAAG,iJAEHV,EAAG,iJAEHm+C,KAAM8hG,GAAKx/F,OACX84F,MAAA,EACA94I,EAAG,CACD,mIAEA,sIAOJ,IACE2+B,EAAMghH,EACR,CAAE,MAAOx/I,GACPw+B,OAAA,CACF,CAEAtjC,EAAY,YAAa,CACvBhD,KAAM,QACN2pF,MAAO,OACPtiF,EAAG,0EACHK,EAAG,IACHE,EAAG,IACHV,EAAG,0EACHa,EAAG,IACHs9C,KAAM8hG,GAAKvlG,OAGX+gG,KAAM,mEACNsB,OAAQ,mEACRC,MAAO,CACL,CACEx8I,EAAG,mCACHE,EAAG,qCAEL,CACEF,EAAG,oCACHE,EAAG,qCAIP64I,MAAA,EACA94I,EAAG,CACD,mEACA,mEACA2+B,IAAA,ICrQJ,SAASohH,GAAS5/I,GAChB,KAAMkI,gBAAgB03I,IACpB,OAAO,IAAIA,GAAS5/I,GACtBkI,KAAKq1C,KAAOv9C,EAAQu9C,KACpBr1C,KAAK23I,aAAe7/I,EAAQ6/I,WAE5B33I,KAAK43I,OAAS53I,KAAKq1C,KAAKs5D,QACxB3uG,KAAK63I,WAAa//I,EAAQ+/I,YAAc73I,KAAKq1C,KAAKu5D,aAElD5uG,KAAKnE,QAAU,KACfmE,KAAK83I,eAAiB,KACtB93I,KAAK3B,EAAI,KACT2B,KAAKwmC,EAAI,KAET,IAAI3iC,EAAUqrI,GAAMniF,QAAQj1D,EAAQ6C,QAAS7C,EAAQigJ,YAAc,OAC/DzhH,EAAQ44G,GAAMniF,QAAQj1D,EAAQkgJ,MAAOlgJ,EAAQmgJ,UAAY,OACzDnjJ,EAAOo6I,GAAMniF,QAAQj1D,EAAQogJ,KAAMpgJ,EAAQqgJ,SAAW,OAC1D1tF,GAAO5mD,EAAQzP,QAAW4L,KAAK63I,WAAa,EACrC,mCAAqC73I,KAAK63I,WAAa,SAC9D73I,KAAKyO,MAAM5K,EAASyyB,EAAOxhC,EAC7B,CACA,IAAAsjJ,GAAiBV,GAEjBA,GAAS1gJ,UAAUyX,MAAQ,SAAc3W,EAAS+L,EAAOyyB,GACvD,IAAIxhC,EAAOgD,EAAQmK,OAAO4B,GAAO5B,OAAOq0B,GAExCt2B,KAAK3B,EAAQ/E,MAAM0G,KAAK43I,OAAS,GACjC53I,KAAKwmC,EAAQltC,MAAM0G,KAAK43I,OAAS,GACjC,IAAK,IAAI1gJ,EAAI,EAAGA,EAAI8I,KAAKwmC,EAAEpyC,OAAQ8C,IACjC8I,KAAK3B,EAAEnH,GAAK,EACZ8I,KAAKwmC,EAAEtvC,GAAK,EAGd8I,KAAK8hD,QAAQhtD,GACbkL,KAAKnE,QAAU,EACfmE,KAAK83I,eAAiB,eACxB,EAEAJ,GAAS1gJ,UAAUqhJ,MAAQ,WACzB,OAAO,IAAIlB,GAAK/hJ,KAAK4K,KAAKq1C,KAAMr1C,KAAK3B,EACvC,EAEAq5I,GAAS1gJ,UAAU8qD,QAAU,SAAgBhqD,GAC3C,IAAI+L,EAAO7D,KAAKq4I,QACApkJ,OAAO+L,KAAKwmC,GACZvyC,OAAO,CAAE,IACrB6D,IACF+L,EAAOA,EAAK5P,OAAO6D,IACrBkI,KAAK3B,EAAIwF,EAAKvO,SACd0K,KAAKwmC,EAAIxmC,KAAKq4I,QAAQpkJ,OAAO+L,KAAKwmC,GAAGlxC,SAChCwC,IAGLkI,KAAK3B,EAAI2B,KAAKq4I,QACApkJ,OAAO+L,KAAKwmC,GACZvyC,OAAO,CAAE,IACTA,OAAO6D,GACPxC,SACd0K,KAAKwmC,EAAIxmC,KAAKq4I,QAAQpkJ,OAAO+L,KAAKwmC,GAAGlxC,SACvC,EAEAoiJ,GAAS1gJ,UAAUshJ,OAAS,SAAgBxgJ,EAAS+L,EAAYyyB,EAAKxhC,GAE1C,iBAAf+O,IACT/O,EAASwhC,EACTA,EAAMzyB,EACNA,EAAa,MAGf/L,EAAUo3I,GAAMniF,QAAQj1D,EAAS+L,GACjCyyB,EAAM44G,GAAMniF,QAAQz2B,EAAKxhC,GAEzB21D,GAAO3yD,EAAQ1D,QAAW4L,KAAK63I,WAAa,EACrC,mCAAqC73I,KAAK63I,WAAa,SAE9D73I,KAAK8hD,QAAQhqD,EAAQmK,OAAOq0B,GAAO,KACnCt2B,KAAKnE,QAAU,CACjB,EAEA67I,GAAS1gJ,UAAUqE,SAAW,SAAkBvD,EAAK+L,EAAKyyB,EAAKxhC,GAC7D,GAAIkL,KAAKnE,QAAUmE,KAAK83I,eACtB,MAAU7nJ,MAAM,sBAGC,iBAAR4T,IACT/O,EAASwhC,EACTA,EAAMzyB,EACNA,EAAM,MAIJyyB,IACFA,EAAM44G,GAAMniF,QAAQz2B,EAAKxhC,GAAU,OACnCkL,KAAK8hD,QAAQxrB,IAIf,IADA,IAAIp/B,EAAO,GACJA,EAAK9C,OAAS0D,GACnBkI,KAAKwmC,EAAIxmC,KAAKq4I,QAAQpkJ,OAAO+L,KAAKwmC,GAAGlxC,SACrC4B,EAAOA,EAAK+K,OAAOjC,KAAKwmC,GAG1B,IAAI9uC,EAAMR,EAAKsJ,MAAM,EAAG1I,GAGxB,OAFAkI,KAAK8hD,QAAQxrB,GACbt2B,KAAKnE,UACEqzI,GAAMj+I,OAAOyG,EAAKmM,EAC3B,EC5GA,IAAI00I,GAASpJ,GAAMC,OAEnB,SAASoJ,GAAQ1gJ,EAAI+L,GACnB7D,KAAKia,GAAKniB,EACVkI,KAAKuI,KAAO,KACZvI,KAAKqI,IAAM,KAGPxE,EAAQ0E,MACVvI,KAAKy4I,eAAe50I,EAAQ0E,KAAM1E,EAAQ60I,SACxC70I,EAAQwE,KACVrI,KAAK24I,cAAc90I,EAAQwE,IAAKxE,EAAQ+0I,OAC5C,CACA,IAAAC,GAAiBL,GAEjBA,GAAQM,WAAa,SAAoBhhJ,EAAI+L,EAAKyyB,GAChD,OAAIzyB,aAAe20I,GACV30I,EAEF,IAAI20I,GAAQ1gJ,EAAI,CACrBuQ,IAAKxE,EACL+0I,OAAQtiH,GAEZ,EAEAkiH,GAAQO,YAAc,SAAqBjhJ,EAAI+L,EAAMyyB,GACnD,OAAIzyB,aAAgB20I,GACX30I,EAEF,IAAI20I,GAAQ1gJ,EAAI,CACrByQ,KAAM1E,EACN60I,QAASpiH,GAEb,EAGAkiH,GAAQxhJ,UAAUgiD,SAAW,WAC3B,IAAIlhD,EAAMkI,KAAKk6G,YAEf,OAAIpiH,EAAI08I,aACC,CAAEz6F,QAAA,EAAei/F,OAAQ,sBAC7BlhJ,EAAIkhD,WAEJlhD,EAAIyhG,IAAIv5F,KAAKia,GAAG2gF,MAAM1jG,GAAGs9I,aAGvB,CAAEz6F,QAAA,EAAci/F,OAAQ,MAFtB,CAAEj/F,QAAA,EAAei/F,OAAQ,uBAFzB,CAAEj/F,QAAA,EAAei/F,OAAQ,4BAKpC,EAEAR,GAAQxhJ,UAAUkjH,UAAY,SAAmBpiH,EAAK+L,GAIpD,OAHK7D,KAAKqI,MACRrI,KAAKqI,IAAMrI,KAAKia,GAAGtiB,EAAE4hG,IAAIv5F,KAAKuI,OAE3BzQ,EAGEkI,KAAKqI,IAAIpX,OAAO6G,EAAK+L,GAFnB7D,KAAKqI,GAGhB,EAEAmwI,GAAQxhJ,UAAUmjH,WAAa,SAAoBriH,GACjD,MAAY,QAARA,EACKkI,KAAKuI,KAAKvM,SAAS,GAAI,GAEvBgE,KAAKuI,IAChB,EAEAiwI,GAAQxhJ,UAAUyhJ,eAAiB,SAAwB3gJ,EAAK+L,GAK9D,GAJA7D,KAAKuI,KAAO,IAAI4+H,GAAGrvI,EAAK+L,GAAO,IAIJ,SAAvB7D,KAAKia,GAAG2gF,MAAM5qG,KAAiB,CACjC,IAAIsmC,EAAMt2B,KAAKia,GAAG2gF,MAAM01C,IACpBx7I,EAAOwhC,EAAI60G,MAAM,KAAShnE,IAAI7tC,GAAK60G,MAAM,GAC7CnrI,KAAKuI,KAAOvI,KAAKuI,KAAKigF,GAAGlyD,EAAI60G,MAAM,MACnCnrI,KAAKuI,KAAOvI,KAAKuI,KAAKggF,IAAIzzF,EAAA,MAI1BkL,KAAKuI,KAAOvI,KAAKuI,KAAKwjI,KAAK/rI,KAAKia,GAAG2gF,MAAM1jG,EAC7C,EAEAshJ,GAAQxhJ,UAAU2hJ,cAAgB,SAAuB7gJ,EAAK+L,GAC5D,GAAI/L,EAAIqE,GAAKrE,EAAIyK,EAWf,MAP2B,SAAvBvC,KAAKia,GAAG2gF,MAAM5qG,KAChBuoJ,GAAOzgJ,EAAIqE,EAAG,qBACkB,UAAvB6D,KAAKia,GAAG2gF,MAAM5qG,MACS,YAAvBgQ,KAAKia,GAAG2gF,MAAM5qG,MACvBuoJ,GAAOzgJ,EAAIqE,GAAKrE,EAAIyK,EAAG,qCAEzBvC,KAAKqI,IAAMrI,KAAKia,GAAG2gF,MAAMu2C,MAAMr5I,EAAIqE,EAAGrE,EAAIyK,IAG5CvC,KAAKqI,IAAMrI,KAAKia,GAAG2gF,MAAMs3C,YAAYp6I,EAAK+L,EAC5C,EAGA20I,GAAQxhJ,UAAUqmH,OAAS,SAAgBvlH,GACzC,OAAOA,EAAIyhG,IAAIv5F,KAAKuI,MAAM+pI,MAC5B,EAGAkG,GAAQxhJ,UAAUq+D,KAAO,SAAcv9D,EAAK+L,EAAKyyB,GAC/C,OAAOt2B,KAAKia,GAAGo7C,KAAKv9D,EAAKkI,KAAM6D,EAAKyyB,EACtC,EAEAkiH,GAAQxhJ,UAAU05D,OAAS,SAAgB54D,EAAK+L,GAC9C,OAAO7D,KAAKia,GAAGy2C,OAAO54D,EAAK+L,EAAW7D,KACxC,EAEAw4I,GAAQxhJ,UAAUoxI,QAAU,WAC1B,MAAO,eAAiBpoI,KAAKuI,MAAQvI,KAAKuI,KAAKvM,SAAS,GAAI,IACrD,UAAYgE,KAAKqI,KAAOrI,KAAKqI,IAAI+/H,WAAa,IACvD,ECnHA,IAAI13H,GAASy+H,GAAMC,OAEnB,SAAS15H,GAAU5d,EAAS+L,GAC1B,GAAI/L,aAAmB4d,GACrB,OAAO5d,EAELkI,KAAKi5I,WAAWnhJ,EAAS+L,KAG7B6M,GAAO5Y,EAAQw+B,GAAKx+B,EAAQ9E,EAAG,4BAC/BgN,KAAKs2B,EAAI,IAAI6wG,GAAGrvI,EAAQw+B,EAAG,IAC3Bt2B,KAAKhN,EAAI,IAAIm0I,GAAGrvI,EAAQ9E,EAAG,aACvB8E,EAAQohJ,cACVl5I,KAAKk5I,cAAgB,KAErBl5I,KAAKk5I,cAAgBphJ,EAAQohJ,cACjC,CACA,IAAA/jI,GAAiBO,GAEjB,SAASvE,KACPnR,KAAKm5I,MAAQ,CACf,CAEA,SAAS1nI,GAAU3Z,EAAK+L,GACtB,IAAIyyB,EAAUx+B,EAAI+L,EAAEs1I,SACpB,KAAgB,IAAV7iH,GACJ,OAAOA,EAIT,IAFA,IAAIxhC,EAAqB,GAAVwhC,EACXp/B,EAAM,EACDQ,EAAI,EAAG1E,EAAM6Q,EAAEs1I,MAAOzhJ,EAAI5C,EAAU4C,IAAK1E,IAChDkE,IAAQ,EACRA,GAAOY,EAAI9E,GAGb,OADA6Q,EAAEs1I,MAAQnmJ,EACHkE,CACT,CAEA,SAASmZ,GAAUvY,GAGjB,IAFA,IAAI+L,EAAI,EACJyyB,EAAMx+B,EAAI1D,OAAS,GACf0D,EAAI+L,MAAqB,IAAb/L,EAAI+L,EAAI,KAAcA,EAAIyyB,GAC5CzyB,IAEF,OAAU,IAANA,EACK/L,EAEFA,EAAI0I,MAAMqD,EACnB,CAwCA,SAASuR,GAAgBtd,EAAK+L,GAC5B,GAAIA,EAAM,IACR/L,EAAIwG,KAAKuF,OADX,CAIA,IAAIyyB,EAAS,GAAK97B,KAAKwJ,IAAIH,GAAOrJ,KAAK2gB,MAAQ,GAE/C,IADArjB,EAAIwG,KAAc,IAATg4B,KACAA,GACPx+B,EAAIwG,KAAMuF,KAASyyB,GAAU,GAAM,KAErCx+B,EAAIwG,KAAKuF,EAAA,CACX,CAjDA6R,GAAU1e,UAAUiiJ,WAAa,SAAoBnhJ,EAAM+L,GACzD/L,EAAOq3I,GAAMpiF,QAAQj1D,EAAM+L,GAC3B,IAAIyyB,EAAI,IAAInlB,GACZ,GAAwB,KAApBrZ,EAAKw+B,EAAE6iH,SACT,OAAO,EAGT,GADU1nI,GAAU3Z,EAAMw+B,GACfA,EAAE6iH,QAAWrhJ,EAAK1D,OAC3B,OAAO,EAET,GAAwB,IAApB0D,EAAKw+B,EAAE6iH,SACT,OAAO,EAET,IAAIrkJ,EAAO2c,GAAU3Z,EAAMw+B,GACvBp/B,EAAIY,EAAK0I,MAAM81B,EAAE6iH,MAAOrkJ,EAAOwhC,EAAE6iH,OAErC,GADA7iH,EAAE6iH,OAASrkJ,EACa,IAApBgD,EAAKw+B,EAAE6iH,SACT,OAAO,EAET,IAAIzhJ,EAAO+Z,GAAU3Z,EAAMw+B,GAC3B,GAAIx+B,EAAK1D,SAAWsD,EAAO4+B,EAAE6iH,MAC3B,OAAO,EAET,IAAInmJ,EAAI8E,EAAK0I,MAAM81B,EAAE6iH,MAAOzhJ,EAAO4+B,EAAE6iH,OAYrC,OAXa,IAATjiJ,EAAE,IAAoB,IAAPA,EAAE,KACnBA,EAAIA,EAAEsJ,MAAM,IAED,IAATxN,EAAE,IAAoB,IAAPA,EAAE,KACnBA,EAAIA,EAAEwN,MAAM,IAGdR,KAAKs2B,EAAI,IAAI6wG,GAAGjwI,GAChB8I,KAAKhN,EAAI,IAAIm0I,GAAGn0I,GAChBgN,KAAKk5I,cAAgB,OAGvB,EAeAxjI,GAAU1e,UAAUoiJ,MAAQ,SAAethJ,GACzC,IAAI+L,EAAI7D,KAAKs2B,EAAEy2B,UACXz2B,EAAIt2B,KAAKhN,EAAE+5D,UAYf,IATW,IAAPlpD,EAAE,KACJA,EAAI,CAAE,GAAI5B,OAAO4B,IAER,IAAPyyB,EAAE,KACJA,EAAI,CAAE,GAAIr0B,OAAOq0B,IAEnBzyB,EAAIwM,GAAUxM,GACdyyB,EAAIjmB,GAAUimB,KAENA,EAAE,IAAe,IAAPA,EAAE,KAClBA,EAAIA,EAAE91B,MAAM,GAEd,IAAI1L,EAAM,CAAE,GACZsgB,GAAgBtgB,EAAK+O,EAAEzP,SACvBU,EAAMA,EAAImN,OAAO4B,IACbvF,KAAK,GACT8W,GAAgBtgB,EAAKwhC,EAAEliC,QACvB,IAAI8C,EAAWpC,EAAImN,OAAOq0B,GACtB5+B,EAAM,CAAE,IAGZ,OAFA0d,GAAgB1d,EAAKR,EAAS9C,QAC9BsD,EAAMA,EAAIuK,OAAO/K,GACVi4I,GAAMl+I,OAAOyG,EAAKI,EAC3B,EC9HA,IAAIoa,GAASi9H,GAAMC,OAKnB,SAAS7+H,GAAGzY,GACV,KAAMkI,gBAAgBuQ,IACpB,OAAO,IAAIA,GAAGzY,GAGO,iBAAZA,IACToa,GAAOqlI,GAAOtgJ,eAAea,GAAU,iBAAmBA,GAE1DA,EAAUy/I,GAAOz/I,IAIfA,aAAmBy/I,GAAOC,cAC5B1/I,EAAU,CAAE8iG,MAAO9iG,IAErBkI,KAAK46F,MAAQ9iG,EAAQ8iG,MAAMA,MAC3B56F,KAAK9I,EAAI8I,KAAK46F,MAAM1jG,EACpB8I,KAAK64B,GAAK74B,KAAK9I,EAAEm0I,MAAM,GACvBrrI,KAAKrI,EAAIqI,KAAK46F,MAAMjjG,EAGpBqI,KAAKrI,EAAIG,EAAQ8iG,MAAMjjG,EACvBqI,KAAKrI,EAAE66I,WAAW16I,EAAQ8iG,MAAM1jG,EAAEw+C,YAAc,GAGhD11C,KAAKq1C,KAAOv9C,EAAQu9C,MAAQv9C,EAAQ8iG,MAAMvlD,IAC5C,CACA,IAAA3+B,GAAiBnG,GAEjBA,GAAGvZ,UAAUo/G,QAAU,SAAiBt+G,GACtC,OAAO,IAAI+gJ,GAAQ74I,KAAMlI,EAC3B,EAEAyY,GAAGvZ,UAAUqiJ,eAAiB,SAAwBvhJ,EAAM+L,GAC1D,OAAOg1I,GAAQE,YAAY/4I,KAAMlI,EAAM+L,EACzC,EAEA0M,GAAGvZ,UAAUsiJ,cAAgB,SAAuBxhJ,EAAK+L,GACvD,OAAOg1I,GAAQC,WAAW94I,KAAMlI,EAAK+L,EACvC,EAEA0M,GAAGvZ,UAAU6iH,WAAa,SAAoB/hH,GACvCA,IACHA,EAAU,CAAC,GAGb,IAAI+L,EAAO,IAAIu0I,GAAS,CACtB/iG,KAAMr1C,KAAKq1C,KACX6iG,KAAMpgJ,EAAQogJ,KACdC,QAASrgJ,EAAQqgJ,SAAW,OAC5Bx9I,QAAS7C,EAAQ6C,SAAW+0I,GAAK1vI,KAAKq1C,KAAKu5D,cAC3CmpC,WAAYjgJ,EAAQ6C,SAAW7C,EAAQigJ,YAAc,OACrDC,MAAOh4I,KAAK9I,EAAE61D,YAIhB,GAAwB,SAApB/sD,KAAK46F,MAAM5qG,KAAiB,CAC9B,IAAIsmC,EAAO,IAAI6wG,GAAGtjI,EAAKxI,SAAS,KAChC,OAAO2E,KAAKq5I,eAAe/iH,EAAA,CAK7B,IAFA,IAAIxhC,EAAQkL,KAAK9I,EAAEu+C,aACfv+C,EAAM8I,KAAK9I,EAAEitE,IAAI,IAAIgjE,GAAG,MAG1B,MADI7wG,EAAO,IAAI6wG,GAAGtjI,EAAKxI,SAASvG,KACvB4yI,IAAIxwI,GAAO,GAIpB,OADAo/B,EAAK0yG,MAAM,GACJhpI,KAAKq5I,eAAe/iH,EAE/B,EAEA/lB,GAAGvZ,UAAUuiJ,aAAe,SAAqBzhJ,EAAK+L,EAAWyyB,GAE/D,IAAIxhC,GADJwhC,EAAUA,GAA8B,EAAnBx+B,EAAI29C,cACHz1C,KAAK9I,EAAEw+C,YAG7B,OAFI5gD,EAAQ,IACVgD,EAAMA,EAAIuzI,MAAMv2I,KACb+O,GAAa/L,EAAI4vI,IAAI1nI,KAAK9I,IAAM,EAC5BY,EAAIqsE,IAAInkE,KAAK9I,GAEbY,CACX,EAEAyY,GAAGvZ,UAAUwiJ,YAAe,SAAqB1hJ,GAE/C,IAAI+L,EAUJ,OATI/L,aAAekrD,YACjBn/C,EAA2B,EAAjB/L,EAAI29C,WACd39C,EAAMkI,KAAKu5I,aAAa,IAAIpS,GAAGrvI,EAAK,KAAK,EAAO+L,IACxB,iBAAR/L,GAChB+L,EAAuB,EAAb/L,EAAI1D,OACd0D,EAAMkI,KAAKu5I,aAAa,IAAIpS,GAAGrvI,EAAK,KAAK,EAAO+L,IAEhD/L,EAAMkI,KAAKu5I,aAAa,IAAIpS,GAAGrvI,EAAK,KAE/BA,CACT,EAEAyY,GAAGvZ,UAAUq+D,KAAO,SAAcv9D,EAAK+L,EAAKyyB,EAAKxhC,GAC5B,iBAARwhC,IACTxhC,EAAUwhC,EACVA,EAAM,MAEHxhC,IACHA,EAAU,CAAC,GAEb+O,EAAM7D,KAAKq5I,eAAex1I,EAAKyyB,GAC/Bx+B,EAAMkI,KAAKw5I,YAAY1hJ,GAqBvB,IAlBA,IAAIZ,EAAQ8I,KAAK9I,EAAEu+C,aACf/9C,EAAOmM,EAAIs2G,aAAaptD,QAAQ,KAAM71D,GAGtClE,EAAQ8E,EAAIi1D,QAAQ,KAAM71D,GAG1Bo0F,EAAO,IAAI8sD,GAAS,CACtB/iG,KAAMr1C,KAAKq1C,KACX16C,QAASjD,EACTsgJ,MAAOhlJ,EACPklJ,KAAMpjJ,EAAQojJ,KACdC,QAASrjJ,EAAQqjJ,SAAW,SAI1B7mJ,EAAM0O,KAAK9I,EAAEitE,IAAI,IAAIgjE,GAAG,IAEnBr4G,EAAO,GAASA,IAAQ,CAC/B,IAAI/2B,EAAIjD,EAAQ4B,EACZ5B,EAAQ4B,EAAEo4B,GACV,IAAIq4G,GAAG77C,EAAKjwF,SAAS2E,KAAK9I,EAAEu+C,eAEhC,MADA19C,EAAIiI,KAAKu5I,aAAaxhJ,GAAA,IAChBq0I,KAAK,IAAM,GAAKr0I,EAAE2vI,IAAIp2I,IAAQ,GAApC,CAGA,IAAIuG,EAAKmI,KAAKrI,EAAE4hG,IAAIxhG,GACpB,IAAIF,EAAG28I,aAAP,CAGA,IAAI/9I,EAAMoB,EAAGy6I,OACTz7I,EAAIJ,EAAIs1I,KAAK/rI,KAAK9I,GACtB,GAAkB,IAAdL,EAAEu1I,KAAK,GAAX,CAGA,IAAI/0I,EAAIU,EAAEs0I,KAAKrsI,KAAK9I,GAAGqiG,IAAI1iG,EAAE0iG,IAAI11F,EAAIs2G,cAAc/gB,KAAKthG,IAExD,GAAkB,KADlBT,EAAIA,EAAE00I,KAAK/rI,KAAK9I,IACVk1I,KAAK,GAAX,CAGA,IAAI7pI,GAAiB1K,EAAG06I,OAAOrG,QAAU,EAAI,IACT,IAAfz1I,EAAIixI,IAAI7wI,GAAW,EAAI,GAQ5C,OALI/B,EAAQ2kJ,WAAapiJ,EAAEqwI,IAAI1nI,KAAK64B,IAAM,IACxCxhC,EAAI2I,KAAK9I,EAAEitE,IAAI9sE,GACfkL,GAAiB,GAGZ,IAAI4S,GAAU,CAAEmhB,EAAGz/B,EAAG7D,EAAGqE,EAAG6hJ,cAAe32I,GAAA,KAEtD,EAEAgO,GAAGvZ,UAAU05D,OAAS,SAAgB54D,EAAK+L,EAAWyyB,EAAKxhC,GAMzD,OALAwhC,EAAMt2B,KAAKs5I,cAAchjH,EAAKxhC,GAC9B+O,EAAY,IAAIsR,GAAUtR,EAAW,OAE3B7D,KAAK05I,QAAQ15I,KAAKw5I,YAAY1hJ,GAAM+L,EAAWyyB,IACzDt2B,KAAK05I,QAAQ15I,KAAKu5I,aAAa,IAAIpS,GAAGrvI,EAAK,KAAM+L,EAAWyyB,EAE9D,EAEA/lB,GAAGvZ,UAAU0iJ,QAAU,SAAiB5hJ,EAAK+L,EAAWyyB,GAEtD,IAAIxhC,EAAI+O,EAAUyyB,EACdp/B,EAAI2M,EAAU7Q,EAClB,GAAI8B,EAAEs3I,KAAK,GAAK,GAAKt3I,EAAE4yI,IAAI1nI,KAAK9I,IAAM,EACpC,OAAO,EACT,GAAIA,EAAEk1I,KAAK,GAAK,GAAKl1I,EAAEwwI,IAAI1nI,KAAK9I,IAAM,EACpC,OAAO,EAGT,IAeIQ,EAfA1E,EAAOkE,EAAEm1I,KAAKrsI,KAAK9I,GACnBo0F,EAAKt4F,EAAKumG,IAAIzhG,GAAKi0I,KAAK/rI,KAAK9I,GAC7B5F,EAAK0B,EAAKumG,IAAIzkG,GAAGi3I,KAAK/rI,KAAK9I,GAE/B,OAAK8I,KAAK46F,MAAMm2C,gBAWZr5I,EAAIsI,KAAKrI,EAAE+8I,QAAQppD,EAAIh1D,EAAI4jF,YAAa5oH,IACtCkjJ,cAMC98I,EAAEq9I,OAAOjgJ,KAjBV4C,EAAIsI,KAAKrI,EAAE88I,OAAOnpD,EAAIh1D,EAAI4jF,YAAa5oH,IACrCkjJ,cAGkC,IAAjC98I,EAAE46I,OAAOvG,KAAK/rI,KAAK9I,GAAGwwI,IAAI5yI,EAcrC,EAEAyb,GAAGvZ,UAAU2iJ,cAAgB,SAAS7hJ,EAAK+L,EAAWyyB,EAAGxhC,GACvDod,IAAQ,EAAIokB,KAAOA,EAAG,4CACtBzyB,EAAY,IAAIsR,GAAUtR,EAAW/O,GAErC,IAAIoC,EAAI8I,KAAK9I,EACTQ,EAAI,IAAIyvI,GAAGrvI,GACX9E,EAAI6Q,EAAUyyB,EACdg1D,EAAIznF,EAAU7Q,EAGd1B,EAAa,EAAJglC,EACTxH,EAAcwH,GAAK,EACvB,GAAItjC,EAAE00I,IAAI1nI,KAAK46F,MAAMvjG,EAAE00I,KAAK/rI,KAAK46F,MAAM1jG,KAAO,GAAK43B,EACjD,MAAU7+B,MAAM,wCAIhB+C,EADE87B,EACE9uB,KAAK46F,MAAMu3C,WAAWn/I,EAAEoX,IAAIpK,KAAK46F,MAAM1jG,GAAI5F,GAE3C0O,KAAK46F,MAAMu3C,WAAWn/I,EAAG1B,GAE/B,IAAIyG,EAAO8L,EAAUyyB,EAAE+1G,KAAKn1I,GACxBW,EAAKX,EAAEitE,IAAIzsE,GAAG6hG,IAAIxhG,GAAMg0I,KAAK70I,GAC7BT,EAAK60F,EAAEiO,IAAIxhG,GAAMg0I,KAAK70I,GAI1B,OAAO8I,KAAKrI,EAAE88I,OAAO58I,EAAI7E,EAAGyD,EAC9B,EAEA8Z,GAAGvZ,UAAU4iJ,oBAAsB,SAAS9hJ,EAAG+L,EAAWyyB,EAAGxhC,GAE3D,GAAgC,QADhC+O,EAAY,IAAIsR,GAAUtR,EAAW/O,IACvBokJ,cACZ,OAAOr1I,EAAUq1I,cAEnB,IAAK,IAAIhiJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAIQ,EACJ,IACEA,EAASsI,KAAK25I,cAAc7hJ,EAAG+L,EAAW3M,EAAA,CAC1C,MAAOY,GACP,SAGF,GAAIJ,EAAO2iH,GAAG/jF,GACZ,OAAOp/B,CAAA,CAEX,MAAUjH,MAAM,uCAClB,ECxQA,IAAIihB,GAASi+H,GAAMC,OACf5+H,GAAa2+H,GAAMK,WACnB7+H,GAAiBw+H,GAAMI,eAW3B,SAASh+H,GAAQzZ,EAAO+L,GAItB,GAHA7D,KAAK0xF,MAAQ55F,EACT+L,EAAO5M,eAAe,YACxB+I,KAAK65I,QAAUrpI,GAAW3M,EAAOwgE,SAC/BvsE,EAAMgiJ,QAAQj2I,EAAOwE,KACvBrI,KAAK+5I,KAAOl2I,EAAOwE,SAMnB,GAJArI,KAAKg6I,UAAYxpI,GAAW3M,EAAOwE,KAC/BrI,KAAKg6I,WAAuC,KAA1Bh6I,KAAKg6I,UAAU5lJ,QACX,KAAtB4L,KAAKg6I,UAAU,KACjBh6I,KAAKg6I,UAAYh6I,KAAKg6I,UAAUx5I,MAAM,EAAG,KACvCR,KAAKg6I,WAAuC,KAA1Bh6I,KAAKg6I,UAAU5lJ,OACnC,MAAUnE,MAAM,mCAEtB,CAEAshB,GAAQunI,WAAa,SAAoBhhJ,EAAO+L,GAC9C,OAAIA,aAAe0N,GACV1N,EACF,IAAI0N,GAAQzZ,EAAO,CAAEuQ,IAAKxE,GACnC,EAEA0N,GAAQ0oI,WAAa,SAAoBniJ,EAAO+L,GAC9C,OAAIA,aAAkB0N,GACb1N,EACF,IAAI0N,GAAQzZ,EAAO,CAAEusE,OAAQxgE,GACtC,EAEA0N,GAAQva,UAAUqtE,OAAS,WACzB,OAAOrkE,KAAK65I,OACd,EAEAlpI,GAAeY,GAAS,YAAY,WAClC,OAAOvR,KAAK0xF,MAAMwoD,YAAYl6I,KAAKqI,MACrC,IAEAsI,GAAeY,GAAS,OAAO,WAC7B,OAAIvR,KAAKg6I,UACAh6I,KAAK0xF,MAAMwgD,YAAYlyI,KAAKg6I,WAC9Bh6I,KAAK0xF,MAAM/5F,EAAE4hG,IAAIv5F,KAAKuI,OAC/B,IAEAoI,GAAeY,GAAS,aAAa,WACnC,IAAIzZ,EAAQkI,KAAK0xF,MACb7tF,EAAO7D,KAAKq1C,OACZ/e,EAASx+B,EAAMqiJ,eAAiB,EAGhCrlJ,EAAI+O,EAAKrD,MAAM,EAAG1I,EAAMqiJ,gBAK5B,OAJArlJ,EAAE,IAAM,IACRA,EAAEwhC,IAAW,IACbxhC,EAAEwhC,IAAW,GAENxhC,CACT,IAEA6b,GAAeY,GAAS,QAAQ,WAC9B,OAAOvR,KAAK0xF,MAAM0oD,UAAUp6I,KAAKq6I,YACnC,IAEA1pI,GAAeY,GAAS,QAAQ,WAC9B,OAAOvR,KAAK0xF,MAAMr8C,OAAOphD,OAAO+L,KAAKqkE,UAAU/uE,QACjD,IAEAqb,GAAeY,GAAS,iBAAiB,WACvC,OAAOvR,KAAKq1C,OAAO70C,MAAMR,KAAK0xF,MAAMyoD,eACtC,IAEA5oI,GAAQva,UAAUq+D,KAAO,SAAcv9D,GAErC,OADAoZ,GAAOlR,KAAK65I,QAAS,2BACd75I,KAAK0xF,MAAMr8B,KAAKv9D,EAASkI,KAClC,EAEAuR,GAAQva,UAAU05D,OAAS,SAAgB54D,EAAS+L,GAClD,OAAO7D,KAAK0xF,MAAMhhC,OAAO54D,EAAS+L,EAAK7D,KACzC,EAEAuR,GAAQva,UAAUsjJ,UAAY,SAAmBxiJ,GAE/C,OADAoZ,GAAOlR,KAAK65I,QAAS,0BACd1K,GAAMl+I,OAAO+O,KAAKqkE,SAAUvsE,EACrC,EAEAyZ,GAAQva,UAAUkjH,UAAY,SAAmBpiH,EAAK+L,GACpD,OAAOsrI,GAAMl+I,QAAQ4S,EAAU,CAAE,IAAS,IAAI5B,OAAOjC,KAAKu6I,YAAaziJ,EACzE,EAEA,IAAAwa,GAAiBf,GClGb4F,GAASg4H,GAAMC,OACf9+H,GAAiB6+H,GAAMI,eACvB/9H,GAAa29H,GAAMK,WAUvB,SAASz+H,GAAUjZ,EAAO+L,GACxB7D,KAAK0xF,MAAQ55F,EAEM,iBAAR+L,IACTA,EAAM2N,GAAW3N,IAEfvK,MAAMiG,QAAQsE,KAChBA,EAAM,CACJrF,EAAGqF,EAAIrD,MAAM,EAAG1I,EAAMqiJ,gBACtB70G,EAAGzhC,EAAIrD,MAAM1I,EAAMqiJ,kBAIvBhjI,GAAOtT,EAAIrF,GAAKqF,EAAIyhC,EAAG,4BAEnBxtC,EAAMgiJ,QAAQj2I,EAAIrF,KACpBwB,KAAKkB,GAAK2C,EAAIrF,GACZqF,EAAIyhC,aAAa6hG,KACnBnnI,KAAKw6I,GAAK32I,EAAIyhC,GAEhBtlC,KAAKy6I,UAAYnhJ,MAAMiG,QAAQsE,EAAIrF,GAAKqF,EAAIrF,EAAIqF,EAAI62I,SACpD16I,KAAK26I,UAAYrhJ,MAAMiG,QAAQsE,EAAIyhC,GAAKzhC,EAAIyhC,EAAIzhC,EAAI+2I,QACtD,CAEAtqI,GAAeS,GAAW,KAAK,WAC7B,OAAO/Q,KAAK0xF,MAAM0oD,UAAUp6I,KAAK46I,WACnC,IAEAtqI,GAAeS,GAAW,KAAK,WAC7B,OAAO/Q,KAAK0xF,MAAMwgD,YAAYlyI,KAAK06I,WACrC,IAEApqI,GAAeS,GAAW,YAAY,WACpC,OAAO/Q,KAAK0xF,MAAMwoD,YAAYl6I,KAAKxB,IACrC,IAEA8R,GAAeS,GAAW,YAAY,WACpC,OAAO/Q,KAAK0xF,MAAMmpD,UAAU76I,KAAKslC,IACnC,IAEAv0B,GAAU/Z,UAAU8jJ,QAAU,WAC5B,OAAO96I,KAAK06I,WAAWz4I,OAAOjC,KAAK46I,WACrC,EAEA7pI,GAAU/Z,UAAUgS,MAAQ,WAC1B,OAAOmmI,GAAMl+I,OAAO+O,KAAK86I,UAAW,OAAOp2I,aAC7C,EAEA,IAAAmS,GAAiB9F,GCzDb4F,GAASw4H,GAAMC,OACf2L,GAAa5L,GAAMK,WAIvB,SAASl+H,GAAMxZ,GAGb,GAFA6e,GAAiB,YAAV7e,EAAqB,qCAEtBkI,gBAAgBsR,IACpB,OAAO,IAAIA,GAAMxZ,GAEfA,EAAQy/I,GAAOz/I,GAAO8iG,MAC1B56F,KAAK46F,MAAQ9iG,EACbkI,KAAKrI,EAAIG,EAAMH,EACfqI,KAAKrI,EAAE66I,WAAW16I,EAAMZ,EAAEw+C,YAAc,GAExC11C,KAAKg7I,WAAaljJ,EAAMq5I,QAAQliI,YAChCjP,KAAKm6I,eAAiB3/I,KAAKkD,KAAK5F,EAAMZ,EAAEw+C,YAAc,GACtD11C,KAAKq1C,KAAO8hG,GAAKx/F,MACnB,CAEA,IAAAtgC,GAAiB/F,GAOjBA,GAAMta,UAAUq+D,KAAO,SAAcv9D,EAAS+L,GAC5C/L,EAAUijJ,GAAWjjJ,GACrB,IAAIw+B,EAAMt2B,KAAKi7I,cAAcp3I,GACzB/O,EAAIkL,KAAKk7I,QAAQ5kH,EAAI6kH,gBAAiBrjJ,GACtCZ,EAAI8I,KAAKrI,EAAE4hG,IAAIzkG,GACf4C,EAAWsI,KAAKk6I,YAAYhjJ,GAC5BlE,EAAKgN,KAAKk7I,QAAQxjJ,EAAU4+B,EAAIikH,WAAYziJ,GAClCyhG,IAAIjjE,EAAI/tB,QAClB+iF,EAAIx2F,EAAEsV,IAAIpX,GAAI+4I,KAAK/rI,KAAK46F,MAAM1jG,GAClC,OAAO8I,KAAKo7I,cAAc,CAAE58I,EAAGtH,EAAGouC,EAAGgmD,EAAGovD,SAAUhjJ,GACpD,EAQA4Z,GAAMta,UAAU05D,OAAS,SAAgB54D,EAAS+L,EAAKyyB,GACrDx+B,EAAUijJ,GAAWjjJ,GACrB+L,EAAM7D,KAAKo7I,cAAcv3I,GACzB,IAAI/O,EAAMkL,KAAKs5I,cAAchjH,GACzBp/B,EAAI8I,KAAKk7I,QAAQr3I,EAAI62I,WAAY5lJ,EAAIylJ,WAAYziJ,GACjDJ,EAAKsI,KAAKrI,EAAE4hG,IAAI11F,EAAIyhC,KAExB,OADczhC,EAAIrF,IAAI4L,IAAItV,EAAIuT,MAAMkxF,IAAIriG,IACzBmjH,GAAG3iH,EACpB,EAEA4Z,GAAMta,UAAUkkJ,QAAU,WAExB,IADA,IAAIpjJ,EAAOkI,KAAKq1C,OACPxxC,EAAI,EAAGA,EAAI6B,UAAUtR,OAAQyP,IACpC/L,EAAK7D,OAAOyR,UAAU7B,IACxB,OAAOsrI,GAAMM,UAAU33I,EAAKxC,UAAUy2I,KAAK/rI,KAAK46F,MAAM1jG,EACxD,EAEAoa,GAAMta,UAAUo/G,QAAU,SAAiBt+G,GACzC,OAAO,IAAIwa,GAAQtS,KAAMlI,EAC3B,EAEAwZ,GAAMta,UAAUsiJ,cAAgB,SAAuBxhJ,GACrD,OAAOwa,GAAQwmI,WAAW94I,KAAMlI,EAClC,EAEAwZ,GAAMta,UAAUikJ,cAAgB,SAAuBnjJ,GACrD,OAAOwa,GAAQ2nI,WAAWj6I,KAAMlI,EAClC,EAEAwZ,GAAMta,UAAU6iH,WAAa,SAAoB/hH,GAC1CA,IACHA,EAAU,CAAC,GAGb,IAAI+L,EAAO,IAAIu0I,GAAS,CACtB/iG,KAAMr1C,KAAKq1C,KACX6iG,KAAMpgJ,EAAQogJ,KACdC,QAASrgJ,EAAQqgJ,SAAW,OAC5Bx9I,QAAS7C,EAAQ6C,SAAW+0I,GAAK1vI,KAAKq1C,KAAKu5D,cAC3CmpC,WAAYjgJ,EAAQ6C,SAAW7C,EAAQigJ,YAAc,OACrDC,MAAOh4I,KAAK46F,MAAM1jG,EAAE61D,YAGtB,OAAO/sD,KAAKi7I,cAAcp3I,EAAKxI,SAAS,IAC1C,EAEAiW,GAAMta,UAAUokJ,cAAgB,SAAuBtjJ,GACrD,OAAIA,aAAe+e,GACV/e,EACF,IAAI+e,GAAU7W,KAAMlI,EAC7B,EAUAwZ,GAAMta,UAAUkjJ,YAAc,SAAqBpiJ,GACjD,IAAI+L,EAAM/L,EAAMy6I,OAAOxlF,QAAQ,KAAM/sD,KAAKm6I,gBAE1C,OADAt2I,EAAI7D,KAAKm6I,eAAiB,IAAMriJ,EAAMw6I,OAAOpG,QAAU,IAAO,EACvDroI,CACT,EAEAyN,GAAMta,UAAUk7I,YAAc,SAAqBp6I,GAGjD,IAAI+L,GAFJ/L,EAAQq3I,GAAMK,WAAW13I,IAEN1D,OAAS,EACxBkiC,EAASx+B,EAAM0I,MAAM,EAAGqD,GAAQ5B,QAAuB,IAAhBnK,EAAM+L,IAC7C/O,EAAoC,IAAV,IAAhBgD,EAAM+L,IAEhB3M,EAAIi4I,GAAMM,UAAUn5G,GACxB,OAAOt2B,KAAK46F,MAAMm7C,WAAW7+I,EAAGpC,EAClC,EAEAwc,GAAMta,UAAU6jJ,UAAY,SAAmB/iJ,GAC7C,OAAOA,EAAIi1D,QAAQ,KAAM/sD,KAAKm6I,eAChC,EAEA7oI,GAAMta,UAAUojJ,UAAY,SAAmBtiJ,GAC7C,OAAOq3I,GAAMM,UAAU33I,EACzB,EAEAwZ,GAAMta,UAAU8iJ,QAAU,SAAiBhiJ,GACzC,OAAOA,aAAekI,KAAKg7I,UAC7B,MAAAviI,GAAAm0F,IAAA,SAAA90G,EAAA+L,GC1IA,IAAIyyB,EAAWzyB,EAEfyyB,EAAS8gH,MAAQjI,GACjB74G,EAASs5G,KAAOF,GAChBp5G,EAASskE,MAAQw7C,GACjB9/G,EAAS+kH,OAAS9D,GAGlBjhH,EAASrc,GAAKvD,GACd4f,EAASo7D,MAAQr6E,EAAA,IAAAK,GAAA3gB,OAAA80G,OAAA,CAAAC,UAAA,KAAAj/C,QAAAp0C,GAAAs2H,gBAAAt2H,eC8EVm+E,eAAe0kD,GAAallC,GAA2B,IAAlBruG,EAAUrC,UAAAtR,OAAA,QAAA6lD,IAAAv0C,UAAA,GAAAA,UAAA,GAAG,GACrD,IACI,MAAM61I,QAAa70I,OAAOtM,OAAOglF,OAAOwB,UAAU,OAAQw1B,EAAQ7gE,WAC5DsrC,QAAcn6E,OAAOtM,OAAOglF,OAAOwB,UAAU,QAASw1B,EAAQtuG,YAE9D0zI,EAAYhsJ,GAAAA,IAAUqkE,eACxBrkE,GAAAA,IAAUokE,kBACNpkE,GAAAA,KAAWiB,QAAQjB,GAAAA,KAAWW,aAAa,IAAI6yD,WAAWu4F,OAIlE,IAAIE,EAAajsJ,GAAAA,IAAUmB,gBACvBnB,GAAAA,IAAUkB,mBACNlB,GAAAA,KAAWiB,QAAQjB,GAAAA,KAAWW,aAAa,IAAI6yD,WAAW69B,OAYlE,OARI94E,IACA0zI,EAAajsJ,GAAAA,IAAU2Z,qBACnB3Z,GAAAA,IAAUa,kBAAkBorJ,GAC5B1zI,EACA,CAAEE,UAAW,YAId,CAAEstC,UAAWimG,EAAW1zI,WAAY2zI,EAC/C,CAAE,MAAOnrJ,GAEL,MADA4V,QAAQ5V,MAAM,qCAAaA,GACrBA,CACV,CACJ,CAOOsmG,eAAe8kD,GAAatlC,GAC/B,IACI,MAAMulC,QAAkBj1I,OAAOtM,OAAOglF,OAAOwB,UAAU,MAAOw1B,EAAQ7gE,WAChEqmG,QAAmBl1I,OAAOtM,OAAOglF,OAAOwB,UAAU,MAAOw1B,EAAQtuG,YAEvE,MAAO,CACHytC,UAAWlH,KAAKC,UAAUqtG,EAAW,KAAM,GAC3C7zI,WAAYumC,KAAKC,UAAUstG,EAAY,KAAM,GAErD,CAAE,MAAOtrJ,GAEL,MADA4V,QAAQ5V,MAAM,qCAAaA,GACrBA,CACV,CACJ,CAQOsmG,eAAeilD,GAAazlC,GAA2B,IAAlBruG,EAAUrC,UAAAtR,OAAA,QAAA6lD,IAAAv0C,UAAA,GAAAA,UAAA,GAAG,GACrD,IACI,MAAM6vC,EAAY/lD,GAAAA,IAAUyZ,mBAAmBmtG,EAAQ7gE,WAKvD,MAAO,CAAEA,YAAWztC,WAJDC,EACbvY,GAAAA,IAAU0Z,oBAAoBktG,EAAQtuG,WAAYC,GAClDvY,GAAAA,IAAUmB,gBAAgBylH,EAAQtuG,YAG5C,CAAE,MAAOxX,GAEL,MADA4V,QAAQ5V,MAAM,qCAAaA,GACrBA,CACV,CACJ,CAOOsmG,eAAeklD,GAAiBzsJ,GACnC,IACI,MAAM,UAAEkmD,EAAS,WAAEztC,SAAqBi0I,GAAoB,CACxDC,QAAS,CAAC,CAAEtmJ,KAAMrG,EAAQqG,KAAMgyB,MAAOr4B,EAAQq4B,QAC/C13B,KAAMX,EAAQW,KACd+X,WAAY1Y,EAAQ0Y,WACpBzC,OAAQ,YAGZ,MAAO,CAAEiwC,YAAWztC,aACxB,CAAE,MAAOxX,GAEL,MADA4V,QAAQ5V,MAAM,yCAAiBA,GACzBA,CACV,CACJ,CC9Je,SAAS2rJ,KACpB,MAAO3K,EAAM4K,IAAWl9G,EAAAA,EAAAA,UAAS,IAC1B4yD,EAASuqD,IAAcn9G,EAAAA,EAAAA,UAAS,KAChCizD,EAASmqD,IAAcp9G,EAAAA,EAAAA,UAAS,KAChCkzD,EAAcmqD,IAAmBr9G,EAAAA,EAAAA,UAAS,KAC1Cj3B,EAAYu0I,IAAiBt9G,EAAAA,EAAAA,UAAS,KACtCoxD,EAAUmsD,IAAev9G,EAAAA,EAAAA,UAAS,OAClCo1D,EAAcooD,IAAmBx9G,EAAAA,EAAAA,WAAS,IAC1Cy9G,EAAeC,IAAoB19G,EAAAA,EAAAA,UAAS,OAC5C29G,EAAaC,IAAkB59G,EAAAA,EAAAA,WAAS,GAEzC69G,EAAaA,KACfX,GAAQz2B,GAAQjrH,KAAKE,IAAI+qH,EAAO,EAAG,IAAG,EAGpCq3B,EAAaA,KACfZ,GAAQz2B,GAAQjrH,KAAKC,IAAIgrH,EAAO,EAAG,IAAG,EAIpC/wB,EAAiBkC,UACnB4lD,GAAgB,GAChB,IAEI,MAGM1pD,EAAaT,EAHJ,CAAET,UAASK,UAASC,eAAcnqF,eAIjD,IAAK+qF,EAAWX,QACZ,MAAM,IAAIliG,MAAM6iG,EAAWluF,SAI/B,IAAIwxG,EAgBA7gE,EAAWztC,EAff,OAAQ8pF,GACJ,IAAK,MACDwkB,QD9Cbxf,eAAkCzzF,GACrC,IAEI,IAAK,CAAC,KAAM,KAAM,MAAMgL,SAAShL,GAC7B,MAAM,IAAIlT,MAAM,iIAGpB,aAAayW,OAAOtM,OAAOglF,OAAOjgC,YAC9B,CACIzpD,KAAM,WACN6qF,cAAep9E,EACfq9E,eAAgB,IAAIx9B,WAAW,CAAC,EAAG,EAAG,IACtC3N,KAAM,YAEV,EACA,CAAC,UAAW,WAEpB,CAAE,MAAO/kD,GAEL,MADA4V,QAAQ5V,MAAM,2CAAcA,GACtBA,CACV,CACJ,CCyBoCysJ,CAAmB9qD,GACnC,MACJ,IAAK,QACDmkB,QDrBbxf,eAAoCgE,GACvC,IAEI,IAAK,CAAC,QAAS,SAASzsF,SAASysF,GAC7B,MAAM,IAAI3qG,MAAM,gFAGpB,aAAayW,OAAOtM,OAAOglF,OAAOjgC,YAC9B,CACIzpD,KAAM,QACNokH,WAAYlf,IAEhB,EACA,CAAC,OAAQ,UAEjB,CAAE,MAAOtqG,GAEL,MADA4V,QAAQ5V,MAAM,6CAAgBA,GACxBA,CACV,CACJ,CCEoC0sJ,CAAqB/qD,GACrC,MACJ,IAAK,QACDmkB,QDEbxf,eAAoCgE,GACvC,IAEI,GAAc,YAAVA,EACA,MAAM,IAAI3qG,MAAM,4EAGpB,aAAa8rJ,GAAoB,CAC7B/rJ,KAAM4qG,EAAMtvF,cACZhG,OAAQ,UAEhB,CAAE,MAAOhV,GAEL,MADA4V,QAAQ5V,MAAM,6CAAgBA,GACxBA,CACV,CACJ,CCjBoC2sJ,CAAqBhrD,GACrC,MACJ,QACI,MAAM,IAAIhiG,MAAM,oBAKxB,OAAQiiG,GACJ,IAAK,MACD38C,EAAY+lG,GAAallC,EAAQ7gE,UAAW,UAC5CztC,EAAawzI,GAAallC,EAAQtuG,WAAY,UAAWC,GACzD,MACJ,IAAK,MACDwtC,EAAYmmG,GAAatlC,EAAQ7gE,WACjCztC,EAAa4zI,GAAatlC,EAAQtuG,YAClC,MACJ,IAAK,MACDytC,EAAYsmG,GAAazlC,EAAQ7gE,WACjCztC,EAAa+zI,GAAazlC,EAAQtuG,YAClC,MACJ,IAAK,MACDytC,QAAkBumG,GAAiB1lC,EAAQ7gE,WAC3CztC,QAAmBg0I,GAAiB1lC,EAAQtuG,YAC5C,MACJ,QACI,MAAM,IAAI7X,MAAM,yBAIxB,MAAMitJ,EvJrFX,SAAwB1kG,GAC3B,MAAM,QAAEo5C,EAAO,QAAEK,EAAO,aAAEC,EAAY,WAAEnqF,GAAeywC,EAEvD,MAAO,CAEHxoD,KAAM4hG,EACNzuF,KAAM8uF,EACN3sF,OAAQ4sF,EACRh5F,WAAW,IAAI0M,MAAOu3I,cACtBC,gBAAiBr1I,EAGjBgoF,SAAUgF,EAAgBnD,EAASK,GAGnCkD,MAAOD,EAAatD,EAASM,GAG7BX,cAAekE,EAAqB7D,EAASM,GAErD,CuJiE6BmrD,CAAe,CAC5BzrD,UACAK,UACAC,eACAnqF,aAAcA,EACdu1I,aAAa,IAAI13I,MAAOu3I,gBAI5BT,EAAiB,CACbnnG,YACAztC,aACAo1I,aAIJN,GAAe,EACnB,CAAE,MAAOnhJ,GACLyK,QAAQ5V,MAAM,yBAA0BmL,GACxCihJ,EAAiB,MACjBE,GAAe,EACnB,CAAC,QACGJ,GAAgB,EACpB,GAIEe,EAAeA,CAAC3+F,EAAS4+F,KAC3B,MAAMC,EAAO,IAAIpzF,KAAK,CAACzL,GAAU,CAAE5uD,KAAM,eACnCk4B,EAAMrhB,IAAI0jD,gBAAgBkzF,GAC1BrnI,EAAO9L,SAASC,cAAc,KACpC6L,EAAKtP,KAAOohB,EACZ9R,EAAKsnI,SAAWF,EAChBpnI,EAAKunI,QACL92I,IAAIkkD,gBAAgB7iC,EAAI,EAwE5B,OACI0oE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qDAAoD1/E,UAC/Dy/E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmB1/E,SAAA,EAC9B2/E,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gCAA+B1/E,UAC1C2/E,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mBAAkB1/E,SAhE9B2sI,MACf,OAAQtM,GACJ,KAAK,EACD,OACI1gD,EAAAA,EAAAA,KAACZ,EAAK,CACFp/E,SAAUghF,EACV1B,SAAUisD,EACVhsD,OAAQ0sD,EACRzsD,SAAUA,IAGtB,KAAK,EACD,OACIQ,EAAAA,EAAAA,KAACe,EAAK,CACFC,QAASA,EACThhF,SAAUqhF,EACV/B,SAAUksD,EACVvqD,OAAQirD,EACR3sD,OAAQ0sD,EACRzsD,SAAUA,IAGtB,KAAK,EACD,OACIQ,EAAAA,EAAAA,KAACgC,EAAK,CACFhB,QAASA,EACTK,QAASA,EACTrhF,SAAUshF,EACVhC,SAAUmsD,EACVxqD,OAAQirD,EACR3sD,OAAQ0sD,EACRzsD,SAAUA,IAGtB,KAAK,EACD,OACIQ,EAAAA,EAAAA,KAACsC,EAAK,CACFhB,aAAcA,EACdnqF,WAAYA,EACZmoF,SAAUosD,EACVzqD,OAAQirD,EACR3sD,OAAQ0sD,EACRzsD,SAAUA,IAGtB,KAAK,EACD,OACIQ,EAAAA,EAAAA,KAACsD,EAAK,CACF17C,OAAQ,CAAEo5C,UAASK,UAASC,eAAcnqF,cAC1CosF,WAAYO,EACZ7C,OAAQirD,EACR1oD,aAAcA,EACdhE,SAAUA,IAGtB,QACI,OAAO,KACf,EAQiBwtD,OAKRjB,GAAeF,IACZ7rD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iFAAgF1/E,UAC3Fy/E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wEAAuE1/E,SAAA,EAClFy/E,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkC1/E,SAAA,EAC7C2/E,EAAAA,EAAAA,KAAA,MAAID,UAAU,oBAAmB1/E,SACf,OAAbm/E,EAAoB,2BAAS,oBAElCQ,EAAAA,EAAAA,KAAA,UACIhrD,QAASA,IAAMg3G,GAAe,GAC9BjsD,UAAU,oCAAmC1/E,UAE7C2/E,EAAAA,EAAAA,KAAA,OAAKD,UAAU,UAAUG,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAW//E,UAC1E2/E,EAAAA,EAAAA,KAAA,QAAMK,cAAc,QAAQC,eAAe,QAAQj8E,YAAY,IAAIpd,EAAE,iCAKjF64F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgB1/E,SAAA,EAC3By/E,EAAAA,EAAAA,MAAA,OAAAz/E,SAAA,EACI2/E,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAW1/E,SAAe,OAAbm/E,EAAoB,qBAAQ,gBACvDQ,EAAAA,EAAAA,KAAA,YACID,UAAU,sCACVjhF,MAAO+sI,EAAclnG,UACrBsoG,UAAQ,KAEZjtD,EAAAA,EAAAA,KAAA,UACIhrD,QAASA,IAAM23G,EAAad,EAAclnG,UAAU,UAADtzC,OAAY2vF,EAAO,KAAA3vF,OAAIgwF,EAAO,KAAAhwF,OAAIiwF,IACrFvB,UAAU,kEAAiE1/E,SAE7D,OAAbm/E,EAAoB,uCAAW,iBAIxCM,EAAAA,EAAAA,MAAA,OAAAz/E,SAAA,EACI2/E,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAW1/E,SAAe,OAAbm/E,EAAoB,qBAAQ,iBACvDQ,EAAAA,EAAAA,KAAA,YACID,UAAU,sCACVjhF,MAAO+sI,EAAc30I,WACrB+1I,UAAQ,KAEZjtD,EAAAA,EAAAA,KAAA,UACIhrD,QAASA,IAAM23G,EAAad,EAAc30I,WAAW,WAAD7F,OAAa2vF,EAAO,KAAA3vF,OAAIgwF,EAAO,KAAAhwF,OAAIiwF,IACvFvB,UAAU,kEAAiE1/E,SAE7D,OAAbm/E,EAAoB,uCAAW,iBAIxCM,EAAAA,EAAAA,MAAA,OAAAz/E,SAAA,EACI2/E,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAW1/E,SAAe,OAAbm/E,EAAoB,iCAAU,cACzDQ,EAAAA,EAAAA,KAAA,YACID,UAAU,sCACVjhF,MAAO2+B,KAAKC,UAAUmuG,EAAcS,SAAU,KAAM,GACpDW,UAAQ,KAEZjtD,EAAAA,EAAAA,KAAA,UACIhrD,QAASA,IAAM23G,EAAalvG,KAAKC,UAAUmuG,EAAcS,SAAU,KAAM,GAAG,YAADj7I,OAAc2vF,EAAO,KAAA3vF,OAAIgwF,EAAO,UAC3GtB,UAAU,kEAAiE1/E,SAE7D,OAAbm/E,EAAoB,uCAAW,oBAK5CM,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4BAA2B1/E,SAAA,EACtC2/E,EAAAA,EAAAA,KAAA,UACIhrD,QAhJZk4G,KAChB,IAAKrB,EAAe,OACpB,MAAM,UAAElnG,EAAS,WAAEztC,EAAU,SAAEo1I,GAAaT,EAC5Cc,EAAahoG,EAAU,UAADtzC,OAAY2vF,EAAO,KAAA3vF,OAAIgwF,EAAO,KAAAhwF,OAAIiwF,IACxDqrD,EAAaz1I,EAAW,WAAD7F,OAAa2vF,EAAO,KAAA3vF,OAAIgwF,EAAO,KAAAhwF,OAAIiwF,IAC1DqrD,EAAalvG,KAAKC,UAAU4uG,EAAU,KAAM,GAAG,YAADj7I,OAAc2vF,EAAO,KAAA3vF,OAAIgwF,EAAO,SAAQ,EA4I1DtB,UAAU,+DAA8D1/E,SAE1D,OAAbm/E,EAAoB,mDAAa,kBAEtCQ,EAAAA,EAAAA,KAAA,UACIhrD,QAASA,IAAMg3G,GAAe,GAC9BjsD,UAAU,6DAA4D1/E,SAExD,OAAbm/E,EAAoB,qBAAQ,sBASjE,CChSa2tD,EAAAA,WAAoBzzI,SAAS0zI,eAAe,SACpD3vI,QACHuiF,EAAAA,EAAAA,KAACqtD,EAAAA,WAAgB,CAAAhtI,UACf2/E,EAAAA,EAAAA,KAACqrD,GAAG","sources":["../node_modules/node-forge/lib/forge.js","../node_modules/node-forge/lib/index.js","../node_modules/node-forge/lib/pki.js","../node_modules/react/jsx-runtime.js","../node_modules/node-forge/lib/aesCipherSuites.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/node-forge/lib/prng.js","../node_modules/node-forge/lib/rc2.js","../node_modules/node-forge/lib/cipherModes.js","../node_modules/node-forge/lib/mgf1.js","../node_modules/node-forge/lib/log.js","../node_modules/node-forge/lib/ssh.js","../node_modules/node-forge/lib/md.all.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/node-forge/lib/random.js","../node_modules/node-forge/lib/des.js","../node_modules/node-forge/lib/oids.js","../node_modules/node-forge/lib/kem.js","../node_modules/node-forge/lib/pbe.js","../node_modules/node-forge/lib/pkcs12.js","../node_modules/node-forge/lib/sha1.js","../node_modules/node-forge/lib/sha256.js","../node_modules/node-forge/lib/util.js","../node_modules/node-forge/lib/pss.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/client.js","../node_modules/node-forge/lib/x509.js","../node_modules/react/index.js","../node_modules/node-forge/lib/pkcs7.js","../node_modules/node-forge/lib/pem.js","../node_modules/node-forge/lib/asn1.js","../node_modules/node-forge/lib/md.js","../node_modules/node-forge/lib/tls.js","../node_modules/node-forge/lib/baseN.js","../node_modules/node-forge/lib/md5.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/node-forge/lib/pkcs1.js","../node_modules/react-dom/index.js","../node_modules/node-forge/lib/pbkdf2.js","../node_modules/node-forge/lib/sha512.js","../node_modules/node-forge/lib/hmac.js","../node_modules/node-forge/lib/prime.js","../node_modules/scheduler/index.js","../node_modules/node-forge/lib/pkcs7asn1.js","../node_modules/node-forge/lib/cipher.js","../node_modules/node-forge/lib/asn1-validator.js","../node_modules/node-forge/lib/aes.js","../node_modules/node-forge/lib/rsa.js","../node_modules/node-forge/lib/jsbn.js","../node_modules/node-forge/lib/ed25519.js","../node_modules/node-forge/lib/mgf.js","../webpack/bootstrap","../webpack/runtime/global","components/Step1.js","components/Step2.js","utils/errorHandler.js","components/Step3.js","components/Step4.js","components/Step5.js","utils/metadata.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/openpgp/node_modules/@openpgp/web-stream-tools/lib/writer.js","../node_modules/openpgp/node_modules/@openpgp/web-stream-tools/lib/util.js","../node_modules/openpgp/node_modules/@openpgp/web-stream-tools/lib/node-conversions.js","../node_modules/openpgp/node_modules/@openpgp/web-stream-tools/lib/reader.js","../node_modules/openpgp/node_modules/@openpgp/web-stream-tools/lib/streams.js","../node_modules/openpgp/src/biginteger/native.interface.js","../node_modules/openpgp/src/biginteger/index.js","../node_modules/openpgp/src/enums.js","../node_modules/openpgp/src/util.js","../node_modules/openpgp/src/encoding/base64.js","../node_modules/openpgp/src/config/config.js","../node_modules/openpgp/src/encoding/armor.js","../node_modules/openpgp/src/type/keyid.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/aes/aes.asm.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/other/utils.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/other/errors.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/aes/aes.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/aes/ecb.js","../node_modules/openpgp/src/crypto/cipher/aes.js","../node_modules/openpgp/src/crypto/cipher/des.js","../node_modules/openpgp/src/crypto/cipher/cast5.js","../node_modules/openpgp/src/crypto/cipher/twofish.js","../node_modules/openpgp/src/crypto/cipher/blowfish.js","../node_modules/openpgp/src/crypto/cipher/index.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/hash/sha1/sha1.asm.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/hash/hash.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/hash/sha1/sha1.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/hash/sha256/sha256.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/hash/sha256/sha256.asm.js","../node_modules/openpgp/node_modules/minimalistic-assert/index.js","../node_modules/openpgp/node_modules/inherits/inherits_browser.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/utils.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/common.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/sha/common.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/sha/256.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/sha/224.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/sha/512.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/sha/384.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/ripemd.js","../node_modules/openpgp/src/crypto/hash/md5.js","../node_modules/openpgp/src/crypto/hash/index.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/aes/cfb.js","../node_modules/openpgp/src/crypto/cipher/getCipher.js","../node_modules/openpgp/src/crypto/mode/cfb.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/aes/ctr.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/aes/cbc.js","../node_modules/openpgp/src/crypto/cmac.js","../node_modules/openpgp/src/crypto/mode/eax.js","../node_modules/openpgp/src/crypto/mode/ocb.js","../node_modules/openpgp/node_modules/@openpgp/asmcrypto.js/dist_es8/aes/gcm.js","../node_modules/openpgp/src/crypto/mode/gcm.js","../node_modules/openpgp/src/crypto/mode/index.js","../node_modules/openpgp/node_modules/@openpgp/tweetnacl/nacl-fast-light.js","../node_modules/openpgp/src/crypto/random.js","../node_modules/openpgp/src/crypto/public_key/prime.js","../node_modules/openpgp/src/crypto/pkcs1.js","../node_modules/openpgp/src/crypto/public_key/rsa.js","../node_modules/openpgp/src/crypto/public_key/elgamal.js","../node_modules/openpgp/src/type/oid.js","../node_modules/openpgp/src/crypto/public_key/elliptic/indutnyKey.js","../node_modules/openpgp/src/packet/packet.js","../node_modules/openpgp/src/crypto/public_key/elliptic/oid_curves.js","../node_modules/openpgp/src/crypto/public_key/elliptic/ecdsa.js","../node_modules/openpgp/src/crypto/public_key/elliptic/eddsa_legacy.js","../node_modules/openpgp/src/crypto/public_key/elliptic/eddsa.js","../node_modules/openpgp/src/crypto/aes_kw.js","../node_modules/openpgp/src/crypto/pkcs5.js","../node_modules/openpgp/src/crypto/public_key/elliptic/ecdh.js","../node_modules/openpgp/src/crypto/hkdf.js","../node_modules/openpgp/src/crypto/public_key/elliptic/ecdh_x.js","../node_modules/openpgp/src/crypto/public_key/dsa.js","../node_modules/openpgp/src/crypto/public_key/index.js","../node_modules/openpgp/src/crypto/signature.js","../node_modules/openpgp/src/type/ecdh_symkey.js","../node_modules/openpgp/src/type/kdf_params.js","../node_modules/openpgp/src/type/ecdh_x_symkey.js","../node_modules/openpgp/src/crypto/crypto.js","../node_modules/openpgp/src/crypto/index.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/utils/common.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/constants.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/trees.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/adler32.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/crc32.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/messages.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/deflate.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/utils/strings.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/zstream.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/deflate.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/inffast.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/inftrees.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/inflate.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/zlib/gzheader.js","../node_modules/openpgp/node_modules/@openpgp/pako/lib/inflate.js","../node_modules/openpgp/node_modules/@openpgp/seek-bzip/lib/bitreader.js","../node_modules/openpgp/node_modules/@openpgp/seek-bzip/lib/stream.js","../node_modules/openpgp/node_modules/@openpgp/seek-bzip/lib/crc32.js","../node_modules/openpgp/node_modules/@openpgp/seek-bzip/lib/index.js","../node_modules/openpgp/src/packet/signature.js","../node_modules/openpgp/src/packet/one_pass_signature.js","../node_modules/openpgp/src/packet/packetlist.js","../node_modules/openpgp/src/packet/compressed_data.js","../node_modules/openpgp/src/type/s2k.js","../node_modules/openpgp/src/packet/public_key.js","../node_modules/openpgp/src/packet/public_subkey.js","../node_modules/openpgp/src/packet/secret_key.js","../node_modules/openpgp/node_modules/email-addresses/lib/email-addresses.js","../node_modules/openpgp/src/packet/userid.js","../node_modules/openpgp/src/packet/secret_subkey.js","../node_modules/openpgp/src/key/helper.js","../node_modules/openpgp/src/key/user.js","../node_modules/openpgp/src/key/subkey.js","../node_modules/openpgp/src/key/key.js","../node_modules/openpgp/src/key/public_key.js","../node_modules/openpgp/src/key/private_key.js","../node_modules/openpgp/src/key/factory.js","../node_modules/openpgp/src/openpgp.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/openpgp/node_modules/@openpgp/web-stream-tools/node_modules/web-streams-polyfill/dist/ponyfill.es6.mjs","../node_modules/openpgp/node_modules/@mattiasbuelens/web-streams-adapter/dist/web-streams-adapter.mjs","../node_modules/openpgp/node_modules/bn.js/lib/bn.js","../node_modules/openpgp/src/biginteger/bn.interface.js","../node_modules/openpgp/node_modules/brorand/index.js","../node_modules/openpgp/node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/utils.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curve/base.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curve/short.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curve/mont.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curve/edwards.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curve/index.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/sha/1.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/sha.js","../node_modules/openpgp/node_modules/hash.js/lib/hash/hmac.js","../node_modules/openpgp/node_modules/hash.js/lib/hash.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/precomputed/secp256k1.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/curves.js","../node_modules/openpgp/node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/ec/key.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/ec/signature.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/ec/index.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/eddsa/key.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/eddsa/signature.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic/eddsa/index.js","../node_modules/openpgp/node_modules/@openpgp/elliptic/lib/elliptic.js","utils/crypto.js","App.js","index.js"],"sourcesContent":["/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n","/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = require('./forge');\nrequire('./aes');\nrequire('./aesCipherSuites');\nrequire('./asn1');\nrequire('./cipher');\nrequire('./des');\nrequire('./ed25519');\nrequire('./hmac');\nrequire('./kem');\nrequire('./log');\nrequire('./md.all');\nrequire('./mgf1');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./pkcs1');\nrequire('./pkcs12');\nrequire('./pkcs7');\nrequire('./pki');\nrequire('./prime');\nrequire('./prng');\nrequire('./pss');\nrequire('./random');\nrequire('./rc2');\nrequire('./ssh');\nrequire('./tls');\nrequire('./util');\n","/**\n * Javascript implementation of a basic Public Key Infrastructure, including\n * support for RSA public and private keys.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./oids');\nrequire('./pbe');\nrequire('./pem');\nrequire('./pbkdf2');\nrequire('./pkcs12');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED. Use pem.decode() instead.\n *\n * Converts PEM-formatted data to DER.\n *\n * @param pem the PEM-formatted data.\n *\n * @return the DER-formatted data.\n */\npki.pemToDer = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PEM to DER; PEM is encrypted.');\n  }\n  return forge.util.createBuffer(msg.body);\n};\n\n/**\n * Converts an RSA private key from PEM format.\n *\n * @param pem the PEM-formatted private key.\n *\n * @return the private key.\n */\npki.privateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PRIVATE KEY' && msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM ' +\n      'header type is not \"PRIVATE KEY\" or \"RSA PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert private key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.privateKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA private key to PEM format.\n *\n * @param key the private key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    body: asn1.toDer(pki.privateKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PrivateKeyInfo to PEM format.\n *\n * @param pki the PrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyInfoToPem = function(pki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'PRIVATE KEY',\n    body: asn1.toDer(pki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * A Javascript implementation of AES Cipher Suites for TLS.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2015 Digital Bazaar, Inc.\n *\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./tls');\n\nvar tls = module.exports = forge.tls;\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites['TLS_RSA_WITH_AES_128_CBC_SHA'] = {\n  id: [0x00, 0x2f],\n  name: 'TLS_RSA_WITH_AES_128_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 16;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\ntls.CipherSuites['TLS_RSA_WITH_AES_256_CBC_SHA'] = {\n  id: [0x00, 0x35],\n  name: 'TLS_RSA_WITH_AES_256_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 32;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\n\nfunction initConnectionState(state, c, sp) {\n  var client = (c.entity === forge.tls.ConnectionEnd.client);\n\n  // cipher setup\n  state.read.cipherState = {\n    init: false,\n    cipher: forge.cipher.createDecipher('AES-CBC', client ?\n      sp.keys.server_write_key : sp.keys.client_write_key),\n    iv: client ? sp.keys.server_write_IV : sp.keys.client_write_IV\n  };\n  state.write.cipherState = {\n    init: false,\n    cipher: forge.cipher.createCipher('AES-CBC', client ?\n      sp.keys.client_write_key : sp.keys.server_write_key),\n    iv: client ? sp.keys.client_write_IV : sp.keys.server_write_IV\n  };\n  state.read.cipherFunction = decrypt_aes_cbc_sha1;\n  state.write.cipherFunction = encrypt_aes_cbc_sha1;\n\n  // MAC setup\n  state.read.macLength = state.write.macLength = sp.mac_length;\n  state.read.macFunction = state.write.macFunction = tls.hmac_sha1;\n}\n\n/**\n * Encrypts the TLSCompressed record into a TLSCipherText record using AES\n * in CBC mode.\n *\n * @param record the TLSCompressed record to encrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  // append MAC to fragment, update sequence number\n  var mac = s.macFunction(s.macKey, s.sequenceNumber, record);\n  record.fragment.putBytes(mac);\n  s.updateSequenceNumber();\n\n  // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use the pre-generated IV when initializing for TLS 1.0, otherwise use\n    // the residue from the previous encryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    iv = forge.random.getBytesSync(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // TLS 1.1+ write IV into output\n  if(record.version.minor >= tls.Versions.TLS_1_1.minor) {\n    cipher.output.putBytes(iv);\n  }\n\n  // do encryption (default padding is appropriate)\n  cipher.update(record.fragment);\n  if(cipher.finish(encrypt_aes_cbc_sha1_padding)) {\n    // set record fragment to encrypted output\n    record.fragment = cipher.output;\n    record.length = record.fragment.length();\n    rval = true;\n  }\n\n  return rval;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in encrypt mode.\n *\n * @param blockSize the block size.\n * @param input the input buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1_padding(blockSize, input, decrypt) {\n  /* The encrypted data length (TLSCiphertext.length) is one more than the sum\n   of SecurityParameters.block_length, TLSCompressed.length,\n   SecurityParameters.mac_length, and padding_length.\n\n   The padding may be any length up to 255 bytes long, as long as it results in\n   the TLSCiphertext.length being an integral multiple of the block length.\n   Lengths longer than necessary might be desirable to frustrate attacks on a\n   protocol based on analysis of the lengths of exchanged messages. Each uint8\n   in the padding data vector must be filled with the padding length value.\n\n   The padding length should be such that the total size of the\n   GenericBlockCipher structure is a multiple of the cipher's block length.\n   Legal values range from zero to 255, inclusive. This length specifies the\n   length of the padding field exclusive of the padding_length field itself.\n\n   This is slightly different from PKCS#7 because the padding value is 1\n   less than the actual number of padding bytes if you include the\n   padding_length uint8 itself as a padding byte. */\n  if(!decrypt) {\n    // get the number of padding bytes required to reach the blockSize and\n    // subtract 1 for the padding value (to make room for the padding_length\n    // uint8)\n    var padding = blockSize - (input.length() % blockSize);\n    input.fillWithByte(padding - 1, padding);\n  }\n  return true;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in decrypt mode.\n *\n * @param blockSize the block size.\n * @param output the output buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1_padding(blockSize, output, decrypt) {\n  var rval = true;\n  if(decrypt) {\n    /* The last byte in the output specifies the number of padding bytes not\n      including itself. Each of the padding bytes has the same value as that\n      last byte (known as the padding_length). Here we check all padding\n      bytes to ensure they have the value of padding_length even if one of\n      them is bad in order to ward-off timing attacks. */\n    var len = output.length();\n    var paddingLength = output.last();\n    for(var i = len - 1 - paddingLength; i < len - 1; ++i) {\n      rval = rval && (output.at(i) == paddingLength);\n    }\n    if(rval) {\n      // trim off padding bytes and last padding length byte\n      output.truncate(paddingLength + 1);\n    }\n  }\n  return rval;\n}\n\n/**\n * Decrypts a TLSCipherText record into a TLSCompressed record using\n * AES in CBC mode.\n *\n * @param record the TLSCipherText record to decrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use pre-generated IV when initializing for TLS 1.0, otherwise use the\n    // residue from the previous decryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n    // that is appended to the record fragment\n    iv = record.fragment.getBytes(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // do decryption\n  cipher.update(record.fragment);\n  rval = cipher.finish(decrypt_aes_cbc_sha1_padding);\n\n  // even if decryption fails, keep going to minimize timing attacks\n\n  // decrypted data:\n  // first (len - 20) bytes = application data\n  // last 20 bytes          = MAC\n  var macLen = s.macLength;\n\n  // create a random MAC to check against should the mac length check fail\n  // Note: do this regardless of the failure to keep timing consistent\n  var mac = forge.random.getBytesSync(macLen);\n\n  // get fragment and mac\n  var len = cipher.output.length();\n  if(len >= macLen) {\n    record.fragment = cipher.output.getBytes(len - macLen);\n    mac = cipher.output.getBytes(macLen);\n  } else {\n    // bad data, but get bytes anyway to try to keep timing consistent\n    record.fragment = cipher.output.getBytes();\n  }\n  record.fragment = forge.util.createBuffer(record.fragment);\n  record.length = record.fragment.length();\n\n  // see if data integrity checks out, update sequence number\n  var mac2 = s.macFunction(s.macKey, s.sequenceNumber, record);\n  s.updateSequenceNumber();\n  rval = compareMacs(s.macKey, mac, mac2) && rval;\n  return rval;\n}\n\n/**\n * Safely compare two MACs. This function will compare two MACs in a way\n * that protects against timing attacks.\n *\n * TODO: Expose elsewhere as a utility API.\n *\n * See: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n *\n * @param key the MAC key to use.\n * @param mac1 as a binary-encoded string of bytes.\n * @param mac2 as a binary-encoded string of bytes.\n *\n * @return true if the MACs are the same, false if not.\n */\nfunction compareMacs(key, mac1, mac2) {\n  var hmac = forge.hmac.create();\n\n  hmac.start('SHA1', key);\n  hmac.update(mac1);\n  mac1 = hmac.digest().getBytes();\n\n  hmac.start(null, null);\n  hmac.update(mac2);\n  mac2 = hmac.digest().getBytes();\n\n  return mac1 === mac2;\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar _crypto = null;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n  !process.versions['node-webkit']) {\n  _crypto = require('crypto');\n}\n\n/* PRNG API */\nvar prng = module.exports = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0,\n    // no initial key bytes\n    keyBytes: ''\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generate` call\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generateSync` call\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // update reseed count\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n\n    // goal is to update `key` via:\n    // key = hash(key + s)\n    //   where 's' is all collected entropy from selected pools, then...\n\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // consume current key bytes\n    md.update(ctx.keyBytes);\n\n    // digest the entropy of pools whose index k meet the\n    // condition 'n mod 2^k == 0' where n is the number of reseeds\n    var _2powK = 1;\n    for(var k = 0; k < 32; ++k) {\n      if(ctx.reseeds % _2powK === 0) {\n        md.update(ctx.pools[k].digest().getBytes());\n        ctx.pools[k].start();\n      }\n      _2powK = _2powK << 1;\n    }\n\n    // get digest for key bytes\n    ctx.keyBytes = md.digest().getBytes();\n\n    // paranoid deviation from Fortuna:\n    // update `seed` via `seed = hash(key)`\n    // instead of initializing to zero once and only\n    // ever incrementing it\n    md.start();\n    md.update(ctx.keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update state\n    ctx.key = ctx.plugin.formatKey(ctx.keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    var globalScope = forge.util.globalScope;\n    var _crypto = globalScope.crypto || globalScope.msCrypto;\n    if(_crypto && _crypto.getRandomValues) {\n      getRandomValues = function(arr) {\n        return _crypto.getRandomValues(arr);\n      };\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(next & 0xFF);\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n","/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n/* RC2 API */\nmodule.exports = forge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === 'string') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i--) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j++;\n      }\n    };\n\n    /**\n     * Perform one mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j--;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We're decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global \"j\" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === 'string') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n","/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = module.exports = forge.cipher.modes = forge.cipher.modes || {};\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv, this.blockSize);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes <= 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n/** Utility functions */\n\nfunction transformIV(iv, blockSize) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n\n  if(iv.length() < blockSize) {\n    throw new Error(\n      'Invalid IV length; got ' + iv.length() +\n      ' bytes and expected ' + blockSize + ' bytes.');\n  }\n\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    var ints = [];\n    var blocks = blockSize / 4;\n    for(var i = 0; i < blocks; ++i) {\n      ints.push(iv.getInt32());\n    }\n    iv = ints;\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n","/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n","/**\n * Cross-browser support for logging in a web application.\n *\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright (c) 2008-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n/* LOG API */\nmodule.exports = forge.log = forge.log || {};\n\n/**\n * Application logging system.\n *\n * Each logger level available as it's own function of the form:\n *   forge.log.level(category, args...)\n * The category is an arbitrary string, and the args are the same as\n * Firebug's console.log API. By default the call will be output as:\n *   'LEVEL [category] <args[0]>, args[1], ...'\n * This enables proper % formatting via the first argument.\n * Each category is enabled by default but can be enabled or disabled with\n * the setCategoryEnabled() function.\n */\n// list of known levels\nforge.log.levels = [\n  'none', 'error', 'warning', 'info', 'debug', 'verbose', 'max'];\n// info on the levels indexed by name:\n//   index: level index\n//   name: uppercased display name\nvar sLevelInfo = {};\n// list of loggers\nvar sLoggers = [];\n/**\n * Standard console logger. If no console support is enabled this will\n * remain null. Check before using.\n */\nvar sConsoleLogger = null;\n\n// logger flags\n/**\n * Lock the level at the current value. Used in cases where user config may\n * set the level such that only critical messages are seen but more verbose\n * messages are needed for debugging or other purposes.\n */\nforge.log.LEVEL_LOCKED = (1 << 1);\n/**\n * Always call log function. By default, the logging system will check the\n * message level against logger.level before calling the log function. This\n * flag allows the function to do its own check.\n */\nforge.log.NO_LEVEL_CHECK = (1 << 2);\n/**\n * Perform message interpolation with the passed arguments. \"%\" style\n * fields in log messages will be replaced by arguments as needed. Some\n * loggers, such as Firebug, may do this automatically. The original log\n * message will be available as 'message' and the interpolated version will\n * be available as 'fullMessage'.\n */\nforge.log.INTERPOLATE = (1 << 3);\n\n// setup each log level\nfor(var i = 0; i < forge.log.levels.length; ++i) {\n  var level = forge.log.levels[i];\n  sLevelInfo[level] = {\n    index: i,\n    name: level.toUpperCase()\n  };\n}\n\n/**\n * Message logger. Will dispatch a message to registered loggers as needed.\n *\n * @param message message object\n */\nforge.log.logMessage = function(message) {\n  var messageLevelIndex = sLevelInfo[message.level].index;\n  for(var i = 0; i < sLoggers.length; ++i) {\n    var logger = sLoggers[i];\n    if(logger.flags & forge.log.NO_LEVEL_CHECK) {\n      logger.f(message);\n    } else {\n      // get logger level\n      var loggerLevelIndex = sLevelInfo[logger.level].index;\n      // check level\n      if(messageLevelIndex <= loggerLevelIndex) {\n        // message critical enough, call logger\n        logger.f(logger, message);\n      }\n    }\n  }\n};\n\n/**\n * Sets the 'standard' key on a message object to:\n * \"LEVEL [category] \" + message\n *\n * @param message a message log object\n */\nforge.log.prepareStandard = function(message) {\n  if(!('standard' in message)) {\n    message.standard =\n      sLevelInfo[message.level].name +\n      //' ' + +message.timestamp +\n      ' [' + message.category + '] ' +\n      message.message;\n  }\n};\n\n/**\n * Sets the 'full' key on a message object to the original message\n * interpolated via % formatting with the message arguments.\n *\n * @param message a message log object.\n */\nforge.log.prepareFull = function(message) {\n  if(!('full' in message)) {\n    // copy args and insert message at the front\n    var args = [message.message];\n    args = args.concat([] || message['arguments']);\n    // format the message\n    message.full = forge.util.format.apply(this, args);\n  }\n};\n\n/**\n * Applies both preparseStandard() and prepareFull() to a message object and\n * store result in 'standardFull'.\n *\n * @param message a message log object.\n */\nforge.log.prepareStandardFull = function(message) {\n  if(!('standardFull' in message)) {\n    // FIXME implement 'standardFull' logging\n    forge.log.prepareStandard(message);\n    message.standardFull = message.standard;\n  }\n};\n\n// create log level functions\nif(true) {\n  // levels for which we want functions\n  var levels = ['error', 'warning', 'info', 'debug', 'verbose'];\n  for(var i = 0; i < levels.length; ++i) {\n    // wrap in a function to ensure proper level var is passed\n    (function(level) {\n      // create function for this level\n      forge.log[level] = function(category, message/*, args...*/) {\n        // convert arguments to real array, remove category and message\n        var args = Array.prototype.slice.call(arguments).slice(2);\n        // create message object\n        // Note: interpolation and standard formatting is done lazily\n        var msg = {\n          timestamp: new Date(),\n          level: level,\n          category: category,\n          message: message,\n          'arguments': args\n          /*standard*/\n          /*full*/\n          /*fullMessage*/\n        };\n        // process this message\n        forge.log.logMessage(msg);\n      };\n    })(levels[i]);\n  }\n}\n\n/**\n * Creates a new logger with specified custom logging function.\n *\n * The logging function has a signature of:\n *   function(logger, message)\n * logger: current logger\n * message: object:\n *   level: level id\n *   category: category\n *   message: string message\n *   arguments: Array of extra arguments\n *   fullMessage: interpolated message and arguments if INTERPOLATE flag set\n *\n * @param logFunction a logging function which takes a log message object\n *          as a parameter.\n *\n * @return a logger object.\n */\nforge.log.makeLogger = function(logFunction) {\n  var logger = {\n    flags: 0,\n    f: logFunction\n  };\n  forge.log.setLevel(logger, 'none');\n  return logger;\n};\n\n/**\n * Sets the current log level on a logger.\n *\n * @param logger the target logger.\n * @param level the new maximum log level as a string.\n *\n * @return true if set, false if not.\n */\nforge.log.setLevel = function(logger, level) {\n  var rval = false;\n  if(logger && !(logger.flags & forge.log.LEVEL_LOCKED)) {\n    for(var i = 0; i < forge.log.levels.length; ++i) {\n      var aValidLevel = forge.log.levels[i];\n      if(level == aValidLevel) {\n        // set level\n        logger.level = level;\n        rval = true;\n        break;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Locks the log level at its current value.\n *\n * @param logger the target logger.\n * @param lock boolean lock value, default to true.\n */\nforge.log.lock = function(logger, lock) {\n  if(typeof lock === 'undefined' || lock) {\n    logger.flags |= forge.log.LEVEL_LOCKED;\n  } else {\n    logger.flags &= ~forge.log.LEVEL_LOCKED;\n  }\n};\n\n/**\n * Adds a logger.\n *\n * @param logger the logger object.\n */\nforge.log.addLogger = function(logger) {\n  sLoggers.push(logger);\n};\n\n// setup the console logger if possible, else create fake console.log\nif(typeof(console) !== 'undefined' && 'log' in console) {\n  var logger;\n  if(console.error && console.warn && console.info && console.debug) {\n    // looks like Firebug-style logging is available\n    // level handlers map\n    var levelHandlers = {\n      error: console.error,\n      warning: console.warn,\n      info: console.info,\n      debug: console.debug,\n      verbose: console.debug\n    };\n    var f = function(logger, message) {\n      forge.log.prepareStandard(message);\n      var handler = levelHandlers[message.level];\n      // prepend standard message and concat args\n      var args = [message.standard];\n      args = args.concat(message['arguments'].slice());\n      // apply to low-level console function\n      handler.apply(console, args);\n    };\n    logger = forge.log.makeLogger(f);\n  } else {\n    // only appear to have basic console.log\n    var f = function(logger, message) {\n      forge.log.prepareStandardFull(message);\n      console.log(message.standardFull);\n    };\n    logger = forge.log.makeLogger(f);\n  }\n  forge.log.setLevel(logger, 'debug');\n  forge.log.addLogger(logger);\n  sConsoleLogger = logger;\n} else {\n  // define fake console.log to avoid potential script errors on\n  // browsers that do not have console logging\n  console = {\n    log: function() {}\n  };\n}\n\n/*\n * Check for logging control query vars in current URL.\n *\n * console.level=<level-name>\n * Set's the console log level by name.  Useful to override defaults and\n * allow more verbose logging before a user config is loaded.\n *\n * console.lock=<true|false>\n * Lock the console log level at whatever level it is set at.  This is run\n * after console.level is processed.  Useful to force a level of verbosity\n * that could otherwise be limited by a user config.\n */\nif(sConsoleLogger !== null &&\n  typeof window !== 'undefined' && window.location\n) {\n  var query = new URL(window.location.href).searchParams;\n  if(query.has('console.level')) {\n    // set with last value\n    forge.log.setLevel(\n      sConsoleLogger, query.get('console.level').slice(-1)[0]);\n  }\n  if(query.has('console.lock')) {\n    // set with last value\n    var lock = query.get('console.lock').slice(-1)[0];\n    if(lock == 'true') {\n      forge.log.lock(sConsoleLogger);\n    }\n  }\n}\n\n// provide public access to console logger\nforge.log.consoleLogger = sConsoleLogger;\n","/**\n * Functions to output keys in SSH-friendly formats.\n *\n * This is part of the Forge project which may be used under the terms of\n * either the BSD License or the GNU General Public License (GPL) Version 2.\n *\n * See: https://github.com/digitalbazaar/forge/blob/cbebca3780658703d925b61b2caffb1d263a6c1d/LICENSE\n *\n * @author https://github.com/shellac\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./hmac');\nrequire('./md5');\nrequire('./sha1');\nrequire('./util');\n\nvar ssh = module.exports = forge.ssh = forge.ssh || {};\n\n/**\n * Encodes (and optionally encrypts) a private RSA key as a Putty PPK file.\n *\n * @param privateKey the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n * @param comment a comment to include in the key file.\n *\n * @return the PPK file as a string.\n */\nssh.privateKeyToPutty = function(privateKey, passphrase, comment) {\n  comment = comment || '';\n  passphrase = passphrase || '';\n  var algorithm = 'ssh-rsa';\n  var encryptionAlgorithm = (passphrase === '') ? 'none' : 'aes256-cbc';\n\n  var ppk = 'PuTTY-User-Key-File-2: ' + algorithm + '\\r\\n';\n  ppk += 'Encryption: ' + encryptionAlgorithm + '\\r\\n';\n  ppk += 'Comment: ' + comment + '\\r\\n';\n\n  // public key into buffer for ppk\n  var pubbuffer = forge.util.createBuffer();\n  _addStringToBuffer(pubbuffer, algorithm);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.e);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.n);\n\n  // write public key\n  var pub = forge.util.encode64(pubbuffer.bytes(), 64);\n  var length = Math.floor(pub.length / 66) + 1; // 66 = 64 + \\r\\n\n  ppk += 'Public-Lines: ' + length + '\\r\\n';\n  ppk += pub;\n\n  // private key into a buffer\n  var privbuffer = forge.util.createBuffer();\n  _addBigIntegerToBuffer(privbuffer, privateKey.d);\n  _addBigIntegerToBuffer(privbuffer, privateKey.p);\n  _addBigIntegerToBuffer(privbuffer, privateKey.q);\n  _addBigIntegerToBuffer(privbuffer, privateKey.qInv);\n\n  // optionally encrypt the private key\n  var priv;\n  if(!passphrase) {\n    // use the unencrypted buffer\n    priv = forge.util.encode64(privbuffer.bytes(), 64);\n  } else {\n    // encrypt RSA key using passphrase\n    var encLen = privbuffer.length() + 16 - 1;\n    encLen -= encLen % 16;\n\n    // pad private key with sha1-d data -- needs to be a multiple of 16\n    var padding = _sha1(privbuffer.bytes());\n\n    padding.truncate(padding.length() - encLen + privbuffer.length());\n    privbuffer.putBuffer(padding);\n\n    var aeskey = forge.util.createBuffer();\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x00', passphrase));\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x01', passphrase));\n\n    // encrypt some bytes using CBC mode\n    // key is 40 bytes, so truncate *by* 8 bytes\n    var cipher = forge.aes.createEncryptionCipher(aeskey.truncate(8), 'CBC');\n    cipher.start(forge.util.createBuffer().fillWithByte(0, 16));\n    cipher.update(privbuffer.copy());\n    cipher.finish();\n    var encrypted = cipher.output;\n\n    // Note: this appears to differ from Putty -- is forge wrong, or putty?\n    // due to padding we finish as an exact multiple of 16\n    encrypted.truncate(16); // all padding\n\n    priv = forge.util.encode64(encrypted.bytes(), 64);\n  }\n\n  // output private key\n  length = Math.floor(priv.length / 66) + 1; // 64 + \\r\\n\n  ppk += '\\r\\nPrivate-Lines: ' + length + '\\r\\n';\n  ppk += priv;\n\n  // MAC\n  var mackey = _sha1('putty-private-key-file-mac-key', passphrase);\n\n  var macbuffer = forge.util.createBuffer();\n  _addStringToBuffer(macbuffer, algorithm);\n  _addStringToBuffer(macbuffer, encryptionAlgorithm);\n  _addStringToBuffer(macbuffer, comment);\n  macbuffer.putInt32(pubbuffer.length());\n  macbuffer.putBuffer(pubbuffer);\n  macbuffer.putInt32(privbuffer.length());\n  macbuffer.putBuffer(privbuffer);\n\n  var hmac = forge.hmac.create();\n  hmac.start('sha1', mackey);\n  hmac.update(macbuffer.bytes());\n\n  ppk += '\\r\\nPrivate-MAC: ' + hmac.digest().toHex() + '\\r\\n';\n\n  return ppk;\n};\n\n/**\n * Encodes a public RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param comment a comment.\n *\n * @return the public key in OpenSSH format.\n */\nssh.publicKeyToOpenSSH = function(key, comment) {\n  var type = 'ssh-rsa';\n  comment = comment || '';\n\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  return type + ' ' + forge.util.encode64(buffer.bytes()) + ' ' + comment;\n};\n\n/**\n * Encodes a private RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n *\n * @return the public key in OpenSSH format.\n */\nssh.privateKeyToOpenSSH = function(privateKey, passphrase) {\n  if(!passphrase) {\n    return forge.pki.privateKeyToPem(privateKey);\n  }\n  // OpenSSH private key is just a legacy format, it seems\n  return forge.pki.encryptRsaPrivateKey(privateKey, passphrase,\n    {legacy: true, algorithm: 'aes128'});\n};\n\n/**\n * Gets the SSH fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.md5).\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\nssh.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.md5.create();\n\n  var type = 'ssh-rsa';\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  // hash public key bytes\n  md.start();\n  md.update(buffer.getBytes());\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a big integer.\n */\nfunction _addBigIntegerToBuffer(buffer, val) {\n  var hexVal = val.toString(16);\n  // ensure 2s complement +ve\n  if(hexVal[0] >= '8') {\n    hexVal = '00' + hexVal;\n  }\n  var bytes = forge.util.hexToBytes(hexVal);\n  buffer.putInt32(bytes.length);\n  buffer.putBytes(bytes);\n}\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a string.\n */\nfunction _addStringToBuffer(buffer, val) {\n  buffer.putInt32(val.length);\n  buffer.putString(val);\n}\n\n/**\n * Hashes the arguments into one value using SHA-1.\n *\n * @return the sha1 hash of the provided arguments.\n */\nfunction _sha1() {\n  var sha = forge.md.sha1.create();\n  var num = arguments.length;\n  for (var i = 0; i < num; ++i) {\n    sha.update(arguments[i]);\n  }\n  return sha.digest();\n}\n","/**\n * Node.js module for all known Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nmodule.exports = require('./md');\n\nrequire('./md5');\nrequire('./sha1');\nrequire('./sha256');\nrequire('./sha512');\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./sha256');\nrequire('./prng');\nrequire('./util');\n\n(function() {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  module.exports = forge.random;\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar getRandomValues = null;\nvar globalScope = forge.util.globalScope;\nvar _crypto = globalScope.crypto || globalScope.msCrypto;\nif(_crypto && _crypto.getRandomValues) {\n  getRandomValues = function(arr) {\n    return _crypto.getRandomValues(arr);\n  };\n}\n\nif(forge.options.usePureJavaScript ||\n  (!forge.util.isNodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\nmodule.exports = forge.random;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n})();\n","/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by\n * Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* DES API */\nmodule.exports = forge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nforge.pki = forge.pki || {};\nvar oids = module.exports = forge.pki.oids = forge.oids = forge.oids || {};\n\n// set id to name mapping and name to id mapping\nfunction _IN(id, name) {\n  oids[id] = name;\n  oids[name] = id;\n}\n// set id to name mapping only\nfunction _I_(id, name) {\n  oids[id] = name;\n}\n\n// algorithm OIDs\n_IN('1.2.840.113549.1.1.1', 'rsaEncryption');\n// Note: md2 & md4 not implemented\n//_IN('1.2.840.113549.1.1.2', 'md2WithRSAEncryption');\n//_IN('1.2.840.113549.1.1.3', 'md4WithRSAEncryption');\n_IN('1.2.840.113549.1.1.4', 'md5WithRSAEncryption');\n_IN('1.2.840.113549.1.1.5', 'sha1WithRSAEncryption');\n_IN('1.2.840.113549.1.1.7', 'RSAES-OAEP');\n_IN('1.2.840.113549.1.1.8', 'mgf1');\n_IN('1.2.840.113549.1.1.9', 'pSpecified');\n_IN('1.2.840.113549.1.1.10', 'RSASSA-PSS');\n_IN('1.2.840.113549.1.1.11', 'sha256WithRSAEncryption');\n_IN('1.2.840.113549.1.1.12', 'sha384WithRSAEncryption');\n_IN('1.2.840.113549.1.1.13', 'sha512WithRSAEncryption');\n// Edwards-curve Digital Signature Algorithm (EdDSA) Ed25519\n_IN('1.3.101.112', 'EdDSA25519');\n\n_IN('1.2.840.10040.4.3', 'dsa-with-sha1');\n\n_IN('1.3.14.3.2.7', 'desCBC');\n\n_IN('1.3.14.3.2.26', 'sha1');\n// Deprecated equivalent of sha1WithRSAEncryption\n_IN('1.3.14.3.2.29', 'sha1WithRSASignature');\n_IN('2.16.840.1.101.3.4.2.1', 'sha256');\n_IN('2.16.840.1.101.3.4.2.2', 'sha384');\n_IN('2.16.840.1.101.3.4.2.3', 'sha512');\n_IN('2.16.840.1.101.3.4.2.4', 'sha224');\n_IN('2.16.840.1.101.3.4.2.5', 'sha512-224');\n_IN('2.16.840.1.101.3.4.2.6', 'sha512-256');\n_IN('1.2.840.113549.2.2', 'md2');\n_IN('1.2.840.113549.2.5', 'md5');\n\n// pkcs#7 content types\n_IN('1.2.840.113549.1.7.1', 'data');\n_IN('1.2.840.113549.1.7.2', 'signedData');\n_IN('1.2.840.113549.1.7.3', 'envelopedData');\n_IN('1.2.840.113549.1.7.4', 'signedAndEnvelopedData');\n_IN('1.2.840.113549.1.7.5', 'digestedData');\n_IN('1.2.840.113549.1.7.6', 'encryptedData');\n\n// pkcs#9 oids\n_IN('1.2.840.113549.1.9.1', 'emailAddress');\n_IN('1.2.840.113549.1.9.2', 'unstructuredName');\n_IN('1.2.840.113549.1.9.3', 'contentType');\n_IN('1.2.840.113549.1.9.4', 'messageDigest');\n_IN('1.2.840.113549.1.9.5', 'signingTime');\n_IN('1.2.840.113549.1.9.6', 'counterSignature');\n_IN('1.2.840.113549.1.9.7', 'challengePassword');\n_IN('1.2.840.113549.1.9.8', 'unstructuredAddress');\n_IN('1.2.840.113549.1.9.14', 'extensionRequest');\n\n_IN('1.2.840.113549.1.9.20', 'friendlyName');\n_IN('1.2.840.113549.1.9.21', 'localKeyId');\n_IN('1.2.840.113549.1.9.22.1', 'x509Certificate');\n\n// pkcs#12 safe bags\n_IN('1.2.840.113549.1.12.10.1.1', 'keyBag');\n_IN('1.2.840.113549.1.12.10.1.2', 'pkcs8ShroudedKeyBag');\n_IN('1.2.840.113549.1.12.10.1.3', 'certBag');\n_IN('1.2.840.113549.1.12.10.1.4', 'crlBag');\n_IN('1.2.840.113549.1.12.10.1.5', 'secretBag');\n_IN('1.2.840.113549.1.12.10.1.6', 'safeContentsBag');\n\n// password-based-encryption for pkcs#12\n_IN('1.2.840.113549.1.5.13', 'pkcs5PBES2');\n_IN('1.2.840.113549.1.5.12', 'pkcs5PBKDF2');\n\n_IN('1.2.840.113549.1.12.1.1', 'pbeWithSHAAnd128BitRC4');\n_IN('1.2.840.113549.1.12.1.2', 'pbeWithSHAAnd40BitRC4');\n_IN('1.2.840.113549.1.12.1.3', 'pbeWithSHAAnd3-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.4', 'pbeWithSHAAnd2-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.5', 'pbeWithSHAAnd128BitRC2-CBC');\n_IN('1.2.840.113549.1.12.1.6', 'pbewithSHAAnd40BitRC2-CBC');\n\n// hmac OIDs\n_IN('1.2.840.113549.2.7', 'hmacWithSHA1');\n_IN('1.2.840.113549.2.8', 'hmacWithSHA224');\n_IN('1.2.840.113549.2.9', 'hmacWithSHA256');\n_IN('1.2.840.113549.2.10', 'hmacWithSHA384');\n_IN('1.2.840.113549.2.11', 'hmacWithSHA512');\n\n// symmetric key algorithm oids\n_IN('1.2.840.113549.3.7', 'des-EDE3-CBC');\n_IN('2.16.840.1.101.3.4.1.2', 'aes128-CBC');\n_IN('2.16.840.1.101.3.4.1.22', 'aes192-CBC');\n_IN('2.16.840.1.101.3.4.1.42', 'aes256-CBC');\n\n// certificate issuer/subject OIDs\n_IN('2.5.4.3', 'commonName');\n_IN('2.5.4.4', 'surname');\n_IN('2.5.4.5', 'serialNumber');\n_IN('2.5.4.6', 'countryName');\n_IN('2.5.4.7', 'localityName');\n_IN('2.5.4.8', 'stateOrProvinceName');\n_IN('2.5.4.9', 'streetAddress');\n_IN('2.5.4.10', 'organizationName');\n_IN('2.5.4.11', 'organizationalUnitName');\n_IN('2.5.4.12', 'title');\n_IN('2.5.4.13', 'description');\n_IN('2.5.4.15', 'businessCategory');\n_IN('2.5.4.17', 'postalCode');\n_IN('2.5.4.42', 'givenName');\n_IN('1.3.6.1.4.1.311.60.2.1.2', 'jurisdictionOfIncorporationStateOrProvinceName');\n_IN('1.3.6.1.4.1.311.60.2.1.3', 'jurisdictionOfIncorporationCountryName');\n\n// X.509 extension OIDs\n_IN('2.16.840.1.113730.1.1', 'nsCertType');\n_IN('2.16.840.1.113730.1.13', 'nsComment'); // deprecated in theory; still widely used\n_I_('2.5.29.1', 'authorityKeyIdentifier'); // deprecated, use .35\n_I_('2.5.29.2', 'keyAttributes'); // obsolete use .37 or .15\n_I_('2.5.29.3', 'certificatePolicies'); // deprecated, use .32\n_I_('2.5.29.4', 'keyUsageRestriction'); // obsolete use .37 or .15\n_I_('2.5.29.5', 'policyMapping'); // deprecated use .33\n_I_('2.5.29.6', 'subtreesConstraint'); // obsolete use .30\n_I_('2.5.29.7', 'subjectAltName'); // deprecated use .17\n_I_('2.5.29.8', 'issuerAltName'); // deprecated use .18\n_I_('2.5.29.9', 'subjectDirectoryAttributes');\n_I_('2.5.29.10', 'basicConstraints'); // deprecated use .19\n_I_('2.5.29.11', 'nameConstraints'); // deprecated use .30\n_I_('2.5.29.12', 'policyConstraints'); // deprecated use .36\n_I_('2.5.29.13', 'basicConstraints'); // deprecated use .19\n_IN('2.5.29.14', 'subjectKeyIdentifier');\n_IN('2.5.29.15', 'keyUsage');\n_I_('2.5.29.16', 'privateKeyUsagePeriod');\n_IN('2.5.29.17', 'subjectAltName');\n_IN('2.5.29.18', 'issuerAltName');\n_IN('2.5.29.19', 'basicConstraints');\n_I_('2.5.29.20', 'cRLNumber');\n_I_('2.5.29.21', 'cRLReason');\n_I_('2.5.29.22', 'expirationDate');\n_I_('2.5.29.23', 'instructionCode');\n_I_('2.5.29.24', 'invalidityDate');\n_I_('2.5.29.25', 'cRLDistributionPoints'); // deprecated use .31\n_I_('2.5.29.26', 'issuingDistributionPoint'); // deprecated use .28\n_I_('2.5.29.27', 'deltaCRLIndicator');\n_I_('2.5.29.28', 'issuingDistributionPoint');\n_I_('2.5.29.29', 'certificateIssuer');\n_I_('2.5.29.30', 'nameConstraints');\n_IN('2.5.29.31', 'cRLDistributionPoints');\n_IN('2.5.29.32', 'certificatePolicies');\n_I_('2.5.29.33', 'policyMappings');\n_I_('2.5.29.34', 'policyConstraints'); // deprecated use .36\n_IN('2.5.29.35', 'authorityKeyIdentifier');\n_I_('2.5.29.36', 'policyConstraints');\n_IN('2.5.29.37', 'extKeyUsage');\n_I_('2.5.29.46', 'freshestCRL');\n_I_('2.5.29.54', 'inhibitAnyPolicy');\n\n// extKeyUsage purposes\n_IN('1.3.6.1.4.1.11129.2.4.2', 'timestampList');\n_IN('1.3.6.1.5.5.7.1.1', 'authorityInfoAccess');\n_IN('1.3.6.1.5.5.7.3.1', 'serverAuth');\n_IN('1.3.6.1.5.5.7.3.2', 'clientAuth');\n_IN('1.3.6.1.5.5.7.3.3', 'codeSigning');\n_IN('1.3.6.1.5.5.7.3.4', 'emailProtection');\n_IN('1.3.6.1.5.5.7.3.8', 'timeStamping');\n","/**\n * Javascript implementation of RSA-KEM.\n *\n * @author Lautaro Cozzani Rodriguez\n * @author Dave Longley\n *\n * Copyright (c) 2014 Lautaro Cozzani <lautaro.cozzani@scytl.com>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./jsbn');\n\nmodule.exports = forge.kem = forge.kem || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n/**\n * The API for the RSA Key Encapsulation Mechanism (RSA-KEM) from ISO 18033-2.\n */\nforge.kem.rsa = {};\n\n/**\n * Creates an RSA KEM API object for generating a secret asymmetric key.\n *\n * The symmetric key may be generated via a call to 'encrypt', which will\n * produce a ciphertext to be transmitted to the recipient and a key to be\n * kept secret. The ciphertext is a parameter to be passed to 'decrypt' which\n * will produce the same secret key for the recipient to use to decrypt a\n * message that was encrypted with the secret key.\n *\n * @param kdf the KDF API to use (eg: new forge.kem.kdf1()).\n * @param options the options to use.\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n */\nforge.kem.rsa.create = function(kdf, options) {\n  options = options || {};\n  var prng = options.prng || forge.random;\n\n  var kem = {};\n\n  /**\n   * Generates a secret key and its encapsulation.\n   *\n   * @param publicKey the RSA public key to encrypt with.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return an object with:\n   *   encapsulation: the ciphertext for generating the secret key, as a\n   *     binary-encoded string of bytes.\n   *   key: the secret key to use for encrypting a message.\n   */\n  kem.encrypt = function(publicKey, keyLength) {\n    // generate a random r where 1 < r < n\n    var byteLength = Math.ceil(publicKey.n.bitLength() / 8);\n    var r;\n    do {\n      r = new BigInteger(\n        forge.util.bytesToHex(prng.getBytesSync(byteLength)),\n        16).mod(publicKey.n);\n    } while(r.compareTo(BigInteger.ONE) <= 0);\n\n    // prepend r with zeros\n    r = forge.util.hexToBytes(r.toString(16));\n    var zeros = byteLength - r.length;\n    if(zeros > 0) {\n      r = forge.util.fillString(String.fromCharCode(0), zeros) + r;\n    }\n\n    // encrypt the random\n    var encapsulation = publicKey.encrypt(r, 'NONE');\n\n    // generate the secret key\n    var key = kdf.generate(r, keyLength);\n\n    return {encapsulation: encapsulation, key: key};\n  };\n\n  /**\n   * Decrypts an encapsulated secret key.\n   *\n   * @param privateKey the RSA private key to decrypt with.\n   * @param encapsulation the ciphertext for generating the secret key, as\n   *          a binary-encoded string of bytes.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return the secret key as a binary-encoded string of bytes.\n   */\n  kem.decrypt = function(privateKey, encapsulation, keyLength) {\n    // decrypt the encapsulation and generate the secret key\n    var r = privateKey.decrypt(encapsulation, 'NONE');\n    return kdf.generate(r, keyLength);\n  };\n\n  return kem;\n};\n\n// TODO: add forge.kem.kdf.create('KDF1', {md: ..., ...}) API?\n\n/**\n * Creates a key derivation API object that implements KDF1 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF1 API object.\n */\nforge.kem.kdf1 = function(md, digestLength) {\n  _createKDF(this, md, 0, digestLength || md.digestLength);\n};\n\n/**\n * Creates a key derivation API object that implements KDF2 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF2 API object.\n */\nforge.kem.kdf2 = function(md, digestLength) {\n  _createKDF(this, md, 1, digestLength || md.digestLength);\n};\n\n/**\n * Creates a KDF1 or KDF2 API object.\n *\n * @param md the hash API to use.\n * @param counterStart the starting index for the counter.\n * @param digestLength the digest length to use.\n *\n * @return the KDF API object.\n */\nfunction _createKDF(kdf, md, counterStart, digestLength) {\n  /**\n   * Generate a key of the specified length.\n   *\n   * @param x the binary-encoded byte string to generate a key from.\n   * @param length the number of bytes to generate (the size of the key).\n   *\n   * @return the key as a binary-encoded string.\n   */\n  kdf.generate = function(x, length) {\n    var key = new forge.util.ByteBuffer();\n\n    // run counter from counterStart to ceil(length / Hash.len)\n    var k = Math.ceil(length / digestLength) + counterStart;\n\n    var c = new forge.util.ByteBuffer();\n    for(var i = counterStart; i < k; ++i) {\n      // I2OSP(i, 4): convert counter to an octet string of 4 octets\n      c.putInt32(i);\n\n      // digest 'x' and the counter and add the result to the key\n      md.start();\n      md.update(x + c.getBytes());\n      var hash = md.digest();\n      key.putBytes(hash.getBytes(digestLength));\n    }\n\n    // truncate to the correct key length\n    key.truncate(key.length() - length);\n    return key.getBytes();\n  };\n}\n","/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./oids');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./random');\nrequire('./rc2');\nrequire('./rsa');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\nmodule.exports = pki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    if(!('sha1' in forge.md)) {\n      throw new Error('\"sha1\" hash algorithm unavailable.');\n    }\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l--) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    if(!('md5' in forge.md)) {\n      throw new Error('\"md5\" hash algorithm unavailable.');\n    }\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  if(!factory || !(prfAlgorithm in factory)) {\n    throw new Error('Unknown hash algorithm: ' + prfAlgorithm);\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n","/**\n * Javascript implementation of PKCS#12.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#12 is as follows\n * (see ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12-tc1.pdf for details)\n *\n * PFX ::= SEQUENCE {\n *   version  INTEGER {v3(3)}(v3,...),\n *   authSafe ContentInfo,\n *   macData  MacData OPTIONAL\n * }\n *\n * MacData ::= SEQUENCE {\n *   mac DigestInfo,\n *   macSalt OCTET STRING,\n *   iterations INTEGER DEFAULT 1\n * }\n * Note: The iterations default is for historical reasons and its use is\n * deprecated. A higher value, like 1024, is recommended.\n *\n * DigestInfo is defined in PKCS#7 as follows:\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of SHA1 there is none.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * Digest ::= OCTET STRING\n *\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType ContentType,\n *   content     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n * -- Data if unencrypted\n * -- EncryptedData if password-encrypted\n * -- EnvelopedData if public key-encrypted\n *\n *\n * SafeContents ::= SEQUENCE OF SafeBag\n *\n * SafeBag ::= SEQUENCE {\n *   bagId     BAG-TYPE.&id ({PKCS12BagSet})\n *   bagValue  [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n *   bagAttributes SET OF PKCS12Attribute OPTIONAL\n * }\n *\n * PKCS12Attribute ::= SEQUENCE {\n *   attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n *   attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n * } -- This type is compatible with the X.500 type 'Attribute'\n *\n * PKCS12AttrSet ATTRIBUTE ::= {\n *   friendlyName | -- from PKCS #9\n *   localKeyId, -- from PKCS #9\n *   ... -- Other attributes are allowed\n * }\n *\n * CertBag ::= SEQUENCE {\n *   certId    BAG-TYPE.&id   ({CertTypes}),\n *   certValue [0] EXPLICIT BAG-TYPE.&Type ({CertTypes}{@certId})\n * }\n *\n * x509Certificate BAG-TYPE ::= {OCTET STRING IDENTIFIED BY {certTypes 1}}\n *   -- DER-encoded X.509 certificate stored in OCTET STRING\n *\n * sdsiCertificate BAG-TYPE ::= {IA5String IDENTIFIED BY {certTypes 2}}\n * -- Base64-encoded SDSI certificate stored in IA5String\n *\n * CertTypes BAG-TYPE ::= {\n *   x509Certificate |\n *   sdsiCertificate,\n *   ... -- For future extensions\n * }\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./oids');\nrequire('./pkcs7asn1');\nrequire('./pbe');\nrequire('./random');\nrequire('./rsa');\nrequire('./sha1');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 & PKI API\nvar asn1 = forge.asn1;\nvar pki = forge.pki;\n\n// shortcut for PKCS#12 API\nvar p12 = module.exports = forge.pkcs12 = forge.pkcs12 || {};\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,  // a ContentInfo\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'content'\n  }]\n};\n\nvar pfxValidator = {\n  name: 'PFX',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PFX.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  },\n  contentInfoValidator, {\n    name: 'PFX.macData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'mac',\n    value: [{\n      name: 'PFX.macData.mac',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,  // DigestInfo\n      constructed: true,\n      value: [{\n        name: 'PFX.macData.mac.digestAlgorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,  // DigestAlgorithmIdentifier\n        constructed: true,\n        value: [{\n          name: 'PFX.macData.mac.digestAlgorithm.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'macAlgorithm'\n        }, {\n          name: 'PFX.macData.mac.digestAlgorithm.parameters',\n          tagClass: asn1.Class.UNIVERSAL,\n          captureAsn1: 'macAlgorithmParameters'\n        }]\n      }, {\n        name: 'PFX.macData.mac.digest',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'macDigest'\n      }]\n    }, {\n      name: 'PFX.macData.macSalt',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'macSalt'\n    }, {\n      name: 'PFX.macData.iterations',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      optional: true,\n      capture: 'macIterations'\n    }]\n  }]\n};\n\nvar safeBagValidator = {\n  name: 'SafeBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SafeBag.bagId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'bagId'\n  }, {\n    name: 'SafeBag.bagValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'bagValue'\n  }, {\n    name: 'SafeBag.bagAttributes',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    optional: true,\n    capture: 'bagAttributes'\n  }]\n};\n\nvar attributeValidator = {\n  name: 'Attribute',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Attribute.attrId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'oid'\n  }, {\n    name: 'Attribute.attrValues',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    capture: 'values'\n  }]\n};\n\nvar certBagValidator = {\n  name: 'CertBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'CertBag.certId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'certId'\n  }, {\n    name: 'CertBag.certValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    /* So far we only support X.509 certificates (which are wrapped in\n       an OCTET STRING, hence hard code that here). */\n    value: [{\n      name: 'CertBag.certValue[0]',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.OCTETSTRING,\n      constructed: false,\n      capture: 'cert'\n    }]\n  }]\n};\n\n/**\n * Search SafeContents structure for bags with matching attributes.\n *\n * The search can optionally be narrowed by a certain bag type.\n *\n * @param safeContents the SafeContents structure to search in.\n * @param attrName the name of the attribute to compare against.\n * @param attrValue the attribute value to search for.\n * @param [bagType] bag type to narrow search by.\n *\n * @return an array of matching bags.\n */\nfunction _getBagsByAttribute(safeContents, attrName, attrValue, bagType) {\n  var result = [];\n\n  for(var i = 0; i < safeContents.length; i++) {\n    for(var j = 0; j < safeContents[i].safeBags.length; j++) {\n      var bag = safeContents[i].safeBags[j];\n      if(bagType !== undefined && bag.type !== bagType) {\n        continue;\n      }\n      // only filter by bag type, no attribute specified\n      if(attrName === null) {\n        result.push(bag);\n        continue;\n      }\n      if(bag.attributes[attrName] !== undefined &&\n        bag.attributes[attrName].indexOf(attrValue) >= 0) {\n        result.push(bag);\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts a PKCS#12 PFX in ASN.1 notation into a PFX object.\n *\n * @param obj The PKCS#12 PFX in ASN.1 notation.\n * @param strict true to use strict DER decoding, false not to (default: true).\n * @param {String} password Password to decrypt with (optional).\n *\n * @return PKCS#12 PFX object.\n */\np12.pkcs12FromAsn1 = function(obj, strict, password) {\n  // handle args\n  if(typeof strict === 'string') {\n    password = strict;\n    strict = true;\n  } else if(strict === undefined) {\n    strict = true;\n  }\n\n  // validate PFX and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, pfxValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#12 PFX. ' +\n      'ASN.1 object is not an PKCS#12 PFX.');\n    error.errors = error;\n    throw error;\n  }\n\n  var pfx = {\n    version: capture.version.charCodeAt(0),\n    safeContents: [],\n\n    /**\n     * Gets bags with matching attributes.\n     *\n     * @param filter the attributes to filter by:\n     *          [localKeyId] the localKeyId to search for.\n     *          [localKeyIdHex] the localKeyId in hex to search for.\n     *          [friendlyName] the friendly name to search for.\n     *          [bagType] bag type to narrow each attribute search by.\n     *\n     * @return a map of attribute type to an array of matching bags or, if no\n     *           attribute was given but a bag type, the map key will be the\n     *           bag type.\n     */\n    getBags: function(filter) {\n      var rval = {};\n\n      var localKeyId;\n      if('localKeyId' in filter) {\n        localKeyId = filter.localKeyId;\n      } else if('localKeyIdHex' in filter) {\n        localKeyId = forge.util.hexToBytes(filter.localKeyIdHex);\n      }\n\n      // filter on bagType only\n      if(localKeyId === undefined && !('friendlyName' in filter) &&\n        'bagType' in filter) {\n        rval[filter.bagType] = _getBagsByAttribute(\n          pfx.safeContents, null, null, filter.bagType);\n      }\n\n      if(localKeyId !== undefined) {\n        rval.localKeyId = _getBagsByAttribute(\n          pfx.safeContents, 'localKeyId',\n          localKeyId, filter.bagType);\n      }\n      if('friendlyName' in filter) {\n        rval.friendlyName = _getBagsByAttribute(\n          pfx.safeContents, 'friendlyName',\n          filter.friendlyName, filter.bagType);\n      }\n\n      return rval;\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching friendlyName attribute.\n     *\n     * @param friendlyName the friendly name to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching friendlyName attribute.\n     */\n    getBagsByFriendlyName: function(friendlyName, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'friendlyName', friendlyName, bagType);\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching localKeyId attribute.\n     *\n     * @param localKeyId the localKeyId to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching localKeyId attribute.\n     */\n    getBagsByLocalKeyId: function(localKeyId, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'localKeyId', localKeyId, bagType);\n    }\n  };\n\n  if(capture.version.charCodeAt(0) !== 3) {\n    var error = new Error('PKCS#12 PFX of version other than 3 not supported.');\n    error.version = capture.version.charCodeAt(0);\n    throw error;\n  }\n\n  if(asn1.derToOid(capture.contentType) !== pki.oids.data) {\n    var error = new Error('Only PKCS#12 PFX in password integrity mode supported.');\n    error.oid = asn1.derToOid(capture.contentType);\n    throw error;\n  }\n\n  var data = capture.content.value[0];\n  if(data.tagClass !== asn1.Class.UNIVERSAL ||\n     data.type !== asn1.Type.OCTETSTRING) {\n    throw new Error('PKCS#12 authSafe content data is not an OCTET STRING.');\n  }\n  data = _decodePkcs7Data(data);\n\n  // check for MAC\n  if(capture.mac) {\n    var md = null;\n    var macKeyBytes = 0;\n    var macAlgorithm = asn1.derToOid(capture.macAlgorithm);\n    switch(macAlgorithm) {\n    case pki.oids.sha1:\n      md = forge.md.sha1.create();\n      macKeyBytes = 20;\n      break;\n    case pki.oids.sha256:\n      md = forge.md.sha256.create();\n      macKeyBytes = 32;\n      break;\n    case pki.oids.sha384:\n      md = forge.md.sha384.create();\n      macKeyBytes = 48;\n      break;\n    case pki.oids.sha512:\n      md = forge.md.sha512.create();\n      macKeyBytes = 64;\n      break;\n    case pki.oids.md5:\n      md = forge.md.md5.create();\n      macKeyBytes = 16;\n      break;\n    }\n    if(md === null) {\n      throw new Error('PKCS#12 uses unsupported MAC algorithm: ' + macAlgorithm);\n    }\n\n    // verify MAC (iterations default to 1)\n    var macSalt = new forge.util.ByteBuffer(capture.macSalt);\n    var macIterations = (('macIterations' in capture) ?\n      parseInt(forge.util.bytesToHex(capture.macIterations), 16) : 1);\n    var macKey = p12.generateKey(\n      password, macSalt, 3, macIterations, macKeyBytes, md);\n    var mac = forge.hmac.create();\n    mac.start(md, macKey);\n    mac.update(data.value);\n    var macValue = mac.getMac();\n    if(macValue.getBytes() !== capture.macDigest) {\n      throw new Error('PKCS#12 MAC could not be verified. Invalid password?');\n    }\n  }\n\n  _decodeAuthenticatedSafe(pfx, data.value, strict, password);\n  return pfx;\n};\n\n/**\n * Decodes PKCS#7 Data. PKCS#7 (RFC 2315) defines \"Data\" as an OCTET STRING,\n * but it is sometimes an OCTET STRING that is composed/constructed of chunks,\n * each its own OCTET STRING. This is BER-encoding vs. DER-encoding. This\n * function transforms this corner-case into the usual simple,\n * non-composed/constructed OCTET STRING.\n *\n * This function may be moved to ASN.1 at some point to better deal with\n * more BER-encoding issues, should they arise.\n *\n * @param data the ASN.1 Data object to transform.\n */\nfunction _decodePkcs7Data(data) {\n  // handle special case of \"chunked\" data content: an octet string composed\n  // of other octet strings\n  if(data.composed || data.constructed) {\n    var value = forge.util.createBuffer();\n    for(var i = 0; i < data.value.length; ++i) {\n      value.putBytes(data.value[i].value);\n    }\n    data.composed = data.constructed = false;\n    data.value = value.getBytes();\n  }\n  return data;\n}\n\n/**\n * Decode PKCS#12 AuthenticatedSafe (BER encoded) into PFX object.\n *\n * The AuthenticatedSafe is a BER-encoded SEQUENCE OF ContentInfo.\n *\n * @param pfx The PKCS#12 PFX object to fill.\n * @param {String} authSafe BER-encoded AuthenticatedSafe.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n */\nfunction _decodeAuthenticatedSafe(pfx, authSafe, strict, password) {\n  authSafe = asn1.fromDer(authSafe, strict);  /* actually it's BER encoded */\n\n  if(authSafe.tagClass !== asn1.Class.UNIVERSAL ||\n     authSafe.type !== asn1.Type.SEQUENCE ||\n     authSafe.constructed !== true) {\n    throw new Error('PKCS#12 AuthenticatedSafe expected to be a ' +\n      'SEQUENCE OF ContentInfo');\n  }\n\n  for(var i = 0; i < authSafe.value.length; i++) {\n    var contentInfo = authSafe.value[i];\n\n    // validate contentInfo and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(contentInfo, contentInfoValidator, capture, errors)) {\n      var error = new Error('Cannot read ContentInfo.');\n      error.errors = errors;\n      throw error;\n    }\n\n    var obj = {\n      encrypted: false\n    };\n    var safeContents = null;\n    var data = capture.content.value[0];\n    switch(asn1.derToOid(capture.contentType)) {\n    case pki.oids.data:\n      if(data.tagClass !== asn1.Class.UNIVERSAL ||\n         data.type !== asn1.Type.OCTETSTRING) {\n        throw new Error('PKCS#12 SafeContents Data is not an OCTET STRING.');\n      }\n      safeContents = _decodePkcs7Data(data).value;\n      break;\n    case pki.oids.encryptedData:\n      safeContents = _decryptSafeContents(data, password);\n      obj.encrypted = true;\n      break;\n    default:\n      var error = new Error('Unsupported PKCS#12 contentType.');\n      error.contentType = asn1.derToOid(capture.contentType);\n      throw error;\n    }\n\n    obj.safeBags = _decodeSafeContents(safeContents, strict, password);\n    pfx.safeContents.push(obj);\n  }\n}\n\n/**\n * Decrypt PKCS#7 EncryptedData structure.\n *\n * @param data ASN.1 encoded EncryptedContentInfo object.\n * @param password The user-provided password.\n *\n * @return The decrypted SafeContents (ASN.1 object).\n */\nfunction _decryptSafeContents(data, password) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(\n    data, forge.pkcs7.asn1.encryptedDataValidator, capture, errors)) {\n    var error = new Error('Cannot read EncryptedContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var oid = asn1.derToOid(capture.contentType);\n  if(oid !== pki.oids.data) {\n    var error = new Error(\n      'PKCS#12 EncryptedContentInfo ContentType is not Data.');\n    error.oid = oid;\n    throw error;\n  }\n\n  // get cipher\n  oid = asn1.derToOid(capture.encAlgorithm);\n  var cipher = pki.pbe.getCipher(oid, capture.encParameter, password);\n\n  // get encrypted data\n  var encryptedContentAsn1 = _decodePkcs7Data(capture.encryptedContentAsn1);\n  var encrypted = forge.util.createBuffer(encryptedContentAsn1.value);\n\n  cipher.update(encrypted);\n  if(!cipher.finish()) {\n    throw new Error('Failed to decrypt PKCS#12 SafeContents.');\n  }\n\n  return cipher.output.getBytes();\n}\n\n/**\n * Decode PKCS#12 SafeContents (BER-encoded) into array of Bag objects.\n *\n * The safeContents is a BER-encoded SEQUENCE OF SafeBag.\n *\n * @param {String} safeContents BER-encoded safeContents.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n *\n * @return {Array} Array of Bag objects.\n */\nfunction _decodeSafeContents(safeContents, strict, password) {\n  // if strict and no safe contents, return empty safes\n  if(!strict && safeContents.length === 0) {\n    return [];\n  }\n\n  // actually it's BER-encoded\n  safeContents = asn1.fromDer(safeContents, strict);\n\n  if(safeContents.tagClass !== asn1.Class.UNIVERSAL ||\n    safeContents.type !== asn1.Type.SEQUENCE ||\n    safeContents.constructed !== true) {\n    throw new Error(\n      'PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.');\n  }\n\n  var res = [];\n  for(var i = 0; i < safeContents.value.length; i++) {\n    var safeBag = safeContents.value[i];\n\n    // validate SafeBag and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(safeBag, safeBagValidator, capture, errors)) {\n      var error = new Error('Cannot read SafeBag.');\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Create bag object and push to result array. */\n    var bag = {\n      type: asn1.derToOid(capture.bagId),\n      attributes: _decodeBagAttributes(capture.bagAttributes)\n    };\n    res.push(bag);\n\n    var validator, decoder;\n    var bagAsn1 = capture.bagValue.value[0];\n    switch(bag.type) {\n      case pki.oids.pkcs8ShroudedKeyBag:\n        /* bagAsn1 has a EncryptedPrivateKeyInfo, which we need to decrypt.\n           Afterwards we can handle it like a keyBag,\n           which is a PrivateKeyInfo. */\n        bagAsn1 = pki.decryptPrivateKeyInfo(bagAsn1, password);\n        if(bagAsn1 === null) {\n          throw new Error(\n            'Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?');\n        }\n\n        /* fall through */\n      case pki.oids.keyBag:\n        /* A PKCS#12 keyBag is a simple PrivateKeyInfo as understood by our\n           PKI module, hence we don't have to do validation/capturing here,\n           just pass what we already got. */\n        try {\n          bag.key = pki.privateKeyFromAsn1(bagAsn1);\n        } catch(e) {\n          // ignore unknown key type, pass asn1 value\n          bag.key = null;\n          bag.asn1 = bagAsn1;\n        }\n        continue;  /* Nothing more to do. */\n\n      case pki.oids.certBag:\n        /* A PKCS#12 certBag can wrap both X.509 and sdsi certificates.\n           Therefore put the SafeBag content through another validator to\n           capture the fields.  Afterwards check & store the results. */\n        validator = certBagValidator;\n        decoder = function() {\n          if(asn1.derToOid(capture.certId) !== pki.oids.x509Certificate) {\n            var error = new Error(\n              'Unsupported certificate type, only X.509 supported.');\n            error.oid = asn1.derToOid(capture.certId);\n            throw error;\n          }\n\n          // true=produce cert hash\n          var certAsn1 = asn1.fromDer(capture.cert, strict);\n          try {\n            bag.cert = pki.certificateFromAsn1(certAsn1, true);\n          } catch(e) {\n            // ignore unknown cert type, pass asn1 value\n            bag.cert = null;\n            bag.asn1 = certAsn1;\n          }\n        };\n        break;\n\n      default:\n        var error = new Error('Unsupported PKCS#12 SafeBag type.');\n        error.oid = bag.type;\n        throw error;\n    }\n\n    /* Validate SafeBag value (i.e. CertBag, etc.) and capture data if needed. */\n    if(validator !== undefined &&\n       !asn1.validate(bagAsn1, validator, capture, errors)) {\n      var error = new Error('Cannot read PKCS#12 ' + validator.name);\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Call decoder function from above to store the results. */\n    decoder();\n  }\n\n  return res;\n}\n\n/**\n * Decode PKCS#12 SET OF PKCS12Attribute into JavaScript object.\n *\n * @param attributes SET OF PKCS12Attribute (ASN.1 object).\n *\n * @return the decoded attributes.\n */\nfunction _decodeBagAttributes(attributes) {\n  var decodedAttrs = {};\n\n  if(attributes !== undefined) {\n    for(var i = 0; i < attributes.length; ++i) {\n      var capture = {};\n      var errors = [];\n      if(!asn1.validate(attributes[i], attributeValidator, capture, errors)) {\n        var error = new Error('Cannot read PKCS#12 BagAttribute.');\n        error.errors = errors;\n        throw error;\n      }\n\n      var oid = asn1.derToOid(capture.oid);\n      if(pki.oids[oid] === undefined) {\n        // unsupported attribute type, ignore.\n        continue;\n      }\n\n      decodedAttrs[pki.oids[oid]] = [];\n      for(var j = 0; j < capture.values.length; ++j) {\n        decodedAttrs[pki.oids[oid]].push(capture.values[j].value);\n      }\n    }\n  }\n\n  return decodedAttrs;\n}\n\n/**\n * Wraps a private key and certificate in a PKCS#12 PFX wrapper. If a\n * password is provided then the private key will be encrypted.\n *\n * An entire certificate chain may also be included. To do this, pass\n * an array for the \"cert\" parameter where the first certificate is\n * the one that is paired with the private key and each subsequent one\n * verifies the previous one. The certificates may be in PEM format or\n * have been already parsed by Forge.\n *\n * @todo implement password-based-encryption for the whole package\n *\n * @param key the private key.\n * @param cert the certificate (may be an array of certificates in order\n *          to specify a certificate chain).\n * @param password the password to use, null for none.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          useMac true to include a MAC, false not to, defaults to true.\n *          localKeyId the local key ID to use, in hex.\n *          friendlyName the friendly name to use.\n *          generateLocalKeyId true to generate a random local key ID,\n *            false not to, defaults to true.\n *\n * @return the PKCS#12 PFX ASN.1 object.\n */\np12.toPkcs12Asn1 = function(key, cert, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || options.encAlgorithm || 'aes128';\n  if(!('useMac' in options)) {\n    options.useMac = true;\n  }\n  if(!('localKeyId' in options)) {\n    options.localKeyId = null;\n  }\n  if(!('generateLocalKeyId' in options)) {\n    options.generateLocalKeyId = true;\n  }\n\n  var localKeyId = options.localKeyId;\n  var bagAttrs;\n  if(localKeyId !== null) {\n    localKeyId = forge.util.hexToBytes(localKeyId);\n  } else if(options.generateLocalKeyId) {\n    // use SHA-1 of paired cert, if available\n    if(cert) {\n      var pairedCert = forge.util.isArray(cert) ? cert[0] : cert;\n      if(typeof pairedCert === 'string') {\n        pairedCert = pki.certificateFromPem(pairedCert);\n      }\n      var sha1 = forge.md.sha1.create();\n      sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());\n      localKeyId = sha1.digest().getBytes();\n    } else {\n      // FIXME: consider using SHA-1 of public key (which can be generated\n      // from private key components), see: cert.generateSubjectKeyIdentifier\n      // generate random bytes\n      localKeyId = forge.random.getBytes(20);\n    }\n  }\n\n  var attrs = [];\n  if(localKeyId !== null) {\n    attrs.push(\n      // localKeyID\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.localKeyId).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            localKeyId)\n        ])\n      ]));\n  }\n  if('friendlyName' in options) {\n    attrs.push(\n      // friendlyName\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.friendlyName).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BMPSTRING, false,\n            options.friendlyName)\n        ])\n      ]));\n  }\n\n  if(attrs.length > 0) {\n    bagAttrs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, attrs);\n  }\n\n  // collect contents for AuthenticatedSafe\n  var contents = [];\n\n  // create safe bag(s) for certificate chain\n  var chain = [];\n  if(cert !== null) {\n    if(forge.util.isArray(cert)) {\n      chain = cert;\n    } else {\n      chain = [cert];\n    }\n  }\n\n  var certSafeBags = [];\n  for(var i = 0; i < chain.length; ++i) {\n    // convert cert from PEM as necessary\n    cert = chain[i];\n    if(typeof cert === 'string') {\n      cert = pki.certificateFromPem(cert);\n    }\n\n    // SafeBag\n    var certBagAttrs = (i === 0) ? bagAttrs : undefined;\n    var certAsn1 = pki.certificateToAsn1(cert);\n    var certSafeBag =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.certBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // CertBag\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // certId\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(pki.oids.x509Certificate).getBytes()),\n            // certValue (x509Certificate)\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(\n                asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                asn1.toDer(certAsn1).getBytes())\n            ])])]),\n        // bagAttributes (OPTIONAL)\n        certBagAttrs\n      ]);\n    certSafeBags.push(certSafeBag);\n  }\n\n  if(certSafeBags.length > 0) {\n    // SafeContents\n    var certSafeContents = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, certSafeBags);\n\n    // ContentInfo\n    var certCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(certSafeContents).getBytes())\n        ])\n      ]);\n    contents.push(certCI);\n  }\n\n  // create safe contents for private key\n  var keyBag = null;\n  if(key !== null) {\n    // SafeBag\n    var pkAsn1 = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(key));\n    if(password === null) {\n      // no encryption\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.keyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // PrivateKeyInfo\n          pkAsn1\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    } else {\n      // encrypted PrivateKeyInfo\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // EncryptedPrivateKeyInfo\n          pki.encryptPrivateKeyInfo(pkAsn1, password, options)\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    }\n\n    // SafeContents\n    var keySafeContents =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [keyBag]);\n\n    // ContentInfo\n    var keyCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(keySafeContents).getBytes())\n        ])\n      ]);\n    contents.push(keyCI);\n  }\n\n  // create AuthenticatedSafe by stringing together the contents\n  var safe = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, contents);\n\n  var macData;\n  if(options.useMac) {\n    // MacData\n    var sha1 = forge.md.sha1.create();\n    var macSalt = new forge.util.ByteBuffer(\n      forge.random.getBytes(options.saltSize));\n    var count = options.count;\n    // 160-bit key\n    var key = p12.generateKey(password, macSalt, 3, count, 20);\n    var mac = forge.hmac.create();\n    mac.start(sha1, key);\n    mac.update(asn1.toDer(safe).getBytes());\n    var macValue = mac.getMac();\n    macData = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // mac DigestInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // digestAlgorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm = SHA-1\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(pki.oids.sha1).getBytes()),\n          // parameters = Null\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]),\n        // digest\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n          false, macValue.getBytes())\n      ]),\n      // macSalt OCTET STRING\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, macSalt.getBytes()),\n      // iterations INTEGER (XXX: Only support count < 65536)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(count).getBytes()\n      )\n    ]);\n  }\n\n  // PFX\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (3)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(3).getBytes()),\n    // PKCS#7 ContentInfo\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // contentType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        // OID for the content type is 'data'\n        asn1.oidToDer(pki.oids.data).getBytes()),\n      // content\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          asn1.toDer(safe).getBytes())\n      ])\n    ]),\n    macData\n  ]);\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\np12.generateKey = forge.pbe.generatePkcs12Key;\n","/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n","/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nvar baseN = require('./baseN');\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a binary encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer. Note that the resulting string is binary encoded (in node.js this\n * encoding is referred to as `binary`, it is *not* `utf8`).\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to populate the\n * buffer with data. This value can either be string of encoded bytes or a\n * regular string of characters. When passing a string of binary encoded\n * bytes, the encoding `raw` should be given. This is also the default. When\n * passing a string of characters, the encoding `utf8` should be given.\n *\n * @param [input] a string with encoded bytes to store in the buffer.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * Encodes the given string of characters (a standard JavaScript\n * string) as a binary encoded string where the bytes represent\n * a UTF-8 encoded string of characters. Non-ASCII characters will be\n * encoded as multiple bytes according to UTF-8.\n *\n * @param str a standard string of characters to encode.\n *\n * @return the binary encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a binary encoded string that contains bytes that\n * represent a UTF-8 encoded string of characters -- into a\n * string of characters (a standard JavaScript string).\n *\n * @param str the binary encoded string to decode.\n *\n * @return the resulting standard string of characters.\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n","/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Create signature digest for OID.\n *\n * @param options\n *   signatureOid: the OID specifying the signature algorithm.\n *   type: a human readable type for error messages\n * @return a created md instance. throws if unknown oid.\n */\nvar _createSignatureDigest = function(options) {\n  switch(oids[options.signatureOid]) {\n    case 'sha1WithRSAEncryption':\n    // deprecated alias\n    case 'sha1WithRSASignature':\n      return forge.md.sha1.create();\n    case 'md5WithRSAEncryption':\n      return forge.md.md5.create();\n    case 'sha256WithRSAEncryption':\n      return forge.md.sha256.create();\n    case 'sha384WithRSAEncryption':\n      return forge.md.sha384.create();\n    case 'sha512WithRSAEncryption':\n      return forge.md.sha512.create();\n    case 'RSASSA-PSS':\n      return forge.md.sha256.create();\n    default:\n      var error = new Error(\n        'Could not compute ' + options.type + ' digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = options.signatureOid;\n      throw error;\n  }\n};\n\n/**\n * Verify signature on certificate or CSR.\n *\n * @param options:\n *   certificate the certificate or CSR to verify.\n *   md the signature digest.\n *   signature the signature\n * @return a created md instance. throws if unknown oid.\n */\nvar _verifySignature = function(options) {\n  var cert = options.certificate;\n  var scheme;\n\n  switch(cert.signatureOid) {\n    case oids.sha1WithRSAEncryption:\n    // deprecated alias\n    case oids.sha1WithRSASignature:\n      /* use PKCS#1 v1.5 padding scheme */\n      break;\n    case oids['RSASSA-PSS']:\n      var hash, mgf;\n\n      /* initialize mgf */\n      hash = oids[cert.signatureParameters.mgf.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported MGF hash function.');\n        error.oid = cert.signatureParameters.mgf.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      mgf = oids[cert.signatureParameters.mgf.algorithmOid];\n      if(mgf === undefined || forge.mgf[mgf] === undefined) {\n        var error = new Error('Unsupported MGF function.');\n        error.oid = cert.signatureParameters.mgf.algorithmOid;\n        error.name = mgf;\n        throw error;\n      }\n\n      mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n      /* initialize hash function */\n      hash = oids[cert.signatureParameters.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported RSASSA-PSS hash function.');\n        error.oid = cert.signatureParameters.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      scheme = forge.pss.create(\n        forge.md[hash].create(), mgf, cert.signatureParameters.saltLength\n      );\n      break;\n  }\n\n  // verify signature on cert using public key\n  return cert.publicKey.verify(\n    options.md.digest().getBytes(), options.signature, scheme\n  );\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = subject.attributes;\n      error.actualIssuer = issuer.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // create digest for OID signature types\n      md = _createSignatureDigest({\n        signatureOid: child.signatureOid,\n        type: 'certificate'\n      });\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: cert, md: md, signature: child.signature\n      });\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    cert.md = _createSignatureDigest({\n      signatureOid: cert.signatureOid,\n      type: 'certificate'\n    });\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  var ibytes = asn1.toDer(capture.certIssuer);\n  imd.update(ibytes.getBytes());\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  var sbytes = asn1.toDer(capture.certSubject);\n  smd.update(sbytes.getBytes());\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    csr.md = _createSignatureDigest({\n      signatureOid: csr.signatureOid,\n      type: 'certification request'\n    });\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      md = _createSignatureDigest({\n        signatureOid: csr.signatureOid,\n        type: 'certification request'\n      });\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: csr, md: md, signature: csr.signature\n      });\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./oids');\nrequire('./pem');\nrequire('./pkcs7asn1');\nrequire('./random');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter ? capture.encParameter.value : undefined,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      !ec.parameter ?\n        undefined :\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n","/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n// shortcut for pem API\nvar pem = module.exports = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    // accept \"NEW CERTIFICATE REQUEST\" as \"CERTIFICATE REQUEST\"\n    // https://datatracker.ietf.org/doc/html/rfc7468#section-7\n    var type = match[1];\n    if(type === 'NEW CERTIFICATE REQUEST') {\n      type = 'CERTIFICATE REQUEST';\n    }\n\n    var msg = {\n      type: type,\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n","/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./oids');\n\n/* ASN.1 API */\nvar asn1 = module.exports = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n * @param [options] the options to use:\n *          [bitStringContents] the plain BIT STRING content including padding\n *            byte.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value, options) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  var obj = {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n  if(options && 'bitStringContents' in options) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    obj.bitStringContents = options.bitStringContents;\n    // TODO: add readonly flag to avoid this overhead\n    // save copy to detect changes\n    obj.original = asn1.copy(obj);\n  }\n  return obj;\n};\n\n/**\n * Copies an asn1 object.\n *\n * @param obj the asn1 object.\n * @param [options] copy options:\n *          [excludeBitStringContents] true to not copy bitStringContents\n *\n * @return the a copy of the asn1 object.\n */\nasn1.copy = function(obj, options) {\n  var copy;\n\n  if(forge.util.isArray(obj)) {\n    copy = [];\n    for(var i = 0; i < obj.length; ++i) {\n      copy.push(asn1.copy(obj[i], options));\n    }\n    return copy;\n  }\n\n  if(typeof obj === 'string') {\n    // TODO: copy byte buffer if it's a buffer not a string\n    return obj;\n  }\n\n  copy = {\n    tagClass: obj.tagClass,\n    type: obj.type,\n    constructed: obj.constructed,\n    composed: obj.composed,\n    value: asn1.copy(obj.value, options)\n  };\n  if(options && !options.excludeBitStringContents) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    copy.bitStringContents = obj.bitStringContents;\n  }\n  return copy;\n};\n\n/**\n * Compares asn1 objects for equality.\n *\n * Note this function does not run in constant time.\n *\n * @param obj1 the first asn1 object.\n * @param obj2 the second asn1 object.\n * @param [options] compare options:\n *          [includeBitStringContents] true to compare bitStringContents\n *\n * @return true if the asn1 objects are equal.\n */\nasn1.equals = function(obj1, obj2, options) {\n  if(forge.util.isArray(obj1)) {\n    if(!forge.util.isArray(obj2)) {\n      return false;\n    }\n    if(obj1.length !== obj2.length) {\n      return false;\n    }\n    for(var i = 0; i < obj1.length; ++i) {\n      if(!asn1.equals(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if(typeof obj1 !== typeof obj2) {\n    return false;\n  }\n\n  if(typeof obj1 === 'string') {\n    return obj1 === obj2;\n  }\n\n  var equal = obj1.tagClass === obj2.tagClass &&\n    obj1.type === obj2.type &&\n    obj1.constructed === obj2.constructed &&\n    obj1.composed === obj2.composed &&\n    asn1.equals(obj1.value, obj2.value);\n  if(options && options.includeBitStringContents) {\n    equal = equal && (obj1.bitStringContents === obj2.bitStringContents);\n  }\n\n  return equal;\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nasn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Check if the byte buffer has enough bytes. Throws an Error if not.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n * @param n the number of bytes the buffer must have.\n */\nfunction _checkBufferLength(bytes, remaining, n) {\n  if(n > remaining) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.available = bytes.length();\n    error.remaining = remaining;\n    error.requested = n;\n    throw error;\n  }\n}\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = function(bytes, remaining) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  // fromDer already checked that this byte exists\n  var b2 = bytes.getByte();\n  remaining--;\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    var longFormBytes = b2 & 0x7F;\n    _checkBufferLength(bytes, remaining, longFormBytes);\n    length = bytes.getInt(longFormBytes << 3);\n  }\n  // FIXME: this will only happen for 32 bit getInt with high bit set\n  if(length < 0) {\n    throw new Error('Negative length: ' + length);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param [strict] true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n * @param [options] object with options or boolean strict flag\n *          [strict] true to be strict when checking value lengths, false to\n *            allow truncated values (default: true).\n *          [parseAllBytes] true to ensure all bytes are parsed\n *            (default: true)\n *          [decodeBitStrings] true to attempt to decode the content of\n *            BIT STRINGs (not OCTET STRINGs) using strict mode. Note that\n *            without schema support to understand the data context this can\n *            erroneously decode values that happen to be valid ASN.1. This\n *            flag will be deprecated or removed as soon as schema support is\n *            available. (default: true)\n *\n * @throws Will throw an error for various malformed input conditions.\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, options) {\n  if(options === undefined) {\n    options = {\n      strict: true,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(typeof options === 'boolean') {\n    options = {\n      strict: options,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(!('strict' in options)) {\n    options.strict = true;\n  }\n  if(!('parseAllBytes' in options)) {\n    options.parseAllBytes = true;\n  }\n  if(!('decodeBitStrings' in options)) {\n    options.decodeBitStrings = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var byteCount = bytes.length();\n  var value = _fromDer(bytes, bytes.length(), 0, options);\n  if(options.parseAllBytes && bytes.length() !== 0) {\n    var error = new Error('Unparsed DER bytes remain after ASN.1 parsing.');\n    error.byteCount = byteCount;\n    error.remaining = bytes.length();\n    throw error;\n  }\n  return value;\n};\n\n/**\n * Internal function to parse an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the number of bytes remaining for this chunk.\n * @param depth the current parsing depth.\n * @param options object with same options as fromDer().\n *\n * @return the parsed asn1 object.\n */\nfunction _fromDer(bytes, remaining, depth, options) {\n  // temporary storage for consumption calculations\n  var start;\n\n  // minimum length for ASN.1 DER structure is 2\n  _checkBufferLength(bytes, remaining, 2);\n\n  // get the first byte\n  var b1 = bytes.getByte();\n  // consumed one byte\n  remaining--;\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the variable value length and adjust remaining bytes\n  start = bytes.length();\n  var length = _getValueLength(bytes, remaining);\n  remaining -= start - bytes.length();\n\n  // ensure there are enough bytes to get the value\n  if(length !== undefined && length > remaining) {\n    if(options.strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.available = bytes.length();\n      error.remaining = remaining;\n      error.requested = length;\n      throw error;\n    }\n    // Note: be lenient with truncated values and use remaining state bytes\n    length = remaining;\n  }\n\n  // value storage\n  var value;\n  // possible BIT STRING contents storage\n  var bitStringContents;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n  if(constructed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        _checkBufferLength(bytes, remaining, 2);\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          remaining -= 2;\n          break;\n        }\n        start = bytes.length();\n        value.push(_fromDer(bytes, remaining, depth + 1, options));\n        remaining -= start - bytes.length();\n      }\n    } else {\n      // parsing asn1 object of definite length\n      while(length > 0) {\n        start = bytes.length();\n        value.push(_fromDer(bytes, length, depth + 1, options));\n        remaining -= start - bytes.length();\n        length -= start - bytes.length();\n      }\n    }\n  }\n\n  // if a BIT STRING, save the contents including padding\n  if(value === undefined && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING) {\n    bitStringContents = bytes.bytes(length);\n  }\n\n  // determine if a non-constructed value should be decoded as a composed\n  // value that contains other ASN.1 objects. BIT STRINGs (and OCTET STRINGs)\n  // can be used this way.\n  if(value === undefined && options.decodeBitStrings &&\n    tagClass === asn1.Class.UNIVERSAL &&\n    // FIXME: OCTET STRINGs not yet supported here\n    // .. other parts of forge expect to decode OCTET STRINGs manually\n    (type === asn1.Type.BITSTRING /*|| type === asn1.Type.OCTETSTRING*/) &&\n    length > 1) {\n    // save read position\n    var savedRead = bytes.read;\n    var savedRemaining = remaining;\n    var unused = 0;\n    if(type === asn1.Type.BITSTRING) {\n      /* The first octet gives the number of bits by which the length of the\n        bit string is less than the next multiple of eight (this is called\n        the \"number of unused bits\").\n\n        The second and following octets give the value of the bit string\n        converted to an octet string. */\n      _checkBufferLength(bytes, remaining, 1);\n      unused = bytes.getByte();\n      remaining--;\n    }\n    // if all bits are used, maybe the BIT/OCTET STRING holds ASN.1 objs\n    if(unused === 0) {\n      try {\n        // attempt to parse child asn1 object from the value\n        // (stored in array to signal composed value)\n        start = bytes.length();\n        var subOptions = {\n          // enforce strict mode to avoid parsing ASN.1 from plain data\n          strict: true,\n          decodeBitStrings: true\n        };\n        var composed = _fromDer(bytes, remaining, depth + 1, subOptions);\n        var used = start - bytes.length();\n        remaining -= used;\n        if(type == asn1.Type.BITSTRING) {\n          used++;\n        }\n\n        // if the data all decoded and the class indicates UNIVERSAL or\n        // CONTEXT_SPECIFIC then assume we've got an encapsulated ASN.1 object\n        var tc = composed.tagClass;\n        if(used === length &&\n          (tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC)) {\n          value = [composed];\n        }\n      } catch(ex) {\n      }\n    }\n    if(value === undefined) {\n      // restore read position\n      bytes.read = savedRead;\n      remaining = savedRemaining;\n    }\n  }\n\n  if(value === undefined) {\n    // asn1 not constructed or composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(options.strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining state bytes\n      length = remaining;\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(; length > 0; length -= 2) {\n        _checkBufferLength(bytes, remaining, 2);\n        value += String.fromCharCode(bytes.getInt16());\n        remaining -= 2;\n      }\n    } else {\n      value = bytes.getBytes(length);\n      remaining -= length;\n    }\n  }\n\n  // add BIT STRING contents if available\n  var asn1Options = bitStringContents === undefined ? null : {\n    bitStringContents: bitStringContents\n  };\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value, asn1Options);\n}\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // use BIT STRING contents if available and data not changed\n  var useBitStringContents = false;\n  if('bitStringContents' in obj) {\n    useBitStringContents = true;\n    if(obj.original) {\n      useBitStringContents = asn1.equals(obj, obj.original);\n    }\n  }\n\n  if(useBitStringContents) {\n    value.putBytes(obj.bitStringContents);\n  } else if(obj.composed) {\n    // if composed, use each child asn1 object's DER bytes as value\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      // TODO: should all leading bytes be stripped vs just one?\n      // .. ex '00 00 01' => '01'?\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates that the given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'. To capture BIT STRING bytes, including\n * the leading unused bits counter byte, specify 'captureBitStringContents'.\n * To capture BIT STRING bytes, without the leading unused bits counter byte,\n * specify 'captureBitStringValue'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n        if(v.captureBitStringContents && 'bitStringContents' in obj) {\n          capture[v.captureBitStringContents] = obj.bitStringContents;\n        }\n        if(v.captureBitStringValue && 'bitStringContents' in obj) {\n          var value;\n          if(obj.bitStringContents.length < 2) {\n            capture[v.captureBitStringValue] = '';\n          } else {\n            // FIXME: support unused bits with data shifting\n            var unused = obj.bitStringContents.charCodeAt(0);\n            if(unused !== 0) {\n              throw new Error(\n                'captureBitStringValue only supported for zero unused bits');\n            }\n            capture[v.captureBitStringValue] = obj.bitStringContents.slice(1);\n          }\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.BITSTRING) {\n      // TODO: shift bits as needed to display without padding\n      if(obj.value.length > 1) {\n        // remove unused bits field\n        rval += '0x' + forge.util.bytesToHex(obj.value.slice(1));\n      } else {\n        rval += '(none)';\n      }\n      // show unused bit count\n      if(obj.value.length > 0) {\n        var unused = obj.value.charCodeAt(0);\n        if(unused == 1) {\n          rval += ' (1 unused bit shown)';\n        } else if(unused > 1) {\n          rval += ' (' + unused + ' unused bits shown)';\n        }\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      try {\n        rval += forge.util.decodeUtf8(obj.value);\n      } catch(e) {\n        if(e.message === 'URI malformed') {\n          rval +=\n            '0x' + forge.util.bytesToHex(obj.value) + ' (malformed UTF8)';\n        } else {\n          throw e;\n        }\n      }\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n","/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n","/**\n * A Javascript implementation of Transport Layer Security (TLS).\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n *\n * The TLS Handshake Protocol involves the following steps:\n *\n * - Exchange hello messages to agree on algorithms, exchange random values,\n * and check for session resumption.\n *\n * - Exchange the necessary cryptographic parameters to allow the client and\n * server to agree on a premaster secret.\n *\n * - Exchange certificates and cryptographic information to allow the client\n * and server to authenticate themselves.\n *\n * - Generate a master secret from the premaster secret and exchanged random\n * values.\n *\n * - Provide security parameters to the record layer.\n *\n * - Allow the client and server to verify that their peer has calculated the\n * same security parameters and that the handshake occurred without tampering\n * by an attacker.\n *\n * Up to 4 different messages may be sent during a key exchange. The server\n * certificate, the server key exchange, the client certificate, and the\n * client key exchange.\n *\n * A typical handshake (from the client's perspective).\n *\n * 1. Client sends ClientHello.\n * 2. Client receives ServerHello.\n * 3. Client receives optional Certificate.\n * 4. Client receives optional ServerKeyExchange.\n * 5. Client receives ServerHelloDone.\n * 6. Client sends optional Certificate.\n * 7. Client sends ClientKeyExchange.\n * 8. Client sends optional CertificateVerify.\n * 9. Client sends ChangeCipherSpec.\n * 10. Client sends Finished.\n * 11. Client receives ChangeCipherSpec.\n * 12. Client receives Finished.\n * 13. Client sends/receives application data.\n *\n * To reuse an existing session:\n *\n * 1. Client sends ClientHello with session ID for reuse.\n * 2. Client receives ServerHello with same session ID if reusing.\n * 3. Client receives ChangeCipherSpec message if reusing.\n * 4. Client receives Finished.\n * 5. Client sends ChangeCipherSpec.\n * 6. Client sends Finished.\n *\n * Note: Client ignores HelloRequest if in the middle of a handshake.\n *\n * Record Layer:\n *\n * The record layer fragments information blocks into TLSPlaintext records\n * carrying data in chunks of 2^14 bytes or less. Client message boundaries are\n * not preserved in the record layer (i.e., multiple client messages of the\n * same ContentType MAY be coalesced into a single TLSPlaintext record, or a\n * single message MAY be fragmented across several records).\n *\n * struct {\n *   uint8 major;\n *   uint8 minor;\n * } ProtocolVersion;\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   opaque fragment[TLSPlaintext.length];\n * } TLSPlaintext;\n *\n * type:\n *   The higher-level protocol used to process the enclosed fragment.\n *\n * version:\n *   The version of the protocol being employed. TLS Version 1.2 uses version\n *   {3, 3}. TLS Version 1.0 uses version {3, 1}. Note that a client that\n *   supports multiple versions of TLS may not know what version will be\n *   employed before it receives the ServerHello.\n *\n * length:\n *   The length (in bytes) of the following TLSPlaintext.fragment. The length\n *   MUST NOT exceed 2^14 = 16384 bytes.\n *\n * fragment:\n *   The application data. This data is transparent and treated as an\n *   independent block to be dealt with by the higher-level protocol specified\n *   by the type field.\n *\n * Implementations MUST NOT send zero-length fragments of Handshake, Alert, or\n * ChangeCipherSpec content types. Zero-length fragments of Application data\n * MAY be sent as they are potentially useful as a traffic analysis\n * countermeasure.\n *\n * Note: Data of different TLS record layer content types MAY be interleaved.\n * Application data is generally of lower precedence for transmission than\n * other content types. However, records MUST be delivered to the network in\n * the same order as they are protected by the record layer. Recipients MUST\n * receive and process interleaved application layer traffic during handshakes\n * subsequent to the first one on a connection.\n *\n * struct {\n *   ContentType type;       // same as TLSPlaintext.type\n *   ProtocolVersion version;// same as TLSPlaintext.version\n *   uint16 length;\n *   opaque fragment[TLSCompressed.length];\n * } TLSCompressed;\n *\n * length:\n *   The length (in bytes) of the following TLSCompressed.fragment.\n *   The length MUST NOT exceed 2^14 + 1024.\n *\n * fragment:\n *   The compressed form of TLSPlaintext.fragment.\n *\n * Note: A CompressionMethod.null operation is an identity operation; no fields\n * are altered. In this implementation, since no compression is supported,\n * uncompressed records are always the same as compressed records.\n *\n * Encryption Information:\n *\n * The encryption and MAC functions translate a TLSCompressed structure into a\n * TLSCiphertext. The decryption functions reverse the process. The MAC of the\n * record also includes a sequence number so that missing, extra, or repeated\n * messages are detectable.\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   select (SecurityParameters.cipher_type) {\n *     case stream: GenericStreamCipher;\n *     case block:  GenericBlockCipher;\n *     case aead:   GenericAEADCipher;\n *   } fragment;\n * } TLSCiphertext;\n *\n * type:\n *   The type field is identical to TLSCompressed.type.\n *\n * version:\n *   The version field is identical to TLSCompressed.version.\n *\n * length:\n *   The length (in bytes) of the following TLSCiphertext.fragment.\n *   The length MUST NOT exceed 2^14 + 2048.\n *\n * fragment:\n *   The encrypted form of TLSCompressed.fragment, with the MAC.\n *\n * Note: Only CBC Block Ciphers are supported by this implementation.\n *\n * The TLSCompressed.fragment structures are converted to/from block\n * TLSCiphertext.fragment structures.\n *\n * struct {\n *   opaque IV[SecurityParameters.record_iv_length];\n *   block-ciphered struct {\n *     opaque content[TLSCompressed.length];\n *     opaque MAC[SecurityParameters.mac_length];\n *     uint8 padding[GenericBlockCipher.padding_length];\n *     uint8 padding_length;\n *   };\n * } GenericBlockCipher;\n *\n * The MAC is generated as described in Section 6.2.3.1.\n *\n * IV:\n *   The Initialization Vector (IV) SHOULD be chosen at random, and MUST be\n *   unpredictable. Note that in versions of TLS prior to 1.1, there was no\n *   IV field, and the last ciphertext block of the previous record (the \"CBC\n *   residue\") was used as the IV. This was changed to prevent the attacks\n *   described in [CBCATT]. For block ciphers, the IV length is of length\n *   SecurityParameters.record_iv_length, which is equal to the\n *   SecurityParameters.block_size.\n *\n * padding:\n *   Padding that is added to force the length of the plaintext to be an\n *   integral multiple of the block cipher's block length. The padding MAY be\n *   any length up to 255 bytes, as long as it results in the\n *   TLSCiphertext.length being an integral multiple of the block length.\n *   Lengths longer than necessary might be desirable to frustrate attacks on\n *   a protocol that are based on analysis of the lengths of exchanged\n *   messages. Each uint8 in the padding data vector MUST be filled with the\n *   padding length value. The receiver MUST check this padding and MUST use\n *   the bad_record_mac alert to indicate padding errors.\n *\n * padding_length:\n *   The padding length MUST be such that the total size of the\n *   GenericBlockCipher structure is a multiple of the cipher's block length.\n *   Legal values range from zero to 255, inclusive. This length specifies the\n *   length of the padding field exclusive of the padding_length field itself.\n *\n * The encrypted data length (TLSCiphertext.length) is one more than the sum of\n * SecurityParameters.block_length, TLSCompressed.length,\n * SecurityParameters.mac_length, and padding_length.\n *\n * Example: If the block length is 8 bytes, the content length\n * (TLSCompressed.length) is 61 bytes, and the MAC length is 20 bytes, then the\n * length before padding is 82 bytes (this does not include the IV. Thus, the\n * padding length modulo 8 must be equal to 6 in order to make the total length\n * an even multiple of 8 bytes (the block length). The padding length can be\n * 6, 14, 22, and so on, through 254. If the padding length were the minimum\n * necessary, 6, the padding would be 6 bytes, each containing the value 6.\n * Thus, the last 8 octets of the GenericBlockCipher before block encryption\n * would be xx 06 06 06 06 06 06 06, where xx is the last octet of the MAC.\n *\n * Note: With block ciphers in CBC mode (Cipher Block Chaining), it is critical\n * that the entire plaintext of the record be known before any ciphertext is\n * transmitted. Otherwise, it is possible for the attacker to mount the attack\n * described in [CBCATT].\n *\n * Implementation note: Canvel et al. [CBCTIME] have demonstrated a timing\n * attack on CBC padding based on the time required to compute the MAC. In\n * order to defend against this attack, implementations MUST ensure that\n * record processing time is essentially the same whether or not the padding\n * is correct. In general, the best way to do this is to compute the MAC even\n * if the padding is incorrect, and only then reject the packet. For instance,\n * if the pad appears to be incorrect, the implementation might assume a\n * zero-length pad and then compute the MAC. This leaves a small timing\n * channel, since MAC performance depends, to some extent, on the size of the\n * data fragment, but it is not believed to be large enough to be exploitable,\n * due to the large block size of existing MACs and the small size of the\n * timing signal.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./md5');\nrequire('./pem');\nrequire('./pki');\nrequire('./random');\nrequire('./sha1');\nrequire('./util');\n\n/**\n * Generates pseudo random bytes by mixing the result of two hash functions,\n * MD5 and SHA-1.\n *\n * prf_TLS1(secret, label, seed) =\n *   P_MD5(S1, label + seed) XOR P_SHA-1(S2, label + seed);\n *\n * Each P_hash function functions as follows:\n *\n * P_hash(secret, seed) = HMAC_hash(secret, A(1) + seed) +\n *                        HMAC_hash(secret, A(2) + seed) +\n *                        HMAC_hash(secret, A(3) + seed) + ...\n * A() is defined as:\n *   A(0) = seed\n *   A(i) = HMAC_hash(secret, A(i-1))\n *\n * The '+' operator denotes concatenation.\n *\n * As many iterations A(N) as are needed are performed to generate enough\n * pseudo random byte output. If an iteration creates more data than is\n * necessary, then it is truncated.\n *\n * Therefore:\n * A(1) = HMAC_hash(secret, A(0))\n *      = HMAC_hash(secret, seed)\n * A(2) = HMAC_hash(secret, A(1))\n *      = HMAC_hash(secret, HMAC_hash(secret, seed))\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, A(0)) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, A(1)) + seed) +\n *   ...\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, seed) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, HMAC_hash(secret, seed)) + seed) +\n *   ...\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_TLS1 = function(secret, label, seed, length) {\n  var rval = forge.util.createBuffer();\n\n  /* For TLS 1.0, the secret is split in half, into two secrets of equal\n    length. If the secret has an odd length then the last byte of the first\n    half will be the same as the first byte of the second. The length of the\n    two secrets is half of the secret rounded up. */\n  var idx = (secret.length >> 1);\n  var slen = idx + (secret.length & 1);\n  var s1 = secret.substr(0, slen);\n  var s2 = secret.substr(idx, slen);\n  var ai = forge.util.createBuffer();\n  var hmac = forge.hmac.create();\n  seed = label + seed;\n\n  // determine the number of iterations that must be performed to generate\n  // enough output bytes, md5 creates 16 byte hashes, sha1 creates 20\n  var md5itr = Math.ceil(length / 16);\n  var sha1itr = Math.ceil(length / 20);\n\n  // do md5 iterations\n  hmac.start('MD5', s1);\n  var md5bytes = forge.util.createBuffer();\n  ai.putBytes(seed);\n  for(var i = 0; i < md5itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    md5bytes.putBuffer(hmac.digest());\n  }\n\n  // do sha1 iterations\n  hmac.start('SHA1', s2);\n  var sha1bytes = forge.util.createBuffer();\n  ai.clear();\n  ai.putBytes(seed);\n  for(var i = 0; i < sha1itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    sha1bytes.putBuffer(hmac.digest());\n  }\n\n  // XOR the md5 bytes with the sha1 bytes\n  rval.putBytes(forge.util.xorBytes(\n    md5bytes.getBytes(), sha1bytes.getBytes(), length));\n\n  return rval;\n};\n\n/**\n * Generates pseudo random bytes using a SHA256 algorithm. For TLS 1.2.\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_sha256 = function(secret, label, seed, length) {\n   // FIXME: implement me for TLS 1.2\n};\n\n/**\n * Gets a MAC for a record using the SHA-1 hash algorithm.\n *\n * @param key the mac key.\n * @param state the sequence number (array of two 32-bit integers).\n * @param record the record.\n *\n * @return the sha-1 hash (20 bytes) for the given record.\n */\nvar hmac_sha1 = function(key, seqNum, record) {\n  /* MAC is computed like so:\n  HMAC_hash(\n    key, seqNum +\n      TLSCompressed.type +\n      TLSCompressed.version +\n      TLSCompressed.length +\n      TLSCompressed.fragment)\n  */\n  var hmac = forge.hmac.create();\n  hmac.start('SHA1', key);\n  var b = forge.util.createBuffer();\n  b.putInt32(seqNum[0]);\n  b.putInt32(seqNum[1]);\n  b.putByte(record.type);\n  b.putByte(record.version.major);\n  b.putByte(record.version.minor);\n  b.putInt16(record.length);\n  b.putBytes(record.fragment.bytes());\n  hmac.update(b.getBytes());\n  return hmac.digest().getBytes();\n};\n\n/**\n * Compresses the TLSPlaintext record into a TLSCompressed record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSPlaintext record to compress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar deflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.deflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // deflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Decompresses the TLSCompressed record into a TLSPlaintext record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSCompressed record to decompress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar inflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.inflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // inflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Reads a TLS variable-length vector from a byte buffer.\n *\n * Variable-length vectors are defined by specifying a subrange of legal\n * lengths, inclusively, using the notation <floor..ceiling>. When these are\n * encoded, the actual length precedes the vector's contents in the byte\n * stream. The length will be in the form of a number consuming as many bytes\n * as required to hold the vector's specified maximum (ceiling) length. A\n * variable-length vector with an actual length field of zero is referred to\n * as an empty vector.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n *\n * @return the resulting byte buffer.\n */\nvar readVector = function(b, lenBytes) {\n  var len = 0;\n  switch(lenBytes) {\n  case 1:\n    len = b.getByte();\n    break;\n  case 2:\n    len = b.getInt16();\n    break;\n  case 3:\n    len = b.getInt24();\n    break;\n  case 4:\n    len = b.getInt32();\n    break;\n  }\n\n  // read vector bytes into a new buffer\n  return forge.util.createBuffer(b.getBytes(len));\n};\n\n/**\n * Writes a TLS variable-length vector to a byte buffer.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n * @param v the byte buffer vector.\n */\nvar writeVector = function(b, lenBytes, v) {\n  // encode length at the start of the vector, where the number of bytes for\n  // the length is the maximum number of bytes it would take to encode the\n  // vector's ceiling\n  b.putInt(v.length(), lenBytes << 3);\n  b.putBuffer(v);\n};\n\n/**\n * The tls implementation.\n */\nvar tls = {};\n\n/**\n * Version: TLS 1.2 = 3.3, TLS 1.1 = 3.2, TLS 1.0 = 3.1. Both TLS 1.1 and\n * TLS 1.2 were still too new (ie: openSSL didn't implement them) at the time\n * of this implementation so TLS 1.0 was implemented instead.\n */\ntls.Versions = {\n  TLS_1_0: {major: 3, minor: 1},\n  TLS_1_1: {major: 3, minor: 2},\n  TLS_1_2: {major: 3, minor: 3}\n};\ntls.SupportedVersions = [\n  tls.Versions.TLS_1_1,\n  tls.Versions.TLS_1_0\n];\ntls.Version = tls.SupportedVersions[0];\n\n/**\n * Maximum fragment size. True maximum is 16384, but we fragment before that\n * to allow for unusual small increases during compression.\n */\ntls.MaxFragment = 16384 - 1024;\n\n/**\n * Whether this entity is considered the \"client\" or \"server\".\n * enum { server, client } ConnectionEnd;\n */\ntls.ConnectionEnd = {\n  server: 0,\n  client: 1\n};\n\n/**\n * Pseudo-random function algorithm used to generate keys from the master\n * secret.\n * enum { tls_prf_sha256 } PRFAlgorithm;\n */\ntls.PRFAlgorithm = {\n  tls_prf_sha256: 0\n};\n\n/**\n * Bulk encryption algorithms.\n * enum { null, rc4, des3, aes } BulkCipherAlgorithm;\n */\ntls.BulkCipherAlgorithm = {\n  none: null,\n  rc4: 0,\n  des3: 1,\n  aes: 2\n};\n\n/**\n * Cipher types.\n * enum { stream, block, aead } CipherType;\n */\ntls.CipherType = {\n  stream: 0,\n  block: 1,\n  aead: 2\n};\n\n/**\n * MAC (Message Authentication Code) algorithms.\n * enum { null, hmac_md5, hmac_sha1, hmac_sha256,\n *   hmac_sha384, hmac_sha512} MACAlgorithm;\n */\ntls.MACAlgorithm = {\n  none: null,\n  hmac_md5: 0,\n  hmac_sha1: 1,\n  hmac_sha256: 2,\n  hmac_sha384: 3,\n  hmac_sha512: 4\n};\n\n/**\n * Compression algorithms.\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n */\ntls.CompressionMethod = {\n  none: 0,\n  deflate: 1\n};\n\n/**\n * TLS record content types.\n * enum {\n *   change_cipher_spec(20), alert(21), handshake(22),\n *   application_data(23), (255)\n * } ContentType;\n */\ntls.ContentType = {\n  change_cipher_spec: 20,\n  alert: 21,\n  handshake: 22,\n  application_data: 23,\n  heartbeat: 24\n};\n\n/**\n * TLS handshake types.\n * enum {\n *   hello_request(0), client_hello(1), server_hello(2),\n *   certificate(11), server_key_exchange (12),\n *   certificate_request(13), server_hello_done(14),\n *   certificate_verify(15), client_key_exchange(16),\n *   finished(20), (255)\n * } HandshakeType;\n */\ntls.HandshakeType = {\n  hello_request: 0,\n  client_hello: 1,\n  server_hello: 2,\n  certificate: 11,\n  server_key_exchange: 12,\n  certificate_request: 13,\n  server_hello_done: 14,\n  certificate_verify: 15,\n  client_key_exchange: 16,\n  finished: 20\n};\n\n/**\n * TLS Alert Protocol.\n *\n * enum { warning(1), fatal(2), (255) } AlertLevel;\n *\n * enum {\n *   close_notify(0),\n *   unexpected_message(10),\n *   bad_record_mac(20),\n *   decryption_failed(21),\n *   record_overflow(22),\n *   decompression_failure(30),\n *   handshake_failure(40),\n *   bad_certificate(42),\n *   unsupported_certificate(43),\n *   certificate_revoked(44),\n *   certificate_expired(45),\n *   certificate_unknown(46),\n *   illegal_parameter(47),\n *   unknown_ca(48),\n *   access_denied(49),\n *   decode_error(50),\n *   decrypt_error(51),\n *   export_restriction(60),\n *   protocol_version(70),\n *   insufficient_security(71),\n *   internal_error(80),\n *   user_canceled(90),\n *   no_renegotiation(100),\n *   (255)\n * } AlertDescription;\n *\n * struct {\n *   AlertLevel level;\n *   AlertDescription description;\n * } Alert;\n */\ntls.Alert = {};\ntls.Alert.Level = {\n  warning: 1,\n  fatal: 2\n};\ntls.Alert.Description = {\n  close_notify: 0,\n  unexpected_message: 10,\n  bad_record_mac: 20,\n  decryption_failed: 21,\n  record_overflow: 22,\n  decompression_failure: 30,\n  handshake_failure: 40,\n  bad_certificate: 42,\n  unsupported_certificate: 43,\n  certificate_revoked: 44,\n  certificate_expired: 45,\n  certificate_unknown: 46,\n  illegal_parameter: 47,\n  unknown_ca: 48,\n  access_denied: 49,\n  decode_error: 50,\n  decrypt_error: 51,\n  export_restriction: 60,\n  protocol_version: 70,\n  insufficient_security: 71,\n  internal_error: 80,\n  user_canceled: 90,\n  no_renegotiation: 100\n};\n\n/**\n * TLS Heartbeat Message types.\n * enum {\n *   heartbeat_request(1),\n *   heartbeat_response(2),\n *   (255)\n * } HeartbeatMessageType;\n */\ntls.HeartbeatMessageType = {\n  heartbeat_request: 1,\n  heartbeat_response: 2\n};\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites = {};\n\n/**\n * Gets a supported cipher suite from its 2 byte ID.\n *\n * @param twoBytes two bytes in a string.\n *\n * @return the matching supported cipher suite or null.\n */\ntls.getCipherSuite = function(twoBytes) {\n  var rval = null;\n  for(var key in tls.CipherSuites) {\n    var cs = tls.CipherSuites[key];\n    if(cs.id[0] === twoBytes.charCodeAt(0) &&\n      cs.id[1] === twoBytes.charCodeAt(1)) {\n      rval = cs;\n      break;\n    }\n  }\n  return rval;\n};\n\n/**\n * Called when an unexpected record is encountered.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleUnexpected = function(c, record) {\n  // if connection is client and closed, ignore unexpected messages\n  var ignore = (!c.open && c.entity === tls.ConnectionEnd.client);\n  if(!ignore) {\n    c.error(c, {\n      message: 'Unexpected message. Received TLS record out of order.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unexpected_message\n      }\n    });\n  }\n};\n\n/**\n * Called when a client receives a HelloRequest record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleHelloRequest = function(c, record, length) {\n  // ignore renegotiation requests from the server during a handshake, but\n  // if handshaking, send a warning alert that renegotation is denied\n  if(!c.handshaking && c.handshakes > 0) {\n    // send alert warning\n    tls.queue(c, tls.createAlert(c, {\n       level: tls.Alert.Level.warning,\n       description: tls.Alert.Description.no_renegotiation\n    }));\n    tls.flush(c);\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Parses a hello message from a ClientHello or ServerHello record.\n *\n * @param record the record to parse.\n *\n * @return the parsed message.\n */\ntls.parseHelloMessage = function(c, record, length) {\n  var msg = null;\n\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  // minimum of 38 bytes in message\n  if(length < 38) {\n    c.error(c, {\n      message: client ?\n        'Invalid ServerHello message. Message too short.' :\n        'Invalid ClientHello message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else {\n    // use 'remaining' to calculate # of remaining bytes in the message\n    var b = record.fragment;\n    var remaining = b.length();\n    msg = {\n      version: {\n        major: b.getByte(),\n        minor: b.getByte()\n      },\n      random: forge.util.createBuffer(b.getBytes(32)),\n      session_id: readVector(b, 1),\n      extensions: []\n    };\n    if(client) {\n      msg.cipher_suite = b.getBytes(2);\n      msg.compression_method = b.getByte();\n    } else {\n      msg.cipher_suites = readVector(b, 2);\n      msg.compression_methods = readVector(b, 1);\n    }\n\n    // read extensions if there are any bytes left in the message\n    remaining = length - (remaining - b.length());\n    if(remaining > 0) {\n      // parse extensions\n      var exts = readVector(b, 2);\n      while(exts.length() > 0) {\n        msg.extensions.push({\n          type: [exts.getByte(), exts.getByte()],\n          data: readVector(exts, 2)\n        });\n      }\n\n      // TODO: make extension support modular\n      if(!client) {\n        for(var i = 0; i < msg.extensions.length; ++i) {\n          var ext = msg.extensions[i];\n\n          // support SNI extension\n          if(ext.type[0] === 0x00 && ext.type[1] === 0x00) {\n            // get server name list\n            var snl = readVector(ext.data, 2);\n            while(snl.length() > 0) {\n              // read server name type\n              var snType = snl.getByte();\n\n              // only HostName type (0x00) is known, break out if\n              // another type is detected\n              if(snType !== 0x00) {\n                break;\n              }\n\n              // add host name to server name list\n              c.session.extensions.server_name.serverNameList.push(\n                readVector(snl, 2).getBytes());\n            }\n          }\n        }\n      }\n    }\n\n    // version already set, do not allow version change\n    if(c.session.version) {\n      if(msg.version.major !== c.session.version.major ||\n        msg.version.minor !== c.session.version.minor) {\n        return c.error(c, {\n          message: 'TLS version change is disallowed during renegotiation.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    // get the chosen (ServerHello) cipher suite\n    if(client) {\n      // FIXME: should be checking configured acceptable cipher suites\n      c.session.cipherSuite = tls.getCipherSuite(msg.cipher_suite);\n    } else {\n      // get a supported preferred (ClientHello) cipher suite\n      // choose the first supported cipher suite\n      var tmp = forge.util.createBuffer(msg.cipher_suites.bytes());\n      while(tmp.length() > 0) {\n        // FIXME: should be checking configured acceptable suites\n        // cipher suites take up 2 bytes\n        c.session.cipherSuite = tls.getCipherSuite(tmp.getBytes(2));\n        if(c.session.cipherSuite !== null) {\n          break;\n        }\n      }\n    }\n\n    // cipher suite not supported\n    if(c.session.cipherSuite === null) {\n      return c.error(c, {\n        message: 'No cipher suites in common.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.handshake_failure\n        },\n        cipherSuite: forge.util.bytesToHex(msg.cipher_suite)\n      });\n    }\n\n    // TODO: handle compression methods\n    if(client) {\n      c.session.compressionMethod = msg.compression_method;\n    } else {\n      // no compression\n      c.session.compressionMethod = tls.CompressionMethod.none;\n    }\n  }\n\n  return msg;\n};\n\n/**\n * Creates security parameters for the given connection based on the given\n * hello message.\n *\n * @param c the TLS connection.\n * @param msg the hello message.\n */\ntls.createSecurityParameters = function(c, msg) {\n  /* Note: security params are from TLS 1.2, some values like prf_algorithm\n  are ignored for TLS 1.0/1.1 and the builtin as specified in the spec is\n  used. */\n\n  // TODO: handle other options from server when more supported\n\n  // get client and server randoms\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var msgRandom = msg.random.bytes();\n  var cRandom = client ? c.session.sp.client_random : msgRandom;\n  var sRandom = client ? msgRandom : tls.createRandom().getBytes();\n\n  // create new security parameters\n  c.session.sp = {\n    entity: c.entity,\n    prf_algorithm: tls.PRFAlgorithm.tls_prf_sha256,\n    bulk_cipher_algorithm: null,\n    cipher_type: null,\n    enc_key_length: null,\n    block_length: null,\n    fixed_iv_length: null,\n    record_iv_length: null,\n    mac_algorithm: null,\n    mac_length: null,\n    mac_key_length: null,\n    compression_algorithm: c.session.compressionMethod,\n    pre_master_secret: null,\n    master_secret: null,\n    client_random: cRandom,\n    server_random: sRandom\n  };\n};\n\n/**\n * Called when a client receives a ServerHello record.\n *\n * When a ServerHello message will be sent:\n *   The server will send this message in response to a client hello message\n *   when it was able to find an acceptable set of algorithms. If it cannot\n *   find such a match, it will respond with a handshake failure alert.\n *\n * uint24 length;\n * struct {\n *   ProtocolVersion server_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suite;\n *   CompressionMethod compression_method;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ServerHello;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // ensure server version is compatible\n  if(msg.version.minor <= c.version.minor) {\n    c.version.minor = msg.version.minor;\n  } else {\n    return c.error(c, {\n      message: 'Incompatible TLS version.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.protocol_version\n      }\n    });\n  }\n\n  // indicate session version has been set\n  c.session.version = c.version;\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // if the session ID is not blank and matches the cached one, resume\n  // the session\n  if(sessionId.length > 0 && sessionId === c.session.id) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = SCC;\n    c.session.resuming = true;\n\n    // get new server random\n    c.session.sp.server_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a server Certificate message next\n    c.expect = SCE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // set new session ID\n  c.session.id = sessionId;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a ClientHello record.\n *\n * When a ClientHello message will be sent:\n *   When a client first connects to a server it is required to send the\n *   client hello as its first message. The client can also send a client\n *   hello in response to a hello request or on its own initiative in order\n *   to renegotiate the security parameters in an existing connection.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // see if the given session ID is in the cache\n  var session = null;\n  if(c.sessionCache) {\n    session = c.sessionCache.getSession(sessionId);\n    if(session === null) {\n      // session ID not found\n      sessionId = '';\n    } else if(session.version.major !== msg.version.major ||\n      session.version.minor > msg.version.minor) {\n      // if session version is incompatible with client version, do not resume\n      session = null;\n      sessionId = '';\n    }\n  }\n\n  // no session found to resume, generate a new session ID\n  if(sessionId.length === 0) {\n    sessionId = forge.random.getBytes(32);\n  }\n\n  // update session\n  c.session.id = sessionId;\n  c.session.clientHelloVersion = msg.version;\n  c.session.sp = {};\n  if(session) {\n    // use version and security parameters from resumed session\n    c.version = c.session.version = session.version;\n    c.session.sp = session.sp;\n  } else {\n    // use highest compatible minor version\n    var version;\n    for(var i = 1; i < tls.SupportedVersions.length; ++i) {\n      version = tls.SupportedVersions[i];\n      if(version.minor <= msg.version.minor) {\n        break;\n      }\n    }\n    c.version = {major: version.major, minor: version.minor};\n    c.session.version = c.version;\n  }\n\n  // if a session is set, resume it\n  if(session !== null) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = CCC;\n    c.session.resuming = true;\n\n    // get new client random\n    c.session.sp.client_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a Certificate or ClientKeyExchange\n    c.expect = (c.verifyClient !== false) ? CCE : CKE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // connection now open\n  c.open = true;\n\n  // queue server hello\n  tls.queue(c, tls.createRecord(c, {\n    type: tls.ContentType.handshake,\n    data: tls.createServerHello(c)\n  }));\n\n  if(c.session.resuming) {\n    // queue change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // queue finished\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  } else {\n    // queue server certificate\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    }));\n\n    if(!c.fail) {\n      // queue server key exchange\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerKeyExchange(c)\n      }));\n\n      // request client certificate if set\n      if(c.verifyClient !== false) {\n        // queue certificate request\n        tls.queue(c, tls.createRecord(c, {\n          type: tls.ContentType.handshake,\n          data: tls.createCertificateRequest(c)\n        }));\n      }\n\n      // queue server hello done\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerHelloDone(c)\n      }));\n    }\n  }\n\n  // send records\n  tls.flush(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a Certificate record.\n *\n * When this message will be sent:\n *   The server must send a certificate whenever the agreed-upon key exchange\n *   method is not an anonymous one. This message will always immediately\n *   follow the server hello message.\n *\n * Meaning of this message:\n *   The certificate type must be appropriate for the selected cipher suite's\n *   key exchange algorithm, and is generally an X.509v3 certificate. It must\n *   contain a key which matches the key exchange method, as follows. Unless\n *   otherwise specified, the signing algorithm for the certificate must be\n *   the same as the algorithm for the certificate key. Unless otherwise\n *   specified, the public key may be of any length.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n * struct {\n *   ASN.1Cert certificate_list<1..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificate = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid Certificate message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    certificate_list: readVector(b, 3)\n  };\n\n  /* The sender's certificate will be first in the list (chain), each\n    subsequent one that follows will certify the previous one, but root\n    certificates (self-signed) that specify the certificate authority may\n    be omitted under the assumption that clients must already possess it. */\n  var cert, asn1;\n  var certs = [];\n  try {\n    while(msg.certificate_list.length() > 0) {\n      // each entry in msg.certificate_list is a vector with 3 len bytes\n      cert = readVector(msg.certificate_list, 3);\n      asn1 = forge.asn1.fromDer(cert);\n      cert = forge.pki.certificateFromAsn1(asn1, true);\n      certs.push(cert);\n    }\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Could not parse certificate list.',\n      cause: ex,\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.bad_certificate\n      }\n    });\n  }\n\n  // ensure at least 1 certificate was provided if in client-mode\n  // or if verifyClient was set to true to require a certificate\n  // (as opposed to 'optional')\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((client || c.verifyClient === true) && certs.length === 0) {\n    // error, no certificate\n    c.error(c, {\n      message: client ?\n        'No server certificate provided.' :\n        'No client certificate provided.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else if(certs.length === 0) {\n    // no certs to verify\n    // expect a ServerKeyExchange or ClientKeyExchange message next\n    c.expect = client ? SKE : CKE;\n  } else {\n    // save certificate in session\n    if(client) {\n      c.session.serverCertificate = certs[0];\n    } else {\n      c.session.clientCertificate = certs[0];\n    }\n\n    if(tls.verifyCertificateChain(c, certs)) {\n      // expect a ServerKeyExchange or ClientKeyExchange message next\n      c.expect = client ? SKE : CKE;\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerKeyExchange record.\n *\n * When this message will be sent:\n *   This message will be sent immediately after the server certificate\n *   message (or the server hello message, if this is an anonymous\n *   negotiation).\n *\n *   The server key exchange message is sent by the server only when the\n *   server certificate message (if sent) does not contain enough data to\n *   allow the client to exchange a premaster secret.\n *\n * Meaning of this message:\n *   This message conveys cryptographic information to allow the client to\n *   communicate the premaster secret: either an RSA public key to encrypt\n *   the premaster secret with, or a Diffie-Hellman public key with which the\n *   client can complete a key exchange (with the result being the premaster\n *   secret.)\n *\n * enum {\n *   dhe_dss, dhe_rsa, dh_anon, rsa, dh_dss, dh_rsa\n * } KeyExchangeAlgorithm;\n *\n * struct {\n *   opaque dh_p<1..2^16-1>;\n *   opaque dh_g<1..2^16-1>;\n *   opaque dh_Ys<1..2^16-1>;\n * } ServerDHParams;\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case dh_anon:\n *       ServerDHParams params;\n *     case dhe_dss:\n *     case dhe_rsa:\n *       ServerDHParams params;\n *       digitally-signed struct {\n *         opaque client_random[32];\n *         opaque server_random[32];\n *         ServerDHParams params;\n *       } signed_params;\n *     case rsa:\n *     case dh_dss:\n *     case dh_rsa:\n *       struct {};\n *   };\n * } ServerKeyExchange;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length > 0 is invalid\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  // expect an optional CertificateRequest message next\n  c.expect = SCR;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ClientKeyExchange record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length < 48 is invalid\n  if(length < 48) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    enc_pre_master_secret: readVector(b, 2).getBytes()\n  };\n\n  // do rsa decryption\n  var privateKey = null;\n  if(c.getPrivateKey) {\n    try {\n      privateKey = c.getPrivateKey(c, c.session.serverCertificate);\n      privateKey = forge.pki.privateKeyFromPem(privateKey);\n    } catch(ex) {\n      c.error(c, {\n        message: 'Could not get private key.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n  }\n\n  if(privateKey === null) {\n    return c.error(c, {\n      message: 'No private key set.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.internal_error\n      }\n    });\n  }\n\n  try {\n    // decrypt 48-byte pre-master secret\n    var sp = c.session.sp;\n    sp.pre_master_secret = privateKey.decrypt(msg.enc_pre_master_secret);\n\n    // ensure client hello version matches first 2 bytes\n    var version = c.session.clientHelloVersion;\n    if(version.major !== sp.pre_master_secret.charCodeAt(0) ||\n      version.minor !== sp.pre_master_secret.charCodeAt(1)) {\n      // error, do not send alert (see BLEI attack below)\n      throw new Error('TLS version rollback attack detected.');\n    }\n  } catch(ex) {\n    /* Note: Daniel Bleichenbacher [BLEI] can be used to attack a\n      TLS server which is using PKCS#1 encoded RSA, so instead of\n      failing here, we generate 48 random bytes and use that as\n      the pre-master secret. */\n    sp.pre_master_secret = forge.random.getBytes(48);\n  }\n\n  // expect a CertificateVerify message if a Certificate was received that\n  // does not have fixed Diffie-Hellman params, otherwise expect\n  // ChangeCipherSpec\n  c.expect = CCC;\n  if(c.session.clientCertificate !== null) {\n    // only RSA support, so expect CertificateVerify\n    // TODO: support Diffie-Hellman\n    c.expect = CCV;\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a CertificateRequest record.\n *\n * When this message will be sent:\n *   A non-anonymous server can optionally request a certificate from the\n *   client, if appropriate for the selected cipher suite. This message, if\n *   sent, will immediately follow the Server Key Exchange message (if it is\n *   sent; otherwise, the Server Certificate message).\n *\n * enum {\n *   rsa_sign(1), dss_sign(2), rsa_fixed_dh(3), dss_fixed_dh(4),\n *   rsa_ephemeral_dh_RESERVED(5), dss_ephemeral_dh_RESERVED(6),\n *   fortezza_dms_RESERVED(20), (255)\n * } ClientCertificateType;\n *\n * opaque DistinguishedName<1..2^16-1>;\n *\n * struct {\n *   ClientCertificateType certificate_types<1..2^8-1>;\n *   SignatureAndHashAlgorithm supported_signature_algorithms<2^16-1>;\n *   DistinguishedName certificate_authorities<0..2^16-1>;\n * } CertificateRequest;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateRequest = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid CertificateRequest. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // TODO: TLS 1.2+ has different format including\n  // SignatureAndHashAlgorithm after cert types\n  var b = record.fragment;\n  var msg = {\n    certificate_types: readVector(b, 1),\n    certificate_authorities: readVector(b, 2)\n  };\n\n  // save certificate request in session\n  c.session.certificateRequest = msg;\n\n  // expect a ServerHelloDone message next\n  c.expect = SHD;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a CertificateVerify record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateVerify = function(c, record, length) {\n  if(length < 2) {\n    return c.error(c, {\n      message: 'Invalid CertificateVerify. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for CertificateVerify messages because\n  // they must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  var msg = {\n    signature: readVector(b, 2).getBytes()\n  };\n\n  // TODO: add support for DSA\n\n  // generate data to verify\n  var verify = forge.util.createBuffer();\n  verify.putBuffer(c.session.md5.digest());\n  verify.putBuffer(c.session.sha1.digest());\n  verify = verify.getBytes();\n\n  try {\n    var cert = c.session.clientCertificate;\n    /*b = forge.pki.rsa.decrypt(\n      msg.signature, cert.publicKey, true, verify.length);\n    if(b !== verify) {*/\n    if(!cert.publicKey.verify(verify, msg.signature, 'NONE')) {\n      throw new Error('CertificateVerify signature does not match.');\n    }\n\n    // digest message now that it has been handled\n    c.session.md5.update(msgBytes);\n    c.session.sha1.update(msgBytes);\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Bad signature in CertificateVerify.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.handshake_failure\n      }\n    });\n  }\n\n  // expect ChangeCipherSpec\n  c.expect = CCC;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerHelloDone record.\n *\n * When this message will be sent:\n *   The server hello done message is sent by the server to indicate the end\n *   of the server hello and associated messages. After sending this message\n *   the server will wait for a client response.\n *\n * Meaning of this message:\n *   This message means that the server is done sending messages to support\n *   the key exchange, and the client can proceed with its phase of the key\n *   exchange.\n *\n *   Upon receipt of the server hello done message the client should verify\n *   that the server provided a valid certificate if required and check that\n *   the server hello parameters are acceptable.\n *\n * struct {} ServerHelloDone;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHelloDone = function(c, record, length) {\n  // len must be 0 bytes\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid ServerHelloDone message. Invalid length.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.record_overflow\n      }\n    });\n  }\n\n  if(c.serverCertificate === null) {\n    // no server certificate was provided\n    var error = {\n      message: 'No server certificate provided. Not enough security.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.insufficient_security\n      }\n    };\n\n    // call application callback\n    var depth = 0;\n    var ret = c.verify(c, error.alert.description, depth, []);\n    if(ret !== true) {\n      // check for custom alert info\n      if(ret || ret === 0) {\n        // set custom message and alert description\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n        } else if(typeof ret === 'number') {\n          // set custom alert description\n          error.alert.description = ret;\n        }\n      }\n\n      // send error\n      return c.error(c, error);\n    }\n  }\n\n  // create client certificate message if requested\n  if(c.session.certificateRequest !== null) {\n    record = tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    });\n    tls.queue(c, record);\n  }\n\n  // create client key exchange message\n  record = tls.createRecord(c, {\n     type: tls.ContentType.handshake,\n     data: tls.createClientKeyExchange(c)\n  });\n  tls.queue(c, record);\n\n  // expect no messages until the following callback has been called\n  c.expect = SER;\n\n  // create callback to handle client signature (for client-certs)\n  var callback = function(c, signature) {\n    if(c.session.certificateRequest !== null &&\n      c.session.clientCertificate !== null) {\n      // create certificate verify message\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createCertificateVerify(c, signature)\n      }));\n    }\n\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n\n    // expect a server ChangeCipherSpec message next\n    c.expect = SCC;\n\n    // send records\n    tls.flush(c);\n\n    // continue\n    c.process();\n  };\n\n  // if there is no certificate request or no client certificate, do\n  // callback immediately\n  if(c.session.certificateRequest === null ||\n    c.session.clientCertificate === null) {\n    return callback(c, null);\n  }\n\n  // otherwise get the client signature\n  tls.getClientSignature(c, callback);\n};\n\n/**\n * Called when a ChangeCipherSpec record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleChangeCipherSpec = function(c, record) {\n  if(record.fragment.getByte() !== 0x01) {\n    return c.error(c, {\n      message: 'Invalid ChangeCipherSpec message received.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // create pending state if:\n  // 1. Resuming session in client mode OR\n  // 2. NOT resuming session in server mode\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    c.state.pending = tls.createConnectionState(c);\n  }\n\n  // change current read state to pending read state\n  c.state.current.read = c.state.pending.read;\n\n  // clear pending state if:\n  // 1. NOT resuming session in client mode OR\n  // 2. resuming a session in server mode\n  if((!c.session.resuming && client) || (c.session.resuming && !client)) {\n    c.state.pending = null;\n  }\n\n  // expect a Finished record next\n  c.expect = client ? SFI : CFI;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Finished record is received.\n *\n * When this message will be sent:\n *   A finished message is always sent immediately after a change\n *   cipher spec message to verify that the key exchange and\n *   authentication processes were successful. It is essential that a\n *   change cipher spec message be received between the other\n *   handshake messages and the Finished message.\n *\n * Meaning of this message:\n *   The finished message is the first protected with the just-\n *   negotiated algorithms, keys, and secrets. Recipients of finished\n *   messages must verify that the contents are correct.  Once a side\n *   has sent its Finished message and received and validated the\n *   Finished message from its peer, it may begin to send and receive\n *   application data over the connection.\n *\n * struct {\n *   opaque verify_data[verify_data_length];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, Hash(handshake_messages))\n *     [0..verify_data_length-1];\n *\n * finished_label\n *   For Finished messages sent by the client, the string\n *   \"client finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * verify_data_length depends on the cipher suite. If it is not specified\n * by the cipher suite, then it is 12. Versions of TLS < 1.2 always used\n * 12 bytes.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleFinished = function(c, record, length) {\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for Finished messages because they\n  // must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  // message contains only verify_data\n  var vd = record.fragment.getBytes();\n\n  // ensure verify data is correct\n  b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // set label based on entity type\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var label = client ? 'server finished' : 'client finished';\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n  if(b.getBytes() !== vd) {\n    return c.error(c, {\n      message: 'Invalid verify_data in Finished message.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.decrypt_error\n      }\n    });\n  }\n\n  // digest finished message now that it has been handled\n  c.session.md5.update(msgBytes);\n  c.session.sha1.update(msgBytes);\n\n  // resuming session as client or NOT resuming session as server\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // change current write state to pending write state, clear pending\n    c.state.current.write = c.state.pending.write;\n    c.state.pending = null;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  }\n\n  // expect application data next\n  c.expect = client ? SAD : CAD;\n\n  // handshake complete\n  c.handshaking = false;\n  ++c.handshakes;\n\n  // save access to peer certificate\n  c.peerCertificate = client ?\n    c.session.serverCertificate : c.session.clientCertificate;\n\n  // send records\n  tls.flush(c);\n\n  // now connected\n  c.isConnected = true;\n  c.connected(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when an Alert record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleAlert = function(c, record) {\n  // read alert\n  var b = record.fragment;\n  var alert = {\n    level: b.getByte(),\n    description: b.getByte()\n  };\n\n  // TODO: consider using a table?\n  // get appropriate message\n  var msg;\n  switch(alert.description) {\n  case tls.Alert.Description.close_notify:\n    msg = 'Connection closed.';\n    break;\n  case tls.Alert.Description.unexpected_message:\n    msg = 'Unexpected message.';\n    break;\n  case tls.Alert.Description.bad_record_mac:\n    msg = 'Bad record MAC.';\n    break;\n  case tls.Alert.Description.decryption_failed:\n    msg = 'Decryption failed.';\n    break;\n  case tls.Alert.Description.record_overflow:\n    msg = 'Record overflow.';\n    break;\n  case tls.Alert.Description.decompression_failure:\n    msg = 'Decompression failed.';\n    break;\n  case tls.Alert.Description.handshake_failure:\n    msg = 'Handshake failure.';\n    break;\n  case tls.Alert.Description.bad_certificate:\n    msg = 'Bad certificate.';\n    break;\n  case tls.Alert.Description.unsupported_certificate:\n    msg = 'Unsupported certificate.';\n    break;\n  case tls.Alert.Description.certificate_revoked:\n    msg = 'Certificate revoked.';\n    break;\n  case tls.Alert.Description.certificate_expired:\n    msg = 'Certificate expired.';\n    break;\n  case tls.Alert.Description.certificate_unknown:\n    msg = 'Certificate unknown.';\n    break;\n  case tls.Alert.Description.illegal_parameter:\n    msg = 'Illegal parameter.';\n    break;\n  case tls.Alert.Description.unknown_ca:\n    msg = 'Unknown certificate authority.';\n    break;\n  case tls.Alert.Description.access_denied:\n    msg = 'Access denied.';\n    break;\n  case tls.Alert.Description.decode_error:\n    msg = 'Decode error.';\n    break;\n  case tls.Alert.Description.decrypt_error:\n    msg = 'Decrypt error.';\n    break;\n  case tls.Alert.Description.export_restriction:\n    msg = 'Export restriction.';\n    break;\n  case tls.Alert.Description.protocol_version:\n    msg = 'Unsupported protocol version.';\n    break;\n  case tls.Alert.Description.insufficient_security:\n    msg = 'Insufficient security.';\n    break;\n  case tls.Alert.Description.internal_error:\n    msg = 'Internal error.';\n    break;\n  case tls.Alert.Description.user_canceled:\n    msg = 'User canceled.';\n    break;\n  case tls.Alert.Description.no_renegotiation:\n    msg = 'Renegotiation not supported.';\n    break;\n  default:\n    msg = 'Unknown error.';\n    break;\n  }\n\n  // close connection on close_notify, not an error\n  if(alert.description === tls.Alert.Description.close_notify) {\n    return c.close();\n  }\n\n  // call error handler\n  c.error(c, {\n    message: msg,\n    send: false,\n    // origin is the opposite end\n    origin: (c.entity === tls.ConnectionEnd.client) ? 'server' : 'client',\n    alert: alert\n  });\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Handshake record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHandshake = function(c, record) {\n  // get the handshake type and message length\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt24();\n\n  // see if the record fragment doesn't yet contain the full message\n  if(length > b.length()) {\n    // cache the record, clear its fragment, and reset the buffer read\n    // pointer before the type and length were read\n    c.fragmented = record;\n    record.fragment = forge.util.createBuffer();\n    b.read -= 4;\n\n    // continue\n    return c.process();\n  }\n\n  // full message now available, clear cache, reset read pointer to\n  // before type and length\n  c.fragmented = null;\n  b.read -= 4;\n\n  // save the handshake bytes for digestion after handler is found\n  // (include type and length of handshake msg)\n  var bytes = b.bytes(length + 4);\n\n  // restore read pointer\n  b.read += 4;\n\n  // handle expected message\n  if(type in hsTable[c.entity][c.expect]) {\n    // initialize server session\n    if(c.entity === tls.ConnectionEnd.server && !c.open && !c.fail) {\n      c.handshaking = true;\n      c.session = {\n        version: null,\n        extensions: {\n          server_name: {\n            serverNameList: []\n          }\n        },\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        clientCertificate: null,\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n    }\n\n    /* Update handshake messages digest. Finished and CertificateVerify\n      messages are not digested here. They can't be digested as part of\n      the verify_data that they contain. These messages are manually\n      digested in their handlers. HelloRequest messages are simply never\n      included in the handshake message digest according to spec. */\n    if(type !== tls.HandshakeType.hello_request &&\n      type !== tls.HandshakeType.certificate_verify &&\n      type !== tls.HandshakeType.finished) {\n      c.session.md5.update(bytes);\n      c.session.sha1.update(bytes);\n    }\n\n    // handle specific handshake type record\n    hsTable[c.entity][c.expect][type](c, record, length);\n  } else {\n    // unexpected record\n    tls.handleUnexpected(c, record);\n  }\n};\n\n/**\n * Called when an ApplicationData record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleApplicationData = function(c, record) {\n  // buffer data, notify that its ready\n  c.data.putBuffer(record.fragment);\n  c.dataReady(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Heartbeat record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHeartbeat = function(c, record) {\n  // get the heartbeat type and payload\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt16();\n  var payload = b.getBytes(length);\n\n  if(type === tls.HeartbeatMessageType.heartbeat_request) {\n    // discard request during handshake or if length is too large\n    if(c.handshaking || length > payload.length) {\n      // continue\n      return c.process();\n    }\n    // retransmit payload\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_response, payload)\n    }));\n    tls.flush(c);\n  } else if(type === tls.HeartbeatMessageType.heartbeat_response) {\n    // check payload against expected payload, discard heartbeat if no match\n    if(payload !== c.expectedHeartbeatPayload) {\n      // continue\n      return c.process();\n    }\n\n    // notify that a valid heartbeat was received\n    if(c.heartbeatReceived) {\n      c.heartbeatReceived(c, forge.util.createBuffer(payload));\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * The transistional state tables for receiving TLS records. It maps the\n * current TLS engine state and a received record to a function to handle the\n * record and update the state.\n *\n * For instance, if the current state is SHE, then the TLS engine is expecting\n * a ServerHello record. Once a record is received, the handler function is\n * looked up using the state SHE and the record's content type.\n *\n * The resulting function will either be an error handler or a record handler.\n * The function will take whatever action is appropriate and update the state\n * for the next record.\n *\n * The states are all based on possible server record types. Note that the\n * client will never specifically expect to receive a HelloRequest or an alert\n * from the server so there is no state that reflects this. These messages may\n * occur at any time.\n *\n * There are two tables for mapping states because there is a second tier of\n * types for handshake messages. Once a record with a content type of handshake\n * is received, the handshake record handler will look up the handshake type in\n * the secondary map to get its appropriate handler.\n *\n * Valid message orders are as follows:\n *\n * =======================FULL HANDSHAKE======================\n * Client                                               Server\n *\n * ClientHello                  -------->\n *                                                 ServerHello\n *                                                Certificate*\n *                                          ServerKeyExchange*\n *                                         CertificateRequest*\n *                              <--------      ServerHelloDone\n * Certificate*\n * ClientKeyExchange\n * CertificateVerify*\n * [ChangeCipherSpec]\n * Finished                     -------->\n *                                          [ChangeCipherSpec]\n *                              <--------             Finished\n * Application Data             <------->     Application Data\n *\n * =====================SESSION RESUMPTION=====================\n * Client                                                Server\n *\n * ClientHello                   -------->\n *                                                  ServerHello\n *                                           [ChangeCipherSpec]\n *                               <--------             Finished\n * [ChangeCipherSpec]\n * Finished                      -------->\n * Application Data              <------->     Application Data\n */\n// client expect states (indicate which records are expected to be received)\nvar SHE = 0; // rcv server hello\nvar SCE = 1; // rcv server certificate\nvar SKE = 2; // rcv server key exchange\nvar SCR = 3; // rcv certificate request\nvar SHD = 4; // rcv server hello done\nvar SCC = 5; // rcv change cipher spec\nvar SFI = 6; // rcv finished\nvar SAD = 7; // rcv application data\nvar SER = 8; // not expecting any messages at this point\n\n// server expect states\nvar CHE = 0; // rcv client hello\nvar CCE = 1; // rcv client certificate\nvar CKE = 2; // rcv client key exchange\nvar CCV = 3; // rcv certificate verify\nvar CCC = 4; // rcv change cipher spec\nvar CFI = 5; // rcv finished\nvar CAD = 6; // rcv application data\nvar CER = 7; // not expecting any messages at this point\n\n// map client current expect state and content type to function\nvar __ = tls.handleUnexpected;\nvar R0 = tls.handleChangeCipherSpec;\nvar R1 = tls.handleAlert;\nvar R2 = tls.handleHandshake;\nvar R3 = tls.handleApplicationData;\nvar R4 = tls.handleHeartbeat;\nvar ctTable = [];\nctTable[tls.ConnectionEnd.client] = [\n//      CC,AL,HS,AD,HB\n/*SHE*/[__,R1,R2,__,R4],\n/*SCE*/[__,R1,R2,__,R4],\n/*SKE*/[__,R1,R2,__,R4],\n/*SCR*/[__,R1,R2,__,R4],\n/*SHD*/[__,R1,R2,__,R4],\n/*SCC*/[R0,R1,__,__,R4],\n/*SFI*/[__,R1,R2,__,R4],\n/*SAD*/[__,R1,R2,R3,R4],\n/*SER*/[__,R1,R2,__,R4]\n];\n\n// map server current expect state and content type to function\nctTable[tls.ConnectionEnd.server] = [\n//      CC,AL,HS,AD\n/*CHE*/[__,R1,R2,__,R4],\n/*CCE*/[__,R1,R2,__,R4],\n/*CKE*/[__,R1,R2,__,R4],\n/*CCV*/[__,R1,R2,__,R4],\n/*CCC*/[R0,R1,__,__,R4],\n/*CFI*/[__,R1,R2,__,R4],\n/*CAD*/[__,R1,R2,R3,R4],\n/*CER*/[__,R1,R2,__,R4]\n];\n\n// map client current expect state and handshake type to function\nvar H0 = tls.handleHelloRequest;\nvar H1 = tls.handleServerHello;\nvar H2 = tls.handleCertificate;\nvar H3 = tls.handleServerKeyExchange;\nvar H4 = tls.handleCertificateRequest;\nvar H5 = tls.handleServerHelloDone;\nvar H6 = tls.handleFinished;\nvar hsTable = [];\nhsTable[tls.ConnectionEnd.client] = [\n//      HR,01,SH,03,04,05,06,07,08,09,10,SC,SK,CR,HD,15,CK,17,18,19,FI\n/*SHE*/[__,__,H1,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SCE*/[H0,__,__,__,__,__,__,__,__,__,__,H2,H3,H4,H5,__,__,__,__,__,__],\n/*SKE*/[H0,__,__,__,__,__,__,__,__,__,__,__,H3,H4,H5,__,__,__,__,__,__],\n/*SCR*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,H4,H5,__,__,__,__,__,__],\n/*SHD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,H5,__,__,__,__,__,__],\n/*SCC*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SFI*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*SAD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SER*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n// map server current expect state and handshake type to function\n// Note: CAD[CH] does not map to FB because renegotation is prohibited\nvar H7 = tls.handleClientHello;\nvar H8 = tls.handleClientKeyExchange;\nvar H9 = tls.handleCertificateVerify;\nhsTable[tls.ConnectionEnd.server] = [\n//      01,CH,02,03,04,05,06,07,08,09,10,CC,12,13,14,CV,CK,17,18,19,FI\n/*CHE*/[__,H7,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CCE*/[__,__,__,__,__,__,__,__,__,__,__,H2,__,__,__,__,__,__,__,__,__],\n/*CKE*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H8,__,__,__,__],\n/*CCV*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H9,__,__,__,__,__],\n/*CCC*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CFI*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*CAD*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CER*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n/**\n * Generates the master_secret and keys using the given security parameters.\n *\n * The security parameters for a TLS connection state are defined as such:\n *\n * struct {\n *   ConnectionEnd          entity;\n *   PRFAlgorithm           prf_algorithm;\n *   BulkCipherAlgorithm    bulk_cipher_algorithm;\n *   CipherType             cipher_type;\n *   uint8                  enc_key_length;\n *   uint8                  block_length;\n *   uint8                  fixed_iv_length;\n *   uint8                  record_iv_length;\n *   MACAlgorithm           mac_algorithm;\n *   uint8                  mac_length;\n *   uint8                  mac_key_length;\n *   CompressionMethod      compression_algorithm;\n *   opaque                 master_secret[48];\n *   opaque                 client_random[32];\n *   opaque                 server_random[32];\n * } SecurityParameters;\n *\n * Note that this definition is from TLS 1.2. In TLS 1.0 some of these\n * parameters are ignored because, for instance, the PRFAlgorithm is a\n * builtin-fixed algorithm combining iterations of MD5 and SHA-1 in TLS 1.0.\n *\n * The Record Protocol requires an algorithm to generate keys required by the\n * current connection state.\n *\n * The master secret is expanded into a sequence of secure bytes, which is then\n * split to a client write MAC key, a server write MAC key, a client write\n * encryption key, and a server write encryption key. In TLS 1.0 a client write\n * IV and server write IV are also generated. Each of these is generated from\n * the byte sequence in that order. Unused values are empty. In TLS 1.2, some\n * AEAD ciphers may additionally require a client write IV and a server write\n * IV (see Section 6.2.3.3).\n *\n * When keys, MAC keys, and IVs are generated, the master secret is used as an\n * entropy source.\n *\n * To generate the key material, compute:\n *\n * master_secret = PRF(pre_master_secret, \"master secret\",\n *                     ClientHello.random + ServerHello.random)\n *\n * key_block = PRF(SecurityParameters.master_secret,\n *                 \"key expansion\",\n *                 SecurityParameters.server_random +\n *                 SecurityParameters.client_random);\n *\n * until enough output has been generated. Then, the key_block is\n * partitioned as follows:\n *\n * client_write_MAC_key[SecurityParameters.mac_key_length]\n * server_write_MAC_key[SecurityParameters.mac_key_length]\n * client_write_key[SecurityParameters.enc_key_length]\n * server_write_key[SecurityParameters.enc_key_length]\n * client_write_IV[SecurityParameters.fixed_iv_length]\n * server_write_IV[SecurityParameters.fixed_iv_length]\n *\n * In TLS 1.2, the client_write_IV and server_write_IV are only generated for\n * implicit nonce techniques as described in Section 3.2.1 of [AEAD]. This\n * implementation uses TLS 1.0 so IVs are generated.\n *\n * Implementation note: The currently defined cipher suite which requires the\n * most material is AES_256_CBC_SHA256. It requires 2 x 32 byte keys and 2 x 32\n * byte MAC keys, for a total 128 bytes of key material. In TLS 1.0 it also\n * requires 2 x 16 byte IVs, so it actually takes 160 bytes of key material.\n *\n * @param c the connection.\n * @param sp the security parameters to use.\n *\n * @return the security keys.\n */\ntls.generateKeys = function(c, sp) {\n  // TLS_RSA_WITH_AES_128_CBC_SHA (required to be compliant with TLS 1.2) &\n  // TLS_RSA_WITH_AES_256_CBC_SHA are the only cipher suites implemented\n  // at present\n\n  // TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA is required to be compliant with\n  // TLS 1.0 but we don't care right now because AES is better and we have\n  // an implementation for it\n\n  // TODO: TLS 1.2 implementation\n  /*\n  // determine the PRF\n  var prf;\n  switch(sp.prf_algorithm) {\n  case tls.PRFAlgorithm.tls_prf_sha256:\n    prf = prf_sha256;\n    break;\n  default:\n    // should never happen\n    throw new Error('Invalid PRF');\n  }\n  */\n\n  // TLS 1.0/1.1 implementation\n  var prf = prf_TLS1;\n\n  // concatenate server and client random\n  var random = sp.client_random + sp.server_random;\n\n  // only create master secret if session is new\n  if(!c.session.resuming) {\n    // create master secret, clean up pre-master secret\n    sp.master_secret = prf(\n      sp.pre_master_secret, 'master secret', random, 48).bytes();\n    sp.pre_master_secret = null;\n  }\n\n  // generate the amount of key material needed\n  random = sp.server_random + sp.client_random;\n  var length = 2 * sp.mac_key_length + 2 * sp.enc_key_length;\n\n  // include IV for TLS/1.0\n  var tls10 = (c.version.major === tls.Versions.TLS_1_0.major &&\n    c.version.minor === tls.Versions.TLS_1_0.minor);\n  if(tls10) {\n    length += 2 * sp.fixed_iv_length;\n  }\n  var km = prf(sp.master_secret, 'key expansion', random, length);\n\n  // split the key material into the MAC and encryption keys\n  var rval = {\n    client_write_MAC_key: km.getBytes(sp.mac_key_length),\n    server_write_MAC_key: km.getBytes(sp.mac_key_length),\n    client_write_key: km.getBytes(sp.enc_key_length),\n    server_write_key: km.getBytes(sp.enc_key_length)\n  };\n\n  // include TLS 1.0 IVs\n  if(tls10) {\n    rval.client_write_IV = km.getBytes(sp.fixed_iv_length);\n    rval.server_write_IV = km.getBytes(sp.fixed_iv_length);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new initialized TLS connection state. A connection state has\n * a read mode and a write mode.\n *\n * compression state:\n *   The current state of the compression algorithm.\n *\n * cipher state:\n *   The current state of the encryption algorithm. This will consist of the\n *   scheduled key for that connection. For stream ciphers, this will also\n *   contain whatever state information is necessary to allow the stream to\n *   continue to encrypt or decrypt data.\n *\n * MAC key:\n *   The MAC key for the connection.\n *\n * sequence number:\n *   Each connection state contains a sequence number, which is maintained\n *   separately for read and write states. The sequence number MUST be set to\n *   zero whenever a connection state is made the active state. Sequence\n *   numbers are of type uint64 and may not exceed 2^64-1. Sequence numbers do\n *   not wrap. If a TLS implementation would need to wrap a sequence number,\n *   it must renegotiate instead. A sequence number is incremented after each\n *   record: specifically, the first record transmitted under a particular\n *   connection state MUST use sequence number 0.\n *\n * @param c the connection.\n *\n * @return the new initialized TLS connection state.\n */\ntls.createConnectionState = function(c) {\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  var createMode = function() {\n    var mode = {\n      // two 32-bit numbers, first is most significant\n      sequenceNumber: [0, 0],\n      macKey: null,\n      macLength: 0,\n      macFunction: null,\n      cipherState: null,\n      cipherFunction: function(record) {return true;},\n      compressionState: null,\n      compressFunction: function(record) {return true;},\n      updateSequenceNumber: function() {\n        if(mode.sequenceNumber[1] === 0xFFFFFFFF) {\n          mode.sequenceNumber[1] = 0;\n          ++mode.sequenceNumber[0];\n        } else {\n          ++mode.sequenceNumber[1];\n        }\n      }\n    };\n    return mode;\n  };\n  var state = {\n    read: createMode(),\n    write: createMode()\n  };\n\n  // update function in read mode will decrypt then decompress a record\n  state.read.update = function(c, record) {\n    if(!state.read.cipherFunction(record, state.read)) {\n      c.error(c, {\n        message: 'Could not decrypt record or bad MAC.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          // doesn't matter if decryption failed or MAC was\n          // invalid, return the same error so as not to reveal\n          // which one occurred\n          description: tls.Alert.Description.bad_record_mac\n        }\n      });\n    } else if(!state.read.compressFunction(c, record, state.read)) {\n      c.error(c, {\n        message: 'Could not decompress record.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.decompression_failure\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // update function in write mode will compress then encrypt a record\n  state.write.update = function(c, record) {\n    if(!state.write.compressFunction(c, record, state.write)) {\n      // error, but do not send alert since it would require\n      // compression as well\n      c.error(c, {\n        message: 'Could not compress record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else if(!state.write.cipherFunction(record, state.write)) {\n      // error, but do not send alert since it would require\n      // encryption as well\n      c.error(c, {\n        message: 'Could not encrypt record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // handle security parameters\n  if(c.session) {\n    var sp = c.session.sp;\n    c.session.cipherSuite.initSecurityParameters(sp);\n\n    // generate keys\n    sp.keys = tls.generateKeys(c, sp);\n    state.read.macKey = client ?\n      sp.keys.server_write_MAC_key : sp.keys.client_write_MAC_key;\n    state.write.macKey = client ?\n      sp.keys.client_write_MAC_key : sp.keys.server_write_MAC_key;\n\n    // cipher suite setup\n    c.session.cipherSuite.initConnectionState(state, c, sp);\n\n    // compression setup\n    switch(sp.compression_algorithm) {\n    case tls.CompressionMethod.none:\n      break;\n    case tls.CompressionMethod.deflate:\n      state.read.compressFunction = inflate;\n      state.write.compressFunction = deflate;\n      break;\n    default:\n      throw new Error('Unsupported compression algorithm.');\n    }\n  }\n\n  return state;\n};\n\n/**\n * Creates a Random structure.\n *\n * struct {\n *   uint32 gmt_unix_time;\n *   opaque random_bytes[28];\n * } Random;\n *\n * gmt_unix_time:\n *   The current time and date in standard UNIX 32-bit format (seconds since\n *   the midnight starting Jan 1, 1970, UTC, ignoring leap seconds) according\n *   to the sender's internal clock. Clocks are not required to be set\n *   correctly by the basic TLS protocol; higher-level or application\n *   protocols may define additional requirements. Note that, for historical\n *   reasons, the data element is named using GMT, the predecessor of the\n *   current worldwide time base, UTC.\n * random_bytes:\n *   28 bytes generated by a secure random number generator.\n *\n * @return the Random structure as a byte array.\n */\ntls.createRandom = function() {\n  // get UTC milliseconds\n  var d = new Date();\n  var utc = +d + d.getTimezoneOffset() * 60000;\n  var rval = forge.util.createBuffer();\n  rval.putInt32(utc);\n  rval.putBytes(forge.random.getBytes(28));\n  return rval;\n};\n\n/**\n * Creates a TLS record with the given type and data.\n *\n * @param c the connection.\n * @param options:\n *   type: the record type.\n *   data: the plain text data in a byte buffer.\n *\n * @return the created record.\n */\ntls.createRecord = function(c, options) {\n  if(!options.data) {\n    return null;\n  }\n  var record = {\n    type: options.type,\n    version: {\n      major: c.version.major,\n      minor: c.version.minor\n    },\n    length: options.data.length(),\n    fragment: options.data\n  };\n  return record;\n};\n\n/**\n * Creates a TLS alert record.\n *\n * @param c the connection.\n * @param alert:\n *   level: the TLS alert level.\n *   description: the TLS alert description.\n *\n * @return the created alert record.\n */\ntls.createAlert = function(c, alert) {\n  var b = forge.util.createBuffer();\n  b.putByte(alert.level);\n  b.putByte(alert.description);\n  return tls.createRecord(c, {\n    type: tls.ContentType.alert,\n    data: b\n  });\n};\n\n/* The structure of a TLS handshake message.\n *\n * struct {\n *    HandshakeType msg_type;    // handshake type\n *    uint24 length;             // bytes in message\n *    select(HandshakeType) {\n *       case hello_request:       HelloRequest;\n *       case client_hello:        ClientHello;\n *       case server_hello:        ServerHello;\n *       case certificate:         Certificate;\n *       case server_key_exchange: ServerKeyExchange;\n *       case certificate_request: CertificateRequest;\n *       case server_hello_done:   ServerHelloDone;\n *       case certificate_verify:  CertificateVerify;\n *       case client_key_exchange: ClientKeyExchange;\n *       case finished:            Finished;\n *    } body;\n * } Handshake;\n */\n\n/**\n * Creates a ClientHello message.\n *\n * opaque SessionID<0..32>;\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n * uint8 CipherSuite[2];\n *\n * struct {\n *   ProtocolVersion client_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suites<2..2^16-2>;\n *   CompressionMethod compression_methods<1..2^8-1>;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ClientHello;\n *\n * The extension format for extended client hellos and server hellos is:\n *\n * struct {\n *   ExtensionType extension_type;\n *   opaque extension_data<0..2^16-1>;\n * } Extension;\n *\n * Here:\n *\n * - \"extension_type\" identifies the particular extension type.\n * - \"extension_data\" contains information specific to the particular\n * extension type.\n *\n * The extension types defined in this document are:\n *\n * enum {\n *   server_name(0), max_fragment_length(1),\n *   client_certificate_url(2), trusted_ca_keys(3),\n *   truncated_hmac(4), status_request(5), (65535)\n * } ExtensionType;\n *\n * @param c the connection.\n *\n * @return the ClientHello byte buffer.\n */\ntls.createClientHello = function(c) {\n  // save hello version\n  c.session.clientHelloVersion = {\n    major: c.version.major,\n    minor: c.version.minor\n  };\n\n  // create supported cipher suites\n  var cipherSuites = forge.util.createBuffer();\n  for(var i = 0; i < c.cipherSuites.length; ++i) {\n    var cs = c.cipherSuites[i];\n    cipherSuites.putByte(cs.id[0]);\n    cipherSuites.putByte(cs.id[1]);\n  }\n  var cSuites = cipherSuites.length();\n\n  // create supported compression methods, null always supported, but\n  // also support deflate if connection has inflate and deflate methods\n  var compressionMethods = forge.util.createBuffer();\n  compressionMethods.putByte(tls.CompressionMethod.none);\n  // FIXME: deflate support disabled until issues with raw deflate data\n  // without zlib headers are resolved\n  /*\n  if(c.inflate !== null && c.deflate !== null) {\n    compressionMethods.putByte(tls.CompressionMethod.deflate);\n  }\n  */\n  var cMethods = compressionMethods.length();\n\n  // create TLS SNI (server name indication) extension if virtual host\n  // has been specified, see RFC 3546\n  var extensions = forge.util.createBuffer();\n  if(c.virtualHost) {\n    // create extension struct\n    var ext = forge.util.createBuffer();\n    ext.putByte(0x00); // type server_name (ExtensionType is 2 bytes)\n    ext.putByte(0x00);\n\n    /* In order to provide the server name, clients MAY include an\n     * extension of type \"server_name\" in the (extended) client hello.\n     * The \"extension_data\" field of this extension SHALL contain\n     * \"ServerNameList\" where:\n     *\n     * struct {\n     *   NameType name_type;\n     *   select(name_type) {\n     *     case host_name: HostName;\n     *   } name;\n     * } ServerName;\n     *\n     * enum {\n     *   host_name(0), (255)\n     * } NameType;\n     *\n     * opaque HostName<1..2^16-1>;\n     *\n     * struct {\n     *   ServerName server_name_list<1..2^16-1>\n     * } ServerNameList;\n     */\n    var serverName = forge.util.createBuffer();\n    serverName.putByte(0x00); // type host_name\n    writeVector(serverName, 2, forge.util.createBuffer(c.virtualHost));\n\n    // ServerNameList is in extension_data\n    var snList = forge.util.createBuffer();\n    writeVector(snList, 2, serverName);\n    writeVector(ext, 2, snList);\n    extensions.putBuffer(ext);\n  }\n  var extLength = extensions.length();\n  if(extLength > 0) {\n    // add extension vector length\n    extLength += 2;\n  }\n\n  // determine length of the handshake message\n  // cipher suites and compression methods size will need to be\n  // updated if more get added to the list\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 + cSuites +          // cipher suites vector\n    1 + cMethods +         // compression methods vector\n    extLength;             // extensions vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.client_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  writeVector(rval, 2, cipherSuites);\n  writeVector(rval, 1, compressionMethods);\n  if(extLength > 0) {\n    writeVector(rval, 2, extensions);\n  }\n  return rval;\n};\n\n/**\n * Creates a ServerHello message.\n *\n * @param c the connection.\n *\n * @return the ServerHello byte buffer.\n */\ntls.createServerHello = function(c) {\n  // determine length of the handshake message\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 +                    // chosen cipher suite\n    1;                     // chosen compression method\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.server_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  rval.putByte(c.session.cipherSuite.id[0]);\n  rval.putByte(c.session.cipherSuite.id[1]);\n  rval.putByte(c.session.compressionMethod);\n  return rval;\n};\n\n/**\n * Creates a Certificate message.\n *\n * When this message will be sent:\n *   This is the first message the client can send after receiving a server\n *   hello done message and the first message the server can send after\n *   sending a ServerHello. This client message is only sent if the server\n *   requests a certificate. If no suitable certificate is available, the\n *   client should send a certificate message containing no certificates. If\n *   client authentication is required by the server for the handshake to\n *   continue, it may respond with a fatal handshake failure alert.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n *\n * struct {\n *   ASN.1Cert certificate_list<0..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n *\n * @return the Certificate byte buffer.\n */\ntls.createCertificate = function(c) {\n  // TODO: check certificate request to ensure types are supported\n\n  // get a certificate (a certificate as a PEM string)\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var cert = null;\n  if(c.getCertificate) {\n    var hint;\n    if(client) {\n      hint = c.session.certificateRequest;\n    } else {\n      hint = c.session.extensions.server_name.serverNameList;\n    }\n    cert = c.getCertificate(c, hint);\n  }\n\n  // buffer to hold certificate list\n  var certList = forge.util.createBuffer();\n  if(cert !== null) {\n    try {\n      // normalize cert to a chain of certificates\n      if(!forge.util.isArray(cert)) {\n        cert = [cert];\n      }\n      var asn1 = null;\n      for(var i = 0; i < cert.length; ++i) {\n        var msg = forge.pem.decode(cert[i])[0];\n        if(msg.type !== 'CERTIFICATE' &&\n          msg.type !== 'X509 CERTIFICATE' &&\n          msg.type !== 'TRUSTED CERTIFICATE') {\n          var error = new Error('Could not convert certificate from PEM; PEM ' +\n            'header type is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or ' +\n            '\"TRUSTED CERTIFICATE\".');\n          error.headerType = msg.type;\n          throw error;\n        }\n        if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n          throw new Error('Could not convert certificate from PEM; PEM is encrypted.');\n        }\n\n        var der = forge.util.createBuffer(msg.body);\n        if(asn1 === null) {\n          asn1 = forge.asn1.fromDer(der.bytes(), false);\n        }\n\n        // certificate entry is itself a vector with 3 length bytes\n        var certBuffer = forge.util.createBuffer();\n        writeVector(certBuffer, 3, der);\n\n        // add cert vector to cert list vector\n        certList.putBuffer(certBuffer);\n      }\n\n      // save certificate\n      cert = forge.pki.certificateFromAsn1(asn1);\n      if(client) {\n        c.session.clientCertificate = cert;\n      } else {\n        c.session.serverCertificate = cert;\n      }\n    } catch(ex) {\n      return c.error(c, {\n        message: 'Could not send certificate list.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.bad_certificate\n        }\n      });\n    }\n  }\n\n  // determine length of the handshake message\n  var length = 3 + certList.length(); // cert list vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate);\n  rval.putInt24(length);\n  writeVector(rval, 3, certList);\n  return rval;\n};\n\n/**\n * Creates a ClientKeyExchange message.\n *\n * When this message will be sent:\n *   This message is always sent by the client. It will immediately follow the\n *   client certificate message, if it is sent. Otherwise it will be the first\n *   message sent by the client after it receives the server hello done\n *   message.\n *\n * Meaning of this message:\n *   With this message, the premaster secret is set, either though direct\n *   transmission of the RSA-encrypted secret, or by the transmission of\n *   Diffie-Hellman parameters which will allow each side to agree upon the\n *   same premaster secret. When the key exchange method is DH_RSA or DH_DSS,\n *   client certification has been requested, and the client was able to\n *   respond with a certificate which contained a Diffie-Hellman public key\n *   whose parameters (group and generator) matched those specified by the\n *   server in its certificate, this message will not contain any data.\n *\n * Meaning of this message:\n *   If RSA is being used for key agreement and authentication, the client\n *   generates a 48-byte premaster secret, encrypts it using the public key\n *   from the server's certificate or the temporary RSA key provided in a\n *   server key exchange message, and sends the result in an encrypted\n *   premaster secret message. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case rsa: EncryptedPreMasterSecret;\n *     case diffie_hellman: ClientDiffieHellmanPublic;\n *   } exchange_keys;\n * } ClientKeyExchange;\n *\n * struct {\n *   ProtocolVersion client_version;\n *   opaque random[46];\n * } PreMasterSecret;\n *\n * struct {\n *   public-key-encrypted PreMasterSecret pre_master_secret;\n * } EncryptedPreMasterSecret;\n *\n * A public-key-encrypted element is encoded as a vector <0..2^16-1>.\n *\n * @param c the connection.\n *\n * @return the ClientKeyExchange byte buffer.\n */\ntls.createClientKeyExchange = function(c) {\n  // create buffer to encrypt\n  var b = forge.util.createBuffer();\n\n  // add highest client-supported protocol to help server avoid version\n  // rollback attacks\n  b.putByte(c.session.clientHelloVersion.major);\n  b.putByte(c.session.clientHelloVersion.minor);\n\n  // generate and add 46 random bytes\n  b.putBytes(forge.random.getBytes(46));\n\n  // save pre-master secret\n  var sp = c.session.sp;\n  sp.pre_master_secret = b.getBytes();\n\n  // RSA-encrypt the pre-master secret\n  var key = c.session.serverCertificate.publicKey;\n  b = key.encrypt(sp.pre_master_secret);\n\n  /* Note: The encrypted pre-master secret will be stored in a\n    public-key-encrypted opaque vector that has the length prefixed using\n    2 bytes, so include those 2 bytes in the handshake message length. This\n    is done as a minor optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = b.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_key_exchange);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(b.length);\n  rval.putBytes(b);\n  return rval;\n};\n\n/**\n * Creates a ServerKeyExchange message.\n *\n * @param c the connection.\n *\n * @return the ServerKeyExchange byte buffer.\n */\ntls.createServerKeyExchange = function(c) {\n  // this implementation only supports RSA, no Diffie-Hellman support,\n  // so this record is empty\n\n  // determine length of the handshake message\n  var length = 0;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  if(length > 0) {\n    rval.putByte(tls.HandshakeType.server_key_exchange);\n    rval.putInt24(length);\n  }\n  return rval;\n};\n\n/**\n * Gets the signed data used to verify a client-side certificate. See\n * tls.createCertificateVerify() for details.\n *\n * @param c the connection.\n * @param callback the callback to call once the signed data is ready.\n */\ntls.getClientSignature = function(c, callback) {\n  // generate data to RSA encrypt\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n  b = b.getBytes();\n\n  // create default signing function as necessary\n  c.getSignature = c.getSignature || function(c, b, callback) {\n    // do rsa encryption, call callback\n    var privateKey = null;\n    if(c.getPrivateKey) {\n      try {\n        privateKey = c.getPrivateKey(c, c.session.clientCertificate);\n        privateKey = forge.pki.privateKeyFromPem(privateKey);\n      } catch(ex) {\n        c.error(c, {\n          message: 'Could not get private key.',\n          cause: ex,\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.internal_error\n          }\n        });\n      }\n    }\n    if(privateKey === null) {\n      c.error(c, {\n        message: 'No private key set.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else {\n      b = privateKey.sign(b, null);\n    }\n    callback(c, b);\n  };\n\n  // get client signature\n  c.getSignature(c, b, callback);\n};\n\n/**\n * Creates a CertificateVerify message.\n *\n * Meaning of this message:\n *   This structure conveys the client's Diffie-Hellman public value\n *   (Yc) if it was not already included in the client's certificate.\n *   The encoding used for Yc is determined by the enumerated\n *   PublicValueEncoding. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * When this message will be sent:\n *   This message is used to provide explicit verification of a client\n *   certificate. This message is only sent following a client\n *   certificate that has signing capability (i.e. all certificates\n *   except those containing fixed Diffie-Hellman parameters). When\n *   sent, it will immediately follow the client key exchange message.\n *\n * struct {\n *   Signature signature;\n * } CertificateVerify;\n *\n * CertificateVerify.signature.md5_hash\n *   MD5(handshake_messages);\n *\n * Certificate.signature.sha_hash\n *   SHA(handshake_messages);\n *\n * Here handshake_messages refers to all handshake messages sent or\n * received starting at client hello up to but not including this\n * message, including the type and length fields of the handshake\n * messages.\n *\n * select(SignatureAlgorithm) {\n *   case anonymous: struct { };\n *   case rsa:\n *     digitally-signed struct {\n *       opaque md5_hash[16];\n *       opaque sha_hash[20];\n *     };\n *   case dsa:\n *     digitally-signed struct {\n *       opaque sha_hash[20];\n *     };\n * } Signature;\n *\n * In digital signing, one-way hash functions are used as input for a\n * signing algorithm. A digitally-signed element is encoded as an opaque\n * vector <0..2^16-1>, where the length is specified by the signing\n * algorithm and key.\n *\n * In RSA signing, a 36-byte structure of two hashes (one SHA and one\n * MD5) is signed (encrypted with the private key). It is encoded with\n * PKCS #1 block type 0 or type 1 as described in [PKCS1].\n *\n * In DSS, the 20 bytes of the SHA hash are run directly through the\n * Digital Signing Algorithm with no additional hashing.\n *\n * @param c the connection.\n * @param signature the signature to include in the message.\n *\n * @return the CertificateVerify byte buffer.\n */\ntls.createCertificateVerify = function(c, signature) {\n  /* Note: The signature will be stored in a \"digitally-signed\" opaque\n    vector that has the length prefixed using 2 bytes, so include those\n    2 bytes in the handshake message length. This is done as a minor\n    optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = signature.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_verify);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(signature.length);\n  rval.putBytes(signature);\n  return rval;\n};\n\n/**\n * Creates a CertificateRequest message.\n *\n * @param c the connection.\n *\n * @return the CertificateRequest byte buffer.\n */\ntls.createCertificateRequest = function(c) {\n  // TODO: support other certificate types\n  var certTypes = forge.util.createBuffer();\n\n  // common RSA certificate type\n  certTypes.putByte(0x01);\n\n  // add distinguished names from CA store\n  var cAs = forge.util.createBuffer();\n  for(var key in c.caStore.certs) {\n    var cert = c.caStore.certs[key];\n    var dn = forge.pki.distinguishedNameToAsn1(cert.subject);\n    var byteBuffer = forge.asn1.toDer(dn);\n    cAs.putInt16(byteBuffer.length());\n    cAs.putBuffer(byteBuffer);\n  }\n\n  // TODO: TLS 1.2+ has a different format\n\n  // determine length of the handshake message\n  var length =\n    1 + certTypes.length() +\n    2 + cAs.length();\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_request);\n  rval.putInt24(length);\n  writeVector(rval, 1, certTypes);\n  writeVector(rval, 2, cAs);\n  return rval;\n};\n\n/**\n * Creates a ServerHelloDone message.\n *\n * @param c the connection.\n *\n * @return the ServerHelloDone byte buffer.\n */\ntls.createServerHelloDone = function(c) {\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello_done);\n  rval.putInt24(0);\n  return rval;\n};\n\n/**\n * Creates a ChangeCipherSpec message.\n *\n * The change cipher spec protocol exists to signal transitions in\n * ciphering strategies. The protocol consists of a single message,\n * which is encrypted and compressed under the current (not the pending)\n * connection state. The message consists of a single byte of value 1.\n *\n * struct {\n *   enum { change_cipher_spec(1), (255) } type;\n * } ChangeCipherSpec;\n *\n * @return the ChangeCipherSpec byte buffer.\n */\ntls.createChangeCipherSpec = function() {\n  var rval = forge.util.createBuffer();\n  rval.putByte(0x01);\n  return rval;\n};\n\n/**\n * Creates a Finished message.\n *\n * struct {\n *   opaque verify_data[12];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, MD5(handshake_messages) +\n *   SHA-1(handshake_messages)) [0..11];\n *\n * finished_label\n *   For Finished messages sent by the client, the string \"client\n *   finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * handshake_messages\n *   All of the data from all handshake messages up to but not\n *   including this message. This is only data visible at the\n *   handshake layer and does not include record layer headers.\n *   This is the concatenation of all the Handshake structures as\n *   defined in 7.4 exchanged thus far.\n *\n * @param c the connection.\n *\n * @return the Finished byte buffer.\n */\ntls.createFinished = function(c) {\n  // generate verify_data\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  var label = client ? 'client finished' : 'server finished';\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.finished);\n  rval.putInt24(b.length());\n  rval.putBuffer(b);\n  return rval;\n};\n\n/**\n * Creates a HeartbeatMessage (See RFC 6520).\n *\n * struct {\n *   HeartbeatMessageType type;\n *   uint16 payload_length;\n *   opaque payload[HeartbeatMessage.payload_length];\n *   opaque padding[padding_length];\n * } HeartbeatMessage;\n *\n * The total length of a HeartbeatMessage MUST NOT exceed 2^14 or\n * max_fragment_length when negotiated as defined in [RFC6066].\n *\n * type: The message type, either heartbeat_request or heartbeat_response.\n *\n * payload_length: The length of the payload.\n *\n * payload: The payload consists of arbitrary content.\n *\n * padding: The padding is random content that MUST be ignored by the\n *   receiver. The length of a HeartbeatMessage is TLSPlaintext.length\n *   for TLS and DTLSPlaintext.length for DTLS. Furthermore, the\n *   length of the type field is 1 byte, and the length of the\n *   payload_length is 2. Therefore, the padding_length is\n *   TLSPlaintext.length - payload_length - 3 for TLS and\n *   DTLSPlaintext.length - payload_length - 3 for DTLS. The\n *   padding_length MUST be at least 16.\n *\n * The sender of a HeartbeatMessage MUST use a random padding of at\n * least 16 bytes. The padding of a received HeartbeatMessage message\n * MUST be ignored.\n *\n * If the payload_length of a received HeartbeatMessage is too large,\n * the received HeartbeatMessage MUST be discarded silently.\n *\n * @param c the connection.\n * @param type the tls.HeartbeatMessageType.\n * @param payload the heartbeat data to send as the payload.\n * @param [payloadLength] the payload length to use, defaults to the\n *          actual payload length.\n *\n * @return the HeartbeatRequest byte buffer.\n */\ntls.createHeartbeat = function(type, payload, payloadLength) {\n  if(typeof payloadLength === 'undefined') {\n    payloadLength = payload.length;\n  }\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(type);               // heartbeat message type\n  rval.putInt16(payloadLength);     // payload length\n  rval.putBytes(payload);           // payload\n  // padding\n  var plaintextLength = rval.length();\n  var paddingLength = Math.max(16, plaintextLength - payloadLength - 3);\n  rval.putBytes(forge.random.getBytes(paddingLength));\n  return rval;\n};\n\n/**\n * Fragments, compresses, encrypts, and queues a record for delivery.\n *\n * @param c the connection.\n * @param record the record to queue.\n */\ntls.queue = function(c, record) {\n  // error during record creation\n  if(!record) {\n    return;\n  }\n\n  if(record.fragment.length() === 0) {\n    if(record.type === tls.ContentType.handshake ||\n      record.type === tls.ContentType.alert ||\n      record.type === tls.ContentType.change_cipher_spec) {\n      // Empty handshake, alert of change cipher spec messages are not allowed per the TLS specification and should not be sent.\n      return;\n    }\n  }\n\n  // if the record is a handshake record, update handshake hashes\n  if(record.type === tls.ContentType.handshake) {\n    var bytes = record.fragment.bytes();\n    c.session.md5.update(bytes);\n    c.session.sha1.update(bytes);\n    bytes = null;\n  }\n\n  // handle record fragmentation\n  var records;\n  if(record.fragment.length() <= tls.MaxFragment) {\n    records = [record];\n  } else {\n    // fragment data as long as it is too long\n    records = [];\n    var data = record.fragment.bytes();\n    while(data.length > tls.MaxFragment) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data.slice(0, tls.MaxFragment))\n      }));\n      data = data.slice(tls.MaxFragment);\n    }\n    // add last record\n    if(data.length > 0) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data)\n      }));\n    }\n  }\n\n  // compress and encrypt all fragmented records\n  for(var i = 0; i < records.length && !c.fail; ++i) {\n    // update the record using current write state\n    var rec = records[i];\n    var s = c.state.current.write;\n    if(s.update(c, rec)) {\n      // store record\n      c.records.push(rec);\n    }\n  }\n};\n\n/**\n * Flushes all queued records to the output buffer and calls the\n * tlsDataReady() handler on the given connection.\n *\n * @param c the connection.\n *\n * @return true on success, false on failure.\n */\ntls.flush = function(c) {\n  for(var i = 0; i < c.records.length; ++i) {\n    var record = c.records[i];\n\n    // add record header and fragment\n    c.tlsData.putByte(record.type);\n    c.tlsData.putByte(record.version.major);\n    c.tlsData.putByte(record.version.minor);\n    c.tlsData.putInt16(record.fragment.length());\n    c.tlsData.putBuffer(c.records[i].fragment);\n  }\n  c.records = [];\n  return c.tlsDataReady(c);\n};\n\n/**\n * Maps a pki.certificateError to a tls.Alert.Description.\n *\n * @param error the error to map.\n *\n * @return the alert description.\n */\nvar _certErrorToAlertDesc = function(error) {\n  switch(error) {\n  case true:\n    return true;\n  case forge.pki.certificateError.bad_certificate:\n    return tls.Alert.Description.bad_certificate;\n  case forge.pki.certificateError.unsupported_certificate:\n    return tls.Alert.Description.unsupported_certificate;\n  case forge.pki.certificateError.certificate_revoked:\n    return tls.Alert.Description.certificate_revoked;\n  case forge.pki.certificateError.certificate_expired:\n    return tls.Alert.Description.certificate_expired;\n  case forge.pki.certificateError.certificate_unknown:\n    return tls.Alert.Description.certificate_unknown;\n  case forge.pki.certificateError.unknown_ca:\n    return tls.Alert.Description.unknown_ca;\n  default:\n    return tls.Alert.Description.bad_certificate;\n  }\n};\n\n/**\n * Maps a tls.Alert.Description to a pki.certificateError.\n *\n * @param desc the alert description.\n *\n * @return the certificate error.\n */\nvar _alertDescToCertError = function(desc) {\n  switch(desc) {\n  case true:\n    return true;\n  case tls.Alert.Description.bad_certificate:\n    return forge.pki.certificateError.bad_certificate;\n  case tls.Alert.Description.unsupported_certificate:\n    return forge.pki.certificateError.unsupported_certificate;\n  case tls.Alert.Description.certificate_revoked:\n    return forge.pki.certificateError.certificate_revoked;\n  case tls.Alert.Description.certificate_expired:\n    return forge.pki.certificateError.certificate_expired;\n  case tls.Alert.Description.certificate_unknown:\n    return forge.pki.certificateError.certificate_unknown;\n  case tls.Alert.Description.unknown_ca:\n    return forge.pki.certificateError.unknown_ca;\n  default:\n    return forge.pki.certificateError.bad_certificate;\n  }\n};\n\n/**\n * Verifies a certificate chain against the given connection's\n * Certificate Authority store.\n *\n * @param c the TLS connection.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end.\n *\n * @return true if successful, false if not.\n */\ntls.verifyCertificateChain = function(c, chain) {\n  try {\n    // Make a copy of c.verifyOptions so that we can modify options.verify\n    // without modifying c.verifyOptions.\n    var options = {};\n    for (var key in c.verifyOptions) {\n      options[key] = c.verifyOptions[key];\n    }\n\n    options.verify = function(vfd, depth, chain) {\n      // convert pki.certificateError to tls alert description\n      var desc = _certErrorToAlertDesc(vfd);\n\n      // call application callback\n      var ret = c.verify(c, vfd, depth, chain);\n      if(ret !== true) {\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          // throw custom error\n          var error = new Error('The application rejected the certificate.');\n          error.send = true;\n          error.alert = {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.bad_certificate\n          };\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n          throw error;\n        }\n\n        // convert tls alert description to pki.certificateError\n        if(ret !== vfd) {\n          ret = _alertDescToCertError(ret);\n        }\n      }\n\n      return ret;\n    };\n\n    // verify chain\n    forge.pki.verifyCertificateChain(c.caStore, chain, options);\n  } catch(ex) {\n    // build tls error if not already customized\n    var err = ex;\n    if(typeof err !== 'object' || forge.util.isArray(err)) {\n      err = {\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: _certErrorToAlertDesc(ex)\n        }\n      };\n    }\n    if(!('send' in err)) {\n      err.send = true;\n    }\n    if(!('alert' in err)) {\n      err.alert = {\n        level: tls.Alert.Level.fatal,\n        description: _certErrorToAlertDesc(err.error)\n      };\n    }\n\n    // send error\n    c.error(c, err);\n  }\n\n  return !c.fail;\n};\n\n/**\n * Creates a new TLS session cache.\n *\n * @param cache optional map of session ID to cached session.\n * @param capacity the maximum size for the cache (default: 100).\n *\n * @return the new TLS session cache.\n */\ntls.createSessionCache = function(cache, capacity) {\n  var rval = null;\n\n  // assume input is already a session cache object\n  if(cache && cache.getSession && cache.setSession && cache.order) {\n    rval = cache;\n  } else {\n    // create cache\n    rval = {};\n    rval.cache = cache || {};\n    rval.capacity = Math.max(capacity || 100, 1);\n    rval.order = [];\n\n    // store order for sessions, delete session overflow\n    for(var key in cache) {\n      if(rval.order.length <= capacity) {\n        rval.order.push(key);\n      } else {\n        delete cache[key];\n      }\n    }\n\n    // get a session from a session ID (or get any session)\n    rval.getSession = function(sessionId) {\n      var session = null;\n      var key = null;\n\n      // if session ID provided, use it\n      if(sessionId) {\n        key = forge.util.bytesToHex(sessionId);\n      } else if(rval.order.length > 0) {\n        // get first session from cache\n        key = rval.order[0];\n      }\n\n      if(key !== null && key in rval.cache) {\n        // get cached session and remove from cache\n        session = rval.cache[key];\n        delete rval.cache[key];\n        for(var i in rval.order) {\n          if(rval.order[i] === key) {\n            rval.order.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      return session;\n    };\n\n    // set a session in the cache\n    rval.setSession = function(sessionId, session) {\n      // remove session from cache if at capacity\n      if(rval.order.length === rval.capacity) {\n        var key = rval.order.shift();\n        delete rval.cache[key];\n      }\n      // add session to cache\n      var key = forge.util.bytesToHex(sessionId);\n      rval.order.push(key);\n      rval.cache[key] = session;\n    };\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new TLS connection.\n *\n * See public createConnection() docs for more details.\n *\n * @param options the options for this connection.\n *\n * @return the new TLS connection.\n */\ntls.createConnection = function(options) {\n  var caStore = null;\n  if(options.caStore) {\n    // if CA store is an array, convert it to a CA store object\n    if(forge.util.isArray(options.caStore)) {\n      caStore = forge.pki.createCaStore(options.caStore);\n    } else {\n      caStore = options.caStore;\n    }\n  } else {\n    // create empty CA store\n    caStore = forge.pki.createCaStore();\n  }\n\n  // setup default cipher suites\n  var cipherSuites = options.cipherSuites || null;\n  if(cipherSuites === null) {\n    cipherSuites = [];\n    for(var key in tls.CipherSuites) {\n      cipherSuites.push(tls.CipherSuites[key]);\n    }\n  }\n\n  // set default entity\n  var entity = (options.server || false) ?\n    tls.ConnectionEnd.server : tls.ConnectionEnd.client;\n\n  // create session cache if requested\n  var sessionCache = options.sessionCache ?\n    tls.createSessionCache(options.sessionCache) : null;\n\n  // create TLS connection\n  var c = {\n    version: {major: tls.Version.major, minor: tls.Version.minor},\n    entity: entity,\n    sessionId: options.sessionId,\n    caStore: caStore,\n    sessionCache: sessionCache,\n    cipherSuites: cipherSuites,\n    connected: options.connected,\n    virtualHost: options.virtualHost || null,\n    verifyClient: options.verifyClient || false,\n    verify: options.verify || function(cn, vfd, dpth, cts) {return vfd;},\n    verifyOptions: options.verifyOptions || {},\n    getCertificate: options.getCertificate || null,\n    getPrivateKey: options.getPrivateKey || null,\n    getSignature: options.getSignature || null,\n    input: forge.util.createBuffer(),\n    tlsData: forge.util.createBuffer(),\n    data: forge.util.createBuffer(),\n    tlsDataReady: options.tlsDataReady,\n    dataReady: options.dataReady,\n    heartbeatReceived: options.heartbeatReceived,\n    closed: options.closed,\n    error: function(c, ex) {\n      // set origin if not set\n      ex.origin = ex.origin ||\n        ((c.entity === tls.ConnectionEnd.client) ? 'client' : 'server');\n\n      // send TLS alert\n      if(ex.send) {\n        tls.queue(c, tls.createAlert(c, ex.alert));\n        tls.flush(c);\n      }\n\n      // error is fatal by default\n      var fatal = (ex.fatal !== false);\n      if(fatal) {\n        // set fail flag\n        c.fail = true;\n      }\n\n      // call error handler first\n      options.error(c, ex);\n\n      if(fatal) {\n        // fatal error, close connection, do not clear fail\n        c.close(false);\n      }\n    },\n    deflate: options.deflate || null,\n    inflate: options.inflate || null\n  };\n\n  /**\n   * Resets a closed TLS connection for reuse. Called in c.close().\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.reset = function(clearFail) {\n    c.version = {major: tls.Version.major, minor: tls.Version.minor};\n    c.record = null;\n    c.session = null;\n    c.peerCertificate = null;\n    c.state = {\n      pending: null,\n      current: null\n    };\n    c.expect = (c.entity === tls.ConnectionEnd.client) ? SHE : CHE;\n    c.fragmented = null;\n    c.records = [];\n    c.open = false;\n    c.handshakes = 0;\n    c.handshaking = false;\n    c.isConnected = false;\n    c.fail = !(clearFail || typeof(clearFail) === 'undefined');\n    c.input.clear();\n    c.tlsData.clear();\n    c.data.clear();\n    c.state.current = tls.createConnectionState(c);\n  };\n\n  // do initial reset of connection\n  c.reset();\n\n  /**\n   * Updates the current TLS engine state based on the given record.\n   *\n   * @param c the TLS connection.\n   * @param record the TLS record to act on.\n   */\n  var _update = function(c, record) {\n    // get record handler (align type in table by subtracting lowest)\n    var aligned = record.type - tls.ContentType.change_cipher_spec;\n    var handlers = ctTable[c.entity][c.expect];\n    if(aligned in handlers) {\n      handlers[aligned](c, record);\n    } else {\n      // unexpected record\n      tls.handleUnexpected(c, record);\n    }\n  };\n\n  /**\n   * Reads the record header and initializes the next record on the given\n   * connection.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecordHeader = function(c) {\n    var rval = 0;\n\n    // get input buffer and its length\n    var b = c.input;\n    var len = b.length();\n\n    // need at least 5 bytes to initialize a record\n    if(len < 5) {\n      rval = 5 - len;\n    } else {\n      // enough bytes for header\n      // initialize record\n      c.record = {\n        type: b.getByte(),\n        version: {\n          major: b.getByte(),\n          minor: b.getByte()\n        },\n        length: b.getInt16(),\n        fragment: forge.util.createBuffer(),\n        ready: false\n      };\n\n      // check record version\n      var compatibleVersion = (c.record.version.major === c.version.major);\n      if(compatibleVersion && c.session && c.session.version) {\n        // session version already set, require same minor version\n        compatibleVersion = (c.record.version.minor === c.version.minor);\n      }\n      if(!compatibleVersion) {\n        c.error(c, {\n          message: 'Incompatible TLS version.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Reads the next record's contents and appends its message to any\n   * previously fragmented message.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecord = function(c) {\n    var rval = 0;\n\n    // ensure there is enough input data to get the entire record\n    var b = c.input;\n    var len = b.length();\n    if(len < c.record.length) {\n      // not enough data yet, return how much is required\n      rval = c.record.length - len;\n    } else {\n      // there is enough data to parse the pending record\n      // fill record fragment and compact input buffer\n      c.record.fragment.putBytes(b.getBytes(c.record.length));\n      b.compact();\n\n      // update record using current read state\n      var s = c.state.current.read;\n      if(s.update(c, c.record)) {\n        // see if there is a previously fragmented message that the\n        // new record's message fragment should be appended to\n        if(c.fragmented !== null) {\n          // if the record type matches a previously fragmented\n          // record, append the record fragment to it\n          if(c.fragmented.type === c.record.type) {\n            // concatenate record fragments\n            c.fragmented.fragment.putBuffer(c.record.fragment);\n            c.record = c.fragmented;\n          } else {\n            // error, invalid fragmented record\n            c.error(c, {\n              message: 'Invalid fragmented record.',\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description:\n                  tls.Alert.Description.unexpected_message\n              }\n            });\n          }\n        }\n\n        // record is now ready\n        c.record.ready = true;\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Performs a handshake using the TLS Handshake Protocol, as a client.\n   *\n   * This method should only be called if the connection is in client mode.\n   *\n   * @param sessionId the session ID to use, null to start a new one.\n   */\n  c.handshake = function(sessionId) {\n    // error to call this in non-client mode\n    if(c.entity !== tls.ConnectionEnd.client) {\n      // not fatal error\n      c.error(c, {\n        message: 'Cannot initiate handshake as a server.',\n        fatal: false\n      });\n    } else if(c.handshaking) {\n      // handshake is already in progress, fail but not fatal error\n      c.error(c, {\n        message: 'Handshake already in progress.',\n        fatal: false\n      });\n    } else {\n      // clear fail flag on reuse\n      if(c.fail && !c.open && c.handshakes === 0) {\n        c.fail = false;\n      }\n\n      // now handshaking\n      c.handshaking = true;\n\n      // default to blank (new session)\n      sessionId = sessionId || '';\n\n      // if a session ID was specified, try to find it in the cache\n      var session = null;\n      if(sessionId.length > 0) {\n        if(c.sessionCache) {\n          session = c.sessionCache.getSession(sessionId);\n        }\n\n        // matching session not found in cache, clear session ID\n        if(session === null) {\n          sessionId = '';\n        }\n      }\n\n      // no session given, grab a session from the cache, if available\n      if(sessionId.length === 0 && c.sessionCache) {\n        session = c.sessionCache.getSession();\n        if(session !== null) {\n          sessionId = session.id;\n        }\n      }\n\n      // set up session\n      c.session = {\n        id: sessionId,\n        version: null,\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        certificateRequest: null,\n        clientCertificate: null,\n        sp: {},\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n\n      // use existing session information\n      if(session) {\n        // only update version on connection, session version not yet set\n        c.version = session.version;\n        c.session.sp = session.sp;\n      }\n\n      // generate new client random\n      c.session.sp.client_random = tls.createRandom().getBytes();\n\n      // connection now open\n      c.open = true;\n\n      // send hello\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createClientHello(c)\n      }));\n      tls.flush(c);\n    }\n  };\n\n  /**\n   * Called when TLS protocol data has been received from somewhere and should\n   * be processed by the TLS engine.\n   *\n   * @param data the TLS protocol data, as a string, to process.\n   *\n   * @return 0 if the data could be processed, otherwise the number of bytes\n   *         required for data to be processed.\n   */\n  c.process = function(data) {\n    var rval = 0;\n\n    // buffer input data\n    if(data) {\n      c.input.putBytes(data);\n    }\n\n    // process next record if no failure, process will be called after\n    // each record is handled (since handling can be asynchronous)\n    if(!c.fail) {\n      // reset record if ready and now empty\n      if(c.record !== null &&\n        c.record.ready && c.record.fragment.isEmpty()) {\n        c.record = null;\n      }\n\n      // if there is no pending record, try to read record header\n      if(c.record === null) {\n        rval = _readRecordHeader(c);\n      }\n\n      // read the next record (if record not yet ready)\n      if(!c.fail && c.record !== null && !c.record.ready) {\n        rval = _readRecord(c);\n      }\n\n      // record ready to be handled, update engine state\n      if(!c.fail && c.record !== null && c.record.ready) {\n        _update(c, c.record);\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Requests that application data be packaged into a TLS record. The\n   * tlsDataReady handler will be called when the TLS record(s) have been\n   * prepared.\n   *\n   * @param data the application data, as a raw 'binary' encoded string, to\n   *          be sent; to send utf-16/utf-8 string data, use the return value\n   *          of util.encodeUtf8(str).\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepare = function(data) {\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.application_data,\n      data: forge.util.createBuffer(data)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Requests that a heartbeat request be packaged into a TLS record for\n   * transmission. The tlsDataReady handler will be called when TLS record(s)\n   * have been prepared.\n   *\n   * When a heartbeat response has been received, the heartbeatReceived\n   * handler will be called with the matching payload. This handler can\n   * be used to clear a retransmission timer, etc.\n   *\n   * @param payload the heartbeat data to send as the payload in the message.\n   * @param [payloadLength] the payload length to use, defaults to the\n   *          actual payload length.\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepareHeartbeatRequest = function(payload, payloadLength) {\n    if(payload instanceof forge.util.ByteBuffer) {\n      payload = payload.bytes();\n    }\n    if(typeof payloadLength === 'undefined') {\n      payloadLength = payload.length;\n    }\n    c.expectedHeartbeatPayload = payload;\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_request, payload, payloadLength)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Closes the connection (sends a close_notify alert).\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.close = function(clearFail) {\n    // save session if connection didn't fail\n    if(!c.fail && c.sessionCache && c.session) {\n      // only need to preserve session ID, version, and security params\n      var session = {\n        id: c.session.id,\n        version: c.session.version,\n        sp: c.session.sp\n      };\n      session.sp.keys = null;\n      c.sessionCache.setSession(session.id, session);\n    }\n\n    if(c.open) {\n      // connection no longer open, clear input\n      c.open = false;\n      c.input.clear();\n\n      // if connected or handshaking, send an alert\n      if(c.isConnected || c.handshaking) {\n        c.isConnected = c.handshaking = false;\n\n        // send close_notify alert\n        tls.queue(c, tls.createAlert(c, {\n          level: tls.Alert.Level.warning,\n          description: tls.Alert.Description.close_notify\n        }));\n        tls.flush(c);\n      }\n\n      // call handler\n      c.closed(c);\n    }\n\n    // reset TLS connection, do not clear fail flag\n    c.reset(clearFail);\n  };\n\n  return c;\n};\n\n/* TLS API */\nmodule.exports = forge.tls = forge.tls || {};\n\n// expose non-functions\nfor(var key in tls) {\n  if(typeof tls[key] !== 'function') {\n    forge.tls[key] = tls[key];\n  }\n}\n\n// expose prf_tls1 for testing\nforge.tls.prf_tls1 = prf_TLS1;\n\n// expose sha1 hmac method\nforge.tls.hmac_sha1 = hmac_sha1;\n\n// expose session cache creation\nforge.tls.createSessionCache = tls.createSessionCache;\n\n/**\n * Creates a new TLS connection. This does not make any assumptions about the\n * transport layer that TLS is working on top of, ie: it does not assume there\n * is a TCP/IP connection or establish one. A TLS connection is totally\n * abstracted away from the layer is runs on top of, it merely establishes a\n * secure channel between a client\" and a \"server\".\n *\n * A TLS connection contains 4 connection states: pending read and write, and\n * current read and write.\n *\n * At initialization, the current read and write states will be null. Only once\n * the security parameters have been set and the keys have been generated can\n * the pending states be converted into current states. Current states will be\n * updated for each record processed.\n *\n * A custom certificate verify callback may be provided to check information\n * like the common name on the server's certificate. It will be called for\n * every certificate in the chain. It has the following signature:\n *\n * variable func(c, certs, index, preVerify)\n * Where:\n * c         The TLS connection\n * verified  Set to true if certificate was verified, otherwise the alert\n *           tls.Alert.Description for why the certificate failed.\n * depth     The current index in the chain, where 0 is the server's cert.\n * certs     The certificate chain, *NOTE* if the server was anonymous then\n *           the chain will be empty.\n *\n * The function returns true on success and on failure either the appropriate\n * tls.Alert.Description or an object with 'alert' set to the appropriate\n * tls.Alert.Description and 'message' set to a custom error message. If true\n * is not returned then the connection will abort using, in order of\n * availability, first the returned alert description, second the preVerify\n * alert description, and lastly the default 'bad_certificate'.\n *\n * There are three callbacks that can be used to make use of client-side\n * certificates where each takes the TLS connection as the first parameter:\n *\n * getCertificate(conn, hint)\n *   The second parameter is a hint as to which certificate should be\n *   returned. If the connection entity is a client, then the hint will be\n *   the CertificateRequest message from the server that is part of the\n *   TLS protocol. If the connection entity is a server, then it will be\n *   the servername list provided via an SNI extension the ClientHello, if\n *   one was provided (empty array if not). The hint can be examined to\n *   determine which certificate to use (advanced). Most implementations\n *   will just return a certificate. The return value must be a\n *   PEM-formatted certificate or an array of PEM-formatted certificates\n *   that constitute a certificate chain, with the first in the array/chain\n *   being the client's certificate.\n * getPrivateKey(conn, certificate)\n *   The second parameter is an forge.pki X.509 certificate object that\n *   is associated with the requested private key. The return value must\n *   be a PEM-formatted private key.\n * getSignature(conn, bytes, callback)\n *   This callback can be used instead of getPrivateKey if the private key\n *   is not directly accessible in javascript or should not be. For\n *   instance, a secure external web service could provide the signature\n *   in exchange for appropriate credentials. The second parameter is a\n *   string of bytes to be signed that are part of the TLS protocol. These\n *   bytes are used to verify that the private key for the previously\n *   provided client-side certificate is accessible to the client. The\n *   callback is a function that takes 2 parameters, the TLS connection\n *   and the RSA encrypted (signed) bytes as a string. This callback must\n *   be called once the signature is ready.\n *\n * @param options the options for this connection:\n *   server: true if the connection is server-side, false for client.\n *   sessionId: a session ID to reuse, null for a new connection.\n *   caStore: an array of certificates to trust.\n *   sessionCache: a session cache to use.\n *   cipherSuites: an optional array of cipher suites to use,\n *     see tls.CipherSuites.\n *   connected: function(conn) called when the first handshake completes.\n *   virtualHost: the virtual server name to use in a TLS SNI extension.\n *   verifyClient: true to require a client certificate in server mode,\n *     'optional' to request one, false not to (default: false).\n *   verify: a handler used to custom verify certificates in the chain.\n *   verifyOptions: an object with options for the certificate chain validation.\n *     See documentation of pki.verifyCertificateChain for possible options.\n *     verifyOptions.verify is ignored. If you wish to specify a verify handler\n *     use the verify key.\n *   getCertificate: an optional callback used to get a certificate or\n *     a chain of certificates (as an array).\n *   getPrivateKey: an optional callback used to get a private key.\n *   getSignature: an optional callback used to get a signature.\n *   tlsDataReady: function(conn) called when TLS protocol data has been\n *     prepared and is ready to be used (typically sent over a socket\n *     connection to its destination), read from conn.tlsData buffer.\n *   dataReady: function(conn) called when application data has\n *     been parsed from a TLS record and should be consumed by the\n *     application, read from conn.data buffer.\n *   closed: function(conn) called when the connection has been closed.\n *   error: function(conn, error) called when there was an error.\n *   deflate: function(inBytes) if provided, will deflate TLS records using\n *     the deflate algorithm if the server supports it.\n *   inflate: function(inBytes) if provided, will inflate TLS records using\n *     the deflate algorithm if the server supports it.\n *\n * @return the new TLS connection.\n */\nforge.tls.createConnection = tls.createConnection;\n","/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n","/**\n * Message Digest Algorithm 5 with 128-bit digest (MD5) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar md5 = module.exports = forge.md5 = forge.md5 || {};\nforge.md.md5 = forge.md.algorithms.md5 = md5;\n\n/**\n * Creates an MD5 message digest object.\n *\n * @return a message digest object.\n */\nmd5.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // MD5 state contains four 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(16);\n\n  // message digest object\n  var md = {\n    algorithm: 'md5',\n    blockLength: 64,\n    digestLength: 16,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = (len[1] / 0x100000000) >>> 0;\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate MD5 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in little-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry\n    var bits, carry = 0;\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      bits = md.fullMessageLength[i] * 8 + carry;\n      carry = (bits / 0x100000000) >>> 0;\n      finalBlock.putInt32Le(bits >>> 0);\n    }\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32Le(s2.h0);\n    rval.putInt32Le(s2.h1);\n    rval.putInt32Le(s2.h2);\n    rval.putInt32Le(s2.h3);\n    return rval;\n  };\n\n  return md;\n};\n\n// padding, constant tables for calculating md5\nvar _padding = null;\nvar _g = null;\nvar _r = null;\nvar _k = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // g values\n  _g = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12,\n    5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2,\n    0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9];\n\n  // rounds table\n  _r = [\n    7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,\n    5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,\n    4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,\n    6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21];\n\n  // get the result of abs(sin(i + 1)) as a 32-bit integer\n  _k = new Array(64);\n  for(var i = 0; i < 64; ++i) {\n    _k[i] = Math.floor(Math.abs(Math.sin(i + 1)) * 0x100000000);\n  }\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates an MD5 state with the given byte buffer.\n *\n * @param s the MD5 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, f, r, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32Le();\n      f = d ^ (b & (c ^ d));\n      t = (a + f + _k[i] + w[i]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      f = c ^ (d & (b ^ c));\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 3\n    for(; i < 48; ++i) {\n      f = b ^ c ^ d;\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 4\n    for(; i < 64; ++i) {\n      f = c ^ (b | ~d);\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n\n    len -= 64;\n  }\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./sha1');\n\n// shortcut for PKCS#1 API\nvar pkcs1 = module.exports = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for(var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.');\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = Buffer.from(p, 'binary');\n    s = Buffer.from(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n","/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha512 = module.exports = forge.sha512 = forge.sha512 || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // determine digest length by algorithm name (default)\n  var digestLength = 64;\n  switch(algorithm) {\n    case 'SHA-384':\n      digestLength = 48;\n      break;\n    case 'SHA-512/256':\n      digestLength = 32;\n      break;\n    case 'SHA-512/224':\n      digestLength = 28;\n      break;\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: digestLength,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n","/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\n/* HMAC API */\nvar hmac = module.exports = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n","/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter',\n      optional: true\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n","/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nmodule.exports = forge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\n\nvar forge = require('./forge');\nrequire('./asn1');\nvar asn1 = forge.asn1;\n\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  },\n  // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  }\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */\n  ]\n};\n","/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* AES API */\nmodule.exports = forge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 <= i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n  /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr-1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n  // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./jsbn');\nrequire('./oids');\nrequire('./pkcs1');\nrequire('./prime');\nrequire('./random');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar _crypto = forge.util.isNodejs ? require('crypto') : null;\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for util API\nvar util = forge.util;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n// validator for a DigestInfo structure\nvar digestInfoValidator = {\n  name: 'DigestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'DigestInfo.DigestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'DigestInfo.DigestAlgorithm.algorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'algorithmIdentifier'\n    }, {\n      // NULL paramters\n      name: 'DigestInfo.DigestAlgorithm.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.NULL,\n      // captured only to check existence for md2 and md5\n      capture: 'parameters',\n      optional: true,\n      constructed: false\n    }]\n  }, {\n    // digest\n    name: 'DigestInfo.digest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'digest'\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x, y) {return x | y;};\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n            .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *            and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\". Disables use of native APIs.\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // use native code if permitted, available, and parameters are acceptable\n  if(!forge.options.usePureJavaScript && !options.prng &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(callback) {\n      // try native async\n      if(_detectNodeCrypto('generateKeyPair')) {\n        return _crypto.generateKeyPair('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        }, function(err, pub, priv) {\n          if(err) {\n            return callback(err);\n          }\n          callback(null, {\n            privateKey: pki.privateKeyFromPem(priv),\n            publicKey: pki.publicKeyFromPem(pub)\n          });\n        });\n      }\n      if(_detectSubtleCrypto('generateKey') &&\n        _detectSubtleCrypto('exportKey')) {\n        // use standard native generateKey\n        return util.globalScope.crypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify'])\n        .then(function(pair) {\n          return util.globalScope.crypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n        // avoiding catch(function(err) {...}) to support IE <= 8\n        }).then(undefined, function(err) {\n          callback(err);\n        }).then(function(pkcs8) {\n          if(pkcs8) {\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          }\n        });\n      }\n      if(_detectSubtleMsCrypto('generateKey') &&\n        _detectSubtleMsCrypto('exportKey')) {\n        var genOp = util.globalScope.msCrypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify']);\n        genOp.oncomplete = function(e) {\n          var pair = e.target.result;\n          var exportOp = util.globalScope.msCrypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n          exportOp.oncomplete = function(e) {\n            var pkcs8 = e.target.result;\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          };\n          exportOp.onerror = function(err) {\n            callback(err);\n          };\n        };\n        genOp.onerror = function(err) {\n          callback(err);\n        };\n        return;\n      }\n    } else {\n      // try native sync\n      if(_detectNodeCrypto('generateKeyPairSync')) {\n        var keypair = _crypto.generateKeyPairSync('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        });\n        return {\n          privateKey: pki.privateKeyFromPem(keypair.privateKey),\n          publicKey: pki.publicKeyFromPem(keypair.publicKey)\n        };\n      }\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {encode: function(e) {return e;}};\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   * @param options optional verify options\n   *          _parseAllDigestBytes testing flag to control parsing of all\n   *            digest bytes. Unsupported and not for general usage.\n   *            (default: true)\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  key.verify = function(digest, signature, scheme, options) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSASSA-PKCS1-V1_5';\n    }\n    if(options === undefined) {\n      options = {\n        _parseAllDigestBytes: true\n      };\n    }\n    if(!('_parseAllDigestBytes' in options)) {\n      options._parseAllDigestBytes = true;\n    }\n\n    if(scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          // d is ASN.1 BER-encoded DigestInfo\n          var obj = asn1.fromDer(d, {\n            parseAllBytes: options._parseAllDigestBytes\n          });\n\n          // validate DigestInfo\n          var capture = {};\n          var errors = [];\n          if(!asn1.validate(obj, digestInfoValidator, capture, errors)) {\n            var error = new Error(\n              'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n              'DigestInfo value.');\n            error.errors = errors;\n            throw error;\n          }\n          // check hash algorithm identifier\n          // see PKCS1-v1-5DigestAlgorithms in RFC 8017\n          // FIXME: add support to vaidator for strict value choices\n          var oid = asn1.derToOid(capture.algorithmIdentifier);\n          if(!(oid === forge.oids.md2 ||\n            oid === forge.oids.md5 ||\n            oid === forge.oids.sha1 ||\n            oid === forge.oids.sha224 ||\n            oid === forge.oids.sha256 ||\n            oid === forge.oids.sha384 ||\n            oid === forge.oids.sha512 ||\n            oid === forge.oids['sha512-224'] ||\n            oid === forge.oids['sha512-256'])) {\n            var error = new Error(\n              'Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.');\n            error.oid = oid;\n            throw error;\n          }\n\n          // special check for md2 and md5 that NULL parameters exist\n          if(oid === forge.oids.md2 || oid === forge.oids.md5) {\n            if(!('parameters' in capture)) {\n              throw new Error(\n                'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n                'DigestInfo value. ' +\n                'Missing algorithm identifer NULL parameters.');\n            }\n          }\n\n          // compare the given digest to the decrypted one\n          return digest === capture.digest;\n        }\n      };\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          return digest === d;\n        }\n      };\n    }\n\n    // do rsa decryption w/o any decoding, then verify -- which does decoding\n    var d = pki.rsa.decrypt(signature, key, true, false);\n    return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {decode: _decodePkcs1_v1_5};\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {decode: function(d) {return d;}};\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {encode: emsaPkcs1v15encode};\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {encode: function() {return md;}};\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n  ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the Node crypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectNodeCrypto(fn) {\n  return forge.util.isNodejs && typeof _crypto[fn] === 'function';\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.crypto === 'object' &&\n    typeof util.globalScope.crypto.subtle === 'object' &&\n    typeof util.globalScope.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.msCrypto === 'object' &&\n    typeof util.globalScope.msCrypto.subtle === 'object' &&\n    typeof util.globalScope.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n","// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n","/**\n * JavaScript implementation of Ed25519.\n *\n * Copyright (c) 2017-2019 Digital Bazaar, Inc.\n *\n * This implementation is based on the most excellent TweetNaCl which is\n * in the public domain. Many thanks to its contributors:\n *\n * https://github.com/dchest/tweetnacl-js\n */\nvar forge = require('./forge');\nrequire('./jsbn');\nrequire('./random');\nrequire('./sha512');\nrequire('./util');\nvar asn1Validator = require('./asn1-validator');\nvar publicKeyValidator = asn1Validator.publicKeyValidator;\nvar privateKeyValidator = asn1Validator.privateKeyValidator;\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar ByteBuffer = forge.util.ByteBuffer;\nvar NativeBuffer = typeof Buffer === 'undefined' ? Uint8Array : Buffer;\n\n/*\n * Ed25519 algorithms, see RFC 8032:\n * https://tools.ietf.org/html/rfc8032\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.ed25519 = forge.ed25519 = forge.ed25519 || {};\nvar ed25519 = forge.ed25519;\n\ned25519.constants = {};\ned25519.constants.PUBLIC_KEY_BYTE_LENGTH = 32;\ned25519.constants.PRIVATE_KEY_BYTE_LENGTH = 64;\ned25519.constants.SEED_BYTE_LENGTH = 32;\ned25519.constants.SIGN_BYTE_LENGTH = 64;\ned25519.constants.HASH_BYTE_LENGTH = 64;\n\ned25519.generateKeyPair = function(options) {\n  options = options || {};\n  var seed = options.seed;\n  if(seed === undefined) {\n    // generate seed\n    seed = forge.random.getBytesSync(ed25519.constants.SEED_BYTE_LENGTH);\n  } else if(typeof seed === 'string') {\n    if(seed.length !== ed25519.constants.SEED_BYTE_LENGTH) {\n      throw new TypeError(\n        '\"seed\" must be ' + ed25519.constants.SEED_BYTE_LENGTH +\n        ' bytes in length.');\n    }\n  } else if(!(seed instanceof Uint8Array)) {\n    throw new TypeError(\n      '\"seed\" must be a node.js Buffer, Uint8Array, or a binary string.');\n  }\n\n  seed = messageToNativeBuffer({message: seed, encoding: 'binary'});\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  var sk = new NativeBuffer(ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  for(var i = 0; i < 32; ++i) {\n    sk[i] = seed[i];\n  }\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, privateKey: sk};\n};\n\n/**\n * Converts a private key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a private key.\n *\n * @returns {Object} keyInfo - The key information.\n * @returns {Buffer|Uint8Array} keyInfo.privateKeyBytes - 32 private key bytes.\n */\ned25519.privateKeyFromAsn1 = function(obj) {\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, privateKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.privateKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var privateKey = capture.privateKey;\n  // manually extract the private key bytes from nested octet string, see FIXME:\n  // https://github.com/digitalbazaar/forge/blob/master/lib/asn1.js#L542\n  var privateKeyBytes = messageToNativeBuffer({\n    message: forge.asn1.fromDer(privateKey).value,\n    encoding: 'binary'\n  });\n  // TODO: RFC8410 specifies a format for encoding the public key bytes along\n  // with the private key bytes. `publicKeyBytes` can be returned in the\n  // future. https://tools.ietf.org/html/rfc8410#section-10.3\n  return {privateKeyBytes: privateKeyBytes};\n};\n\n/**\n * Converts a public key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a public key.\n *\n * @return {Buffer|Uint8Array} - 32 public key bytes.\n */\ned25519.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, publicKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.publicKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var publicKeyBytes = capture.ed25519PublicKey;\n  if(publicKeyBytes.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new Error('Key length is invalid.');\n  }\n  return messageToNativeBuffer({\n    message: publicKeyBytes,\n    encoding: 'binary'\n  });\n};\n\ned25519.publicKeyFromPrivateKey = function(options) {\n  options = options || {};\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey, encoding: 'binary'\n  });\n  if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  for(var i = 0; i < pk.length; ++i) {\n    pk[i] = privateKey[32 + i];\n  }\n  return pk;\n};\n\ned25519.sign = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey,\n    encoding: 'binary'\n  });\n  if(privateKey.length === ed25519.constants.SEED_BYTE_LENGTH) {\n    var keyPair = ed25519.generateKeyPair({seed: privateKey});\n    privateKey = keyPair.privateKey;\n  } else if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.SEED_BYTE_LENGTH + ' or ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var signedMsg = new NativeBuffer(\n    ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  crypto_sign(signedMsg, msg, msg.length, privateKey);\n\n  var sig = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH);\n  for(var i = 0; i < sig.length; ++i) {\n    sig[i] = signedMsg[i];\n  }\n  return sig;\n};\n\ned25519.verify = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  if(options.signature === undefined) {\n    throw new TypeError(\n      '\"options.signature\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a binary string.');\n  }\n  var sig = messageToNativeBuffer({\n    message: options.signature,\n    encoding: 'binary'\n  });\n  if(sig.length !== ed25519.constants.SIGN_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.signature\" must have a byte length of ' +\n      ed25519.constants.SIGN_BYTE_LENGTH);\n  }\n  var publicKey = messageToNativeBuffer({\n    message: options.publicKey,\n    encoding: 'binary'\n  });\n  if(publicKey.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.publicKey\" must have a byte length of ' +\n      ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  }\n\n  var sm = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var m = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var i;\n  for(i = 0; i < ed25519.constants.SIGN_BYTE_LENGTH; ++i) {\n    sm[i] = sig[i];\n  }\n  for(i = 0; i < msg.length; ++i) {\n    sm[i + ed25519.constants.SIGN_BYTE_LENGTH] = msg[i];\n  }\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nfunction messageToNativeBuffer(options) {\n  var message = options.message;\n  if(message instanceof Uint8Array || message instanceof NativeBuffer) {\n    return message;\n  }\n\n  var encoding = options.encoding;\n  if(message === undefined) {\n    if(options.md) {\n      // TODO: more rigorous validation that `md` is a MessageDigest\n      message = options.md.digest().getBytes();\n      encoding = 'binary';\n    } else {\n      throw new TypeError('\"options.message\" or \"options.md\" not specified.');\n    }\n  }\n\n  if(typeof message === 'string' && !encoding) {\n    throw new TypeError('\"options.encoding\" must be \"binary\" or \"utf8\".');\n  }\n\n  if(typeof message === 'string') {\n    if(typeof Buffer !== 'undefined') {\n      return Buffer.from(message, encoding);\n    }\n    message = new ByteBuffer(message, encoding);\n  } else if(!(message instanceof ByteBuffer)) {\n    throw new TypeError(\n      '\"options.message\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a string with \"options.encoding\" specifying its ' +\n      'encoding.');\n  }\n\n  // convert to native buffer\n  var buffer = new NativeBuffer(message.length());\n  for(var i = 0; i < buffer.length; ++i) {\n    buffer[i] = message.at(i);\n  }\n  return buffer;\n}\n\nvar gf0 = gf();\nvar gf1 = gf([1]);\nvar D = gf([\n  0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n  0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]);\nvar D2 = gf([\n  0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n  0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]);\nvar X = gf([\n  0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n  0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]);\nvar Y = gf([\n  0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n  0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]);\nvar L = new Float64Array([\n  0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,\n  0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\nvar I = gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n  0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n// TODO: update forge buffer implementation to use `Buffer` or `Uint8Array`,\n// whichever is available, to improve performance\nfunction sha512(msg, msgLen) {\n  // Note: `out` and `msg` are NativeBuffer\n  var md = forge.md.sha512.create();\n  var buffer = new ByteBuffer(msg);\n  md.update(buffer.getBytes(msgLen), 'binary');\n  var hash = md.digest().getBytes();\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(hash, 'binary');\n  }\n  var out = new NativeBuffer(ed25519.constants.HASH_BYTE_LENGTH);\n  for(var i = 0; i < 64; ++i) {\n    out[i] = hash.charCodeAt(i);\n  }\n  return out;\n}\n\nfunction crypto_sign_keypair(pk, sk) {\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for(i = 0; i < 32; ++i) {\n    sk[i + 32] = pk[i];\n  }\n  return 0;\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for(i = 0; i < n; ++i) {\n    sm[64 + i] = m[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    sm[32 + i] = d[32 + i];\n  }\n\n  var r = sha512(sm.subarray(32), n + 32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for(i = 32; i < 64; ++i) {\n    sm[i] = sk[i];\n  }\n  var h = sha512(sm, n + 64);\n  reduce(h);\n\n  for(i = 32; i < 64; ++i) {\n    x[i] = 0;\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i] = r[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    for(j = 0; j < 32; j++) {\n      x[i + j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new NativeBuffer(32);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if(n < 64) {\n    return -1;\n  }\n\n  if(unpackneg(q, pk)) {\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    m[i + 32] = pk[i];\n  }\n  var h = sha512(m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if(crypto_verify_32(sm, 0, t, 0)) {\n    for(i = 0; i < n; ++i) {\n      m[i] = 0;\n    }\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i + 64];\n  }\n  mlen = n;\n  return mlen;\n}\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for(i = 63; i >= 32; --i) {\n    carry = 0;\n    for(j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for(j = 0; j < 32; ++j) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for(j = 0; j < 32; ++j) {\n    x[j] -= carry * L[j];\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i + 1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64);\n  for(var i = 0; i < 64; ++i) {\n    x[i] = r[i];\n    r[i] = 0;\n  }\n  modL(r, x);\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  for(var i = 0; i < 4; ++i) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for(i = 0; i < 16; ++i) {\n    t[i] = n[i];\n  }\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for(j = 0; j < 2; ++j) {\n    m[0] = t[0] - 0xffed;\n    for(i = 1; i < 15; ++i) {\n      m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n    b = (m[15] >> 16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    M(r[0], r[0], I);\n  }\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    return -1;\n  }\n\n  if(par25519(r[0]) === (p[31] >> 7)) {\n    Z(r[0], gf0, r[0]);\n  }\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for(i = 0; i < 16; ++i) {\n    o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n  }\n  o[15] &= 0x7fff;\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 250; a >= 0; --a) {\n    S(c, c);\n    if(a !== 1) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new NativeBuffer(32);\n  var d = new NativeBuffer(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x, xi, y, yi, 32);\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i, d = 0;\n  for(i = 0; i < n; ++i) {\n    d |= x[xi + i] ^ y[yi + i];\n  }\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction par25519(a) {\n  var d = new NativeBuffer(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for(i = 255; i >= 0; --i) {\n    b = (s[(i / 8)|0] >> (i & 7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction set25519(r, a) {\n  var i;\n  for(i = 0; i < 16; i++) {\n    r[i] = a[i] | 0;\n  }\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 253; a >= 0; --a) {\n    S(c, c);\n    if(a !== 2 && a !== 4) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for(i = 0; i < 16; ++i) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b - 1);\n  for(var i = 0; i < 16; ++i) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction gf(init) {\n  var i, r = new Float64Array(16);\n  if(init) {\n    for(i = 0; i < init.length; ++i) {\n      r[i] = init[i];\n    }\n  }\n  return r;\n}\n\nfunction A(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] + b[i];\n  }\n}\n\nfunction Z(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] - b[i];\n  }\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n","/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/**\n * 暗号方式選択コンポーネント\n */\nimport { useState } from 'react';\n\n/**\n * 暗号方式の選択肢を定義\n */\nconst keyTypes = [\n    {\n        value: 'rsa',\n        label: 'RSA',\n        description: 'RSA (PKCS#1, RSA-PSS/RSA-OAEP)',\n        details: {\n            title: 'RSA暗号',\n            description: `\n                最も広く使われている公開鍵暗号方式です。\n                暗号化と署名の両方に使用でき、互換性が高いのが特徴です。\n                2048ビット以上の鍵サイズを推奨します。\n            `,\n            useCases: [\n                'TLS/SSL証明書',\n                'メール暗号化（S/MIME）',\n                'デジタル署名',\n                'セキュアな通信'\n            ],\n            security: '2048ビットで128ビット相当のセキュリティを提供'\n        }\n    },\n    {\n        value: 'ecdsa',\n        label: 'ECDSA',\n        description: 'ECDSA (NIST P-256/P-384)',\n        details: {\n            title: '楕円曲線デジタル署名アルゴリズム',\n            description: `\n                RSAより小さい鍵サイズで同等のセキュリティを提供します。\n                署名生成が高速で、モバイルデバイスに適しています。\n                P-256は一般的な用途に、P-384はより高いセキュリティが必要な場合に使用します。\n            `,\n            useCases: [\n                'TLS/SSL証明書',\n                'ブロックチェーン',\n                'IoTデバイス認証',\n                'モバイルアプリケーション'\n            ],\n            security: 'P-256で128ビット、P-384で192ビット相当のセキュリティを提供'\n        }\n    },\n    {\n        value: 'eddsa',\n        label: 'EdDSA',\n        description: 'EdDSA (Ed25519/Ed448)',\n        details: {\n            title: 'Edwards-curve デジタル署名アルゴリズム',\n            description: `\n                最新の楕円曲線署名方式です。\n                高速で安全な実装が容易なのが特徴です。\n                Ed25519は一般的な用途に、Ed448はより高いセキュリティが必要な場合に使用します。\n            `,\n            useCases: [\n                'SSH認証',\n                'ブロックチェーン',\n                'セキュアメッセージング',\n                'ソフトウェア署名'\n            ],\n            security: 'Ed25519で128ビット、Ed448で224ビット相当のセキュリティを提供'\n        }\n    }\n];\n\n/**\n * Step1コンポーネント\n * @param {Object} props - プロパティ\n * @param {function} props.onSelect - 選択時のコールバック\n * @param {string} props.selected - 現在選択されている値\n * @param {function} props.onNext - 次のステップに進むコールバック\n * @param {string} props.language - 表示言語\n */\nexport default function Step1({ onSelect, selected, onNext, language }) {\n    const [showDetails, setShowDetails] = useState(null);\n\n    // 言語に応じたテキストを取得\n    const texts = {\n        ja: {\n            title: '暗号方式の選択',\n            subtitle: '用途に応じて適切な暗号方式を選択してください',\n            details: '詳細',\n            useCases: '主な用途',\n            security: 'セキュリティレベル',\n            close: '閉じる',\n            next: '次へ'\n        },\n        en: {\n            title: 'Select Cryptography Type',\n            subtitle: 'Choose the appropriate cryptography type for your use case',\n            details: 'Details',\n            useCases: 'Use Cases',\n            security: 'Security Level',\n            close: 'Close',\n            next: 'Next'\n        }\n    }[language];\n\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"text-center\">\n                <h2 className=\"text-2xl font-bold\">{texts.title}</h2>\n                <p className=\"text-gray-600 mt-2\">{texts.subtitle}</p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {keyTypes.map(type => (\n                    <div key={type.value} className=\"relative\">\n                        <button\n                            onClick={() => onSelect(type.value)}\n                            onDoubleClick={() => {\n                                if (selected) {\n                                    onNext();\n                                } else {\n                                    alert(\n                                        language === 'ja'\n                                            ? '暗号方式を選択してください'\n                                            : 'Please select a cryptography type'\n                                    );\n                                }\n                            }}\n                            className={`w-full p-4 border rounded-lg hover:bg-blue-50 transition-colors ${\n                                selected === type.value ? 'border-blue-500 bg-blue-50' : 'border-gray-200'\n                            }`}\n                        >\n                            <div className=\"font-bold text-lg\">{type.label}</div>\n                            <div className=\"text-sm text-gray-600 mt-1\">{type.description}</div>\n                        </button>\n                        <button\n                            onClick={() => setShowDetails(type.value)}\n                            className=\"absolute top-2 right-2 p-1 text-gray-500 hover:text-gray-700\"\n                            aria-label={`${texts.details}: ${type.label}`}\n                        >\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>\n                        </button>\n                    </div>\n                ))}\n            </div>\n\n            {/* 次へボタン */}\n            <div className=\"text-center mt-6\">\n                <button\n                    onClick={() => {\n                        if (selected) {\n                            onNext();\n                        } else {\n                            alert(\n                                language === 'ja'\n                                    ? '暗号方式を選択してください'\n                                    : 'Please select a cryptography type'\n                            );\n                        }\n                    }}\n                    disabled={!selected}\n                    className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300\"\n                >\n                    {texts.next}\n                </button>\n            </div>\n\n            {/* 詳細モーダル */}\n            {showDetails && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n                    <div className=\"bg-white rounded-lg max-w-2xl w-full p-6 max-h-[90vh] overflow-y-auto\">\n                        <div className=\"flex justify-between items-start\">\n                            <h3 className=\"text-xl font-bold\">\n                                {keyTypes.find(t => t.value === showDetails).details.title}\n                            </h3>\n                            <button\n                                onClick={() => setShowDetails(null)}\n                                className=\"text-gray-500 hover:text-gray-700\"\n                            >\n                                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                                </svg>\n                            </button>\n                        </div>\n\n                        <div className=\"mt-4 space-y-4\">\n                            <p className=\"text-gray-600\">\n                                {keyTypes.find(t => t.value === showDetails).details.description}\n                            </p>\n\n                            <div>\n                                <h4 className=\"font-bold\">{texts.useCases}:</h4>\n                                <ul className=\"list-disc list-inside mt-2\">\n                                    {keyTypes.find(t => t.value === showDetails).details.useCases.map((use, index) => (\n                                        <li key={index} className=\"text-gray-600\">{use}</li>\n                                    ))}\n                                </ul>\n                            </div>\n\n                            <div>\n                                <h4 className=\"font-bold\">{texts.security}:</h4>\n                                <p className=\"text-gray-600 mt-1\">\n                                    {keyTypes.find(t => t.value === showDetails).details.security}\n                                </p>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-6\">\n                            <button\n                                onClick={() => setShowDetails(null)}\n                                className=\"w-full py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                            >\n                                {texts.close}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}","/**\n * 鍵サイズ選択コンポーネント\n */\nimport { useState } from 'react';\n\n/**\n * 鍵サイズの選択肢を定義\n */\nconst keySizes = {\n    rsa: [\n        {\n            value: '2048',\n            label: '2048ビット',\n            description: '一般的な用途に推奨（～2030年）',\n            details: {\n                security: '112ビット相当の安全性',\n                speed: '生成・処理が比較的高速',\n                compatibility: '最も広くサポート',\n                recommendation: 'Webサーバー証明書やメール暗号化に最適'\n            }\n        },\n        {\n            value: '3072',\n            label: '3072ビット',\n            description: '長期保存に推奨（～2040年）',\n            details: {\n                security: '128ビット相当の安全性',\n                speed: '2048ビットより約1.5倍遅い',\n                compatibility: '主要な暗号ライブラリでサポート',\n                recommendation: '長期保存が必要なデータの暗号化に'\n            }\n        },\n        {\n            value: '4096',\n            label: '4096ビット',\n            description: '最高レベルのセキュリティ',\n            details: {\n                security: '144ビット相当の安全性',\n                speed: '2048ビットより約2倍遅い',\n                compatibility: '一部のデバイスで処理に時間がかかる',\n                recommendation: '最高レベルのセキュリティが必要な場合に'\n            }\n        }\n    ],\n    ecdsa: [\n        {\n            value: 'P-256',\n            label: 'P-256',\n            description: '一般的な用途に推奨',\n            details: {\n                security: '128ビット相当の安全性',\n                speed: 'RSA 2048ビットより高速',\n                compatibility: 'TLS 1.3で推奨',\n                recommendation: 'Webサーバー証明書に最適'\n            }\n        },\n        {\n            value: 'P-384',\n            label: 'P-384',\n            description: '政府システムに推奨',\n            details: {\n                security: '192ビット相当の安全性',\n                speed: 'P-256より約1.5倍遅い',\n                compatibility: 'NSA Suite B準拠',\n                recommendation: '政府システムや高セキュリティ要件に'\n            }\n        }\n    ],\n    eddsa: [\n        {\n            value: 'Ed25519',\n            label: 'Ed25519',\n            description: 'SSH/ブロックチェーンに最適',\n            details: {\n                security: '128ビット相当の安全性',\n                speed: 'ECDSAより高速で実装が容易',\n                compatibility: 'OpenSSH 6.5+でサポート',\n                recommendation: 'SSHキーやソフトウェア署名に'\n            }\n        },\n        {\n            value: 'Ed448',\n            label: 'Ed448',\n            description: '長期的なセキュリティ',\n            details: {\n                security: '224ビット相当の安全性',\n                speed: 'Ed25519より約2倍遅い',\n                compatibility: 'OpenSSL 1.1.1+でサポート',\n                recommendation: '将来的な量子コンピュータ対策に'\n            }\n        }\n    ]\n};\n\n/**\n * Step2コンポーネント\n * @param {Object} props - プロパティ\n * @param {string} props.keyType - 選択された暗号方式\n * @param {function} props.onSelect - 選択時のコールバック\n * @param {string} props.selected - 現在選択されている値\n * @param {function} props.onBack - 戻るボタンのコールバック\n * @param {function} props.onNext - 次のステップに進むコールバック\n * @param {string} props.language - 表示言語\n */\nexport default function Step2({ keyType, onSelect, selected, onBack, onNext, language }) {\n    const [showDetails, setShowDetails] = useState(null);\n\n    // 言語に応じたテキストを取得\n    const texts = {\n        ja: {\n            title: '鍵サイズの選択',\n            subtitle: '用途に応じて適切な鍵サイズを選択してください',\n            details: '詳細',\n            security: 'セキュリティレベル',\n            speed: '処理速度',\n            compatibility: '互換性',\n            recommendation: '推奨用途',\n            back: '戻る',\n            next: '次へ',\n            close: '閉じる'\n        },\n        en: {\n            title: 'Select Key Size',\n            subtitle: 'Choose the appropriate key size for your use case',\n            details: 'Details',\n            security: 'Security Level',\n            speed: 'Processing Speed',\n            compatibility: 'Compatibility',\n            recommendation: 'Recommended Use',\n            back: 'Back',\n            next: 'Next',\n            close: 'Close'\n        }\n    }[language];\n\n    // 選択可能な鍵サイズを取得\n    const availableSizes = keySizes[keyType] || [];\n\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"text-center\">\n                <h2 className=\"text-2xl font-bold\">{texts.title}</h2>\n                <p className=\"text-gray-600 mt-2\">{texts.subtitle}</p>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {availableSizes.map(size => (\n                    <div key={size.value} className=\"relative\">\n                        <button\n                            onClick={() => onSelect(size.value)}\n                            onDoubleClick={() => {\n                                if (selected) {\n                                    onNext();\n                                } else {\n                                    alert(\n                                        language === 'ja'\n                                            ? '鍵サイズを選択してください'\n                                            : 'Please select a key size'\n                                    );\n                                }\n                            }}\n                            className={`w-full p-4 border rounded-lg hover:bg-blue-50 transition-colors ${\n                                selected === size.value ? 'border-blue-500 bg-blue-50' : 'border-gray-200'\n                            }`}\n                        >\n                            <div className=\"font-bold text-lg\">{size.label}</div>\n                            <div className=\"text-sm text-gray-600 mt-1\">{size.description}</div>\n                        </button>\n                        <button\n                            onClick={() => setShowDetails(size.value)}\n                            className=\"absolute top-2 right-2 p-1 text-gray-500 hover:text-gray-700\"\n                            aria-label={`${texts.details}: ${size.label}`}\n                        >\n                            <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>\n                        </button>\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"flex justify-between\">\n                <button\n                    onClick={onBack}\n                    className=\"px-4 py-2 text-blue-600 hover:text-blue-800\"\n                >\n                    {texts.back}\n                </button>\n                <button\n                    onClick={() => {\n                        if (selected) {\n                            onNext();\n                        } else {\n                            alert(\n                                language === 'ja'\n                                    ? '鍵サイズを選択してください'\n                                    : 'Please select a key size'\n                            );\n                        }\n                    }}\n                    disabled={!selected}\n                    className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:bg-gray-300\"\n                >\n                    {texts.next}\n                </button>\n            </div>\n\n            {/* 詳細モーダル */}\n            {showDetails && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n                    <div className=\"bg-white rounded-lg max-w-2xl w-full p-6\">\n                        <div className=\"flex justify-between items-start\">\n                            <h3 className=\"text-xl font-bold\">\n                                {availableSizes.find(s => s.value === showDetails).label}\n                            </h3>\n                            <button\n                                onClick={() => setShowDetails(null)}\n                                className=\"text-gray-500 hover:text-gray-700\"\n                            >\n                                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                                </svg>\n                            </button>\n                        </div>\n\n                        <div className=\"mt-4 space-y-4\">\n                            <div>\n                                <h4 className=\"font-bold\">{texts.security}:</h4>\n                                <p className=\"text-gray-600 mt-1\">\n                                    {availableSizes.find(s => s.value === showDetails).details.security}\n                                </p>\n                            </div>\n\n                            <div>\n                                <h4 className=\"font-bold\">{texts.speed}:</h4>\n                                <p className=\"text-gray-600 mt-1\">\n                                    {availableSizes.find(s => s.value === showDetails).details.speed}\n                                </p>\n                            </div>\n\n                            <div>\n                                <h4 className=\"font-bold\">{texts.compatibility}:</h4>\n                                <p className=\"text-gray-600 mt-1\">\n                                    {availableSizes.find(s => s.value === showDetails).details.compatibility}\n                                </p>\n                            </div>\n\n                            <div>\n                                <h4 className=\"font-bold\">{texts.recommendation}:</h4>\n                                <p className=\"text-gray-600 mt-1\">\n                                    {availableSizes.find(s => s.value === showDetails).details.recommendation}\n                                </p>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-6\">\n                            <button\n                                onClick={() => setShowDetails(null)}\n                                className=\"w-full py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                            >\n                                {texts.close}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}","/**\n * エラー処理に関するユーティリティ関数群\n */\n\n/**\n * 無効な暗号方式の組み合わせをチェック\n * @param {Object} params - 選択されたパラメータ\n * @returns {Object} エラー情報（isValid: boolean, message: string）\n */\nexport function validateCryptoParams(params) {\n    const { keyType, keySize, outputFormat } = params;\n\n    // EdDSAの鍵サイズ制約\n    if (keyType === 'eddsa') {\n        if (keySize === 'Ed25519' && outputFormat === 'ssh') {\n            return { isValid: true };\n        }\n        if (keySize !== 'Ed25519' && outputFormat === 'ssh') {\n            return {\n                isValid: false,\n                message: 'SSHはEd25519のみサポートしています。'\n            };\n        }\n    }\n\n    // RSAの鍵サイズ制約\n    if (keyType === 'rsa') {\n        const size = parseInt(keySize);\n        if (![2048, 3072, 4096].includes(size)) {\n            return {\n                isValid: false,\n                message: 'RSAの鍵サイズは2048/3072/4096ビットのみサポートしています。'\n            };\n        }\n    }\n\n    // ECDSAの曲線制約\n    if (keyType === 'ecdsa' && !['P-256', 'P-384'].includes(keySize)) {\n        return {\n            isValid: false,\n            message: 'ECDSAはP-256/P-384のみサポートしています。'\n        };\n    }\n\n    return { isValid: true };\n}\n\n/**\n * 出力形式の制約をチェック\n * @param {Object} params - 選択されたパラメータ\n * @returns {Object} エラー情報（isValid: boolean, message: string）\n */\nexport function validateOutputFormat(params) {\n    const { keyType, keySize, outputFormat } = params;\n\n    // SSHの制約\n    if (outputFormat === 'ssh') {\n        if (!['rsa', 'ecdsa'].includes(keyType) && \n            !(keyType === 'eddsa' && keySize === 'Ed25519')) {\n            return {\n                isValid: false,\n                message: 'SSH形式はRSA、ECDSA、Ed25519のみサポートしています。'\n            };\n        }\n    }\n\n    return { isValid: true };\n}\n\n/**\n * パスフレーズの制約をチェック\n * @param {Object} params - 選択されたパラメータ\n * @returns {Object} エラー情報（isValid: boolean, message: string）\n */\nexport function validatePassphrase(params) {\n    const { outputFormat, passphrase } = params;\n\n    // パスフレーズが必要な形式\n    if (['pem', 'pgp'].includes(outputFormat) && passphrase) {\n        if (passphrase.length < 8) {\n            return {\n                isValid: false,\n                message: 'パスフレーズは8文字以上必要です。'\n            };\n        }\n    }\n\n    return { isValid: true };\n}\n\n/**\n * 全てのパラメータの組み合わせを検証\n * @param {Object} params - 選択されたパラメータ\n * @returns {Object} エラー情報（isValid: boolean, message: string）\n */\nexport function validateAll(params) {\n    const cryptoCheck = validateCryptoParams(params);\n    if (!cryptoCheck.isValid) return cryptoCheck;\n\n    const formatCheck = validateOutputFormat(params);\n    if (!formatCheck.isValid) return formatCheck;\n\n    const passphraseCheck = validatePassphrase(params);\n    if (!passphraseCheck.isValid) return passphraseCheck;\n\n    return { isValid: true };\n}\n\n/**\n * エラーメッセージを生成\n * @param {Error} error - エラーオブジェクト\n * @returns {string} ユーザーフレンドリーなエラーメッセージ\n */\nexport function formatError(error) {\n    // 既知のエラータイプを判定\n    if (error.name === 'NotSupportedError') {\n        return '選択された暗号方式はこのブラウザでサポートされていません。';\n    }\n    if (error.name === 'QuotaExceededError') {\n        return 'メモリ制限を超えました。小さい鍵サイズを選択してください。';\n    }\n    \n    // デフォルトメッセージ\n    return error.message || 'エラーが発生しました。';\n} ","/**\n * 出力形式選択コンポーネント\n */\nimport { useState } from 'react';\nimport { validateOutputFormat } from '../utils/errorHandler';\n\n/**\n * 出力形式の選択肢を定義\n */\nconst outputFormats = [\n    {\n        value: 'pem',\n        label: 'PEM',\n        description: 'PKCS#8/SPKI形式（OpenSSL互換）',\n        details: {\n            title: 'Privacy Enhanced Mail形式',\n            description: `\n                最も広く使用されている鍵形式です。\n                Base64エンコードされたASN.1形式で、\n                ヘッダーとフッターで囲まれています。\n            `,\n            features: [\n                'OpenSSLと完全互換',\n                'テキストベースで可読性が高い',\n                'パスフレーズによる暗号化が可能',\n                '多くのツールでサポート'\n            ],\n            useCases: [\n                'TLS/SSL証明書',\n                'SSH鍵',\n                'S/MIME証明書',\n                '一般的な暗号化/署名'\n            ]\n        }\n    },\n    {\n        value: 'jwk',\n        label: 'JWK',\n        description: 'JSON Web Key形式（Web API向け）',\n        details: {\n            title: 'JSON Web Key形式',\n            description: `\n                Web APIやJWTで使用される標準的なJSON形式です。\n                Web Crypto APIと直接互換性があり、\n                Webアプリケーションでの使用に最適です。\n            `,\n            features: [\n                'JSON形式で扱いやすい',\n                'Web Crypto API互換',\n                'JWT/JWSでの使用に最適',\n                'Base64URLエンコード'\n            ],\n            useCases: [\n                'Webアプリケーション',\n                'JWT署名/検証',\n                'ブラウザベースの暗号化',\n                'REST API認証'\n            ]\n        }\n    },\n    {\n        value: 'ssh',\n        label: 'SSH',\n        description: 'OpenSSH形式（サーバー認証用）',\n        details: {\n            title: 'OpenSSH鍵形式',\n            description: `\n                SSHサーバーの認証に使用される標準形式です。\n                公開鍵は authorized_keys に、\n                秘密鍵は id_rsa などのファイルに保存されます。\n            `,\n            features: [\n                'OpenSSHと完全互換',\n                'パスフレーズ保護対応',\n                '一般的なSSHクライアントで使用可能',\n                'Base64エンコード'\n            ],\n            useCases: [\n                'SSHサーバー認証',\n                'GitHubアクセス',\n                'サーバー管理',\n                'リモートログイン'\n            ]\n        }\n    },\n    {\n        value: 'pgp',\n        label: 'OpenPGP',\n        description: 'PGP/GPG形式（メール暗号化用）',\n        details: {\n            title: 'OpenPGP鍵形式',\n            description: `\n                メールの暗号化や署名に使用される標準形式です。\n                GnuPGなどのPGPツールと互換性があり、\n                エンドツーエンドの暗号化に使用されます。\n            `,\n            features: [\n                'GnuPG/PGP互換',\n                'ASCII Armor形式',\n                'パスフレーズ保護対応',\n                'メール暗号化に最適'\n            ],\n            useCases: [\n                'メール暗号化',\n                'ファイル署名',\n                'ソフトウェア配布',\n                'セキュアな通信'\n            ]\n        }\n    }\n];\n\n/**\n * Step3コンポーネント\n * @param {Object} props - プロパティ\n * @param {string} props.keyType - 選択された暗号方式\n * @param {string} props.keySize - 選択された鍵サイズ\n * @param {function} props.onSelect - 選択時のコールバック\n * @param {string} props.selected - 現在選択されている値\n * @param {function} props.onBack - 戻るボタンのコールバック\n * @param {string} props.language - 表示言語\n */\nexport default function Step3({ keyType, keySize, onSelect, selected, onBack, language }) {\n    const [showDetails, setShowDetails] = useState(null);\n    const [error, setError] = useState('');\n\n    // 言語に応じたテキストを取得\n    const texts = {\n        ja: {\n            title: '出力形式の選択',\n            subtitle: '用途に応じて適切な出力形式を選択してください',\n            details: '詳細',\n            features: '主な特徴',\n            useCases: '使用例',\n            back: '戻る',\n            close: '閉じる',\n            error: 'この形式は選択された暗号方式では使用できません'\n        },\n        en: {\n            title: 'Select Output Format',\n            subtitle: 'Choose the appropriate output format for your use case',\n            details: 'Details',\n            features: 'Features',\n            useCases: 'Use Cases',\n            back: 'Back',\n            close: 'Close',\n            error: 'This format is not available for the selected cryptography type'\n        }\n    }[language];\n\n    // 形式の選択時の処理\n    const handleSelect = (format) => {\n        const validation = validateOutputFormat({ keyType, keySize, outputFormat: format });\n        if (!validation.isValid) {\n            setError(validation.message);\n            return;\n        }\n        setError('');\n        onSelect(format);\n    };\n\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"text-center\">\n                <h2 className=\"text-2xl font-bold\">{texts.title}</h2>\n                <p className=\"text-gray-600 mt-2\">{texts.subtitle}</p>\n            </div>\n\n            {error && (\n                <div className=\"p-4 bg-red-50 text-red-700 rounded-lg\">\n                    {error}\n                </div>\n            )}\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                {outputFormats.map(format => {\n                    const validation = validateOutputFormat({\n                        keyType,\n                        keySize,\n                        outputFormat: format.value\n                    });\n                    const isDisabled = !validation.isValid;\n\n                    return (\n                        <div key={format.value} className=\"relative\">\n                            <button\n                                onClick={() => handleSelect(format.value)}\n                                disabled={isDisabled}\n                                className={`w-full p-4 border rounded-lg transition-colors ${\n                                    isDisabled\n                                        ? 'bg-gray-100 cursor-not-allowed opacity-60'\n                                        : selected === format.value\n                                        ? 'border-blue-500 bg-blue-50'\n                                        : 'border-gray-200 hover:bg-blue-50'\n                                }`}\n                            >\n                                <div className=\"font-bold text-lg\">{format.label}</div>\n                                <div className=\"text-sm text-gray-600 mt-1\">{format.description}</div>\n                            </button>\n                            <button\n                                onClick={() => setShowDetails(format.value)}\n                                disabled={isDisabled}\n                                className={`absolute top-2 right-2 p-1 ${\n                                    isDisabled\n                                        ? 'text-gray-400 cursor-not-allowed'\n                                        : 'text-gray-500 hover:text-gray-700'\n                                }`}\n                                aria-label={`${texts.details}: ${format.label}`}\n                            >\n                                <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                                </svg>\n                            </button>\n                        </div>\n                    );\n                })}\n            </div>\n\n            <div className=\"flex justify-start\">\n                <button\n                    onClick={onBack}\n                    className=\"px-4 py-2 text-blue-600 hover:text-blue-800\"\n                >\n                    {texts.back}\n                </button>\n            </div>\n\n            {/* 詳細モーダル */}\n            {showDetails && (\n                <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n                    <div className=\"bg-white rounded-lg max-w-2xl w-full p-6\">\n                        <div className=\"flex justify-between items-start\">\n                            <h3 className=\"text-xl font-bold\">\n                                {outputFormats.find(f => f.value === showDetails).details.title}\n                            </h3>\n                            <button\n                                onClick={() => setShowDetails(null)}\n                                className=\"text-gray-500 hover:text-gray-700\"\n                            >\n                                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                                </svg>\n                            </button>\n                        </div>\n\n                        <div className=\"mt-4 space-y-4\">\n                            <p className=\"text-gray-600\">\n                                {outputFormats.find(f => f.value === showDetails).details.description}\n                            </p>\n\n                            <div>\n                                <h4 className=\"font-bold\">{texts.features}:</h4>\n                                <ul className=\"list-disc list-inside mt-2\">\n                                    {outputFormats\n                                        .find(f => f.value === showDetails)\n                                        .details.features.map((feature, index) => (\n                                            <li key={index} className=\"text-gray-600\">{feature}</li>\n                                        ))}\n                                </ul>\n                            </div>\n\n                            <div>\n                                <h4 className=\"font-bold\">{texts.useCases}:</h4>\n                                <ul className=\"list-disc list-inside mt-2\">\n                                    {outputFormats\n                                        .find(f => f.value === showDetails)\n                                        .details.useCases.map((useCase, index) => (\n                                            <li key={index} className=\"text-gray-600\">{useCase}</li>\n                                        ))}\n                                </ul>\n                            </div>\n                        </div>\n\n                        <div className=\"mt-6\">\n                            <button\n                                onClick={() => setShowDetails(null)}\n                                className=\"w-full py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                            >\n                                {texts.close}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n} ","/**\n * パスフレーズ設定コンポーネント\n */\nimport { useState } from 'react';\nimport { validatePassphrase } from '../utils/errorHandler';\n\n/**\n * Step4コンポーネント\n * @param {Object} props - プロパティ\n * @param {string} props.outputFormat - 選択された出力形式\n * @param {function} props.onSelect - 選択時のコールバック\n * @param {string} props.passphrase - 現在のパスフレーズ\n * @param {function} props.onBack - 戻るボタンのコールバック\n * @param {function} props.onNext - 次へボタンのコールバック\n * @param {string} props.language - 表示言語\n */\nexport default function Step4({\n    outputFormat,\n    onSelect,\n    passphrase,\n    onBack,\n    onNext,\n    language\n}) {\n    const [showPassword, setShowPassword] = useState(false);\n    const [confirmPassphrase, setConfirmPassphrase] = useState('');\n    const [error, setError] = useState('');\n\n    // 言語に応じたテキストを取得\n    const texts = {\n        ja: {\n            title: 'パスフレーズの設定',\n            subtitle: '秘密鍵の保護に使用するパスフレーズを設定してください',\n            passphraseLabel: 'パスフレーズ',\n            passphrasePlaceholder: '8文字以上のパスフレーズを入力',\n            confirmLabel: 'パスフレーズの確認',\n            confirmPlaceholder: 'パスフレーズを再入力',\n            showPassword: '表示',\n            hidePassword: '非表示',\n            optional: '（オプション）',\n            back: '戻る',\n            next: '次へ',\n            errorMatch: 'パスフレーズが一致しません',\n            errorLength: 'パスフレーズは8文字以上必要です',\n            info: {\n                title: 'パスフレーズについて',\n                description: `\n                    パスフレーズは秘密鍵を暗号化して保護します。\n                    強力なパスフレーズを使用することで、\n                    秘密鍵が漏洩した場合でも安全を確保できます。\n                `,\n                recommendations: [\n                    '8文字以上の長さ',\n                    '大文字と小文字を含める',\n                    '数字を含める',\n                    '記号を含める',\n                    '推測しにくい文字列を使用'\n                ]\n            }\n        },\n        en: {\n            title: 'Set Passphrase',\n            subtitle: 'Set a passphrase to protect your private key',\n            passphraseLabel: 'Passphrase',\n            passphrasePlaceholder: 'Enter passphrase (8+ characters)',\n            confirmLabel: 'Confirm Passphrase',\n            confirmPlaceholder: 'Re-enter passphrase',\n            showPassword: 'Show',\n            hidePassword: 'Hide',\n            optional: '(Optional)',\n            back: 'Back',\n            next: 'Next',\n            errorMatch: 'Passphrases do not match',\n            errorLength: 'Passphrase must be at least 8 characters',\n            info: {\n                title: 'About Passphrase',\n                description: `\n                    A passphrase encrypts and protects your private key.\n                    Using a strong passphrase ensures security\n                    even if your private key is compromised.\n                `,\n                recommendations: [\n                    'At least 8 characters',\n                    'Include uppercase and lowercase letters',\n                    'Include numbers',\n                    'Include symbols',\n                    'Use unpredictable strings'\n                ]\n            }\n        }\n    }[language];\n\n    // パスフレーズの検証\n    const validateInput = () => {\n        if (!passphrase) {\n            // パスフレーズが空の場合は次のステップへ\n            onNext();\n            return;\n        }\n\n        if (passphrase !== confirmPassphrase) {\n            setError(texts.errorMatch);\n            return;\n        }\n\n        const validation = validatePassphrase({ outputFormat, passphrase });\n        if (!validation.isValid) {\n            setError(validation.message);\n            return;\n        }\n\n        setError('');\n        onNext();\n    };\n\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"text-center\">\n                <h2 className=\"text-2xl font-bold\">{texts.title}</h2>\n                <p className=\"text-gray-600 mt-2\">{texts.subtitle}</p>\n            </div>\n\n            {error && (\n                <div className=\"p-4 bg-red-50 text-red-700 rounded-lg\">\n                    {error}\n                </div>\n            )}\n\n            <div className=\"space-y-4\">\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700\">\n                        {texts.passphraseLabel} {texts.optional}\n                    </label>\n                    <div className=\"mt-1 relative\">\n                        <input\n                            type={showPassword ? 'text' : 'password'}\n                            value={passphrase}\n                            onChange={(e) => onSelect(e.target.value)}\n                            onDoubleClick={() => {\n                                if (!passphrase || (passphrase === confirmPassphrase && validatePassphrase({ outputFormat, passphrase }).isValid)) {\n                                    onNext();\n                                } else if (passphrase !== confirmPassphrase) {\n                                    setError(texts.errorMatch);\n                                } else {\n                                    setError(texts.errorLength);\n                                }\n                            }}\n                            className=\"block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n                            placeholder={texts.passphrasePlaceholder}\n                        />\n                        <button\n                            type=\"button\"\n                            onClick={() => setShowPassword(!showPassword)}\n                            className=\"absolute inset-y-0 right-0 px-3 flex items-center text-gray-500 hover:text-gray-700\"\n                        >\n                            {showPassword ? texts.hidePassword : texts.showPassword}\n                        </button>\n                    </div>\n                </div>\n\n                {passphrase && (\n                    <div>\n                        <label className=\"block text-sm font-medium text-gray-700\">\n                            {texts.confirmLabel}\n                        </label>\n                        <input\n                            type={showPassword ? 'text' : 'password'}\n                            value={confirmPassphrase}\n                            onChange={(e) => setConfirmPassphrase(e.target.value)}\n                            onDoubleClick={() => {\n                                if (!passphrase || (passphrase === confirmPassphrase && validatePassphrase({ outputFormat, passphrase }).isValid)) {\n                                    onNext();\n                                } else if (passphrase !== confirmPassphrase) {\n                                    setError(texts.errorMatch);\n                                } else {\n                                    setError(texts.errorLength);\n                                }\n                            }}\n                            className=\"mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500\"\n                            placeholder={texts.confirmPlaceholder}\n                        />\n                    </div>\n                )}\n            </div>\n\n            {/* パスフレーズの説明 */}\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n                <h3 className=\"font-bold text-lg\">{texts.info.title}</h3>\n                <p className=\"mt-2 text-gray-600\">\n                    {texts.info.description}\n                </p>\n                <ul className=\"mt-4 list-disc list-inside text-gray-600\">\n                    {texts.info.recommendations.map((rec, index) => (\n                        <li key={index}>{rec}</li>\n                    ))}\n                </ul>\n            </div>\n\n            <div className=\"flex justify-between\">\n                <button\n                    onClick={onBack}\n                    className=\"px-4 py-2 text-blue-600 hover:text-blue-800\"\n                >\n                    {texts.back}\n                </button>\n                <button\n                    onClick={validateInput}\n                    className=\"px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n                >\n                    {texts.next}\n                </button>\n            </div>\n        </div>\n    );\n}","/**\n * 最終確認と生成コンポーネント\n */\nimport { useState } from 'react';\nimport { validateAll } from '../utils/errorHandler';\n\n/**\n * Step5コンポーネント\n * @param {Object} props - プロパティ\n * @param {Object} props.params - 選択されたパラメータ\n * @param {function} props.onGenerate - 生成時のコールバック\n * @param {function} props.onBack - 戻るボタンのコールバック\n * @param {boolean} props.isGenerating - 生成中フラグ\n * @param {string} props.language - 表示言語\n */\nexport default function Step5({ params, onGenerate, onBack, isGenerating, language }) {\n    const [error, setError] = useState('');\n\n    // 言語に応じたテキストを取得\n    const texts = {\n        ja: {\n            title: '確認と生成',\n            subtitle: '選択した内容を確認して鍵を生成します',\n            keyType: '暗号方式',\n            keySize: '鍵サイズ',\n            outputFormat: '出力形式',\n            passphrase: 'パスフレーズ',\n            set: '設定済み',\n            notSet: '未設定',\n            back: '戻る',\n            generate: '生成',\n            generating: '生成中...',\n            keyTypes: {\n                rsa: 'RSA',\n                ecdsa: 'ECDSA',\n                eddsa: 'EdDSA'\n            },\n            outputFormats: {\n                pem: 'PEM (PKCS#8/SPKI)',\n                jwk: 'JWK (JSON Web Key)',\n                ssh: 'SSH (OpenSSH)',\n                pgp: 'OpenPGP'\n            },\n            warning: {\n                title: '注意事項',\n                items: [\n                    '生成された鍵はブラウザ内で処理され、サーバーには送信されません。',\n                    '秘密鍵は適切に保管し、パスフレーズで保護することを推奨します。',\n                    '生成後は必ずバックアップを作成してください。',\n                    '重要な用途には、適切なセキュリティ評価を受けた専用ツールの使用を検討してください。'\n                ]\n            }\n        },\n        en: {\n            title: 'Confirm and Generate',\n            subtitle: 'Review your selections and generate keys',\n            keyType: 'Cryptography Type',\n            keySize: 'Key Size',\n            outputFormat: 'Output Format',\n            passphrase: 'Passphrase',\n            set: 'Set',\n            notSet: 'Not Set',\n            back: 'Back',\n            generate: 'Generate',\n            generating: 'Generating...',\n            keyTypes: {\n                rsa: 'RSA',\n                ecdsa: 'ECDSA',\n                eddsa: 'EdDSA'\n            },\n            outputFormats: {\n                pem: 'PEM (PKCS#8/SPKI)',\n                jwk: 'JWK (JSON Web Key)',\n                ssh: 'SSH (OpenSSH)',\n                pgp: 'OpenPGP'\n            },\n            warning: {\n                title: 'Important Notes',\n                items: [\n                    'Keys are generated in your browser and never sent to any server.',\n                    'Store private keys securely and protect them with a passphrase.',\n                    'Always create backups after generation.',\n                    'For critical use cases, consider using dedicated tools with proper security audits.'\n                ]\n            }\n        }\n    }[language];\n\n    // 生成ボタンクリック時の処理\n    const handleGenerate = () => {\n        const validation = validateAll(params);\n        if (!validation.isValid) {\n            setError(validation.message);\n            return;\n        }\n        setError('');\n        onGenerate();\n    };\n\n    return (\n        <div className=\"space-y-6\">\n            <div className=\"text-center\">\n                <h2 className=\"text-2xl font-bold\">{texts.title}</h2>\n                <p className=\"text-gray-600 mt-2\">{texts.subtitle}</p>\n            </div>\n\n            {error && (\n                <div className=\"p-4 bg-red-50 text-red-700 rounded-lg\">\n                    {error}\n                </div>\n            )}\n\n            {/* 選択内容の表示 */}\n            <div\n                className=\"bg-white shadow overflow-hidden sm:rounded-lg cursor-pointer\"\n                onDoubleClick={handleGenerate} // ダブルクリックで生成を実行\n            >\n                <div className=\"px-4 py-5 sm:px-6\">\n                    <dl className=\"grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2\">\n                        <div className=\"sm:col-span-1\">\n                            <dt className=\"text-sm font-medium text-gray-500\">\n                                {texts.keyType}\n                            </dt>\n                            <dd className=\"mt-1 text-sm text-gray-900\">\n                                {texts.keyTypes[params.keyType]}\n                            </dd>\n                        </div>\n                        <div className=\"sm:col-span-1\">\n                            <dt className=\"text-sm font-medium text-gray-500\">\n                                {texts.keySize}\n                            </dt>\n                            <dd className=\"mt-1 text-sm text-gray-900\">\n                                {params.keySize}\n                            </dd>\n                        </div>\n                        <div className=\"sm:col-span-1\">\n                            <dt className=\"text-sm font-medium text-gray-500\">\n                                {texts.outputFormat}\n                            </dt>\n                            <dd className=\"mt-1 text-sm text-gray-900\">\n                                {texts.outputFormats[params.outputFormat]}\n                            </dd>\n                        </div>\n                        <div className=\"sm:col-span-1\">\n                            <dt className=\"text-sm font-medium text-gray-500\">\n                                {texts.passphrase}\n                            </dt>\n                            <dd className=\"mt-1 text-sm text-gray-900\">\n                                {params.passphrase ? texts.set : texts.notSet}\n                            </dd>\n                        </div>\n                    </dl>\n                </div>\n            </div>\n\n            {/* 注意事項 */}\n            <div className=\"bg-yellow-50 border-l-4 border-yellow-400 p-4\">\n                <div className=\"flex\">\n                    <div className=\"flex-shrink-0\">\n                        <svg className=\"h-5 w-5 text-yellow-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n                        </svg>\n                    </div>\n                    <div className=\"ml-3\">\n                        <h3 className=\"text-sm font-medium text-yellow-800\">\n                            {texts.warning.title}\n                        </h3>\n                        <div className=\"mt-2 text-sm text-yellow-700\">\n                            <ul className=\"list-disc list-inside\">\n                                {texts.warning.items.map((item, index) => (\n                                    <li key={index}>{item}</li>\n                                ))}\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"flex justify-between\">\n                <button\n                    onClick={onBack}\n                    className=\"px-4 py-2 text-blue-600 hover:text-blue-800\"\n                >\n                    {texts.back}\n                </button>\n                <button\n                    onClick={handleGenerate}\n                    disabled={isGenerating}\n                    className={`px-6 py-2 text-white rounded-lg ${\n                        isGenerating\n                            ? 'bg-blue-400 cursor-not-allowed'\n                            : 'bg-blue-600 hover:bg-blue-700'\n                    }`}\n                >\n                    {isGenerating ? texts.generating : texts.generate}\n                </button>\n            </div>\n        </div>\n    );\n}","/**\n * メタデータ生成に関するユーティリティ関数群\n */\n\n/**\n * 鍵生成のメタデータを作成\n * @param {Object} params - 鍵生成パラメータ\n * @returns {Object} メタデータオブジェクト\n */\nexport function createMetadata(params) {\n    const { keyType, keySize, outputFormat, passphrase } = params;\n    \n    return {\n        // 基本情報\n        type: keyType,\n        size: keySize,\n        format: outputFormat,\n        generated: new Date().toISOString(),\n        hasPassphrase: !!passphrase,\n\n        // セキュリティ情報\n        security: getSecurityInfo(keyType, keySize),\n\n        // 用途情報\n        usage: getUsageInfo(keyType, outputFormat),\n\n        // 互換性情報\n        compatibility: getCompatibilityInfo(keyType, outputFormat)\n    };\n}\n\n/**\n * セキュリティ情報を取得\n * @param {string} keyType - 暗号方式\n * @param {string} keySize - 鍵サイズ\n * @returns {Object} セキュリティ情報\n */\nfunction getSecurityInfo(keyType, keySize) {\n    const info = {\n        bitStrength: 0,\n        recommendation: '',\n        standards: []\n    };\n\n    switch (keyType) {\n        case 'rsa':\n            info.bitStrength = parseInt(keySize);\n            info.standards = ['PKCS#1', 'FIPS 186-4'];\n            if (keySize === '2048') {\n                info.recommendation = '一般的な用途に適しています（～2030年）';\n            } else if (keySize === '3072') {\n                info.recommendation = '長期保存に適しています（～2040年）';\n            } else if (keySize === '4096') {\n                info.recommendation = '最高レベルのセキュリティを提供します';\n            }\n            break;\n\n        case 'ecdsa':\n            info.standards = ['NIST FIPS 186-4', 'RFC 8422', 'SEC 2'];\n            if (keySize === 'P-256') {\n                info.bitStrength = 128;\n                info.recommendation = 'TLS/SSLに最適です（～2030年）';\n            } else if (keySize === 'P-384') {\n                info.bitStrength = 192;\n                info.recommendation = '政府システムに推奨されます';\n            }\n            break;\n\n        case 'eddsa':\n            info.standards = ['RFC 8032'];\n            if (keySize === 'Ed25519') {\n                info.bitStrength = 128;\n                info.recommendation = 'SSHやブロックチェーンに最適です';\n            } else if (keySize === 'Ed448') {\n                info.bitStrength = 224;\n                info.recommendation = '長期的なセキュリティが必要な場合に推奨';\n            }\n            break;\n    }\n\n    return info;\n}\n\n/**\n * 用途情報を取得\n * @param {string} keyType - 暗号方式\n * @param {string} outputFormat - 出力形式\n * @returns {Object} 用途情報\n */\nfunction getUsageInfo(keyType, outputFormat) {\n    const usage = {\n        signing: false,\n        encryption: false,\n        keyExchange: false,\n        authentication: false,\n        recommended: []\n    };\n\n    switch (keyType) {\n        case 'rsa':\n            usage.signing = true;\n            usage.encryption = true;\n            usage.keyExchange = true;\n            usage.authentication = true;\n            usage.recommended = ['TLS証明書', 'メール暗号化', 'ファイル暗号化'];\n            break;\n\n        case 'ecdsa':\n            usage.signing = true;\n            usage.authentication = true;\n            usage.recommended = ['TLS証明書', 'ブロックチェーン署名'];\n            break;\n\n        case 'eddsa':\n            usage.signing = true;\n            usage.authentication = true;\n            usage.recommended = ['SSH認証', 'ブロックチェーン署名'];\n            break;\n    }\n\n    // 出力形式に基づく推奨用途の追加\n    switch (outputFormat) {\n        case 'pem':\n            usage.recommended.push('OpenSSL操作');\n            break;\n        case 'ssh':\n            usage.recommended.push('SSHサーバー認証');\n            break;\n        case 'jwk':\n            usage.recommended.push('Webアプリケーション');\n            break;\n        case 'pgp':\n            usage.recommended.push('メール暗号化');\n            break;\n    }\n\n    return usage;\n}\n\n/**\n * 互換性情報を取得\n * @param {string} keyType - 暗号方式\n * @param {string} outputFormat - 出力形式\n * @returns {Object} 互換性情報\n */\nfunction getCompatibilityInfo(keyType, outputFormat) {\n    const compatibility = {\n        browsers: [],\n        tools: [],\n        libraries: []\n    };\n\n    // ブラウザ互換性\n    compatibility.browsers = [\n        'Chrome 69+',\n        'Firefox 60+',\n        'Safari 12.1+',\n        'Edge 79+'\n    ];\n\n    // ツール互換性\n    switch (outputFormat) {\n        case 'pem':\n            compatibility.tools = ['OpenSSL', 'GnuPG', 'Keytool'];\n            break;\n        case 'ssh':\n            compatibility.tools = ['OpenSSH', 'PuTTY'];\n            break;\n        case 'jwk':\n            compatibility.tools = ['Web Crypto API', 'Node.js Crypto'];\n            break;\n        case 'pgp':\n            compatibility.tools = ['GnuPG', 'Mailvelope', 'Enigmail'];\n            break;\n    }\n\n    // ライブラリ互換性\n    compatibility.libraries = [\n        'OpenSSL',\n        'Web Crypto API',\n        'Node.js Crypto',\n        'Bouncy Castle'\n    ];\n\n    if (keyType === 'eddsa') {\n        compatibility.libraries.push('libsodium');\n    }\n\n    return compatibility;\n}\n\n/**\n * ファイル名を生成\n * @param {Object} params - 鍵生成パラメータ\n * @returns {Object} ファイル名情報\n */\nexport function generateFilenames(params) {\n    const { keyType, keySize, outputFormat } = params;\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const prefix = `${keyType}_${keySize}_${timestamp}`;\n    const extension = outputFormat === 'jwk' ? 'json' : outputFormat;\n\n    return {\n        public: `${prefix}_public.${extension}`,\n        private: `${prefix}_private.${extension}`,\n        metadata: `${prefix}_metadata.json`,\n        zip: `${prefix}_keys.zip`\n    };\n} ","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nexport { _objectSpread2 as default };","const doneWritingPromise = Symbol('doneWritingPromise');\nconst doneWritingResolve = Symbol('doneWritingResolve');\nconst doneWritingReject = Symbol('doneWritingReject');\n\nconst readingIndex = Symbol('readingIndex');\n\nclass ArrayStream extends Array {\n  constructor() {\n    super();\n    this[doneWritingPromise] = new Promise((resolve, reject) => {\n      this[doneWritingResolve] = resolve;\n      this[doneWritingReject] = reject;\n    });\n    this[doneWritingPromise].catch(() => {});\n  }\n}\n\nArrayStream.prototype.getReader = function() {\n  if (this[readingIndex] === undefined) {\n    this[readingIndex] = 0;\n  }\n  return {\n    read: async () => {\n      await this[doneWritingPromise];\n      if (this[readingIndex] === this.length) {\n        return { value: undefined, done: true };\n      }\n      return { value: this[this[readingIndex]++], done: false };\n    }\n  };\n};\n\nArrayStream.prototype.readToEnd = async function(join) {\n  await this[doneWritingPromise];\n  const result = join(this.slice(this[readingIndex]));\n  this.length = 0;\n  return result;\n};\n\nArrayStream.prototype.clone = function() {\n  const clone = new ArrayStream();\n  clone[doneWritingPromise] = this[doneWritingPromise].then(() => {\n    clone.push(...this);\n  });\n  return clone;\n};\n\n/**\n * Check whether data is an ArrayStream\n * @param {Any} input  data to check\n * @returns {boolean}\n */\nfunction isArrayStream(input) {\n  return input && input.getReader && Array.isArray(input);\n}\n\n/**\n * A wrapper class over the native WritableStreamDefaultWriter.\n * It also lets you \"write data to\" array streams instead of streams.\n * @class\n */\nfunction Writer(input) {\n  if (!isArrayStream(input)) {\n    const writer = input.getWriter();\n    const releaseLock = writer.releaseLock;\n    writer.releaseLock = () => {\n      writer.closed.catch(function() {});\n      releaseLock.call(writer);\n    };\n    return writer;\n  }\n  this.stream = input;\n}\n\n/**\n * Write a chunk of data.\n * @returns {Promise<undefined>}\n * @async\n */\nWriter.prototype.write = async function(chunk) {\n  this.stream.push(chunk);\n};\n\n/**\n * Close the stream.\n * @returns {Promise<undefined>}\n * @async\n */\nWriter.prototype.close = async function() {\n  this.stream[doneWritingResolve]();\n};\n\n/**\n * Error the stream.\n * @returns {Promise<Object>}\n * @async\n */\nWriter.prototype.abort = async function(reason) {\n  this.stream[doneWritingReject](reason);\n  return reason;\n};\n\n/**\n * Release the writer's lock.\n * @returns {undefined}\n * @async\n */\nWriter.prototype.releaseLock = function() {};\n\n\nexport { ArrayStream, isArrayStream, Writer, doneWritingPromise };\n","import * as streams from './streams';\nimport { isArrayStream } from './writer';\n\nconst isNode = typeof globalThis.process === 'object' &&\n  typeof globalThis.process.versions === 'object';\n\nconst NodeReadableStream = isNode && require('stream').Readable;\n\n/**\n * Check whether data is a Stream, and if so of which type\n * @param {Any} input  data to check\n * @returns {'web'|'ponyfill'|'node'|'array'|'web-like'|false}\n */\nfunction isStream(input) {\n  if (isArrayStream(input)) {\n    return 'array';\n  }\n  if (globalThis.ReadableStream && globalThis.ReadableStream.prototype.isPrototypeOf(input)) {\n    return 'web';\n  }\n  if (streams.ReadableStream && streams.ReadableStream.prototype.isPrototypeOf(input)) {\n    return 'ponyfill';\n  }\n  if (NodeReadableStream && NodeReadableStream.prototype.isPrototypeOf(input)) {\n    return 'node';\n  }\n  if (input && input.getReader) {\n    return 'web-like';\n  }\n  return false;\n}\n\n/**\n * Check whether data is a Uint8Array\n * @param {Any} input  data to check\n * @returns {Boolean}\n */\nfunction isUint8Array(input) {\n  return Uint8Array.prototype.isPrototypeOf(input);\n}\n\n/**\n * Concat Uint8Arrays\n * @param {Array<Uint8array>} Array of Uint8Arrays to concatenate\n * @returns {Uint8array} Concatenated array\n */\nfunction concatUint8Array(arrays) {\n  if (arrays.length === 1) return arrays[0];\n\n  let totalLength = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    if (!isUint8Array(arrays[i])) {\n      throw new Error('concatUint8Array: Data must be in the form of a Uint8Array');\n    }\n\n    totalLength += arrays[i].length;\n  }\n\n  const result = new Uint8Array(totalLength);\n  let pos = 0;\n  arrays.forEach(function (element) {\n    result.set(element, pos);\n    pos += element.length;\n  });\n\n  return result;\n}\n\nexport { isNode, isStream, isArrayStream, isUint8Array, concatUint8Array };\n","import { isNode } from './util';\nimport * as streams from './streams';\n\nconst NodeBuffer = isNode && require('buffer').Buffer;\nconst NodeReadableStream = isNode && require('stream').Readable;\n\n/**\n * Web / node stream conversion functions\n * From https://github.com/gwicke/node-web-streams\n */\n\nlet nodeToWeb;\nlet webToNode;\n\nif (NodeReadableStream) {\n\n  /**\n   * Convert a Node Readable Stream to a Web ReadableStream\n   * @param {Readable} nodeStream\n   * @returns {ReadableStream}\n   */\n  nodeToWeb = function(nodeStream) {\n    let canceled = false;\n    return new streams.ReadableStream({\n      start(controller) {\n        nodeStream.pause();\n        nodeStream.on('data', chunk => {\n          if (canceled) {\n            return;\n          }\n          if (NodeBuffer.isBuffer(chunk)) {\n            chunk = new Uint8Array(chunk.buffer, chunk.byteOffset, chunk.byteLength);\n          }\n          controller.enqueue(chunk);\n          nodeStream.pause();\n        });\n        nodeStream.on('end', () => {\n          if (canceled) {\n            return;\n          }\n          controller.close();\n        });\n        nodeStream.on('error', e => controller.error(e));\n      },\n      pull() {\n        nodeStream.resume();\n      },\n      cancel(reason) {\n        canceled = true;\n        nodeStream.destroy(reason);\n      }\n    });\n  };\n\n\n  class NodeReadable extends NodeReadableStream {\n    constructor(webStream, options) {\n      super(options);\n      this._reader = streams.getReader(webStream);\n    }\n\n    async _read(size) {\n      try {\n        while (true) {\n          const { done, value } = await this._reader.read();\n          if (done) {\n            this.push(null);\n            break;\n          }\n          if (!this.push(value)) {\n            break;\n          }\n        }\n      } catch (e) {\n        this.destroy(e);\n      }\n    }\n\n    async _destroy(error, callback) {\n      this._reader.cancel(error).then(callback, callback);\n    }\n  }\n\n  /**\n   * Convert a Web ReadableStream to a Node Readable Stream\n   * @param {ReadableStream} webStream\n   * @param {Object} options\n   * @returns {Readable}\n   */\n  webToNode = function(webStream, options) {\n    return new NodeReadable(webStream, options);\n  };\n\n}\n\nexport { nodeToWeb, webToNode };\n","import * as streams from './streams';\nimport { isUint8Array } from './util';\n\nconst doneReadingSet = new WeakSet();\nconst externalBuffer = Symbol('externalBuffer');\n\n/**\n * A wrapper class over the native ReadableStreamDefaultReader.\n * This additionally implements pushing back data on the stream, which\n * lets us implement peeking and a host of convenience functions.\n * It also lets you read data other than streams, such as a Uint8Array.\n * @class\n */\nfunction Reader(input) {\n  this.stream = input;\n  if (input[externalBuffer]) {\n    this[externalBuffer] = input[externalBuffer].slice();\n  }\n  if (streams.isArrayStream(input)) {\n    const reader = input.getReader();\n    this._read = reader.read.bind(reader);\n    this._releaseLock = () => {};\n    this._cancel = async () => {};\n    return;\n  }\n  let streamType = streams.isStream(input);\n  if (streamType === 'node') {\n    input = streams.nodeToWeb(input);\n  }\n  if (streamType) {\n    const reader = input.getReader();\n    this._read = reader.read.bind(reader);\n    this._releaseLock = () => {\n      reader.closed.catch(function() {});\n      reader.releaseLock();\n    };\n    this._cancel = reader.cancel.bind(reader);\n    return;\n  }\n  let doneReading = false;\n  this._read = async () => {\n    if (doneReading || doneReadingSet.has(input)) {\n      return { value: undefined, done: true };\n    }\n    doneReading = true;\n    return { value: input, done: false };\n  };\n  this._releaseLock = () => {\n    if (doneReading) {\n      try {\n        doneReadingSet.add(input);\n      } catch(e) {}\n    }\n  };\n}\n\n/**\n * Read a chunk of data.\n * @returns {Promise<Object>} Either { done: false, value: Uint8Array | String } or { done: true, value: undefined }\n * @async\n */\nReader.prototype.read = async function() {\n  if (this[externalBuffer] && this[externalBuffer].length) {\n    const value = this[externalBuffer].shift();\n    return { done: false, value };\n  }\n  return this._read();\n};\n\n/**\n * Allow others to read the stream.\n */\nReader.prototype.releaseLock = function() {\n  if (this[externalBuffer]) {\n    this.stream[externalBuffer] = this[externalBuffer];\n  }\n  this._releaseLock();\n};\n\n/**\n * Cancel the stream.\n */\nReader.prototype.cancel = function(reason) {\n  return this._cancel(reason);\n};\n\n/**\n * Read up to and including the first \\n character.\n * @returns {Promise<String|Undefined>}\n * @async\n */\nReader.prototype.readLine = async function() {\n  let buffer = [];\n  let returnVal;\n  while (!returnVal) {\n    let { done, value } = await this.read();\n    value += '';\n    if (done) {\n      if (buffer.length) return streams.concat(buffer);\n      return;\n    }\n    const lineEndIndex = value.indexOf('\\n') + 1;\n    if (lineEndIndex) {\n      returnVal = streams.concat(buffer.concat(value.substr(0, lineEndIndex)));\n      buffer = [];\n    }\n    if (lineEndIndex !== value.length) {\n      buffer.push(value.substr(lineEndIndex));\n    }\n  }\n  this.unshift(...buffer);\n  return returnVal;\n};\n\n/**\n * Read a single byte/character.\n * @returns {Promise<Number|String|Undefined>}\n * @async\n */\nReader.prototype.readByte = async function() {\n  const { done, value } = await this.read();\n  if (done) return;\n  const byte = value[0];\n  this.unshift(streams.slice(value, 1));\n  return byte;\n};\n\n/**\n * Read a specific amount of bytes/characters, unless the stream ends before that amount.\n * @returns {Promise<Uint8Array|String|Undefined>}\n * @async\n */\nReader.prototype.readBytes = async function(length) {\n  const buffer = [];\n  let bufferLength = 0;\n  while (true) {\n    const { done, value } = await this.read();\n    if (done) {\n      if (buffer.length) return streams.concat(buffer);\n      return;\n    }\n    buffer.push(value);\n    bufferLength += value.length;\n    if (bufferLength >= length) {\n      const bufferConcat = streams.concat(buffer);\n      this.unshift(streams.slice(bufferConcat, length));\n      return streams.slice(bufferConcat, 0, length);\n    }\n  }\n};\n\n/**\n * Peek (look ahead) a specific amount of bytes/characters, unless the stream ends before that amount.\n * @returns {Promise<Uint8Array|String|Undefined>}\n * @async\n */\nReader.prototype.peekBytes = async function(length) {\n  const bytes = await this.readBytes(length);\n  this.unshift(bytes);\n  return bytes;\n};\n\n/**\n * Push data to the front of the stream.\n * Data must have been read in the last call to read*.\n * @param {...(Uint8Array|String|Undefined)} values\n */\nReader.prototype.unshift = function(...values) {\n  if (!this[externalBuffer]) {\n    this[externalBuffer] = [];\n  }\n  if (\n    values.length === 1 && isUint8Array(values[0]) &&\n    this[externalBuffer].length && values[0].length &&\n    this[externalBuffer][0].byteOffset >= values[0].length\n  ) {\n    this[externalBuffer][0] = new Uint8Array(\n      this[externalBuffer][0].buffer,\n      this[externalBuffer][0].byteOffset - values[0].length,\n      this[externalBuffer][0].byteLength + values[0].length\n    );\n    return;\n  }\n  this[externalBuffer].unshift(...values.filter(value => value && value.length));\n};\n\n/**\n * Read the stream to the end and return its contents, concatenated by the join function (defaults to streams.concat).\n * @param {Function} join\n * @returns {Promise<Uint8array|String|Any>} the return value of join()\n * @async\n */\nReader.prototype.readToEnd = async function(join=streams.concat) {\n  const result = [];\n  while (true) {\n    const { done, value } = await this.read();\n    if (done) break;\n    result.push(value);\n  }\n  return join(result);\n};\n\nexport { Reader, externalBuffer };\n","import { isNode, isStream, isArrayStream, isUint8Array, concatUint8Array } from './util';\nimport { nodeToWeb, webToNode } from './node-conversions';\nimport { Reader, externalBuffer } from './reader';\nimport { ArrayStream, Writer } from './writer';\n\nlet { ReadableStream, WritableStream, TransformStream } = globalThis;\n\nlet toPonyfillReadable, toNativeReadable;\n\nasync function loadStreamsPonyfill() {\n  if (TransformStream) {\n    return;\n  }\n\n  const [ponyfill, adapter] = await Promise.all([\n    import('web-streams-polyfill/ponyfill/es6'),\n    import('@mattiasbuelens/web-streams-adapter')\n  ]);\n\n  ({ ReadableStream, WritableStream, TransformStream } = ponyfill);\n\n  const { createReadableStreamWrapper } = adapter;\n\n  if (globalThis.ReadableStream && ReadableStream !== globalThis.ReadableStream) {\n    toPonyfillReadable = createReadableStreamWrapper(ReadableStream);\n    toNativeReadable = createReadableStreamWrapper(globalThis.ReadableStream);\n  }\n}\n\nconst NodeBuffer = isNode && require('buffer').Buffer;\n\n/**\n * Convert data to Stream\n * @param {ReadableStream|Uint8array|String} input  data to convert\n * @returns {ReadableStream} Converted data\n */\nfunction toStream(input) {\n  let streamType = isStream(input);\n  if (streamType === 'node') {\n    return nodeToWeb(input);\n  }\n  if (streamType === 'web' && toPonyfillReadable) {\n    return toPonyfillReadable(input);\n  }\n  if (streamType) {\n    return input;\n  }\n  return new ReadableStream({\n    start(controller) {\n      controller.enqueue(input);\n      controller.close();\n    }\n  });\n}\n\n/**\n * Convert data to ArrayStream\n * @param {Object} input  data to convert\n * @returns {ArrayStream} Converted data\n */\nfunction toArrayStream(input) {\n  if (isStream(input)) {\n    return input;\n  }\n  const stream = new ArrayStream();\n  (async () => {\n    const writer = getWriter(stream);\n    await writer.write(input);\n    await writer.close();\n  })();\n  return stream;\n}\n\n/**\n * Concat a list of Uint8Arrays, Strings or Streams\n * The caller should not mix Uint8Arrays with Strings, but may mix Streams with non-Streams.\n * @param {Array<Uint8array|String|ReadableStream>} Array of Uint8Arrays/Strings/Streams to concatenate\n * @returns {Uint8array|String|ReadableStream} Concatenated array\n */\nfunction concat(list) {\n  if (list.some(stream => isStream(stream) && !isArrayStream(stream))) {\n    return concatStream(list);\n  }\n  if (list.some(stream => isArrayStream(stream))) {\n    return concatArrayStream(list);\n  }\n  if (typeof list[0] === 'string') {\n    return list.join('');\n  }\n  if (NodeBuffer && NodeBuffer.isBuffer(list[0])) {\n    return NodeBuffer.concat(list);\n  }\n  return concatUint8Array(list);\n}\n\n/**\n * Concat a list of Streams\n * @param {Array<ReadableStream|Uint8array|String>} list  Array of Uint8Arrays/Strings/Streams to concatenate\n * @returns {ReadableStream} Concatenated list\n */\nfunction concatStream(list) {\n  list = list.map(toStream);\n  const transform = transformWithCancel(async function(reason) {\n    await Promise.all(transforms.map(stream => cancel(stream, reason)));\n  });\n  let prev = Promise.resolve();\n  const transforms = list.map((stream, i) => transformPair(stream, (readable, writable) => {\n    prev = prev.then(() => pipe(readable, transform.writable, {\n      preventClose: i !== list.length - 1\n    }));\n    return prev;\n  }));\n  return transform.readable;\n}\n\n/**\n * Concat a list of ArrayStreams\n * @param {Array<ArrayStream|Uint8array|String>} list  Array of Uint8Arrays/Strings/ArrayStreams to concatenate\n * @returns {ArrayStream} Concatenated streams\n */\nfunction concatArrayStream(list) {\n  const result = new ArrayStream();\n  let prev = Promise.resolve();\n  list.forEach((stream, i) => {\n    prev = prev.then(() => pipe(stream, result, {\n      preventClose: i !== list.length - 1\n    }));\n    return prev;\n  });\n  return result;\n}\n\n/**\n * Get a Reader\n * @param {ReadableStream|Uint8array|String} input\n * @returns {Reader}\n */\nfunction getReader(input) {\n  return new Reader(input);\n}\n\n/**\n * Get a Writer\n * @param {WritableStream} input\n * @returns {Writer}\n */\nfunction getWriter(input) {\n  return new Writer(input);\n}\n\n/**\n * Pipe a readable stream to a writable stream. Don't throw on input stream errors, but forward them to the output stream.\n * @param {ReadableStream|Uint8array|String} input\n * @param {WritableStream} target\n * @param {Object} (optional) options\n * @returns {Promise<undefined>} Promise indicating when piping has finished (input stream closed or errored)\n * @async\n */\nasync function pipe(input, target, {\n  preventClose = false,\n  preventAbort = false,\n  preventCancel = false\n} = {}) {\n  if (isStream(input) && !isArrayStream(input)) {\n    input = toStream(input);\n    try {\n      if (input[externalBuffer]) {\n        const writer = getWriter(target);\n        for (let i = 0; i < input[externalBuffer].length; i++) {\n          await writer.ready;\n          await writer.write(input[externalBuffer][i]);\n        }\n        writer.releaseLock();\n      }\n      await input.pipeTo(target, {\n        preventClose,\n        preventAbort,\n        preventCancel\n      });\n    } catch(e) {}\n    return;\n  }\n  input = toArrayStream(input);\n  const reader = getReader(input);\n  const writer = getWriter(target);\n  try {\n    while (true) {\n      await writer.ready;\n      const { done, value } = await reader.read();\n      if (done) {\n        if (!preventClose) await writer.close();\n        break;\n      }\n      await writer.write(value);\n    }\n  } catch (e) {\n    if (!preventAbort) await writer.abort(e);\n  } finally {\n    reader.releaseLock();\n    writer.releaseLock();\n  }\n}\n\n/**\n * Pipe a readable stream through a transform stream.\n * @param {ReadableStream|Uint8array|String} input\n * @param {Object} (optional) options\n * @returns {ReadableStream} transformed stream\n */\nfunction transformRaw(input, options) {\n  const transformStream = new TransformStream(options);\n  pipe(input, transformStream.writable);\n  return transformStream.readable;\n}\n\n/**\n * Create a cancelable TransformStream.\n * @param {Function} cancel\n * @returns {TransformStream}\n */\nfunction transformWithCancel(customCancel) {\n  let pulled = false;\n  let cancelled = false;\n  let backpressureChangePromiseResolve, backpressureChangePromiseReject;\n  let outputController;\n  return {\n    readable: new ReadableStream({\n      start(controller) {\n        outputController = controller;\n      },\n      pull() {\n        if (backpressureChangePromiseResolve) {\n          backpressureChangePromiseResolve();\n        } else {\n          pulled = true;\n        }\n      },\n      async cancel(reason) {\n        cancelled = true;\n        if (customCancel) {\n          await customCancel(reason);\n        }\n        if (backpressureChangePromiseReject) {\n          backpressureChangePromiseReject(reason);\n        }\n      }\n    }, {highWaterMark: 0}),\n    writable: new WritableStream({\n      write: async function(chunk) {\n        if (cancelled) {\n          throw new Error('Stream is cancelled');\n        }\n        outputController.enqueue(chunk);\n        if (!pulled) {\n          await new Promise((resolve, reject) => {\n            backpressureChangePromiseResolve = resolve;\n            backpressureChangePromiseReject = reject;\n          });\n          backpressureChangePromiseResolve = null;\n          backpressureChangePromiseReject = null;\n        } else {\n          pulled = false;\n        }\n      },\n      close: outputController.close.bind(outputController),\n      abort: outputController.error.bind(outputController)\n    })\n  };\n}\n\n/**\n * Transform a stream using helper functions which are called on each chunk, and on stream close, respectively.\n * @param {ReadableStream|Uint8array|String} input\n * @param {Function} process\n * @param {Function} finish\n * @returns {ReadableStream|Uint8array|String}\n */\nfunction transform(input, process = () => undefined, finish = () => undefined) {\n  if (isArrayStream(input)) {\n    const output = new ArrayStream();\n    (async () => {\n      const writer = getWriter(output);\n      try {\n        const data = await readToEnd(input);\n        const result1 = process(data);\n        const result2 = finish();\n        let result;\n        if (result1 !== undefined && result2 !== undefined) result = concat([result1, result2]);\n        else result = result1 !== undefined ? result1 : result2;\n        await writer.write(result);\n        await writer.close();\n      } catch (e) {\n        await writer.abort(e);\n      }\n    })();\n    return output;\n  }\n  if (isStream(input)) {\n    return transformRaw(input, {\n      async transform(value, controller) {\n        try {\n          const result = await process(value);\n          if (result !== undefined) controller.enqueue(result);\n        } catch(e) {\n          controller.error(e);\n        }\n      },\n      async flush(controller) {\n        try {\n          const result = await finish();\n          if (result !== undefined) controller.enqueue(result);\n        } catch(e) {\n          controller.error(e);\n        }\n      }\n    });\n  }\n  const result1 = process(input);\n  const result2 = finish();\n  if (result1 !== undefined && result2 !== undefined) return concat([result1, result2]);\n  return result1 !== undefined ? result1 : result2;\n}\n\n/**\n * Transform a stream using a helper function which is passed a readable and a writable stream.\n *   This function also maintains the possibility to cancel the input stream,\n *   and does so on cancelation of the output stream, despite cancelation\n *   normally being impossible when the input stream is being read from.\n * @param {ReadableStream|Uint8array|String} input\n * @param {Function} fn\n * @returns {ReadableStream}\n */\nfunction transformPair(input, fn) {\n  if (isStream(input) && !isArrayStream(input)) {\n    let incomingTransformController;\n    const incoming = new TransformStream({\n      start(controller) {\n        incomingTransformController = controller;\n      }\n    });\n\n    const pipeDonePromise = pipe(input, incoming.writable);\n\n    const outgoing = transformWithCancel(async function(reason) {\n      incomingTransformController.error(reason);\n      await pipeDonePromise;\n      await new Promise(setTimeout);\n    });\n    fn(incoming.readable, outgoing.writable);\n    return outgoing.readable;\n  }\n  input = toArrayStream(input);\n  const output = new ArrayStream();\n  fn(input, output);\n  return output;\n}\n\n/**\n * Parse a stream using a helper function which is passed a Reader.\n *   The reader additionally has a remainder() method which returns a\n *   stream pointing to the remainder of input, and is linked to input\n *   for cancelation.\n * @param {ReadableStream|Uint8array|String} input\n * @param {Function} fn\n * @returns {Any} the return value of fn()\n */\nfunction parse(input, fn) {\n  let returnValue;\n  const transformed = transformPair(input, (readable, writable) => {\n    const reader = getReader(readable);\n    reader.remainder = () => {\n      reader.releaseLock();\n      pipe(readable, writable);\n      return transformed;\n    };\n    returnValue = fn(reader);\n  });\n  return returnValue;\n}\n\n/**\n * Tee a Stream for reading it twice. The input stream can no longer be read after tee()ing.\n *   Reading either of the two returned streams will pull from the input stream.\n *   The input stream will only be canceled if both of the returned streams are canceled.\n * @param {ReadableStream|Uint8array|String} input\n * @returns {Array<ReadableStream|Uint8array|String>} array containing two copies of input\n */\nfunction tee(input) {\n  if (isArrayStream(input)) {\n    throw new Error('ArrayStream cannot be tee()d, use clone() instead');\n  }\n  if (isStream(input)) {\n    const teed = toStream(input).tee();\n    teed[0][externalBuffer] = teed[1][externalBuffer] = input[externalBuffer];\n    return teed;\n  }\n  return [slice(input), slice(input)];\n}\n\n/**\n * Clone a Stream for reading it twice. The input stream can still be read after clone()ing.\n *   Reading from the clone will pull from the input stream.\n *   The input stream will only be canceled if both the clone and the input stream are canceled.\n * @param {ReadableStream|Uint8array|String} input\n * @returns {ReadableStream|Uint8array|String} cloned input\n */\nfunction clone(input) {\n  if (isArrayStream(input)) {\n    return input.clone();\n  }\n  if (isStream(input)) {\n    const teed = tee(input);\n    overwrite(input, teed[0]);\n    return teed[1];\n  }\n  return slice(input);\n}\n\n/**\n * Clone a Stream for reading it twice. Data will arrive at the same rate as the input stream is being read.\n *   Reading from the clone will NOT pull from the input stream. Data only arrives when reading the input stream.\n *   The input stream will NOT be canceled if the clone is canceled, only if the input stream are canceled.\n *   If the input stream is canceled, the clone will be errored.\n * @param {ReadableStream|Uint8array|String} input\n * @returns {ReadableStream|Uint8array|String} cloned input\n */\nfunction passiveClone(input) {\n  if (isArrayStream(input)) {\n    return clone(input);\n  }\n  if (isStream(input)) {\n    return new ReadableStream({\n      start(controller) {\n        const transformed = transformPair(input, async (readable, writable) => {\n          const reader = getReader(readable);\n          const writer = getWriter(writable);\n          try {\n            while (true) {\n              await writer.ready;\n              const { done, value } = await reader.read();\n              if (done) {\n                try { controller.close(); } catch(e) {}\n                await writer.close();\n                return;\n              }\n              try { controller.enqueue(value); } catch(e) {}\n              await writer.write(value);\n            }\n          } catch(e) {\n            controller.error(e);\n            await writer.abort(e);\n          }\n        });\n        overwrite(input, transformed);\n      }\n    });\n  }\n  return slice(input);\n}\n\n/**\n * Modify a stream object to point to a different stream object.\n *   This is used internally by clone() and passiveClone() to provide an abstraction over tee().\n * @param {ReadableStream} input\n * @param {ReadableStream} clone\n */\nfunction overwrite(input, clone) {\n  // Overwrite input.getReader, input.locked, etc to point to clone\n  Object.entries(Object.getOwnPropertyDescriptors(input.constructor.prototype)).forEach(([name, descriptor]) => {\n    if (name === 'constructor') {\n      return;\n    }\n    if (descriptor.value) {\n      descriptor.value = descriptor.value.bind(clone);\n    } else {\n      descriptor.get = descriptor.get.bind(clone);\n    }\n    Object.defineProperty(input, name, descriptor);\n  });\n}\n\n/**\n * Return a stream pointing to a part of the input stream.\n * @param {ReadableStream|Uint8array|String} input\n * @returns {ReadableStream|Uint8array|String} clone\n */\nfunction slice(input, begin=0, end=Infinity) {\n  if (isArrayStream(input)) {\n    throw new Error('Not implemented');\n  }\n  if (isStream(input)) {\n    if (begin >= 0 && end >= 0) {\n      let bytesRead = 0;\n      return transformRaw(input, {\n        transform(value, controller) {\n          if (bytesRead < end) {\n            if (bytesRead + value.length >= begin) {\n              controller.enqueue(slice(value, Math.max(begin - bytesRead, 0), end - bytesRead));\n            }\n            bytesRead += value.length;\n          } else {\n            controller.terminate();\n          }\n        }\n      });\n    }\n    if (begin < 0 && (end < 0 || end === Infinity)) {\n      let lastBytes = [];\n      return transform(input, value => {\n        if (value.length >= -begin) lastBytes = [value];\n        else lastBytes.push(value);\n      }, () => slice(concat(lastBytes), begin, end));\n    }\n    if (begin === 0 && end < 0) {\n      let lastBytes;\n      return transform(input, value => {\n        const returnValue = lastBytes ? concat([lastBytes, value]) : value;\n        if (returnValue.length >= -end) {\n          lastBytes = slice(returnValue, end);\n          return slice(returnValue, begin, end);\n        } else {\n          lastBytes = returnValue;\n        }\n      });\n    }\n    console.warn(`stream.slice(input, ${begin}, ${end}) not implemented efficiently.`);\n    return fromAsync(async () => slice(await readToEnd(input), begin, end));\n  }\n  if (input[externalBuffer]) {\n    input = concat(input[externalBuffer].concat([input]));\n  }\n  if (isUint8Array(input) && !(NodeBuffer && NodeBuffer.isBuffer(input))) {\n    if (end === Infinity) end = input.length;\n    return input.subarray(begin, end);\n  }\n  return input.slice(begin, end);\n}\n\n/**\n * Read a stream to the end and return its contents, concatenated by the join function (defaults to concat).\n * @param {ReadableStream|Uint8array|String} input\n * @param {Function} join\n * @returns {Promise<Uint8array|String|Any>} the return value of join()\n * @async\n */\nasync function readToEnd(input, join=concat) {\n  if (isArrayStream(input)) {\n    return input.readToEnd(join);\n  }\n  if (isStream(input)) {\n    return getReader(input).readToEnd(join);\n  }\n  return input;\n}\n\n/**\n * Cancel a stream.\n * @param {ReadableStream|Uint8array|String} input\n * @param {Any} reason\n * @returns {Promise<Any>} indicates when the stream has been canceled\n * @async\n */\nasync function cancel(input, reason) {\n  if (isStream(input)) {\n    if (input.cancel) {\n      return input.cancel(reason);\n    }\n    if (input.destroy) {\n      input.destroy(reason);\n      await new Promise(setTimeout);\n      return reason;\n    }\n  }\n}\n\n/**\n * Convert an async function to an ArrayStream. When the function returns, its return value is written to the stream.\n * @param {Function} fn\n * @returns {ArrayStream}\n */\nfunction fromAsync(fn) {\n  const arrayStream = new ArrayStream();\n  (async () => {\n    const writer = getWriter(arrayStream);\n    try {\n      await writer.write(await fn());\n      await writer.close();\n    } catch (e) {\n      await writer.abort(e);\n    }\n  })();\n  return arrayStream;\n}\n\n\nexport { ReadableStream, WritableStream, TransformStream, ArrayStream, loadStreamsPonyfill, isStream, isArrayStream, isUint8Array, toStream, toPonyfillReadable, toNativeReadable, concatUint8Array, concatStream, concat, getReader, getWriter, pipe, transformRaw, transform, transformPair, parse, clone, passiveClone, slice, readToEnd, cancel, fromAsync, nodeToWeb, webToNode };\n","/* eslint-disable new-cap */\n\n/**\n * @fileoverview\n * BigInteger implementation of basic operations\n * that wraps the native BigInt library.\n * Operations are not constant time,\n * but we try and limit timing leakage where we can\n * @module biginteger/native\n * @private\n */\n\n/**\n * @private\n */\nexport default class BigInteger {\n  /**\n   * Get a BigInteger (input must be big endian for strings and arrays)\n   * @param {Number|String|Uint8Array} n - Value to convert\n   * @throws {Error} on null or undefined input\n   */\n  constructor(n) {\n    if (n === undefined) {\n      throw new Error('Invalid BigInteger input');\n    }\n\n    if (n instanceof Uint8Array) {\n      const bytes = n;\n      const hex = new Array(bytes.length);\n      for (let i = 0; i < bytes.length; i++) {\n        const hexByte = bytes[i].toString(16);\n        hex[i] = (bytes[i] <= 0xF) ? ('0' + hexByte) : hexByte;\n      }\n      this.value = BigInt('0x0' + hex.join(''));\n    } else {\n      this.value = BigInt(n);\n    }\n  }\n\n  clone() {\n    return new BigInteger(this.value);\n  }\n\n  /**\n   * BigInteger increment in place\n   */\n  iinc() {\n    this.value++;\n    return this;\n  }\n\n  /**\n   * BigInteger increment\n   * @returns {BigInteger} this + 1.\n   */\n  inc() {\n    return this.clone().iinc();\n  }\n\n  /**\n   * BigInteger decrement in place\n   */\n  idec() {\n    this.value--;\n    return this;\n  }\n\n  /**\n   * BigInteger decrement\n   * @returns {BigInteger} this - 1.\n   */\n  dec() {\n    return this.clone().idec();\n  }\n\n  /**\n   * BigInteger addition in place\n   * @param {BigInteger} x - Value to add\n   */\n  iadd(x) {\n    this.value += x.value;\n    return this;\n  }\n\n  /**\n   * BigInteger addition\n   * @param {BigInteger} x - Value to add\n   * @returns {BigInteger} this + x.\n   */\n  add(x) {\n    return this.clone().iadd(x);\n  }\n\n  /**\n   * BigInteger subtraction in place\n   * @param {BigInteger} x - Value to subtract\n   */\n  isub(x) {\n    this.value -= x.value;\n    return this;\n  }\n\n  /**\n   * BigInteger subtraction\n   * @param {BigInteger} x - Value to subtract\n   * @returns {BigInteger} this - x.\n   */\n  sub(x) {\n    return this.clone().isub(x);\n  }\n\n  /**\n   * BigInteger multiplication in place\n   * @param {BigInteger} x - Value to multiply\n   */\n  imul(x) {\n    this.value *= x.value;\n    return this;\n  }\n\n  /**\n   * BigInteger multiplication\n   * @param {BigInteger} x - Value to multiply\n   * @returns {BigInteger} this * x.\n   */\n  mul(x) {\n    return this.clone().imul(x);\n  }\n\n  /**\n   * Compute value modulo m, in place\n   * @param {BigInteger} m - Modulo\n   */\n  imod(m) {\n    this.value %= m.value;\n    if (this.isNegative()) {\n      this.iadd(m);\n    }\n    return this;\n  }\n\n  /**\n   * Compute value modulo m\n   * @param {BigInteger} m - Modulo\n   * @returns {BigInteger} this mod m.\n   */\n  mod(m) {\n    return this.clone().imod(m);\n  }\n\n  /**\n   * Compute modular exponentiation using square and multiply\n   * @param {BigInteger} e - Exponent\n   * @param {BigInteger} n - Modulo\n   * @returns {BigInteger} this ** e mod n.\n   */\n  modExp(e, n) {\n    if (n.isZero()) throw Error('Modulo cannot be zero');\n    if (n.isOne()) return new BigInteger(0);\n    if (e.isNegative()) throw Error('Unsopported negative exponent');\n\n    let exp = e.value;\n    let x = this.value;\n\n    x %= n.value;\n    let r = BigInt(1);\n    while (exp > BigInt(0)) {\n      const lsb = exp & BigInt(1);\n      exp >>= BigInt(1); // e / 2\n      // Always compute multiplication step, to reduce timing leakage\n      const rx = (r * x) % n.value;\n      // Update r only if lsb is 1 (odd exponent)\n      r = lsb ? rx : r;\n      x = (x * x) % n.value; // Square\n    }\n    return new BigInteger(r);\n  }\n\n\n  /**\n   * Compute the inverse of this value modulo n\n   * Note: this and and n must be relatively prime\n   * @param {BigInteger} n - Modulo\n   * @returns {BigInteger} x such that this*x = 1 mod n\n   * @throws {Error} if the inverse does not exist\n   */\n  modInv(n) {\n    const { gcd, x } = this._egcd(n);\n    if (!gcd.isOne()) {\n      throw new Error('Inverse does not exist');\n    }\n    return x.add(n).mod(n);\n  }\n\n  /**\n   * Extended Eucleadian algorithm (http://anh.cs.luc.edu/331/notes/xgcd.pdf)\n   * Given a = this and b, compute (x, y) such that ax + by = gdc(a, b)\n   * @param {BigInteger} b - Second operand\n   * @returns {{ gcd, x, y: BigInteger }}\n   */\n  _egcd(b) {\n    let x = BigInt(0);\n    let y = BigInt(1);\n    let xPrev = BigInt(1);\n    let yPrev = BigInt(0);\n\n    let a = this.value;\n    b = b.value;\n\n    while (b !== BigInt(0)) {\n      const q = a / b;\n      let tmp = x;\n      x = xPrev - q * x;\n      xPrev = tmp;\n\n      tmp = y;\n      y = yPrev - q * y;\n      yPrev = tmp;\n\n      tmp = b;\n      b = a % b;\n      a = tmp;\n    }\n\n    return {\n      x: new BigInteger(xPrev),\n      y: new BigInteger(yPrev),\n      gcd: new BigInteger(a)\n    };\n  }\n\n  /**\n   * Compute greatest common divisor between this and n\n   * @param {BigInteger} b - Operand\n   * @returns {BigInteger} gcd\n   */\n  gcd(b) {\n    let a = this.value;\n    b = b.value;\n    while (b !== BigInt(0)) {\n      const tmp = b;\n      b = a % b;\n      a = tmp;\n    }\n    return new BigInteger(a);\n  }\n\n  /**\n   * Shift this to the left by x, in place\n   * @param {BigInteger} x - Shift value\n   */\n  ileftShift(x) {\n    this.value <<= x.value;\n    return this;\n  }\n\n  /**\n   * Shift this to the left by x\n   * @param {BigInteger} x - Shift value\n   * @returns {BigInteger} this << x.\n   */\n  leftShift(x) {\n    return this.clone().ileftShift(x);\n  }\n\n  /**\n   * Shift this to the right by x, in place\n   * @param {BigInteger} x - Shift value\n   */\n  irightShift(x) {\n    this.value >>= x.value;\n    return this;\n  }\n\n  /**\n   * Shift this to the right by x\n   * @param {BigInteger} x - Shift value\n   * @returns {BigInteger} this >> x.\n   */\n  rightShift(x) {\n    return this.clone().irightShift(x);\n  }\n\n  /**\n   * Whether this value is equal to x\n   * @param {BigInteger} x\n   * @returns {Boolean}\n   */\n  equal(x) {\n    return this.value === x.value;\n  }\n\n  /**\n   * Whether this value is less than x\n   * @param {BigInteger} x\n   * @returns {Boolean}\n   */\n  lt(x) {\n    return this.value < x.value;\n  }\n\n  /**\n   * Whether this value is less than or equal to x\n   * @param {BigInteger} x\n   * @returns {Boolean}\n   */\n  lte(x) {\n    return this.value <= x.value;\n  }\n\n  /**\n   * Whether this value is greater than x\n   * @param {BigInteger} x\n   * @returns {Boolean}\n   */\n  gt(x) {\n    return this.value > x.value;\n  }\n\n  /**\n   * Whether this value is greater than or equal to x\n   * @param {BigInteger} x\n   * @returns {Boolean}\n   */\n  gte(x) {\n    return this.value >= x.value;\n  }\n\n  isZero() {\n    return this.value === BigInt(0);\n  }\n\n  isOne() {\n    return this.value === BigInt(1);\n  }\n\n  isNegative() {\n    return this.value < BigInt(0);\n  }\n\n  isEven() {\n    return !(this.value & BigInt(1));\n  }\n\n  abs() {\n    const res = this.clone();\n    if (this.isNegative()) {\n      res.value = -res.value;\n    }\n    return res;\n  }\n\n  /**\n   * Get this value as a string\n   * @returns {String} this value.\n   */\n  toString() {\n    return this.value.toString();\n  }\n\n  /**\n   * Get this value as an exact Number (max 53 bits)\n   * Fails if this value is too large\n   * @returns {Number}\n   */\n  toNumber() {\n    const number = Number(this.value);\n    if (number > Number.MAX_SAFE_INTEGER) {\n      // We throw and error to conform with the bn.js implementation\n      throw new Error('Number can only safely store up to 53 bits');\n    }\n    return number;\n  }\n\n  /**\n   * Get value of i-th bit\n   * @param {Number} i - Bit index\n   * @returns {Number} Bit value.\n   */\n  getBit(i) {\n    const bit = (this.value >> BigInt(i)) & BigInt(1);\n    return (bit === BigInt(0)) ? 0 : 1;\n  }\n\n  /**\n   * Compute bit length\n   * @returns {Number} Bit length.\n   */\n  bitLength() {\n    const zero = new BigInteger(0);\n    const one = new BigInteger(1);\n    const negOne = new BigInteger(-1);\n\n    // -1n >> -1n is -1n\n    // 1n >> 1n is 0n\n    const target = this.isNegative() ? negOne : zero;\n    let bitlen = 1;\n    const tmp = this.clone();\n    while (!tmp.irightShift(one).equal(target)) {\n      bitlen++;\n    }\n    return bitlen;\n  }\n\n  /**\n   * Compute byte length\n   * @returns {Number} Byte length.\n   */\n  byteLength() {\n    const zero = new BigInteger(0);\n    const negOne = new BigInteger(-1);\n\n    const target = this.isNegative() ? negOne : zero;\n    const eight = new BigInteger(8);\n    let len = 1;\n    const tmp = this.clone();\n    while (!tmp.irightShift(eight).equal(target)) {\n      len++;\n    }\n    return len;\n  }\n\n  /**\n   * Get Uint8Array representation of this number\n   * @param {String} endian - Endianess of output array (defaults to 'be')\n   * @param {Number} length - Of output array\n   * @returns {Uint8Array}\n   */\n  toUint8Array(endian = 'be', length) {\n    // we get and parse the hex string (https://coolaj86.com/articles/convert-js-bigints-to-typedarrays/)\n    // this is faster than shift+mod iterations\n    let hex = this.value.toString(16);\n    if (hex.length % 2 === 1) {\n      hex = '0' + hex;\n    }\n\n    const rawLength = hex.length / 2;\n    const bytes = new Uint8Array(length || rawLength);\n    // parse hex\n    const offset = length ? (length - rawLength) : 0;\n    let i = 0;\n    while (i < rawLength) {\n      bytes[i + offset] = parseInt(hex.slice(2 * i, 2 * i + 2), 16);\n      i++;\n    }\n\n    if (endian !== 'be') {\n      bytes.reverse();\n    }\n\n    return bytes;\n  }\n}\n","import BigInteger from './native.interface';\n\nconst detectBigInt = () => typeof BigInt !== 'undefined';\n\nasync function getBigInteger() {\n  if (detectBigInt()) {\n    return BigInteger;\n  } else {\n    const { default: BigInteger } = await import('./bn.interface');\n    return BigInteger;\n  }\n}\n\nexport { getBigInteger };\n","/**\n * @module enums\n */\n\nconst byValue = Symbol('byValue');\n\nexport default {\n\n  /** Maps curve names under various standards to one\n   * @see {@link https://wiki.gnupg.org/ECC|ECC - GnuPG wiki}\n   * @enum {String}\n   * @readonly\n   */\n  curve: {\n    /** NIST P-256 Curve */\n    'p256':                'p256',\n    'P-256':               'p256',\n    'secp256r1':           'p256',\n    'prime256v1':          'p256',\n    '1.2.840.10045.3.1.7': 'p256',\n    '2a8648ce3d030107':    'p256',\n    '2A8648CE3D030107':    'p256',\n\n    /** NIST P-384 Curve */\n    'p384':         'p384',\n    'P-384':        'p384',\n    'secp384r1':    'p384',\n    '1.3.132.0.34': 'p384',\n    '2b81040022':   'p384',\n    '2B81040022':   'p384',\n\n    /** NIST P-521 Curve */\n    'p521':         'p521',\n    'P-521':        'p521',\n    'secp521r1':    'p521',\n    '1.3.132.0.35': 'p521',\n    '2b81040023':   'p521',\n    '2B81040023':   'p521',\n\n    /** SECG SECP256k1 Curve */\n    'secp256k1':    'secp256k1',\n    '1.3.132.0.10': 'secp256k1',\n    '2b8104000a':   'secp256k1',\n    '2B8104000A':   'secp256k1',\n\n    /** Ed25519 - deprecated by crypto-refresh (replaced by standaone Ed25519 algo) */\n    'ed25519Legacy':          'ed25519',\n    'ED25519':                'ed25519',\n    /** @deprecated use `ed25519Legacy` instead */\n    'ed25519':                'ed25519',\n    'Ed25519':                'ed25519',\n    '1.3.6.1.4.1.11591.15.1': 'ed25519',\n    '2b06010401da470f01':     'ed25519',\n    '2B06010401DA470F01':     'ed25519',\n\n    /** Curve25519 - deprecated by crypto-refresh (replaced by standaone X25519 algo) */\n    'curve25519Legacy':       'curve25519',\n    'X25519':                 'curve25519',\n    'cv25519':                'curve25519',\n    /** @deprecated use `curve25519Legacy` instead */\n    'curve25519':             'curve25519',\n    'Curve25519':             'curve25519',\n    '1.3.6.1.4.1.3029.1.5.1': 'curve25519',\n    '2b060104019755010501':   'curve25519',\n    '2B060104019755010501':   'curve25519',\n\n    /** BrainpoolP256r1 Curve */\n    'brainpoolP256r1':       'brainpoolP256r1',\n    '1.3.36.3.3.2.8.1.1.7':  'brainpoolP256r1',\n    '2b2403030208010107':    'brainpoolP256r1',\n    '2B2403030208010107':    'brainpoolP256r1',\n\n    /** BrainpoolP384r1 Curve */\n    'brainpoolP384r1':       'brainpoolP384r1',\n    '1.3.36.3.3.2.8.1.1.11': 'brainpoolP384r1',\n    '2b240303020801010b':    'brainpoolP384r1',\n    '2B240303020801010B':    'brainpoolP384r1',\n\n    /** BrainpoolP512r1 Curve */\n    'brainpoolP512r1':       'brainpoolP512r1',\n    '1.3.36.3.3.2.8.1.1.13': 'brainpoolP512r1',\n    '2b240303020801010d':    'brainpoolP512r1',\n    '2B240303020801010D':    'brainpoolP512r1'\n  },\n\n  /** A string to key specifier type\n   * @enum {Integer}\n   * @readonly\n   */\n  s2k: {\n    simple: 0,\n    salted: 1,\n    iterated: 3,\n    gnu: 101\n  },\n\n  /** {@link https://tools.ietf.org/html/draft-ietf-openpgp-crypto-refresh-08.html#section-9.1|crypto-refresh RFC, section 9.1}\n   * @enum {Integer}\n   * @readonly\n   */\n  publicKey: {\n    /** RSA (Encrypt or Sign) [HAC] */\n    rsaEncryptSign: 1,\n    /** RSA (Encrypt only) [HAC] */\n    rsaEncrypt: 2,\n    /** RSA (Sign only) [HAC] */\n    rsaSign: 3,\n    /** Elgamal (Encrypt only) [ELGAMAL] [HAC] */\n    elgamal: 16,\n    /** DSA (Sign only) [FIPS186] [HAC] */\n    dsa: 17,\n    /** ECDH (Encrypt only) [RFC6637] */\n    ecdh: 18,\n    /** ECDSA (Sign only) [RFC6637] */\n    ecdsa: 19,\n    /** EdDSA (Sign only) - deprecated by crypto-refresh (replaced by `ed25519` identifier below)\n     * [{@link https://tools.ietf.org/html/draft-koch-eddsa-for-openpgp-04|Draft RFC}] */\n    eddsaLegacy: 22, // NB: this is declared before `eddsa` to translate 22 to 'eddsa' for backwards compatibility\n    /** @deprecated use `eddsaLegacy` instead */\n    ed25519Legacy: 22,\n    /** @deprecated use `eddsaLegacy` instead */\n    eddsa: 22,\n    /** Reserved for AEDH */\n    aedh: 23,\n    /** Reserved for AEDSA */\n    aedsa: 24,\n    /** X25519 (Encrypt only) */\n    x25519: 25,\n    /** X448 (Encrypt only) */\n    x448: 26,\n    /** Ed25519 (Sign only) */\n    ed25519: 27,\n    /** Ed448 (Sign only) */\n    ed448: 28\n  },\n\n  /** {@link https://tools.ietf.org/html/rfc4880#section-9.2|RFC4880, section 9.2}\n   * @enum {Integer}\n   * @readonly\n   */\n  symmetric: {\n    plaintext: 0,\n    /** Not implemented! */\n    idea: 1,\n    tripledes: 2,\n    cast5: 3,\n    blowfish: 4,\n    aes128: 7,\n    aes192: 8,\n    aes256: 9,\n    twofish: 10\n  },\n\n  /** {@link https://tools.ietf.org/html/rfc4880#section-9.3|RFC4880, section 9.3}\n   * @enum {Integer}\n   * @readonly\n   */\n  compression: {\n    uncompressed: 0,\n    /** RFC1951 */\n    zip: 1,\n    /** RFC1950 */\n    zlib: 2,\n    bzip2: 3\n  },\n\n  /** {@link https://tools.ietf.org/html/rfc4880#section-9.4|RFC4880, section 9.4}\n   * @enum {Integer}\n   * @readonly\n   */\n  hash: {\n    md5: 1,\n    sha1: 2,\n    ripemd: 3,\n    sha256: 8,\n    sha384: 9,\n    sha512: 10,\n    sha224: 11\n  },\n\n  /** A list of hash names as accepted by webCrypto functions.\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest|Parameters, algo}\n   * @enum {String}\n   */\n  webHash: {\n    'SHA-1': 2,\n    'SHA-256': 8,\n    'SHA-384': 9,\n    'SHA-512': 10\n  },\n\n  /** {@link https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-04#section-9.6|RFC4880bis-04, section 9.6}\n   * @enum {Integer}\n   * @readonly\n   */\n  aead: {\n    eax: 1,\n    ocb: 2,\n    experimentalGCM: 100 // Private algorithm\n  },\n\n  /** A list of packet types and numeric tags associated with them.\n   * @enum {Integer}\n   * @readonly\n   */\n  packet: {\n    publicKeyEncryptedSessionKey: 1,\n    signature: 2,\n    symEncryptedSessionKey: 3,\n    onePassSignature: 4,\n    secretKey: 5,\n    publicKey: 6,\n    secretSubkey: 7,\n    compressedData: 8,\n    symmetricallyEncryptedData: 9,\n    marker: 10,\n    literalData: 11,\n    trust: 12,\n    userID: 13,\n    publicSubkey: 14,\n    userAttribute: 17,\n    symEncryptedIntegrityProtectedData: 18,\n    modificationDetectionCode: 19,\n    aeadEncryptedData: 20 // see IETF draft: https://tools.ietf.org/html/draft-ford-openpgp-format-00#section-2.1\n  },\n\n  /** Data types in the literal packet\n   * @enum {Integer}\n   * @readonly\n   */\n  literal: {\n    /** Binary data 'b' */\n    binary: 'b'.charCodeAt(),\n    /** Text data 't' */\n    text: 't'.charCodeAt(),\n    /** Utf8 data 'u' */\n    utf8: 'u'.charCodeAt(),\n    /** MIME message body part 'm' */\n    mime: 'm'.charCodeAt()\n  },\n\n\n  /** One pass signature packet type\n   * @enum {Integer}\n   * @readonly\n   */\n  signature: {\n    /** 0x00: Signature of a binary document. */\n    binary: 0,\n    /** 0x01: Signature of a canonical text document.\n     *\n     * Canonicalyzing the document by converting line endings. */\n    text: 1,\n    /** 0x02: Standalone signature.\n     *\n     * This signature is a signature of only its own subpacket contents.\n     * It is calculated identically to a signature over a zero-lengh\n     * binary document.  Note that it doesn't make sense to have a V3\n     * standalone signature. */\n    standalone: 2,\n    /** 0x10: Generic certification of a User ID and Public-Key packet.\n     *\n     * The issuer of this certification does not make any particular\n     * assertion as to how well the certifier has checked that the owner\n     * of the key is in fact the person described by the User ID. */\n    certGeneric: 16,\n    /** 0x11: Persona certification of a User ID and Public-Key packet.\n     *\n     * The issuer of this certification has not done any verification of\n     * the claim that the owner of this key is the User ID specified. */\n    certPersona: 17,\n    /** 0x12: Casual certification of a User ID and Public-Key packet.\n     *\n     * The issuer of this certification has done some casual\n     * verification of the claim of identity. */\n    certCasual: 18,\n    /** 0x13: Positive certification of a User ID and Public-Key packet.\n     *\n     * The issuer of this certification has done substantial\n     * verification of the claim of identity.\n     *\n     * Most OpenPGP implementations make their \"key signatures\" as 0x10\n     * certifications.  Some implementations can issue 0x11-0x13\n     * certifications, but few differentiate between the types. */\n    certPositive: 19,\n    /** 0x30: Certification revocation signature\n     *\n     * This signature revokes an earlier User ID certification signature\n     * (signature class 0x10 through 0x13) or direct-key signature\n     * (0x1F).  It should be issued by the same key that issued the\n     * revoked signature or an authorized revocation key.  The signature\n     * is computed over the same data as the certificate that it\n     * revokes, and should have a later creation date than that\n     * certificate. */\n    certRevocation: 48,\n    /** 0x18: Subkey Binding Signature\n     *\n     * This signature is a statement by the top-level signing key that\n     * indicates that it owns the subkey.  This signature is calculated\n     * directly on the primary key and subkey, and not on any User ID or\n     * other packets.  A signature that binds a signing subkey MUST have\n     * an Embedded Signature subpacket in this binding signature that\n     * contains a 0x19 signature made by the signing subkey on the\n     * primary key and subkey. */\n    subkeyBinding: 24,\n    /** 0x19: Primary Key Binding Signature\n     *\n     * This signature is a statement by a signing subkey, indicating\n     * that it is owned by the primary key and subkey.  This signature\n     * is calculated the same way as a 0x18 signature: directly on the\n     * primary key and subkey, and not on any User ID or other packets.\n     *\n     * When a signature is made over a key, the hash data starts with the\n     * octet 0x99, followed by a two-octet length of the key, and then body\n     * of the key packet.  (Note that this is an old-style packet header for\n     * a key packet with two-octet length.)  A subkey binding signature\n     * (type 0x18) or primary key binding signature (type 0x19) then hashes\n     * the subkey using the same format as the main key (also using 0x99 as\n     * the first octet). */\n    keyBinding: 25,\n    /** 0x1F: Signature directly on a key\n     *\n     * This signature is calculated directly on a key.  It binds the\n     * information in the Signature subpackets to the key, and is\n     * appropriate to be used for subpackets that provide information\n     * about the key, such as the Revocation Key subpacket.  It is also\n     * appropriate for statements that non-self certifiers want to make\n     * about the key itself, rather than the binding between a key and a\n     * name. */\n    key: 31,\n    /** 0x20: Key revocation signature\n     *\n     * The signature is calculated directly on the key being revoked.  A\n     * revoked key is not to be used.  Only revocation signatures by the\n     * key being revoked, or by an authorized revocation key, should be\n     * considered valid revocation signatures.a */\n    keyRevocation: 32,\n    /** 0x28: Subkey revocation signature\n     *\n     * The signature is calculated directly on the subkey being revoked.\n     * A revoked subkey is not to be used.  Only revocation signatures\n     * by the top-level signature key that is bound to this subkey, or\n     * by an authorized revocation key, should be considered valid\n     * revocation signatures.\n     *\n     * Key revocation signatures (types 0x20 and 0x28)\n     * hash only the key being revoked. */\n    subkeyRevocation: 40,\n    /** 0x40: Timestamp signature.\n     * This signature is only meaningful for the timestamp contained in\n     * it. */\n    timestamp: 64,\n    /** 0x50: Third-Party Confirmation signature.\n     *\n     * This signature is a signature over some other OpenPGP Signature\n     * packet(s).  It is analogous to a notary seal on the signed data.\n     * A third-party signature SHOULD include Signature Target\n     * subpacket(s) to give easy identification.  Note that we really do\n     * mean SHOULD.  There are plausible uses for this (such as a blind\n     * party that only sees the signature, not the key or source\n     * document) that cannot include a target subpacket. */\n    thirdParty: 80\n  },\n\n  /** Signature subpacket type\n   * @enum {Integer}\n   * @readonly\n   */\n  signatureSubpacket: {\n    signatureCreationTime: 2,\n    signatureExpirationTime: 3,\n    exportableCertification: 4,\n    trustSignature: 5,\n    regularExpression: 6,\n    revocable: 7,\n    keyExpirationTime: 9,\n    placeholderBackwardsCompatibility: 10,\n    preferredSymmetricAlgorithms: 11,\n    revocationKey: 12,\n    issuer: 16,\n    notationData: 20,\n    preferredHashAlgorithms: 21,\n    preferredCompressionAlgorithms: 22,\n    keyServerPreferences: 23,\n    preferredKeyServer: 24,\n    primaryUserID: 25,\n    policyURI: 26,\n    keyFlags: 27,\n    signersUserID: 28,\n    reasonForRevocation: 29,\n    features: 30,\n    signatureTarget: 31,\n    embeddedSignature: 32,\n    issuerFingerprint: 33,\n    preferredAEADAlgorithms: 34\n  },\n\n  /** Key flags\n   * @enum {Integer}\n   * @readonly\n   */\n  keyFlags: {\n    /** 0x01 - This key may be used to certify other keys. */\n    certifyKeys: 1,\n    /** 0x02 - This key may be used to sign data. */\n    signData: 2,\n    /** 0x04 - This key may be used to encrypt communications. */\n    encryptCommunication: 4,\n    /** 0x08 - This key may be used to encrypt storage. */\n    encryptStorage: 8,\n    /** 0x10 - The private component of this key may have been split\n     *        by a secret-sharing mechanism. */\n    splitPrivateKey: 16,\n    /** 0x20 - This key may be used for authentication. */\n    authentication: 32,\n    /** 0x80 - The private component of this key may be in the\n     *        possession of more than one person. */\n    sharedPrivateKey: 128\n  },\n\n  /** Armor type\n   * @enum {Integer}\n   * @readonly\n   */\n  armor: {\n    multipartSection: 0,\n    multipartLast: 1,\n    signed: 2,\n    message: 3,\n    publicKey: 4,\n    privateKey: 5,\n    signature: 6\n  },\n\n  /** {@link https://tools.ietf.org/html/rfc4880#section-5.2.3.23|RFC4880, section 5.2.3.23}\n   * @enum {Integer}\n   * @readonly\n   */\n  reasonForRevocation: {\n    /** No reason specified (key revocations or cert revocations) */\n    noReason: 0,\n    /** Key is superseded (key revocations) */\n    keySuperseded: 1,\n    /** Key material has been compromised (key revocations) */\n    keyCompromised: 2,\n    /** Key is retired and no longer used (key revocations) */\n    keyRetired: 3,\n    /** User ID information is no longer valid (cert revocations) */\n    userIDInvalid: 32\n  },\n\n  /** {@link https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-04#section-5.2.3.25|RFC4880bis-04, section 5.2.3.25}\n   * @enum {Integer}\n   * @readonly\n   */\n  features: {\n    /** 0x01 - Modification Detection (packets 18 and 19) */\n    modificationDetection: 1,\n    /** 0x02 - AEAD Encrypted Data Packet (packet 20) and version 5\n     *         Symmetric-Key Encrypted Session Key Packets (packet 3) */\n    aead: 2,\n    /** 0x04 - Version 5 Public-Key Packet format and corresponding new\n      *        fingerprint format */\n    v5Keys: 4\n  },\n\n  /**\n   * Asserts validity of given value and converts from string/integer to integer.\n   * @param {Object} type target enum type\n   * @param {String|Integer} e value to check and/or convert\n   * @returns {Integer} enum value if it exists\n   * @throws {Error} if the value is invalid\n   */\n  write: function(type, e) {\n    if (typeof e === 'number') {\n      e = this.read(type, e);\n    }\n\n    if (type[e] !== undefined) {\n      return type[e];\n    }\n\n    throw new Error('Invalid enum value.');\n  },\n\n  /**\n   * Converts enum integer value to the corresponding string, if it exists.\n   * @param {Object} type target enum type\n   * @param {Integer} e value to convert\n   * @returns {String} name of enum value if it exists\n   * @throws {Error} if the value is invalid\n   */\n  read: function(type, e) {\n    if (!type[byValue]) {\n      type[byValue] = [];\n      Object.entries(type).forEach(([key, value]) => {\n        type[byValue][value] = key;\n      });\n    }\n\n    if (type[byValue][e] !== undefined) {\n      return type[byValue][e];\n    }\n\n    throw new Error('Invalid enum value.');\n  }\n};\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/* eslint-disable no-console */\n\n/**\n * This object contains utility functions\n * @module util\n * @private\n */\n\nimport * as stream from '@openpgp/web-stream-tools';\nimport { getBigInteger } from './biginteger';\nimport enums from './enums';\n\nconst debugMode = (() => {\n  try {\n    return process.env.NODE_ENV === 'development'; // eslint-disable-line no-process-env\n  } catch (e) {}\n  return false;\n})();\n\nconst util = {\n  isString: function(data) {\n    return typeof data === 'string' || data instanceof String;\n  },\n\n  isArray: function(data) {\n    return data instanceof Array;\n  },\n\n  isUint8Array: stream.isUint8Array,\n\n  isStream: stream.isStream,\n\n  readNumber: function (bytes) {\n    let n = 0;\n    for (let i = 0; i < bytes.length; i++) {\n      n += (256 ** i) * bytes[bytes.length - 1 - i];\n    }\n    return n;\n  },\n\n  writeNumber: function (n, bytes) {\n    const b = new Uint8Array(bytes);\n    for (let i = 0; i < bytes; i++) {\n      b[i] = (n >> (8 * (bytes - i - 1))) & 0xFF;\n    }\n\n    return b;\n  },\n\n  readDate: function (bytes) {\n    const n = util.readNumber(bytes);\n    const d = new Date(n * 1000);\n    return d;\n  },\n\n  writeDate: function (time) {\n    const numeric = Math.floor(time.getTime() / 1000);\n\n    return util.writeNumber(numeric, 4);\n  },\n\n  normalizeDate: function (time = Date.now()) {\n    return time === null || time === Infinity ? time : new Date(Math.floor(+time / 1000) * 1000);\n  },\n\n  /**\n   * Read one MPI from bytes in input\n   * @param {Uint8Array} bytes - Input data to parse\n   * @returns {Uint8Array} Parsed MPI.\n   */\n  readMPI: function (bytes) {\n    const bits = (bytes[0] << 8) | bytes[1];\n    const bytelen = (bits + 7) >>> 3;\n    return bytes.subarray(2, 2 + bytelen);\n  },\n\n  /**\n   * Left-pad Uint8Array to length by adding 0x0 bytes\n   * @param {Uint8Array} bytes - Data to pad\n   * @param {Number} length - Padded length\n   * @returns {Uint8Array} Padded bytes.\n   */\n  leftPad(bytes, length) {\n    const padded = new Uint8Array(length);\n    const offset = length - bytes.length;\n    padded.set(bytes, offset);\n    return padded;\n  },\n\n  /**\n   * Convert a Uint8Array to an MPI-formatted Uint8Array.\n   * @param {Uint8Array} bin - An array of 8-bit integers to convert\n   * @returns {Uint8Array} MPI-formatted Uint8Array.\n   */\n  uint8ArrayToMPI: function (bin) {\n    const bitSize = util.uint8ArrayBitLength(bin);\n    if (bitSize === 0) {\n      throw new Error('Zero MPI');\n    }\n    const stripped = bin.subarray(bin.length - Math.ceil(bitSize / 8));\n    const prefix = new Uint8Array([(bitSize & 0xFF00) >> 8, bitSize & 0xFF]);\n    return util.concatUint8Array([prefix, stripped]);\n  },\n\n  /**\n   * Return bit length of the input data\n   * @param {Uint8Array} bin input data (big endian)\n   * @returns bit length\n   */\n  uint8ArrayBitLength: function (bin) {\n    let i; // index of leading non-zero byte\n    for (i = 0; i < bin.length; i++) if (bin[i] !== 0) break;\n    if (i === bin.length) {\n      return 0;\n    }\n    const stripped = bin.subarray(i);\n    return (stripped.length - 1) * 8 + util.nbits(stripped[0]);\n  },\n\n  /**\n   * Convert a hex string to an array of 8-bit integers\n   * @param {String} hex - A hex string to convert\n   * @returns {Uint8Array} An array of 8-bit integers.\n   */\n  hexToUint8Array: function (hex) {\n    const result = new Uint8Array(hex.length >> 1);\n    for (let k = 0; k < hex.length >> 1; k++) {\n      result[k] = parseInt(hex.substr(k << 1, 2), 16);\n    }\n    return result;\n  },\n\n  /**\n   * Convert an array of 8-bit integers to a hex string\n   * @param {Uint8Array} bytes - Array of 8-bit integers to convert\n   * @returns {String} Hexadecimal representation of the array.\n   */\n  uint8ArrayToHex: function (bytes) {\n    const r = [];\n    const e = bytes.length;\n    let c = 0;\n    let h;\n    while (c < e) {\n      h = bytes[c++].toString(16);\n      while (h.length < 2) {\n        h = '0' + h;\n      }\n      r.push('' + h);\n    }\n    return r.join('');\n  },\n\n  /**\n   * Convert a string to an array of 8-bit integers\n   * @param {String} str - String to convert\n   * @returns {Uint8Array} An array of 8-bit integers.\n   */\n  stringToUint8Array: function (str) {\n    return stream.transform(str, str => {\n      if (!util.isString(str)) {\n        throw new Error('stringToUint8Array: Data must be in the form of a string');\n      }\n\n      const result = new Uint8Array(str.length);\n      for (let i = 0; i < str.length; i++) {\n        result[i] = str.charCodeAt(i);\n      }\n      return result;\n    });\n  },\n\n  /**\n   * Convert an array of 8-bit integers to a string\n   * @param {Uint8Array} bytes - An array of 8-bit integers to convert\n   * @returns {String} String representation of the array.\n   */\n  uint8ArrayToString: function (bytes) {\n    bytes = new Uint8Array(bytes);\n    const result = [];\n    const bs = 1 << 14;\n    const j = bytes.length;\n\n    for (let i = 0; i < j; i += bs) {\n      result.push(String.fromCharCode.apply(String, bytes.subarray(i, i + bs < j ? i + bs : j)));\n    }\n    return result.join('');\n  },\n\n  /**\n   * Convert a native javascript string to a Uint8Array of utf8 bytes\n   * @param {String|ReadableStream} str - The string to convert\n   * @returns {Uint8Array|ReadableStream} A valid squence of utf8 bytes.\n   */\n  encodeUTF8: function (str) {\n    const encoder = new TextEncoder('utf-8');\n    // eslint-disable-next-line no-inner-declarations\n    function process(value, lastChunk = false) {\n      return encoder.encode(value, { stream: !lastChunk });\n    }\n    return stream.transform(str, process, () => process('', true));\n  },\n\n  /**\n   * Convert a Uint8Array of utf8 bytes to a native javascript string\n   * @param {Uint8Array|ReadableStream} utf8 - A valid squence of utf8 bytes\n   * @returns {String|ReadableStream} A native javascript string.\n   */\n  decodeUTF8: function (utf8) {\n    const decoder = new TextDecoder('utf-8');\n    // eslint-disable-next-line no-inner-declarations\n    function process(value, lastChunk = false) {\n      return decoder.decode(value, { stream: !lastChunk });\n    }\n    return stream.transform(utf8, process, () => process(new Uint8Array(), true));\n  },\n\n  /**\n   * Concat a list of Uint8Arrays, Strings or Streams\n   * The caller must not mix Uint8Arrays with Strings, but may mix Streams with non-Streams.\n   * @param {Array<Uint8Array|String|ReadableStream>} Array - Of Uint8Arrays/Strings/Streams to concatenate\n   * @returns {Uint8Array|String|ReadableStream} Concatenated array.\n   */\n  concat: stream.concat,\n\n  /**\n   * Concat Uint8Arrays\n   * @param {Array<Uint8Array>} Array - Of Uint8Arrays to concatenate\n   * @returns {Uint8Array} Concatenated array.\n   */\n  concatUint8Array: stream.concatUint8Array,\n\n  /**\n   * Check Uint8Array equality\n   * @param {Uint8Array} array1 - First array\n   * @param {Uint8Array} array2 - Second array\n   * @returns {Boolean} Equality.\n   */\n  equalsUint8Array: function (array1, array2) {\n    if (!util.isUint8Array(array1) || !util.isUint8Array(array2)) {\n      throw new Error('Data must be in the form of a Uint8Array');\n    }\n\n    if (array1.length !== array2.length) {\n      return false;\n    }\n\n    for (let i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  },\n\n  /**\n   * Calculates a 16bit sum of a Uint8Array by adding each character\n   * codes modulus 65535\n   * @param {Uint8Array} Uint8Array - To create a sum of\n   * @returns {Uint8Array} 2 bytes containing the sum of all charcodes % 65535.\n   */\n  writeChecksum: function (text) {\n    let s = 0;\n    for (let i = 0; i < text.length; i++) {\n      s = (s + text[i]) & 0xFFFF;\n    }\n    return util.writeNumber(s, 2);\n  },\n\n  /**\n   * Helper function to print a debug message. Debug\n   * messages are only printed if\n   * @param {String} str - String of the debug message\n   */\n  printDebug: function (str) {\n    if (debugMode) {\n      console.log('[OpenPGP.js debug]', str);\n    }\n  },\n\n  /**\n   * Helper function to print a debug error. Debug\n   * messages are only printed if\n   * @param {String} str - String of the debug message\n   */\n  printDebugError: function (error) {\n    if (debugMode) {\n      console.error('[OpenPGP.js debug]', error);\n    }\n  },\n\n  // returns bit length of the integer x\n  nbits: function (x) {\n    let r = 1;\n    let t = x >>> 16;\n    if (t !== 0) {\n      x = t;\n      r += 16;\n    }\n    t = x >> 8;\n    if (t !== 0) {\n      x = t;\n      r += 8;\n    }\n    t = x >> 4;\n    if (t !== 0) {\n      x = t;\n      r += 4;\n    }\n    t = x >> 2;\n    if (t !== 0) {\n      x = t;\n      r += 2;\n    }\n    t = x >> 1;\n    if (t !== 0) {\n      x = t;\n      r += 1;\n    }\n    return r;\n  },\n\n  /**\n   * If S[1] == 0, then double(S) == (S[2..128] || 0);\n   * otherwise, double(S) == (S[2..128] || 0) xor\n   * (zeros(120) || 10000111).\n   *\n   * Both OCB and EAX (through CMAC) require this function to be constant-time.\n   *\n   * @param {Uint8Array} data\n   */\n  double: function(data) {\n    const doubleVar = new Uint8Array(data.length);\n    const last = data.length - 1;\n    for (let i = 0; i < last; i++) {\n      doubleVar[i] = (data[i] << 1) ^ (data[i + 1] >> 7);\n    }\n    doubleVar[last] = (data[last] << 1) ^ ((data[0] >> 7) * 0x87);\n    return doubleVar;\n  },\n\n  /**\n   * Shift a Uint8Array to the right by n bits\n   * @param {Uint8Array} array - The array to shift\n   * @param {Integer} bits - Amount of bits to shift (MUST be smaller\n   * than 8)\n   * @returns {String} Resulting array.\n   */\n  shiftRight: function (array, bits) {\n    if (bits) {\n      for (let i = array.length - 1; i >= 0; i--) {\n        array[i] >>= bits;\n        if (i > 0) {\n          array[i] |= (array[i - 1] << (8 - bits));\n        }\n      }\n    }\n    return array;\n  },\n\n  /**\n   * Get native Web Cryptography api, only the current version of the spec.\n   * @returns {Object} The SubtleCrypto api or 'undefined'.\n   */\n  getWebCrypto: function() {\n    return typeof globalThis !== 'undefined' && globalThis.crypto && globalThis.crypto.subtle;\n  },\n\n  /**\n   * Get BigInteger class\n   * It wraps the native BigInt type if it's available\n   * Otherwise it relies on bn.js\n   * @returns {BigInteger}\n   * @async\n   */\n  getBigInteger,\n\n  /**\n   * Get native Node.js crypto api.\n   * @returns {Object} The crypto module or 'undefined'.\n   */\n  getNodeCrypto: function() {\n    return require('crypto');\n  },\n\n  getNodeZlib: function() {\n    return require('zlib');\n  },\n\n  /**\n   * Get native Node.js Buffer constructor. This should be used since\n   * Buffer is not available under browserify.\n   * @returns {Function} The Buffer constructor or 'undefined'.\n   */\n  getNodeBuffer: function() {\n    return (require('buffer') || {}).Buffer;\n  },\n\n  getHardwareConcurrency: function() {\n    if (typeof navigator !== 'undefined') {\n      return navigator.hardwareConcurrency || 1;\n    }\n\n    const os = require('os'); // Assume we're on Node.js.\n    return os.cpus().length;\n  },\n\n  isEmailAddress: function(data) {\n    if (!util.isString(data)) {\n      return false;\n    }\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+([a-zA-Z]{2,}[0-9]*|xn--[a-zA-Z\\-0-9]+)))$/;\n    return re.test(data);\n  },\n\n  /**\n   * Normalize line endings to <CR><LF>\n   * Support any encoding where CR=0x0D, LF=0x0A\n   */\n  canonicalizeEOL: function(data) {\n    const CR = 13;\n    const LF = 10;\n    let carryOverCR = false;\n\n    return stream.transform(data, bytes => {\n      if (carryOverCR) {\n        bytes = util.concatUint8Array([new Uint8Array([CR]), bytes]);\n      }\n\n      if (bytes[bytes.length - 1] === CR) {\n        carryOverCR = true;\n        bytes = bytes.subarray(0, -1);\n      } else {\n        carryOverCR = false;\n      }\n\n      let index;\n      const indices = [];\n      for (let i = 0; ; i = index) {\n        index = bytes.indexOf(LF, i) + 1;\n        if (index) {\n          if (bytes[index - 2] !== CR) indices.push(index);\n        } else {\n          break;\n        }\n      }\n      if (!indices.length) {\n        return bytes;\n      }\n\n      const normalized = new Uint8Array(bytes.length + indices.length);\n      let j = 0;\n      for (let i = 0; i < indices.length; i++) {\n        const sub = bytes.subarray(indices[i - 1] || 0, indices[i]);\n        normalized.set(sub, j);\n        j += sub.length;\n        normalized[j - 1] = CR;\n        normalized[j] = LF;\n        j++;\n      }\n      normalized.set(bytes.subarray(indices[indices.length - 1] || 0), j);\n      return normalized;\n    }, () => (carryOverCR ? new Uint8Array([CR]) : undefined));\n  },\n\n  /**\n   * Convert line endings from canonicalized <CR><LF> to native <LF>\n   * Support any encoding where CR=0x0D, LF=0x0A\n   */\n  nativeEOL: function(data) {\n    const CR = 13;\n    const LF = 10;\n    let carryOverCR = false;\n\n    return stream.transform(data, bytes => {\n      if (carryOverCR && bytes[0] !== LF) {\n        bytes = util.concatUint8Array([new Uint8Array([CR]), bytes]);\n      } else {\n        bytes = new Uint8Array(bytes); // Don't mutate passed bytes\n      }\n\n      if (bytes[bytes.length - 1] === CR) {\n        carryOverCR = true;\n        bytes = bytes.subarray(0, -1);\n      } else {\n        carryOverCR = false;\n      }\n\n      let index;\n      let j = 0;\n      for (let i = 0; i !== bytes.length; i = index) {\n        index = bytes.indexOf(CR, i) + 1;\n        if (!index) index = bytes.length;\n        const last = index - (bytes[index] === LF ? 1 : 0);\n        if (i) bytes.copyWithin(j, i, last);\n        j += last - i;\n      }\n      return bytes.subarray(0, j);\n    }, () => (carryOverCR ? new Uint8Array([CR]) : undefined));\n  },\n\n  /**\n   * Remove trailing spaces, carriage returns and tabs from each line\n   */\n  removeTrailingSpaces: function(text) {\n    return text.split('\\n').map(line => {\n      let i = line.length - 1;\n      for (; i >= 0 && (line[i] === ' ' || line[i] === '\\t' || line[i] === '\\r'); i--);\n      return line.substr(0, i + 1);\n    }).join('\\n');\n  },\n\n  wrapError: function(message, error) {\n    if (!error) {\n      return new Error(message);\n    }\n\n    // update error message\n    try {\n      error.message = message + ': ' + error.message;\n    } catch (e) {}\n\n    return error;\n  },\n\n  /**\n   * Map allowed packet tags to corresponding classes\n   * Meant to be used to format `allowedPacket` for Packetlist.read\n   * @param {Array<Object>} allowedClasses\n   * @returns {Object} map from enum.packet to corresponding *Packet class\n   */\n  constructAllowedPackets: function(allowedClasses) {\n    const map = {};\n    allowedClasses.forEach(PacketClass => {\n      if (!PacketClass.tag) {\n        throw new Error('Invalid input: expected a packet class');\n      }\n      map[PacketClass.tag] = PacketClass;\n    });\n    return map;\n  },\n\n  /**\n   * Return a Promise that will resolve as soon as one of the promises in input resolves\n   * or will reject if all input promises all rejected\n   * (similar to Promise.any, but with slightly different error handling)\n   * @param {Array<Promise>} promises\n   * @return {Promise<Any>} Promise resolving to the result of the fastest fulfilled promise\n   *                          or rejected with the Error of the last resolved Promise (if all promises are rejected)\n   */\n  anyPromise: function(promises) {\n    // eslint-disable-next-line no-async-promise-executor\n    return new Promise(async (resolve, reject) => {\n      let exception;\n      await Promise.all(promises.map(async promise => {\n        try {\n          resolve(await promise);\n        } catch (e) {\n          exception = e;\n        }\n      }));\n      reject(exception);\n    });\n  },\n\n  /**\n   * Return either `a` or `b` based on `cond`, in algorithmic constant time.\n   * @param {Boolean} cond\n   * @param {Uint8Array} a\n   * @param {Uint8Array} b\n   * @returns `a` if `cond` is true, `b` otherwise\n   */\n  selectUint8Array: function(cond, a, b) {\n    const length = Math.max(a.length, b.length);\n    const result = new Uint8Array(length);\n    let end = 0;\n    for (let i = 0; i < result.length; i++) {\n      result[i] = (a[i] & (256 - cond)) | (b[i] & (255 + cond));\n      end += (cond & i < a.length) | ((1 - cond) & i < b.length);\n    }\n    return result.subarray(0, end);\n  },\n  /**\n   * Return either `a` or `b` based on `cond`, in algorithmic constant time.\n   * NB: it only supports `a, b` with values between 0-255.\n   * @param {Boolean} cond\n   * @param {Uint8} a\n   * @param {Uint8} b\n   * @returns `a` if `cond` is true, `b` otherwise\n   */\n  selectUint8: function(cond, a, b) {\n    return (a & (256 - cond)) | (b & (255 + cond));\n  },\n  /**\n   * @param {module:enums.symmetric} cipherAlgo\n   */\n  isAES: function(cipherAlgo) {\n    return cipherAlgo === enums.symmetric.aes128 || cipherAlgo === enums.symmetric.aes192 || cipherAlgo === enums.symmetric.aes256;\n  }\n};\n\nexport default util;\n","/* OpenPGP radix-64/base64 string encoding/decoding\n * Copyright 2005 Herbert Hanewinkel, www.haneWIN.de\n * version 1.0, check www.haneWIN.de for the latest version\n *\n * This software is provided as-is, without express or implied warranty.\n * Permission to use, copy, modify, distribute or sell this software, with or\n * without fee, for any purpose and by any individual or organization, is hereby\n * granted, provided that the above copyright notice and this paragraph appear\n * in all copies. Distribution as a part of an application or binary must\n * include the above copyright notice in the documentation and/or other materials\n * provided with the application or distribution.\n */\n\n/**\n * @module encoding/base64\n * @private\n */\n\nimport * as stream from '@openpgp/web-stream-tools';\nimport util from '../util';\n\nconst Buffer = util.getNodeBuffer();\n\nlet encodeChunk;\nlet decodeChunk;\nif (Buffer) {\n  encodeChunk = buf => Buffer.from(buf).toString('base64');\n  decodeChunk = str => {\n    const b = Buffer.from(str, 'base64');\n    return new Uint8Array(b.buffer, b.byteOffset, b.byteLength);\n  };\n} else {\n  encodeChunk = buf => btoa(util.uint8ArrayToString(buf));\n  decodeChunk = str => util.stringToUint8Array(atob(str));\n}\n\n/**\n * Convert binary array to radix-64\n * @param {Uint8Array | ReadableStream<Uint8Array>} data - Uint8Array to convert\n * @returns {String | ReadableStream<String>} Radix-64 version of input string.\n * @static\n */\nexport function encode(data) {\n  let buf = new Uint8Array();\n  return stream.transform(data, value => {\n    buf = util.concatUint8Array([buf, value]);\n    const r = [];\n    const bytesPerLine = 45; // 60 chars per line * (3 bytes / 4 chars of base64).\n    const lines = Math.floor(buf.length / bytesPerLine);\n    const bytes = lines * bytesPerLine;\n    const encoded = encodeChunk(buf.subarray(0, bytes));\n    for (let i = 0; i < lines; i++) {\n      r.push(encoded.substr(i * 60, 60));\n      r.push('\\n');\n    }\n    buf = buf.subarray(bytes);\n    return r.join('');\n  }, () => (buf.length ? encodeChunk(buf) + '\\n' : ''));\n}\n\n/**\n * Convert radix-64 to binary array\n * @param {String | ReadableStream<String>} data - Radix-64 string to convert\n * @returns {Uint8Array | ReadableStream<Uint8Array>} Binary array version of input string.\n * @static\n */\nexport function decode(data) {\n  let buf = '';\n  return stream.transform(data, value => {\n    buf += value;\n\n    // Count how many whitespace characters there are in buf\n    let spaces = 0;\n    const spacechars = [' ', '\\t', '\\r', '\\n'];\n    for (let i = 0; i < spacechars.length; i++) {\n      const spacechar = spacechars[i];\n      for (let pos = buf.indexOf(spacechar); pos !== -1; pos = buf.indexOf(spacechar, pos + 1)) {\n        spaces++;\n      }\n    }\n\n    // Backtrack until we have 4n non-whitespace characters\n    // that we can safely base64-decode\n    let length = buf.length;\n    for (; length > 0 && (length - spaces) % 4 !== 0; length--) {\n      if (spacechars.includes(buf[length])) spaces--;\n    }\n\n    const decoded = decodeChunk(buf.substr(0, length));\n    buf = buf.substr(length);\n    return decoded;\n  }, () => decodeChunk(buf));\n}\n\n/**\n * Convert a Base-64 encoded string an array of 8-bit integer\n *\n * Note: accepts both Radix-64 and URL-safe strings\n * @param {String} base64 - Base-64 encoded string to convert\n * @returns {Uint8Array} An array of 8-bit integers.\n */\nexport function b64ToUint8Array(base64) {\n  return decode(base64.replace(/-/g, '+').replace(/_/g, '/'));\n}\n\n/**\n * Convert an array of 8-bit integer to a Base-64 encoded string\n * @param {Uint8Array} bytes - An array of 8-bit integers to convert\n * @param {bool} url - If true, output is URL-safe\n * @returns {String} Base-64 encoded string.\n */\nexport function uint8ArrayToB64(bytes, url) {\n  let encoded = encode(bytes).replace(/[\\r\\n]/g, '');\n  if (url) {\n    encoded = encoded.replace(/[+]/g, '-').replace(/[/]/g, '_').replace(/[=]/g, '');\n  }\n  return encoded;\n}\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * Global configuration values.\n */\n\nimport enums from '../enums';\n\nexport default {\n  /**\n   * @memberof module:config\n   * @property {Integer} preferredHashAlgorithm Default hash algorithm {@link module:enums.hash}\n   */\n  preferredHashAlgorithm: enums.hash.sha256,\n  /**\n   * @memberof module:config\n   * @property {Integer} preferredSymmetricAlgorithm Default encryption cipher {@link module:enums.symmetric}\n   */\n  preferredSymmetricAlgorithm: enums.symmetric.aes256,\n  /**\n   * @memberof module:config\n   * @property {Integer} compression Default compression algorithm {@link module:enums.compression}\n   */\n  preferredCompressionAlgorithm: enums.compression.uncompressed,\n  /**\n   * @memberof module:config\n   * @property {Integer} deflateLevel Default zip/zlib compression level, between 1 and 9\n   */\n  deflateLevel: 6,\n\n  /**\n   * Use Authenticated Encryption with Additional Data (AEAD) protection for symmetric encryption.\n   * Note: not all OpenPGP implementations are compatible with this option.\n   * **FUTURE OPENPGP.JS VERSIONS MAY BREAK COMPATIBILITY WHEN USING THIS OPTION**\n   * @see {@link https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-07|RFC4880bis-07}\n   * @memberof module:config\n   * @property {Boolean} aeadProtect\n   */\n  aeadProtect: false,\n  /**\n   * Default Authenticated Encryption with Additional Data (AEAD) encryption mode\n   * Only has an effect when aeadProtect is set to true.\n   * @memberof module:config\n   * @property {Integer} preferredAEADAlgorithm Default AEAD mode {@link module:enums.aead}\n   */\n  preferredAEADAlgorithm: enums.aead.eax,\n  /**\n   * Chunk Size Byte for Authenticated Encryption with Additional Data (AEAD) mode\n   * Only has an effect when aeadProtect is set to true.\n   * Must be an integer value from 0 to 56.\n   * @memberof module:config\n   * @property {Integer} aeadChunkSizeByte\n   */\n  aeadChunkSizeByte: 12,\n  /**\n   * Use V5 keys.\n   * Note: not all OpenPGP implementations are compatible with this option.\n   * **FUTURE OPENPGP.JS VERSIONS MAY BREAK COMPATIBILITY WHEN USING THIS OPTION**\n   * @memberof module:config\n   * @property {Boolean} v5Keys\n   */\n  v5Keys: false,\n  /**\n   * {@link https://tools.ietf.org/html/rfc4880#section-3.7.1.3|RFC4880 3.7.1.3}:\n   * Iteration Count Byte for S2K (String to Key)\n   * @memberof module:config\n   * @property {Integer} s2kIterationCountByte\n   */\n  s2kIterationCountByte: 224,\n  /**\n   * Allow decryption of messages without integrity protection.\n   * This is an **insecure** setting:\n   *  - message modifications cannot be detected, thus processing the decrypted data is potentially unsafe.\n   *  - it enables downgrade attacks against integrity-protected messages.\n   * @memberof module:config\n   * @property {Boolean} allowUnauthenticatedMessages\n   */\n  allowUnauthenticatedMessages: false,\n  /**\n   * Allow streaming unauthenticated data before its integrity has been checked. This would allow the application to\n   * process large streams while limiting memory usage by releasing the decrypted chunks as soon as possible\n   * and deferring checking their integrity until the decrypted stream has been read in full.\n   *\n   * This setting is **insecure** if the partially decrypted message is processed further or displayed to the user.\n   * @memberof module:config\n   * @property {Boolean} allowUnauthenticatedStream\n   */\n  allowUnauthenticatedStream: false,\n  /**\n   * @memberof module:config\n   * @property {Boolean} checksumRequired Do not throw error when armor is missing a checksum\n   */\n  checksumRequired: false,\n  /**\n   * Minimum RSA key size allowed for key generation and message signing, verification and encryption.\n   * The default is 2047 since due to a bug, previous versions of OpenPGP.js could generate 2047-bit keys instead of 2048-bit ones.\n   * @memberof module:config\n   * @property {Number} minRSABits\n   */\n  minRSABits: 2047,\n  /**\n   * Work-around for rare GPG decryption bug when encrypting with multiple passwords.\n   * **Slower and slightly less secure**\n   * @memberof module:config\n   * @property {Boolean} passwordCollisionCheck\n   */\n  passwordCollisionCheck: false,\n  /**\n   * @memberof module:config\n   * @property {Boolean} revocationsExpire If true, expired revocation signatures are ignored\n   */\n  revocationsExpire: false,\n  /**\n   * Allow decryption using RSA keys without `encrypt` flag.\n   * This setting is potentially insecure, but it is needed to get around an old openpgpjs bug\n   * where key flags were ignored when selecting a key for encryption.\n   * @memberof module:config\n   * @property {Boolean} allowInsecureDecryptionWithSigningKeys\n   */\n  allowInsecureDecryptionWithSigningKeys: false,\n  /**\n   * Allow verification of message signatures with keys whose validity at the time of signing cannot be determined.\n   * Instead, a verification key will also be consider valid as long as it is valid at the current time.\n   * This setting is potentially insecure, but it is needed to verify messages signed with keys that were later reformatted,\n   * and have self-signature's creation date that does not match the primary key creation date.\n   * @memberof module:config\n   * @property {Boolean} allowInsecureDecryptionWithSigningKeys\n   */\n  allowInsecureVerificationWithReformattedKeys: false,\n\n  /**\n   * Enable constant-time decryption of RSA- and ElGamal-encrypted session keys, to hinder Bleichenbacher-like attacks (https://link.springer.com/chapter/10.1007/BFb0055716).\n   * This setting has measurable performance impact and it is only helpful in application scenarios where both of the following conditions apply:\n   * - new/incoming messages are automatically decrypted (without user interaction);\n   * - an attacker can determine how long it takes to decrypt each message (e.g. due to decryption errors being logged remotely).\n   * See also `constantTimePKCS1DecryptionSupportedSymmetricAlgorithms`.\n   * @memberof module:config\n   * @property {Boolean} constantTimePKCS1Decryption\n   */\n  constantTimePKCS1Decryption: false,\n  /**\n   * This setting is only meaningful if `constantTimePKCS1Decryption` is enabled.\n   * Decryption of RSA- and ElGamal-encrypted session keys of symmetric algorithms different from the ones specified here will fail.\n   * However, the more algorithms are added, the slower the decryption procedure becomes.\n   * @memberof module:config\n   * @property {Set<Integer>} constantTimePKCS1DecryptionSupportedSymmetricAlgorithms {@link module:enums.symmetric}\n   */\n  constantTimePKCS1DecryptionSupportedSymmetricAlgorithms: new Set([enums.symmetric.aes128, enums.symmetric.aes192, enums.symmetric.aes256]),\n\n  /**\n   * @memberof module:config\n   * @property {Integer} minBytesForWebCrypto The minimum amount of bytes for which to use native WebCrypto APIs when available\n   */\n  minBytesForWebCrypto: 1000,\n  /**\n   * @memberof module:config\n   * @property {Boolean} ignoreUnsupportedPackets Ignore unsupported/unrecognizable packets on parsing instead of throwing an error\n   */\n  ignoreUnsupportedPackets: true,\n  /**\n   * @memberof module:config\n   * @property {Boolean} ignoreMalformedPackets Ignore malformed packets on parsing instead of throwing an error\n   */\n  ignoreMalformedPackets: false,\n  /**\n   * Parsing of packets is normally restricted to a predefined set of packets. For example a Sym. Encrypted Integrity Protected Data Packet can only\n   * contain a certain set of packets including LiteralDataPacket. With this setting we can allow additional packets, which is probably not advisable\n   * as a global config setting, but can be used for specific function calls (e.g. decrypt method of Message).\n   * @memberof module:config\n   * @property {Array} additionalAllowedPackets Allow additional packets on parsing. Defined as array of packet classes, e.g. [PublicKeyPacket]\n   */\n  additionalAllowedPackets: [],\n  /**\n   * @memberof module:config\n   * @property {Boolean} showVersion Whether to include {@link module:config/config.versionString} in armored messages\n   */\n  showVersion: false,\n  /**\n   * @memberof module:config\n   * @property {Boolean} showComment Whether to include {@link module:config/config.commentString} in armored messages\n   */\n  showComment: false,\n  /**\n   * @memberof module:config\n   * @property {String} versionString A version string to be included in armored messages\n   */\n  versionString: 'OpenPGP.js VERSION',\n  /**\n   * @memberof module:config\n   * @property {String} commentString A comment string to be included in armored messages\n   */\n  commentString: 'https://openpgpjs.org',\n\n  /**\n   * Max userID string length (used for parsing)\n   * @memberof module:config\n   * @property {Integer} maxUserIDLength\n   */\n  maxUserIDLength: 1024 * 5,\n  /**\n   * Contains notatations that are considered \"known\". Known notations do not trigger\n   * validation error when the notation is marked as critical.\n   * @memberof module:config\n   * @property {Array} knownNotations\n   */\n  knownNotations: [],\n  /**\n   * Whether to use the indutny/elliptic library for curves (other than Curve25519) that are not supported by the available native crypto API.\n   * When false, certain standard curves will not be supported (depending on the platform).\n   * Note: the indutny/elliptic curve library is not designed to be constant time.\n   * @memberof module:config\n   * @property {Boolean} useIndutnyElliptic\n   */\n  useIndutnyElliptic: true,\n  /**\n   * Reject insecure hash algorithms\n   * @memberof module:config\n   * @property {Set<Integer>} rejectHashAlgorithms {@link module:enums.hash}\n   */\n  rejectHashAlgorithms: new Set([enums.hash.md5, enums.hash.ripemd]),\n  /**\n   * Reject insecure message hash algorithms\n   * @memberof module:config\n   * @property {Set<Integer>} rejectMessageHashAlgorithms {@link module:enums.hash}\n   */\n  rejectMessageHashAlgorithms: new Set([enums.hash.md5, enums.hash.ripemd, enums.hash.sha1]),\n  /**\n   * Reject insecure public key algorithms for key generation and message encryption, signing or verification\n   * @memberof module:config\n   * @property {Set<Integer>} rejectPublicKeyAlgorithms {@link module:enums.publicKey}\n   */\n  rejectPublicKeyAlgorithms: new Set([enums.publicKey.elgamal, enums.publicKey.dsa]),\n  /**\n   * Reject non-standard curves for key generation, message encryption, signing or verification\n   * @memberof module:config\n   * @property {Set<String>} rejectCurves {@link module:enums.curve}\n   */\n  rejectCurves: new Set([enums.curve.secp256k1])\n};\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport * as stream from '@openpgp/web-stream-tools';\nimport * as base64 from './base64';\nimport enums from '../enums';\nimport util from '../util';\nimport defaultConfig from '../config';\n\n/**\n * Finds out which Ascii Armoring type is used. Throws error if unknown type.\n * @param {String} text - ascii armored text\n * @returns {Integer} 0 = MESSAGE PART n of m.\n *         1 = MESSAGE PART n\n *         2 = SIGNED MESSAGE\n *         3 = PGP MESSAGE\n *         4 = PUBLIC KEY BLOCK\n *         5 = PRIVATE KEY BLOCK\n *         6 = SIGNATURE\n * @private\n */\nfunction getType(text) {\n  const reHeader = /^-----BEGIN PGP (MESSAGE, PART \\d+\\/\\d+|MESSAGE, PART \\d+|SIGNED MESSAGE|MESSAGE|PUBLIC KEY BLOCK|PRIVATE KEY BLOCK|SIGNATURE)-----$/m;\n\n  const header = text.match(reHeader);\n\n  if (!header) {\n    throw new Error('Unknown ASCII armor type');\n  }\n\n  // BEGIN PGP MESSAGE, PART X/Y\n  // Used for multi-part messages, where the armor is split amongst Y\n  // parts, and this is the Xth part out of Y.\n  if (/MESSAGE, PART \\d+\\/\\d+/.test(header[1])) {\n    return enums.armor.multipartSection;\n  } else\n  // BEGIN PGP MESSAGE, PART X\n  // Used for multi-part messages, where this is the Xth part of an\n  // unspecified number of parts. Requires the MESSAGE-ID Armor\n  // Header to be used.\n  if (/MESSAGE, PART \\d+/.test(header[1])) {\n    return enums.armor.multipartLast;\n  } else\n  // BEGIN PGP SIGNED MESSAGE\n  if (/SIGNED MESSAGE/.test(header[1])) {\n    return enums.armor.signed;\n  } else\n  // BEGIN PGP MESSAGE\n  // Used for signed, encrypted, or compressed files.\n  if (/MESSAGE/.test(header[1])) {\n    return enums.armor.message;\n  } else\n  // BEGIN PGP PUBLIC KEY BLOCK\n  // Used for armoring public keys.\n  if (/PUBLIC KEY BLOCK/.test(header[1])) {\n    return enums.armor.publicKey;\n  } else\n  // BEGIN PGP PRIVATE KEY BLOCK\n  // Used for armoring private keys.\n  if (/PRIVATE KEY BLOCK/.test(header[1])) {\n    return enums.armor.privateKey;\n  } else\n  // BEGIN PGP SIGNATURE\n  // Used for detached signatures, OpenPGP/MIME signatures, and\n  // cleartext signatures. Note that PGP 2.x uses BEGIN PGP MESSAGE\n  // for detached signatures.\n  if (/SIGNATURE/.test(header[1])) {\n    return enums.armor.signature;\n  }\n}\n\n/**\n * Add additional information to the armor version of an OpenPGP binary\n * packet block.\n * @author  Alex\n * @version 2011-12-16\n * @param {String} [customComment] - Additional comment to add to the armored string\n * @returns {String} The header information.\n * @private\n */\nfunction addheader(customComment, config) {\n  let result = '';\n  if (config.showVersion) {\n    result += 'Version: ' + config.versionString + '\\n';\n  }\n  if (config.showComment) {\n    result += 'Comment: ' + config.commentString + '\\n';\n  }\n  if (customComment) {\n    result += 'Comment: ' + customComment + '\\n';\n  }\n  result += '\\n';\n  return result;\n}\n\n\n/**\n * Calculates a checksum over the given data and returns it base64 encoded\n * @param {String | ReadableStream<String>} data - Data to create a CRC-24 checksum for\n * @returns {String | ReadableStream<String>} Base64 encoded checksum.\n * @private\n */\nfunction getCheckSum(data) {\n  const crc = createcrc24(data);\n  return base64.encode(crc);\n}\n\n// https://create.stephan-brumme.com/crc32/#slicing-by-8-overview\n\nconst crc_table = [\n  new Array(0xFF),\n  new Array(0xFF),\n  new Array(0xFF),\n  new Array(0xFF)\n];\n\nfor (let i = 0; i <= 0xFF; i++) {\n  let crc = i << 16;\n  for (let j = 0; j < 8; j++) {\n    crc = (crc << 1) ^ ((crc & 0x800000) !== 0 ? 0x864CFB : 0);\n  }\n  crc_table[0][i] =\n    ((crc & 0xFF0000) >> 16) |\n    (crc & 0x00FF00) |\n    ((crc & 0x0000FF) << 16);\n}\nfor (let i = 0; i <= 0xFF; i++) {\n  crc_table[1][i] = (crc_table[0][i] >> 8) ^ crc_table[0][crc_table[0][i] & 0xFF];\n}\nfor (let i = 0; i <= 0xFF; i++) {\n  crc_table[2][i] = (crc_table[1][i] >> 8) ^ crc_table[0][crc_table[1][i] & 0xFF];\n}\nfor (let i = 0; i <= 0xFF; i++) {\n  crc_table[3][i] = (crc_table[2][i] >> 8) ^ crc_table[0][crc_table[2][i] & 0xFF];\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView#Endianness\nconst isLittleEndian = (function() {\n  const buffer = new ArrayBuffer(2);\n  new DataView(buffer).setInt16(0, 0xFF, true /* littleEndian */);\n  // Int16Array uses the platform's endianness.\n  return new Int16Array(buffer)[0] === 0xFF;\n}());\n\n/**\n * Internal function to calculate a CRC-24 checksum over a given string (data)\n * @param {String | ReadableStream<String>} input - Data to create a CRC-24 checksum for\n * @returns {Uint8Array | ReadableStream<Uint8Array>} The CRC-24 checksum.\n * @private\n */\nfunction createcrc24(input) {\n  let crc = 0xCE04B7;\n  return stream.transform(input, value => {\n    const len32 = isLittleEndian ? Math.floor(value.length / 4) : 0;\n    const arr32 = new Uint32Array(value.buffer, value.byteOffset, len32);\n    for (let i = 0; i < len32; i++) {\n      crc ^= arr32[i];\n      crc =\n        crc_table[0][(crc >> 24) & 0xFF] ^\n        crc_table[1][(crc >> 16) & 0xFF] ^\n        crc_table[2][(crc >> 8) & 0xFF] ^\n        crc_table[3][(crc >> 0) & 0xFF];\n    }\n    for (let i = len32 * 4; i < value.length; i++) {\n      crc = (crc >> 8) ^ crc_table[0][(crc & 0xFF) ^ value[i]];\n    }\n  }, () => new Uint8Array([crc, crc >> 8, crc >> 16]));\n}\n\n/**\n * Verify armored headers. crypto-refresh-06, section 6.2:\n * \"An OpenPGP implementation may consider improperly formatted Armor\n * Headers to be corruption of the ASCII Armor, but SHOULD make an\n * effort to recover.\"\n * @private\n * @param {Array<String>} headers - Armor headers\n */\nfunction verifyHeaders(headers) {\n  for (let i = 0; i < headers.length; i++) {\n    if (!/^([^\\s:]|[^\\s:][^:]*[^\\s:]): .+$/.test(headers[i])) {\n      util.printDebugError(new Error('Improperly formatted armor header: ' + headers[i]));\n    }\n    if (!/^(Version|Comment|MessageID|Hash|Charset): .+$/.test(headers[i])) {\n      util.printDebugError(new Error('Unknown header: ' + headers[i]));\n    }\n  }\n}\n\n/**\n * Splits a message into two parts, the body and the checksum. This is an internal function\n * @param {String} text - OpenPGP armored message part\n * @returns {Object} An object with attribute \"body\" containing the body.\n * and an attribute \"checksum\" containing the checksum.\n * @private\n */\nfunction splitChecksum(text) {\n  let body = text;\n  let checksum = '';\n\n  const lastEquals = text.lastIndexOf('=');\n\n  if (lastEquals >= 0 && lastEquals !== text.length - 1) { // '=' as the last char means no checksum\n    body = text.slice(0, lastEquals);\n    checksum = text.slice(lastEquals + 1).substr(0, 4);\n  }\n\n  return { body: body, checksum: checksum };\n}\n\n/**\n * Dearmor an OpenPGP armored message; verify the checksum and return\n * the encoded bytes\n * @param {String} input - OpenPGP armored message\n * @returns {Promise<Object>} An object with attribute \"text\" containing the message text,\n * an attribute \"data\" containing a stream of bytes and \"type\" for the ASCII armor type\n * @async\n * @static\n */\nexport function unarmor(input, config = defaultConfig) {\n  // eslint-disable-next-line no-async-promise-executor\n  return new Promise(async (resolve, reject) => {\n    try {\n      const reSplit = /^-----[^-]+-----$/m;\n      const reEmptyLine = /^[ \\f\\r\\t\\u00a0\\u2000-\\u200a\\u202f\\u205f\\u3000]*$/;\n\n      let type;\n      const headers = [];\n      let lastHeaders = headers;\n      let headersDone;\n      let text = [];\n      let textDone;\n      let checksum;\n      let data = base64.decode(stream.transformPair(input, async (readable, writable) => {\n        const reader = stream.getReader(readable);\n        try {\n          while (true) {\n            let line = await reader.readLine();\n            if (line === undefined) {\n              throw new Error('Misformed armored text');\n            }\n            // remove trailing whitespace at end of lines\n            line = util.removeTrailingSpaces(line.replace(/[\\r\\n]/g, ''));\n            if (!type) {\n              if (reSplit.test(line)) {\n                type = getType(line);\n              }\n            } else if (!headersDone) {\n              if (reSplit.test(line)) {\n                reject(new Error('Mandatory blank line missing between armor headers and armor data'));\n              }\n              if (!reEmptyLine.test(line)) {\n                lastHeaders.push(line);\n              } else {\n                verifyHeaders(lastHeaders);\n                headersDone = true;\n                if (textDone || type !== 2) {\n                  resolve({ text, data, headers, type });\n                  break;\n                }\n              }\n            } else if (!textDone && type === 2) {\n              if (!reSplit.test(line)) {\n                // Reverse dash-escaping for msg\n                text.push(line.replace(/^- /, ''));\n              } else {\n                text = text.join('\\r\\n');\n                textDone = true;\n                verifyHeaders(lastHeaders);\n                lastHeaders = [];\n                headersDone = false;\n              }\n            }\n          }\n        } catch (e) {\n          reject(e);\n          return;\n        }\n        const writer = stream.getWriter(writable);\n        try {\n          while (true) {\n            await writer.ready;\n            const { done, value } = await reader.read();\n            if (done) {\n              throw new Error('Misformed armored text');\n            }\n            const line = value + '';\n            if (line.indexOf('=') === -1 && line.indexOf('-') === -1) {\n              await writer.write(line);\n            } else {\n              let remainder = await reader.readToEnd();\n              if (!remainder.length) remainder = '';\n              remainder = line + remainder;\n              remainder = util.removeTrailingSpaces(remainder.replace(/\\r/g, ''));\n              const parts = remainder.split(reSplit);\n              if (parts.length === 1) {\n                throw new Error('Misformed armored text');\n              }\n              const split = splitChecksum(parts[0].slice(0, -1));\n              checksum = split.checksum;\n              await writer.write(split.body);\n              break;\n            }\n          }\n          await writer.ready;\n          await writer.close();\n        } catch (e) {\n          await writer.abort(e);\n        }\n      }));\n      data = stream.transformPair(data, async (readable, writable) => {\n        const checksumVerified = stream.readToEnd(getCheckSum(stream.passiveClone(readable)));\n        checksumVerified.catch(() => {});\n        await stream.pipe(readable, writable, {\n          preventClose: true\n        });\n        const writer = stream.getWriter(writable);\n        try {\n          const checksumVerifiedString = (await checksumVerified).replace('\\n', '');\n          if (checksum !== checksumVerifiedString && (checksum || config.checksumRequired)) {\n            throw new Error('Ascii armor integrity check failed');\n          }\n          await writer.ready;\n          await writer.close();\n        } catch (e) {\n          await writer.abort(e);\n        }\n      });\n    } catch (e) {\n      reject(e);\n    }\n  }).then(async result => {\n    if (stream.isArrayStream(result.data)) {\n      result.data = await stream.readToEnd(result.data);\n    }\n    return result;\n  });\n}\n\n\n/**\n * Armor an OpenPGP binary packet block\n * @param {module:enums.armor} messageType - Type of the message\n * @param {Uint8Array | ReadableStream<Uint8Array>} body - The message body to armor\n * @param {Integer} [partIndex]\n * @param {Integer} [partTotal]\n * @param {String} [customComment] - Additional comment to add to the armored string\n * @returns {String | ReadableStream<String>} Armored text.\n * @static\n */\nexport function armor(messageType, body, partIndex, partTotal, customComment, config = defaultConfig) {\n  let text;\n  let hash;\n  if (messageType === enums.armor.signed) {\n    text = body.text;\n    hash = body.hash;\n    body = body.data;\n  }\n  const bodyClone = stream.passiveClone(body);\n  const result = [];\n  switch (messageType) {\n    case enums.armor.multipartSection:\n      result.push('-----BEGIN PGP MESSAGE, PART ' + partIndex + '/' + partTotal + '-----\\n');\n      result.push(addheader(customComment, config));\n      result.push(base64.encode(body));\n      result.push('=', getCheckSum(bodyClone));\n      result.push('-----END PGP MESSAGE, PART ' + partIndex + '/' + partTotal + '-----\\n');\n      break;\n    case enums.armor.multipartLast:\n      result.push('-----BEGIN PGP MESSAGE, PART ' + partIndex + '-----\\n');\n      result.push(addheader(customComment, config));\n      result.push(base64.encode(body));\n      result.push('=', getCheckSum(bodyClone));\n      result.push('-----END PGP MESSAGE, PART ' + partIndex + '-----\\n');\n      break;\n    case enums.armor.signed:\n      result.push('-----BEGIN PGP SIGNED MESSAGE-----\\n');\n      result.push('Hash: ' + hash + '\\n\\n');\n      result.push(text.replace(/^-/mg, '- -'));\n      result.push('\\n-----BEGIN PGP SIGNATURE-----\\n');\n      result.push(addheader(customComment, config));\n      result.push(base64.encode(body));\n      result.push('=', getCheckSum(bodyClone));\n      result.push('-----END PGP SIGNATURE-----\\n');\n      break;\n    case enums.armor.message:\n      result.push('-----BEGIN PGP MESSAGE-----\\n');\n      result.push(addheader(customComment, config));\n      result.push(base64.encode(body));\n      result.push('=', getCheckSum(bodyClone));\n      result.push('-----END PGP MESSAGE-----\\n');\n      break;\n    case enums.armor.publicKey:\n      result.push('-----BEGIN PGP PUBLIC KEY BLOCK-----\\n');\n      result.push(addheader(customComment, config));\n      result.push(base64.encode(body));\n      result.push('=', getCheckSum(bodyClone));\n      result.push('-----END PGP PUBLIC KEY BLOCK-----\\n');\n      break;\n    case enums.armor.privateKey:\n      result.push('-----BEGIN PGP PRIVATE KEY BLOCK-----\\n');\n      result.push(addheader(customComment, config));\n      result.push(base64.encode(body));\n      result.push('=', getCheckSum(bodyClone));\n      result.push('-----END PGP PRIVATE KEY BLOCK-----\\n');\n      break;\n    case enums.armor.signature:\n      result.push('-----BEGIN PGP SIGNATURE-----\\n');\n      result.push(addheader(customComment, config));\n      result.push(base64.encode(body));\n      result.push('=', getCheckSum(bodyClone));\n      result.push('-----END PGP SIGNATURE-----\\n');\n      break;\n  }\n\n  return util.concat(result);\n}\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @module type/keyid\n * @private\n */\n\nimport util from '../util';\n\n/**\n * Implementation of type key id\n *\n * {@link https://tools.ietf.org/html/rfc4880#section-3.3|RFC4880 3.3}:\n * A Key ID is an eight-octet scalar that identifies a key.\n * Implementations SHOULD NOT assume that Key IDs are unique.  The\n * section \"Enhanced Key Formats\" below describes how Key IDs are\n * formed.\n */\nclass KeyID {\n  constructor() {\n    this.bytes = '';\n  }\n\n  /**\n   * Parsing method for a key id\n   * @param {Uint8Array} bytes - Input to read the key id from\n   */\n  read(bytes) {\n    this.bytes = util.uint8ArrayToString(bytes.subarray(0, 8));\n    return this.bytes.length;\n  }\n\n  /**\n   * Serializes the Key ID\n   * @returns {Uint8Array} Key ID as a Uint8Array.\n   */\n  write() {\n    return util.stringToUint8Array(this.bytes);\n  }\n\n  /**\n   * Returns the Key ID represented as a hexadecimal string\n   * @returns {String} Key ID as a hexadecimal string.\n   */\n  toHex() {\n    return util.uint8ArrayToHex(util.stringToUint8Array(this.bytes));\n  }\n\n  /**\n   * Checks equality of Key ID's\n   * @param {KeyID} keyID\n   * @param {Boolean} matchWildcard - Indicates whether to check if either keyID is a wildcard\n   */\n  equals(keyID, matchWildcard = false) {\n    return (matchWildcard && (keyID.isWildcard() || this.isWildcard())) || this.bytes === keyID.bytes;\n  }\n\n  /**\n   * Checks to see if the Key ID is unset\n   * @returns {Boolean} True if the Key ID is null.\n   */\n  isNull() {\n    return this.bytes === '';\n  }\n\n  /**\n   * Checks to see if the Key ID is a \"wildcard\" Key ID (all zeros)\n   * @returns {Boolean} True if this is a wildcard Key ID.\n   */\n  isWildcard() {\n    return /^0+$/.test(this.toHex());\n  }\n\n  static mapToHex(keyID) {\n    return keyID.toHex();\n  }\n\n  static fromID(hex) {\n    const keyID = new KeyID();\n    keyID.read(util.hexToUint8Array(hex));\n    return keyID;\n  }\n\n  static wildcard() {\n    const keyID = new KeyID();\n    keyID.read(new Uint8Array(8));\n    return keyID;\n  }\n}\n\nexport default KeyID;\n","/**\n * @file {@link http://asmjs.org Asm.js} implementation of the {@link https://en.wikipedia.org/wiki/Advanced_Encryption_Standard Advanced Encryption Standard}.\n * @author Artem S Vybornov <vybornov@gmail.com>\n * @license MIT\n */\nexport var AES_asm = function () {\n  \"use strict\";\n\n  /**\n   * Galois Field stuff init flag\n   */\n  var ginit_done = false;\n\n  /**\n   * Galois Field exponentiation and logarithm tables for 3 (the generator)\n   */\n  var gexp3, glog3;\n\n  /**\n   * Init Galois Field tables\n   */\n  function ginit() {\n    gexp3 = [],\n      glog3 = [];\n\n    var a = 1, c, d;\n    for (c = 0; c < 255; c++) {\n      gexp3[c] = a;\n\n      // Multiply by three\n      d = a & 0x80, a <<= 1, a &= 255;\n      if (d === 0x80) a ^= 0x1b;\n      a ^= gexp3[c];\n\n      // Set the log table value\n      glog3[gexp3[c]] = c;\n    }\n    gexp3[255] = gexp3[0];\n    glog3[0] = 0;\n\n    ginit_done = true;\n  }\n\n  /**\n   * Galois Field multiplication\n   * @param {number} a\n   * @param {number} b\n   * @return {number}\n   */\n  function gmul(a, b) {\n    var c = gexp3[(glog3[a] + glog3[b]) % 255];\n    if (a === 0 || b === 0) c = 0;\n    return c;\n  }\n\n  /**\n   * Galois Field reciprocal\n   * @param {number} a\n   * @return {number}\n   */\n  function ginv(a) {\n    var i = gexp3[255 - glog3[a]];\n    if (a === 0) i = 0;\n    return i;\n  }\n\n  /**\n   * AES stuff init flag\n   */\n  var aes_init_done = false;\n\n  /**\n   * Encryption, Decryption, S-Box and KeyTransform tables\n   *\n   * @type {number[]}\n   */\n  var aes_sbox;\n\n  /**\n   * @type {number[]}\n   */\n  var aes_sinv;\n\n  /**\n   * @type {number[][]}\n   */\n  var aes_enc;\n\n  /**\n   * @type {number[][]}\n   */\n  var aes_dec;\n\n  /**\n   * Init AES tables\n   */\n  function aes_init() {\n    if (!ginit_done) ginit();\n\n    // Calculates AES S-Box value\n    function _s(a) {\n      var c, s, x;\n      s = x = ginv(a);\n      for (c = 0; c < 4; c++) {\n        s = ((s << 1) | (s >>> 7)) & 255;\n        x ^= s;\n      }\n      x ^= 99;\n      return x;\n    }\n\n    // Tables\n    aes_sbox = [],\n      aes_sinv = [],\n      aes_enc = [[], [], [], []],\n      aes_dec = [[], [], [], []];\n\n    for (var i = 0; i < 256; i++) {\n      var s = _s(i);\n\n      // S-Box and its inverse\n      aes_sbox[i] = s;\n      aes_sinv[s] = i;\n\n      // Ecryption and Decryption tables\n      aes_enc[0][i] = (gmul(2, s) << 24) | (s << 16) | (s << 8) | gmul(3, s);\n      aes_dec[0][s] = (gmul(14, i) << 24) | (gmul(9, i) << 16) | (gmul(13, i) << 8) | gmul(11, i);\n      // Rotate tables\n      for (var t = 1; t < 4; t++) {\n        aes_enc[t][i] = (aes_enc[t - 1][i] >>> 8) | (aes_enc[t - 1][i] << 24);\n        aes_dec[t][s] = (aes_dec[t - 1][s] >>> 8) | (aes_dec[t - 1][s] << 24);\n      }\n    }\n\n    aes_init_done = true;\n  }\n\n  /**\n   * Asm.js module constructor.\n   *\n   * <p>\n   * Heap buffer layout by offset:\n   * <pre>\n   * 0x0000   encryption key schedule\n   * 0x0400   decryption key schedule\n   * 0x0800   sbox\n   * 0x0c00   inv sbox\n   * 0x1000   encryption tables\n   * 0x2000   decryption tables\n   * 0x3000   reserved (future GCM multiplication lookup table)\n   * 0x4000   data\n   * </pre>\n   * Don't touch anything before <code>0x400</code>.\n   * </p>\n   *\n   * @alias AES_asm\n   * @class\n   * @param foreign - <i>ignored</i>\n   * @param buffer - heap buffer to link with\n   */\n  var wrapper = function (foreign, buffer) {\n    // Init AES stuff for the first time\n    if (!aes_init_done) aes_init();\n\n    // Fill up AES tables\n    var heap = new Uint32Array(buffer);\n    heap.set(aes_sbox, 0x0800 >> 2);\n    heap.set(aes_sinv, 0x0c00 >> 2);\n    for (var i = 0; i < 4; i++) {\n      heap.set(aes_enc[i], (0x1000 + 0x400 * i) >> 2);\n      heap.set(aes_dec[i], (0x2000 + 0x400 * i) >> 2);\n    }\n\n    /**\n     * Calculate AES key schedules.\n     * @instance\n     * @memberof AES_asm\n     * @param {number} ks - key size, 4/6/8 (for 128/192/256-bit key correspondingly)\n     * @param {number} k0 - key vector components\n     * @param {number} k1 - key vector components\n     * @param {number} k2 - key vector components\n     * @param {number} k3 - key vector components\n     * @param {number} k4 - key vector components\n     * @param {number} k5 - key vector components\n     * @param {number} k6 - key vector components\n     * @param {number} k7 - key vector components\n     */\n    function set_key(ks, k0, k1, k2, k3, k4, k5, k6, k7) {\n      var ekeys = heap.subarray(0x000, 60),\n        dkeys = heap.subarray(0x100, 0x100 + 60);\n\n      // Encryption key schedule\n      ekeys.set([k0, k1, k2, k3, k4, k5, k6, k7]);\n      for (var i = ks, rcon = 1; i < 4 * ks + 28; i++) {\n        var k = ekeys[i - 1];\n        if ((i % ks === 0) || (ks === 8 && i % ks === 4)) {\n          k = aes_sbox[k >>> 24] << 24 ^ aes_sbox[k >>> 16 & 255] << 16 ^ aes_sbox[k >>> 8 & 255] << 8 ^ aes_sbox[k & 255];\n        }\n        if (i % ks === 0) {\n          k = (k << 8) ^ (k >>> 24) ^ (rcon << 24);\n          rcon = (rcon << 1) ^ ((rcon & 0x80) ? 0x1b : 0);\n        }\n        ekeys[i] = ekeys[i - ks] ^ k;\n      }\n\n      // Decryption key schedule\n      for (var j = 0; j < i; j += 4) {\n        for (var jj = 0; jj < 4; jj++) {\n          var k = ekeys[i - (4 + j) + (4 - jj) % 4];\n          if (j < 4 || j >= i - 4) {\n            dkeys[j + jj] = k;\n          } else {\n            dkeys[j + jj] = aes_dec[0][aes_sbox[k >>> 24]]\n              ^ aes_dec[1][aes_sbox[k >>> 16 & 255]]\n              ^ aes_dec[2][aes_sbox[k >>> 8 & 255]]\n              ^ aes_dec[3][aes_sbox[k & 255]];\n          }\n        }\n      }\n\n      // Set rounds number\n      asm.set_rounds(ks + 5);\n    }\n\n    // create library object with necessary properties\n    var stdlib = {Uint8Array: Uint8Array, Uint32Array: Uint32Array};\n\n    var asm = function (stdlib, foreign, buffer) {\n      \"use asm\";\n\n      var S0 = 0, S1 = 0, S2 = 0, S3 = 0,\n        I0 = 0, I1 = 0, I2 = 0, I3 = 0,\n        N0 = 0, N1 = 0, N2 = 0, N3 = 0,\n        M0 = 0, M1 = 0, M2 = 0, M3 = 0,\n        H0 = 0, H1 = 0, H2 = 0, H3 = 0,\n        R = 0;\n\n      var HEAP = new stdlib.Uint32Array(buffer),\n        DATA = new stdlib.Uint8Array(buffer);\n\n      /**\n       * AES core\n       * @param {number} k - precomputed key schedule offset\n       * @param {number} s - precomputed sbox table offset\n       * @param {number} t - precomputed round table offset\n       * @param {number} r - number of inner rounds to perform\n       * @param {number} x0 - 128-bit input block vector\n       * @param {number} x1 - 128-bit input block vector\n       * @param {number} x2 - 128-bit input block vector\n       * @param {number} x3 - 128-bit input block vector\n       */\n      function _core(k, s, t, r, x0, x1, x2, x3) {\n        k = k | 0;\n        s = s | 0;\n        t = t | 0;\n        r = r | 0;\n        x0 = x0 | 0;\n        x1 = x1 | 0;\n        x2 = x2 | 0;\n        x3 = x3 | 0;\n\n        var t1 = 0, t2 = 0, t3 = 0,\n          y0 = 0, y1 = 0, y2 = 0, y3 = 0,\n          i = 0;\n\n        t1 = t | 0x400, t2 = t | 0x800, t3 = t | 0xc00;\n\n        // round 0\n        x0 = x0 ^ HEAP[(k | 0) >> 2],\n          x1 = x1 ^ HEAP[(k | 4) >> 2],\n          x2 = x2 ^ HEAP[(k | 8) >> 2],\n          x3 = x3 ^ HEAP[(k | 12) >> 2];\n\n        // round 1..r\n        for (i = 16; (i | 0) <= (r << 4); i = (i + 16) | 0) {\n          y0 = HEAP[(t | x0 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x1 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x2 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x3 << 2 & 1020) >> 2] ^ HEAP[(k | i | 0) >> 2],\n            y1 = HEAP[(t | x1 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x2 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x3 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x0 << 2 & 1020) >> 2] ^ HEAP[(k | i | 4) >> 2],\n            y2 = HEAP[(t | x2 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x3 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x0 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x1 << 2 & 1020) >> 2] ^ HEAP[(k | i | 8) >> 2],\n            y3 = HEAP[(t | x3 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x0 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x1 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x2 << 2 & 1020) >> 2] ^ HEAP[(k | i | 12) >> 2];\n          x0 = y0, x1 = y1, x2 = y2, x3 = y3;\n        }\n\n        // final round\n        S0 = HEAP[(s | x0 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x1 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x2 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x3 << 2 & 1020) >> 2] ^ HEAP[(k | i | 0) >> 2],\n          S1 = HEAP[(s | x1 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x2 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x3 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x0 << 2 & 1020) >> 2] ^ HEAP[(k | i | 4) >> 2],\n          S2 = HEAP[(s | x2 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x3 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x0 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x1 << 2 & 1020) >> 2] ^ HEAP[(k | i | 8) >> 2],\n          S3 = HEAP[(s | x3 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x0 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x1 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x2 << 2 & 1020) >> 2] ^ HEAP[(k | i | 12) >> 2];\n      }\n\n      /**\n       * ECB mode encryption\n       * @param {number} x0 - 128-bit input block vector\n       * @param {number} x1 - 128-bit input block vector\n       * @param {number} x2 - 128-bit input block vector\n       * @param {number} x3 - 128-bit input block vector\n       */\n      function _ecb_enc(x0, x1, x2, x3) {\n        x0 = x0 | 0;\n        x1 = x1 | 0;\n        x2 = x2 | 0;\n        x3 = x3 | 0;\n\n        _core(\n          0x0000, 0x0800, 0x1000,\n          R,\n          x0,\n          x1,\n          x2,\n          x3\n        );\n      }\n\n      /**\n       * ECB mode decryption\n       * @param {number} x0 - 128-bit input block vector\n       * @param {number} x1 - 128-bit input block vector\n       * @param {number} x2 - 128-bit input block vector\n       * @param {number} x3 - 128-bit input block vector\n       */\n      function _ecb_dec(x0, x1, x2, x3) {\n        x0 = x0 | 0;\n        x1 = x1 | 0;\n        x2 = x2 | 0;\n        x3 = x3 | 0;\n\n        var t = 0;\n\n        _core(\n          0x0400, 0x0c00, 0x2000,\n          R,\n          x0,\n          x3,\n          x2,\n          x1\n        );\n\n        t = S1, S1 = S3, S3 = t;\n      }\n\n\n      /**\n       * CBC mode encryption\n       * @param {number} x0 - 128-bit input block vector\n       * @param {number} x1 - 128-bit input block vector\n       * @param {number} x2 - 128-bit input block vector\n       * @param {number} x3 - 128-bit input block vector\n       */\n      function _cbc_enc(x0, x1, x2, x3) {\n        x0 = x0 | 0;\n        x1 = x1 | 0;\n        x2 = x2 | 0;\n        x3 = x3 | 0;\n\n        _core(\n          0x0000, 0x0800, 0x1000,\n          R,\n          I0 ^ x0,\n          I1 ^ x1,\n          I2 ^ x2,\n          I3 ^ x3\n        );\n\n        I0 = S0,\n          I1 = S1,\n          I2 = S2,\n          I3 = S3;\n      }\n\n      /**\n       * CBC mode decryption\n       * @param {number} x0 - 128-bit input block vector\n       * @param {number} x1 - 128-bit input block vector\n       * @param {number} x2 - 128-bit input block vector\n       * @param {number} x3 - 128-bit input block vector\n       */\n      function _cbc_dec(x0, x1, x2, x3) {\n        x0 = x0 | 0;\n        x1 = x1 | 0;\n        x2 = x2 | 0;\n        x3 = x3 | 0;\n\n        var t = 0;\n\n        _core(\n          0x0400, 0x0c00, 0x2000,\n          R,\n          x0,\n          x3,\n          x2,\n          x1\n        );\n\n        t = S1, S1 = S3, S3 = t;\n\n        S0 = S0 ^ I0,\n          S1 = S1 ^ I1,\n          S2 = S2 ^ I2,\n          S3 = S3 ^ I3;\n\n        I0 = x0,\n          I1 = x1,\n          I2 = x2,\n          I3 = x3;\n      }\n\n      /**\n       * CFB mode encryption\n       * @param {number} x0 - 128-bit input block vector\n       * @param {number} x1 - 128-bit input block vector\n       * @param {number} x2 - 128-bit input block vector\n       * @param {number} x3 - 128-bit input block vector\n       */\n      function _cfb_enc(x0, x1, x2, x3) {\n        x0 = x0 | 0;\n        x1 = x1 | 0;\n        x2 = x2 | 0;\n        x3 = x3 | 0;\n\n        _core(\n          0x0000, 0x0800, 0x1000,\n          R,\n          I0,\n          I1,\n          I2,\n          I3\n        );\n\n        I0 = S0 = S0 ^ x0,\n          I1 = S1 = S1 ^ x1,\n          I2 = S2 = S2 ^ x2,\n          I3 = S3 = S3 ^ x3;\n      }\n\n\n      /**\n       * CFB mode decryption\n       * @param {number} x0 - 128-bit input block vector\n       * @param {number} x1 - 128-bit input block vector\n       * @param {number} x2 - 128-bit input block vector\n       * @param {number} x3 - 128-bit input block vector\n       */\n      function _cfb_dec(x0, x1, x2, x3) {\n        x0 = x0 | 0;\n        x1 = x1 | 0;\n        x2 = x2 | 0;\n        x3 = x3 | 0;\n\n        _core(\n          0x0000, 0x0800, 0x1000,\n          R,\n          I0,\n          I1,\n          I2,\n          I3\n        );\n\n        S0 = S0 ^ x0,\n          S1 = S1 ^ x1,\n          S2 = S2 ^ x2,\n          S3 = S3 ^ x3;\n\n        I0 = x0,\n          I1 = x1,\n          I2 = x2,\n          I3 = x3;\n      }\n\n      /**\n       * OFB mode encryption / decryption\n       * @param {number} x0 - 128-bit input block vector\n       * @param {number} x1 - 128-bit input block vector\n       * @param {number} x2 - 128-bit input block vector\n       * @param {number} x3 - 128-bit input block vector\n       */\n      function _ofb(x0, x1, x2, x3) {\n        x0 = x0 | 0;\n        x1 = x1 | 0;\n        x2 = x2 | 0;\n        x3 = x3 | 0;\n\n        _core(\n          0x0000, 0x0800, 0x1000,\n          R,\n          I0,\n          I1,\n          I2,\n          I3\n        );\n\n        I0 = S0,\n          I1 = S1,\n          I2 = S2,\n          I3 = S3;\n\n        S0 = S0 ^ x0,\n          S1 = S1 ^ x1,\n          S2 = S2 ^ x2,\n          S3 = S3 ^ x3;\n      }\n\n      /**\n       * CTR mode encryption / decryption\n       * @param {number} x0 - 128-bit input block vector\n       * @param {number} x1 - 128-bit input block vector\n       * @param {number} x2 - 128-bit input block vector\n       * @param {number} x3 - 128-bit input block vector\n       */\n      function _ctr(x0, x1, x2, x3) {\n        x0 = x0 | 0;\n        x1 = x1 | 0;\n        x2 = x2 | 0;\n        x3 = x3 | 0;\n\n        _core(\n          0x0000, 0x0800, 0x1000,\n          R,\n          N0,\n          N1,\n          N2,\n          N3\n        );\n\n        N3 = (~M3 & N3) | M3 & (N3 + 1);\n          N2 = (~M2 & N2) | M2 & (N2 + ((N3 | 0) == 0));\n          N1 = (~M1 & N1) | M1 & (N1 + ((N2 | 0) == 0));\n          N0 = (~M0 & N0) | M0 & (N0 + ((N1 | 0) == 0));\n\n        S0 = S0 ^ x0;\n          S1 = S1 ^ x1;\n          S2 = S2 ^ x2;\n          S3 = S3 ^ x3;\n      }\n\n      /**\n       * GCM mode MAC calculation\n       * @param {number} x0 - 128-bit input block vector\n       * @param {number} x1 - 128-bit input block vector\n       * @param {number} x2 - 128-bit input block vector\n       * @param {number} x3 - 128-bit input block vector\n       */\n      function _gcm_mac(x0, x1, x2, x3) {\n        x0 = x0 | 0;\n        x1 = x1 | 0;\n        x2 = x2 | 0;\n        x3 = x3 | 0;\n\n        var y0 = 0, y1 = 0, y2 = 0, y3 = 0,\n          z0 = 0, z1 = 0, z2 = 0, z3 = 0,\n          i = 0, c = 0;\n\n        x0 = x0 ^ I0,\n          x1 = x1 ^ I1,\n          x2 = x2 ^ I2,\n          x3 = x3 ^ I3;\n\n        y0 = H0 | 0,\n          y1 = H1 | 0,\n          y2 = H2 | 0,\n          y3 = H3 | 0;\n\n        for (; (i | 0) < 128; i = (i + 1) | 0) {\n          if (y0 >>> 31) {\n            z0 = z0 ^ x0,\n              z1 = z1 ^ x1,\n              z2 = z2 ^ x2,\n              z3 = z3 ^ x3;\n          }\n\n          y0 = (y0 << 1) | (y1 >>> 31),\n            y1 = (y1 << 1) | (y2 >>> 31),\n            y2 = (y2 << 1) | (y3 >>> 31),\n            y3 = (y3 << 1);\n\n          c = x3 & 1;\n\n          x3 = (x3 >>> 1) | (x2 << 31),\n            x2 = (x2 >>> 1) | (x1 << 31),\n            x1 = (x1 >>> 1) | (x0 << 31),\n            x0 = (x0 >>> 1);\n\n          if (c) x0 = x0 ^ 0xe1000000;\n        }\n\n        I0 = z0,\n          I1 = z1,\n          I2 = z2,\n          I3 = z3;\n      }\n\n      /**\n       * Set the internal rounds number.\n       * @instance\n       * @memberof AES_asm\n       * @param {number} r - number if inner AES rounds\n       */\n      function set_rounds(r) {\n        r = r | 0;\n        R = r;\n      }\n\n      /**\n       * Populate the internal state of the module.\n       * @instance\n       * @memberof AES_asm\n       * @param {number} s0 - state vector\n       * @param {number} s1 - state vector\n       * @param {number} s2 - state vector\n       * @param {number} s3 - state vector\n       */\n      function set_state(s0, s1, s2, s3) {\n        s0 = s0 | 0;\n        s1 = s1 | 0;\n        s2 = s2 | 0;\n        s3 = s3 | 0;\n\n        S0 = s0,\n          S1 = s1,\n          S2 = s2,\n          S3 = s3;\n      }\n\n      /**\n       * Populate the internal iv of the module.\n       * @instance\n       * @memberof AES_asm\n       * @param {number} i0 - iv vector\n       * @param {number} i1 - iv vector\n       * @param {number} i2 - iv vector\n       * @param {number} i3 - iv vector\n       */\n      function set_iv(i0, i1, i2, i3) {\n        i0 = i0 | 0;\n        i1 = i1 | 0;\n        i2 = i2 | 0;\n        i3 = i3 | 0;\n\n        I0 = i0,\n          I1 = i1,\n          I2 = i2,\n          I3 = i3;\n      }\n\n      /**\n       * Set nonce for CTR-family modes.\n       * @instance\n       * @memberof AES_asm\n       * @param {number} n0 - nonce vector\n       * @param {number} n1 - nonce vector\n       * @param {number} n2 - nonce vector\n       * @param {number} n3 - nonce vector\n       */\n      function set_nonce(n0, n1, n2, n3) {\n        n0 = n0 | 0;\n        n1 = n1 | 0;\n        n2 = n2 | 0;\n        n3 = n3 | 0;\n\n        N0 = n0,\n          N1 = n1,\n          N2 = n2,\n          N3 = n3;\n      }\n\n      /**\n       * Set counter mask for CTR-family modes.\n       * @instance\n       * @memberof AES_asm\n       * @param {number} m0 - counter mask vector\n       * @param {number} m1 - counter mask vector\n       * @param {number} m2 - counter mask vector\n       * @param {number} m3 - counter mask vector\n       */\n      function set_mask(m0, m1, m2, m3) {\n        m0 = m0 | 0;\n        m1 = m1 | 0;\n        m2 = m2 | 0;\n        m3 = m3 | 0;\n\n        M0 = m0,\n          M1 = m1,\n          M2 = m2,\n          M3 = m3;\n      }\n\n      /**\n       * Set counter for CTR-family modes.\n       * @instance\n       * @memberof AES_asm\n       * @param {number} c0 - counter vector\n       * @param {number} c1 - counter vector\n       * @param {number} c2 - counter vector\n       * @param {number} c3 - counter vector\n       */\n      function set_counter(c0, c1, c2, c3) {\n        c0 = c0 | 0;\n        c1 = c1 | 0;\n        c2 = c2 | 0;\n        c3 = c3 | 0;\n\n        N3 = (~M3 & N3) | M3 & c3,\n          N2 = (~M2 & N2) | M2 & c2,\n          N1 = (~M1 & N1) | M1 & c1,\n          N0 = (~M0 & N0) | M0 & c0;\n      }\n\n      /**\n       * Store the internal state vector into the heap.\n       * @instance\n       * @memberof AES_asm\n       * @param {number} pos - offset where to put the data\n       * @return {number} The number of bytes have been written into the heap, always 16.\n       */\n      function get_state(pos) {\n        pos = pos | 0;\n\n        if (pos & 15) return -1;\n\n        DATA[pos | 0] = S0 >>> 24,\n          DATA[pos | 1] = S0 >>> 16 & 255,\n          DATA[pos | 2] = S0 >>> 8 & 255,\n          DATA[pos | 3] = S0 & 255,\n          DATA[pos | 4] = S1 >>> 24,\n          DATA[pos | 5] = S1 >>> 16 & 255,\n          DATA[pos | 6] = S1 >>> 8 & 255,\n          DATA[pos | 7] = S1 & 255,\n          DATA[pos | 8] = S2 >>> 24,\n          DATA[pos | 9] = S2 >>> 16 & 255,\n          DATA[pos | 10] = S2 >>> 8 & 255,\n          DATA[pos | 11] = S2 & 255,\n          DATA[pos | 12] = S3 >>> 24,\n          DATA[pos | 13] = S3 >>> 16 & 255,\n          DATA[pos | 14] = S3 >>> 8 & 255,\n          DATA[pos | 15] = S3 & 255;\n\n        return 16;\n      }\n\n      /**\n       * Store the internal iv vector into the heap.\n       * @instance\n       * @memberof AES_asm\n       * @param {number} pos - offset where to put the data\n       * @return {number} The number of bytes have been written into the heap, always 16.\n       */\n      function get_iv(pos) {\n        pos = pos | 0;\n\n        if (pos & 15) return -1;\n\n        DATA[pos | 0] = I0 >>> 24,\n          DATA[pos | 1] = I0 >>> 16 & 255,\n          DATA[pos | 2] = I0 >>> 8 & 255,\n          DATA[pos | 3] = I0 & 255,\n          DATA[pos | 4] = I1 >>> 24,\n          DATA[pos | 5] = I1 >>> 16 & 255,\n          DATA[pos | 6] = I1 >>> 8 & 255,\n          DATA[pos | 7] = I1 & 255,\n          DATA[pos | 8] = I2 >>> 24,\n          DATA[pos | 9] = I2 >>> 16 & 255,\n          DATA[pos | 10] = I2 >>> 8 & 255,\n          DATA[pos | 11] = I2 & 255,\n          DATA[pos | 12] = I3 >>> 24,\n          DATA[pos | 13] = I3 >>> 16 & 255,\n          DATA[pos | 14] = I3 >>> 8 & 255,\n          DATA[pos | 15] = I3 & 255;\n\n        return 16;\n      }\n\n      /**\n       * GCM initialization.\n       * @instance\n       * @memberof AES_asm\n       */\n      function gcm_init() {\n        _ecb_enc(0, 0, 0, 0);\n        H0 = S0,\n          H1 = S1,\n          H2 = S2,\n          H3 = S3;\n      }\n\n      /**\n       * Perform ciphering operation on the supplied data.\n       * @instance\n       * @memberof AES_asm\n       * @param {number} mode - block cipher mode (see {@link AES_asm} mode constants)\n       * @param {number} pos - offset of the data being processed\n       * @param {number} len - length of the data being processed\n       * @return {number} Actual amount of data have been processed.\n       */\n      function cipher(mode, pos, len) {\n        mode = mode | 0;\n        pos = pos | 0;\n        len = len | 0;\n\n        var ret = 0;\n\n        if (pos & 15) return -1;\n\n        while ((len | 0) >= 16) {\n          _cipher_modes[mode & 7](\n            DATA[pos | 0] << 24 | DATA[pos | 1] << 16 | DATA[pos | 2] << 8 | DATA[pos | 3],\n            DATA[pos | 4] << 24 | DATA[pos | 5] << 16 | DATA[pos | 6] << 8 | DATA[pos | 7],\n            DATA[pos | 8] << 24 | DATA[pos | 9] << 16 | DATA[pos | 10] << 8 | DATA[pos | 11],\n            DATA[pos | 12] << 24 | DATA[pos | 13] << 16 | DATA[pos | 14] << 8 | DATA[pos | 15]\n          );\n\n          DATA[pos | 0] = S0 >>> 24,\n            DATA[pos | 1] = S0 >>> 16 & 255,\n            DATA[pos | 2] = S0 >>> 8 & 255,\n            DATA[pos | 3] = S0 & 255,\n            DATA[pos | 4] = S1 >>> 24,\n            DATA[pos | 5] = S1 >>> 16 & 255,\n            DATA[pos | 6] = S1 >>> 8 & 255,\n            DATA[pos | 7] = S1 & 255,\n            DATA[pos | 8] = S2 >>> 24,\n            DATA[pos | 9] = S2 >>> 16 & 255,\n            DATA[pos | 10] = S2 >>> 8 & 255,\n            DATA[pos | 11] = S2 & 255,\n            DATA[pos | 12] = S3 >>> 24,\n            DATA[pos | 13] = S3 >>> 16 & 255,\n            DATA[pos | 14] = S3 >>> 8 & 255,\n            DATA[pos | 15] = S3 & 255;\n\n          ret = (ret + 16) | 0,\n            pos = (pos + 16) | 0,\n            len = (len - 16) | 0;\n        }\n\n        return ret | 0;\n      }\n\n      /**\n       * Calculates MAC of the supplied data.\n       * @instance\n       * @memberof AES_asm\n       * @param {number} mode - block cipher mode (see {@link AES_asm} mode constants)\n       * @param {number} pos - offset of the data being processed\n       * @param {number} len - length of the data being processed\n       * @return {number} Actual amount of data have been processed.\n       */\n      function mac(mode, pos, len) {\n        mode = mode | 0;\n        pos = pos | 0;\n        len = len | 0;\n\n        var ret = 0;\n\n        if (pos & 15) return -1;\n\n        while ((len | 0) >= 16) {\n          _mac_modes[mode & 1](\n            DATA[pos | 0] << 24 | DATA[pos | 1] << 16 | DATA[pos | 2] << 8 | DATA[pos | 3],\n            DATA[pos | 4] << 24 | DATA[pos | 5] << 16 | DATA[pos | 6] << 8 | DATA[pos | 7],\n            DATA[pos | 8] << 24 | DATA[pos | 9] << 16 | DATA[pos | 10] << 8 | DATA[pos | 11],\n            DATA[pos | 12] << 24 | DATA[pos | 13] << 16 | DATA[pos | 14] << 8 | DATA[pos | 15]\n          );\n\n          ret = (ret + 16) | 0,\n            pos = (pos + 16) | 0,\n            len = (len - 16) | 0;\n        }\n\n        return ret | 0;\n      }\n\n      /**\n       * AES cipher modes table (virual methods)\n       */\n      var _cipher_modes = [_ecb_enc, _ecb_dec, _cbc_enc, _cbc_dec, _cfb_enc, _cfb_dec, _ofb, _ctr];\n\n      /**\n       * AES MAC modes table (virual methods)\n       */\n      var _mac_modes = [_cbc_enc, _gcm_mac];\n\n      /**\n       * Asm.js module exports\n       */\n      return {\n        set_rounds: set_rounds,\n        set_state: set_state,\n        set_iv: set_iv,\n        set_nonce: set_nonce,\n        set_mask: set_mask,\n        set_counter: set_counter,\n        get_state: get_state,\n        get_iv: get_iv,\n        gcm_init: gcm_init,\n        cipher: cipher,\n        mac: mac,\n      };\n    }(stdlib, foreign, buffer);\n\n    asm.set_key = set_key;\n\n    return asm;\n  };\n\n  /**\n   * AES enciphering mode constants\n   * @enum {number}\n   * @const\n   */\n  wrapper.ENC = {\n    ECB: 0,\n    CBC: 2,\n    CFB: 4,\n    OFB: 6,\n    CTR: 7,\n  },\n\n    /**\n     * AES deciphering mode constants\n     * @enum {number}\n     * @const\n     */\n    wrapper.DEC = {\n      ECB: 1,\n      CBC: 3,\n      CFB: 5,\n      OFB: 6,\n      CTR: 7,\n    },\n\n    /**\n     * AES MAC mode constants\n     * @enum {number}\n     * @const\n     */\n    wrapper.MAC = {\n      CBC: 0,\n      GCM: 1,\n    };\n\n  /**\n   * Heap data offset\n   * @type {number}\n   * @const\n   */\n  wrapper.HEAP_DATA = 0x4000;\n\n  return wrapper;\n}();\n","const local_atob = typeof atob === 'undefined' ? (str) => require('buffer').Buffer.from(str, 'base64').toString('binary') : atob;\nconst local_btoa = typeof btoa === 'undefined' ? (str) => require('buffer').Buffer.from(str, 'binary').toString('base64') : btoa;\nexport function string_to_bytes(str, utf8 = false) {\n    var len = str.length, bytes = new Uint8Array(utf8 ? 4 * len : len);\n    for (var i = 0, j = 0; i < len; i++) {\n        var c = str.charCodeAt(i);\n        if (utf8 && 0xd800 <= c && c <= 0xdbff) {\n            if (++i >= len)\n                throw new Error('Malformed string, low surrogate expected at position ' + i);\n            c = ((c ^ 0xd800) << 10) | 0x10000 | (str.charCodeAt(i) ^ 0xdc00);\n        }\n        else if (!utf8 && c >>> 8) {\n            throw new Error('Wide characters are not allowed.');\n        }\n        if (!utf8 || c <= 0x7f) {\n            bytes[j++] = c;\n        }\n        else if (c <= 0x7ff) {\n            bytes[j++] = 0xc0 | (c >> 6);\n            bytes[j++] = 0x80 | (c & 0x3f);\n        }\n        else if (c <= 0xffff) {\n            bytes[j++] = 0xe0 | (c >> 12);\n            bytes[j++] = 0x80 | ((c >> 6) & 0x3f);\n            bytes[j++] = 0x80 | (c & 0x3f);\n        }\n        else {\n            bytes[j++] = 0xf0 | (c >> 18);\n            bytes[j++] = 0x80 | ((c >> 12) & 0x3f);\n            bytes[j++] = 0x80 | ((c >> 6) & 0x3f);\n            bytes[j++] = 0x80 | (c & 0x3f);\n        }\n    }\n    return bytes.subarray(0, j);\n}\nexport function hex_to_bytes(str) {\n    var len = str.length;\n    if (len & 1) {\n        str = '0' + str;\n        len++;\n    }\n    var bytes = new Uint8Array(len >> 1);\n    for (var i = 0; i < len; i += 2) {\n        bytes[i >> 1] = parseInt(str.substr(i, 2), 16);\n    }\n    return bytes;\n}\nexport function base64_to_bytes(str) {\n    return string_to_bytes(local_atob(str));\n}\nexport function bytes_to_string(bytes, utf8 = false) {\n    var len = bytes.length, chars = new Array(len);\n    for (var i = 0, j = 0; i < len; i++) {\n        var b = bytes[i];\n        if (!utf8 || b < 128) {\n            chars[j++] = b;\n        }\n        else if (b >= 192 && b < 224 && i + 1 < len) {\n            chars[j++] = ((b & 0x1f) << 6) | (bytes[++i] & 0x3f);\n        }\n        else if (b >= 224 && b < 240 && i + 2 < len) {\n            chars[j++] = ((b & 0xf) << 12) | ((bytes[++i] & 0x3f) << 6) | (bytes[++i] & 0x3f);\n        }\n        else if (b >= 240 && b < 248 && i + 3 < len) {\n            var c = ((b & 7) << 18) | ((bytes[++i] & 0x3f) << 12) | ((bytes[++i] & 0x3f) << 6) | (bytes[++i] & 0x3f);\n            if (c <= 0xffff) {\n                chars[j++] = c;\n            }\n            else {\n                c ^= 0x10000;\n                chars[j++] = 0xd800 | (c >> 10);\n                chars[j++] = 0xdc00 | (c & 0x3ff);\n            }\n        }\n        else {\n            throw new Error('Malformed UTF8 character at byte offset ' + i);\n        }\n    }\n    var str = '', bs = 16384;\n    for (var i = 0; i < j; i += bs) {\n        str += String.fromCharCode.apply(String, chars.slice(i, i + bs <= j ? i + bs : j));\n    }\n    return str;\n}\nexport function bytes_to_hex(arr) {\n    var str = '';\n    for (var i = 0; i < arr.length; i++) {\n        var h = (arr[i] & 0xff).toString(16);\n        if (h.length < 2)\n            str += '0';\n        str += h;\n    }\n    return str;\n}\nexport function bytes_to_base64(arr) {\n    return local_btoa(bytes_to_string(arr));\n}\nexport function pow2_ceil(a) {\n    a -= 1;\n    a |= a >>> 1;\n    a |= a >>> 2;\n    a |= a >>> 4;\n    a |= a >>> 8;\n    a |= a >>> 16;\n    a += 1;\n    return a;\n}\nexport function is_number(a) {\n    return typeof a === 'number';\n}\nexport function is_string(a) {\n    return typeof a === 'string';\n}\nexport function is_buffer(a) {\n    return a instanceof ArrayBuffer;\n}\nexport function is_bytes(a) {\n    return a instanceof Uint8Array;\n}\nexport function is_typed_array(a) {\n    return (a instanceof Int8Array ||\n        a instanceof Uint8Array ||\n        a instanceof Int16Array ||\n        a instanceof Uint16Array ||\n        a instanceof Int32Array ||\n        a instanceof Uint32Array ||\n        a instanceof Float32Array ||\n        a instanceof Float64Array);\n}\nexport function _heap_init(heap, heapSize) {\n    const size = heap ? heap.byteLength : heapSize || 65536;\n    if (size & 0xfff || size <= 0)\n        throw new Error('heap size must be a positive integer and a multiple of 4096');\n    heap = heap || new Uint8Array(new ArrayBuffer(size));\n    return heap;\n}\nexport function _heap_write(heap, hpos, data, dpos, dlen) {\n    const hlen = heap.length - hpos;\n    const wlen = hlen < dlen ? hlen : dlen;\n    heap.set(data.subarray(dpos, dpos + wlen), hpos);\n    return wlen;\n}\nexport function joinBytes(...arg) {\n    const totalLenght = arg.reduce((sum, curr) => sum + curr.length, 0);\n    const ret = new Uint8Array(totalLenght);\n    let cursor = 0;\n    for (let i = 0; i < arg.length; i++) {\n        ret.set(arg[i], cursor);\n        cursor += arg[i].length;\n    }\n    return ret;\n}\n","export class IllegalStateError extends Error {\n    constructor(...args) {\n        super(...args);\n        Object.create(Error.prototype, { name: { value: 'IllegalStateError' } });\n    }\n}\nexport class IllegalArgumentError extends Error {\n    constructor(...args) {\n        super(...args);\n        Object.create(Error.prototype, { name: { value: 'IllegalArgumentError' } });\n    }\n}\nexport class SecurityError extends Error {\n    constructor(...args) {\n        super(...args);\n        Object.create(Error.prototype, { name: { value: 'SecurityError' } });\n    }\n}\n","import { AES_asm } from './aes.asm';\nimport { _heap_init, _heap_write, is_bytes } from '../other/utils';\nimport { IllegalArgumentError, SecurityError } from '../other/errors';\nconst heap_pool = [];\nconst asm_pool = [];\nexport class AES {\n    constructor(key, iv, padding = true, mode, heap, asm) {\n        this.pos = 0;\n        this.len = 0;\n        this.mode = mode;\n        // The AES object state\n        this.pos = 0;\n        this.len = 0;\n        this.key = key;\n        this.iv = iv;\n        this.padding = padding;\n        // The AES \"worker\"\n        this.acquire_asm(heap, asm);\n    }\n    acquire_asm(heap, asm) {\n        if (this.heap === undefined || this.asm === undefined) {\n            this.heap = heap || heap_pool.pop() || _heap_init().subarray(AES_asm.HEAP_DATA);\n            this.asm = asm || asm_pool.pop() || new AES_asm(null, this.heap.buffer);\n            this.reset(this.key, this.iv);\n        }\n        return { heap: this.heap, asm: this.asm };\n    }\n    release_asm() {\n        if (this.heap !== undefined && this.asm !== undefined) {\n            heap_pool.push(this.heap);\n            asm_pool.push(this.asm);\n        }\n        this.heap = undefined;\n        this.asm = undefined;\n    }\n    reset(key, iv) {\n        const { asm } = this.acquire_asm();\n        // Key\n        const keylen = key.length;\n        if (keylen !== 16 && keylen !== 24 && keylen !== 32)\n            throw new IllegalArgumentError('illegal key size');\n        const keyview = new DataView(key.buffer, key.byteOffset, key.byteLength);\n        asm.set_key(keylen >> 2, keyview.getUint32(0), keyview.getUint32(4), keyview.getUint32(8), keyview.getUint32(12), keylen > 16 ? keyview.getUint32(16) : 0, keylen > 16 ? keyview.getUint32(20) : 0, keylen > 24 ? keyview.getUint32(24) : 0, keylen > 24 ? keyview.getUint32(28) : 0);\n        // IV\n        if (iv !== undefined) {\n            if (iv.length !== 16)\n                throw new IllegalArgumentError('illegal iv size');\n            let ivview = new DataView(iv.buffer, iv.byteOffset, iv.byteLength);\n            asm.set_iv(ivview.getUint32(0), ivview.getUint32(4), ivview.getUint32(8), ivview.getUint32(12));\n        }\n        else {\n            asm.set_iv(0, 0, 0, 0);\n        }\n    }\n    AES_Encrypt_process(data) {\n        if (!is_bytes(data))\n            throw new TypeError(\"data isn't of expected type\");\n        let { heap, asm } = this.acquire_asm();\n        let amode = AES_asm.ENC[this.mode];\n        let hpos = AES_asm.HEAP_DATA;\n        let pos = this.pos;\n        let len = this.len;\n        let dpos = 0;\n        let dlen = data.length || 0;\n        let rpos = 0;\n        let rlen = (len + dlen) & -16;\n        let wlen = 0;\n        let result = new Uint8Array(rlen);\n        while (dlen > 0) {\n            wlen = _heap_write(heap, pos + len, data, dpos, dlen);\n            len += wlen;\n            dpos += wlen;\n            dlen -= wlen;\n            wlen = asm.cipher(amode, hpos + pos, len);\n            if (wlen)\n                result.set(heap.subarray(pos, pos + wlen), rpos);\n            rpos += wlen;\n            if (wlen < len) {\n                pos += wlen;\n                len -= wlen;\n            }\n            else {\n                pos = 0;\n                len = 0;\n            }\n        }\n        this.pos = pos;\n        this.len = len;\n        return result;\n    }\n    AES_Encrypt_finish() {\n        let { heap, asm } = this.acquire_asm();\n        let amode = AES_asm.ENC[this.mode];\n        let hpos = AES_asm.HEAP_DATA;\n        let pos = this.pos;\n        let len = this.len;\n        let plen = 16 - (len % 16);\n        let rlen = len;\n        if (this.hasOwnProperty('padding')) {\n            if (this.padding) {\n                for (let p = 0; p < plen; ++p) {\n                    heap[pos + len + p] = plen;\n                }\n                len += plen;\n                rlen = len;\n            }\n            else if (len % 16) {\n                throw new IllegalArgumentError('data length must be a multiple of the block size');\n            }\n        }\n        else {\n            len += plen;\n        }\n        const result = new Uint8Array(rlen);\n        if (len)\n            asm.cipher(amode, hpos + pos, len);\n        if (rlen)\n            result.set(heap.subarray(pos, pos + rlen));\n        this.pos = 0;\n        this.len = 0;\n        this.release_asm();\n        return result;\n    }\n    AES_Decrypt_process(data) {\n        if (!is_bytes(data))\n            throw new TypeError(\"data isn't of expected type\");\n        let { heap, asm } = this.acquire_asm();\n        let amode = AES_asm.DEC[this.mode];\n        let hpos = AES_asm.HEAP_DATA;\n        let pos = this.pos;\n        let len = this.len;\n        let dpos = 0;\n        let dlen = data.length || 0;\n        let rpos = 0;\n        let rlen = (len + dlen) & -16;\n        let plen = 0;\n        let wlen = 0;\n        if (this.padding) {\n            plen = len + dlen - rlen || 16;\n            rlen -= plen;\n        }\n        const result = new Uint8Array(rlen);\n        while (dlen > 0) {\n            wlen = _heap_write(heap, pos + len, data, dpos, dlen);\n            len += wlen;\n            dpos += wlen;\n            dlen -= wlen;\n            wlen = asm.cipher(amode, hpos + pos, len - (!dlen ? plen : 0));\n            if (wlen)\n                result.set(heap.subarray(pos, pos + wlen), rpos);\n            rpos += wlen;\n            if (wlen < len) {\n                pos += wlen;\n                len -= wlen;\n            }\n            else {\n                pos = 0;\n                len = 0;\n            }\n        }\n        this.pos = pos;\n        this.len = len;\n        return result;\n    }\n    AES_Decrypt_finish() {\n        let { heap, asm } = this.acquire_asm();\n        let amode = AES_asm.DEC[this.mode];\n        let hpos = AES_asm.HEAP_DATA;\n        let pos = this.pos;\n        let len = this.len;\n        let rlen = len;\n        if (len > 0) {\n            if (len % 16) {\n                if (this.hasOwnProperty('padding')) {\n                    throw new IllegalArgumentError('data length must be a multiple of the block size');\n                }\n                else {\n                    len += 16 - (len % 16);\n                }\n            }\n            asm.cipher(amode, hpos + pos, len);\n            if (this.hasOwnProperty('padding') && this.padding) {\n                let pad = heap[pos + rlen - 1];\n                if (pad < 1 || pad > 16 || pad > rlen)\n                    throw new SecurityError('bad padding');\n                let pcheck = 0;\n                for (let i = pad; i > 1; i--)\n                    pcheck |= pad ^ heap[pos + rlen - i];\n                if (pcheck)\n                    throw new SecurityError('bad padding');\n                rlen -= pad;\n            }\n        }\n        const result = new Uint8Array(rlen);\n        if (rlen > 0) {\n            result.set(heap.subarray(pos, pos + rlen));\n        }\n        this.pos = 0;\n        this.len = 0;\n        this.release_asm();\n        return result;\n    }\n}\n","import { AES } from './aes';\nimport { joinBytes } from '../other/utils';\nexport class AES_ECB {\n    static encrypt(data, key, padding = false) {\n        return new AES_ECB(key, padding).encrypt(data);\n    }\n    static decrypt(data, key, padding = false) {\n        return new AES_ECB(key, padding).decrypt(data);\n    }\n    constructor(key, padding = false, aes) {\n        this.aes = aes ? aes : new AES(key, undefined, padding, 'ECB');\n    }\n    encrypt(data) {\n        const r1 = this.aes.AES_Encrypt_process(data);\n        const r2 = this.aes.AES_Encrypt_finish();\n        return joinBytes(r1, r2);\n    }\n    decrypt(data) {\n        const r1 = this.aes.AES_Decrypt_process(data);\n        const r2 = this.aes.AES_Decrypt_finish();\n        return joinBytes(r1, r2);\n    }\n}\n","import { AES_ECB } from '@openpgp/asmcrypto.js/dist_es8/aes/ecb';\n\n/**\n * Javascript AES implementation.\n * This is used as fallback if the native Crypto APIs are not available.\n */\nfunction aes(length) {\n  const C = function(key) {\n    const aesECB = new AES_ECB(key);\n\n    this.encrypt = function(block) {\n      return aesECB.encrypt(block);\n    };\n\n    this.decrypt = function(block) {\n      return aesECB.decrypt(block);\n    };\n  };\n\n  C.blockSize = C.prototype.blockSize = 16;\n  C.keySize = C.prototype.keySize = length / 8;\n\n  return C;\n}\n\nexport default aes;\n","//Paul Tero, July 2001\n//http://www.tero.co.uk/des/\n//\n//Optimised for performance with large blocks by Michael Hayworth, November 2001\n//http://www.netdealing.com\n//\n// Modified by Recurity Labs GmbH\n\n//THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n//ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n//IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n//ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n//FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n//DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n//OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n//HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n//LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n//OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n//SUCH DAMAGE.\n\n//des\n//this takes the key, the message, and whether to encrypt or decrypt\n\nfunction des(keys, message, encrypt, mode, iv, padding) {\n  //declaring this locally speeds things up a bit\n  const spfunction1 = [\n    0x1010400, 0, 0x10000, 0x1010404, 0x1010004, 0x10404, 0x4, 0x10000, 0x400, 0x1010400,\n    0x1010404, 0x400, 0x1000404, 0x1010004, 0x1000000, 0x4, 0x404, 0x1000400, 0x1000400, 0x10400, 0x10400, 0x1010000,\n    0x1010000, 0x1000404, 0x10004, 0x1000004, 0x1000004, 0x10004, 0, 0x404, 0x10404, 0x1000000, 0x10000, 0x1010404, 0x4,\n    0x1010000, 0x1010400, 0x1000000, 0x1000000, 0x400, 0x1010004, 0x10000, 0x10400, 0x1000004, 0x400, 0x4, 0x1000404,\n    0x10404, 0x1010404, 0x10004, 0x1010000, 0x1000404, 0x1000004, 0x404, 0x10404, 0x1010400, 0x404, 0x1000400,\n    0x1000400, 0, 0x10004, 0x10400, 0, 0x1010004\n  ];\n  const spfunction2 = [\n    -0x7fef7fe0, -0x7fff8000, 0x8000, 0x108020, 0x100000, 0x20, -0x7fefffe0, -0x7fff7fe0,\n    -0x7fffffe0, -0x7fef7fe0, -0x7fef8000, -0x80000000, -0x7fff8000, 0x100000, 0x20, -0x7fefffe0, 0x108000, 0x100020,\n    -0x7fff7fe0, 0, -0x80000000, 0x8000, 0x108020, -0x7ff00000, 0x100020, -0x7fffffe0, 0, 0x108000, 0x8020, -0x7fef8000,\n    -0x7ff00000, 0x8020, 0, 0x108020, -0x7fefffe0, 0x100000, -0x7fff7fe0, -0x7ff00000, -0x7fef8000, 0x8000, -0x7ff00000,\n    -0x7fff8000, 0x20, -0x7fef7fe0, 0x108020, 0x20, 0x8000, -0x80000000, 0x8020, -0x7fef8000, 0x100000, -0x7fffffe0,\n    0x100020, -0x7fff7fe0, -0x7fffffe0, 0x100020, 0x108000, 0, -0x7fff8000, 0x8020, -0x80000000, -0x7fefffe0,\n    -0x7fef7fe0, 0x108000\n  ];\n  const spfunction3 = [\n    0x208, 0x8020200, 0, 0x8020008, 0x8000200, 0, 0x20208, 0x8000200, 0x20008, 0x8000008,\n    0x8000008, 0x20000, 0x8020208, 0x20008, 0x8020000, 0x208, 0x8000000, 0x8, 0x8020200, 0x200, 0x20200, 0x8020000,\n    0x8020008, 0x20208, 0x8000208, 0x20200, 0x20000, 0x8000208, 0x8, 0x8020208, 0x200, 0x8000000, 0x8020200, 0x8000000,\n    0x20008, 0x208, 0x20000, 0x8020200, 0x8000200, 0, 0x200, 0x20008, 0x8020208, 0x8000200, 0x8000008, 0x200, 0,\n    0x8020008, 0x8000208, 0x20000, 0x8000000, 0x8020208, 0x8, 0x20208, 0x20200, 0x8000008, 0x8020000, 0x8000208, 0x208,\n    0x8020000, 0x20208, 0x8, 0x8020008, 0x20200\n  ];\n  const spfunction4 = [\n    0x802001, 0x2081, 0x2081, 0x80, 0x802080, 0x800081, 0x800001, 0x2001, 0, 0x802000,\n    0x802000, 0x802081, 0x81, 0, 0x800080, 0x800001, 0x1, 0x2000, 0x800000, 0x802001, 0x80, 0x800000, 0x2001, 0x2080,\n    0x800081, 0x1, 0x2080, 0x800080, 0x2000, 0x802080, 0x802081, 0x81, 0x800080, 0x800001, 0x802000, 0x802081, 0x81, 0,\n    0, 0x802000, 0x2080, 0x800080, 0x800081, 0x1, 0x802001, 0x2081, 0x2081, 0x80, 0x802081, 0x81, 0x1, 0x2000, 0x800001,\n    0x2001, 0x802080, 0x800081, 0x2001, 0x2080, 0x800000, 0x802001, 0x80, 0x800000, 0x2000, 0x802080\n  ];\n  const spfunction5 = [\n    0x100, 0x2080100, 0x2080000, 0x42000100, 0x80000, 0x100, 0x40000000, 0x2080000,\n    0x40080100, 0x80000, 0x2000100, 0x40080100, 0x42000100, 0x42080000, 0x80100, 0x40000000, 0x2000000, 0x40080000,\n    0x40080000, 0, 0x40000100, 0x42080100, 0x42080100, 0x2000100, 0x42080000, 0x40000100, 0, 0x42000000, 0x2080100,\n    0x2000000, 0x42000000, 0x80100, 0x80000, 0x42000100, 0x100, 0x2000000, 0x40000000, 0x2080000, 0x42000100,\n    0x40080100, 0x2000100, 0x40000000, 0x42080000, 0x2080100, 0x40080100, 0x100, 0x2000000, 0x42080000, 0x42080100,\n    0x80100, 0x42000000, 0x42080100, 0x2080000, 0, 0x40080000, 0x42000000, 0x80100, 0x2000100, 0x40000100, 0x80000, 0,\n    0x40080000, 0x2080100, 0x40000100\n  ];\n  const spfunction6 = [\n    0x20000010, 0x20400000, 0x4000, 0x20404010, 0x20400000, 0x10, 0x20404010, 0x400000,\n    0x20004000, 0x404010, 0x400000, 0x20000010, 0x400010, 0x20004000, 0x20000000, 0x4010, 0, 0x400010, 0x20004010,\n    0x4000, 0x404000, 0x20004010, 0x10, 0x20400010, 0x20400010, 0, 0x404010, 0x20404000, 0x4010, 0x404000, 0x20404000,\n    0x20000000, 0x20004000, 0x10, 0x20400010, 0x404000, 0x20404010, 0x400000, 0x4010, 0x20000010, 0x400000, 0x20004000,\n    0x20000000, 0x4010, 0x20000010, 0x20404010, 0x404000, 0x20400000, 0x404010, 0x20404000, 0, 0x20400010, 0x10, 0x4000,\n    0x20400000, 0x404010, 0x4000, 0x400010, 0x20004010, 0, 0x20404000, 0x20000000, 0x400010, 0x20004010\n  ];\n  const spfunction7 = [\n    0x200000, 0x4200002, 0x4000802, 0, 0x800, 0x4000802, 0x200802, 0x4200800, 0x4200802,\n    0x200000, 0, 0x4000002, 0x2, 0x4000000, 0x4200002, 0x802, 0x4000800, 0x200802, 0x200002, 0x4000800, 0x4000002,\n    0x4200000, 0x4200800, 0x200002, 0x4200000, 0x800, 0x802, 0x4200802, 0x200800, 0x2, 0x4000000, 0x200800, 0x4000000,\n    0x200800, 0x200000, 0x4000802, 0x4000802, 0x4200002, 0x4200002, 0x2, 0x200002, 0x4000000, 0x4000800, 0x200000,\n    0x4200800, 0x802, 0x200802, 0x4200800, 0x802, 0x4000002, 0x4200802, 0x4200000, 0x200800, 0, 0x2, 0x4200802, 0,\n    0x200802, 0x4200000, 0x800, 0x4000002, 0x4000800, 0x800, 0x200002\n  ];\n  const spfunction8 = [\n    0x10001040, 0x1000, 0x40000, 0x10041040, 0x10000000, 0x10001040, 0x40, 0x10000000,\n    0x40040, 0x10040000, 0x10041040, 0x41000, 0x10041000, 0x41040, 0x1000, 0x40, 0x10040000, 0x10000040, 0x10001000,\n    0x1040, 0x41000, 0x40040, 0x10040040, 0x10041000, 0x1040, 0, 0, 0x10040040, 0x10000040, 0x10001000, 0x41040,\n    0x40000, 0x41040, 0x40000, 0x10041000, 0x1000, 0x40, 0x10040040, 0x1000, 0x41040, 0x10001000, 0x40, 0x10000040,\n    0x10040000, 0x10040040, 0x10000000, 0x40000, 0x10001040, 0, 0x10041040, 0x40040, 0x10000040, 0x10040000, 0x10001000,\n    0x10001040, 0, 0x10041040, 0x41000, 0x41000, 0x1040, 0x1040, 0x40040, 0x10000000, 0x10041000\n  ];\n\n  //create the 16 or 48 subkeys we will need\n  let m = 0;\n  let i;\n  let j;\n  let temp;\n  let right1;\n  let right2;\n  let left;\n  let right;\n  let looping;\n  let cbcleft;\n  let cbcleft2;\n  let cbcright;\n  let cbcright2;\n  let endloop;\n  let loopinc;\n  let len = message.length;\n\n  //set up the loops for single and triple des\n  const iterations = keys.length === 32 ? 3 : 9; //single or triple des\n  if (iterations === 3) {\n    looping = encrypt ? [0, 32, 2] : [30, -2, -2];\n  } else {\n    looping = encrypt ? [0, 32, 2, 62, 30, -2, 64, 96, 2] : [94, 62, -2, 32, 64, 2, 30, -2, -2];\n  }\n\n  //pad the message depending on the padding parameter\n  //only add padding if encrypting - note that you need to use the same padding option for both encrypt and decrypt\n  if (encrypt) {\n    message = desAddPadding(message, padding);\n    len = message.length;\n  }\n\n  //store the result here\n  let result = new Uint8Array(len);\n  let k = 0;\n\n  if (mode === 1) { //CBC mode\n    cbcleft = (iv[m++] << 24) | (iv[m++] << 16) | (iv[m++] << 8) | iv[m++];\n    cbcright = (iv[m++] << 24) | (iv[m++] << 16) | (iv[m++] << 8) | iv[m++];\n    m = 0;\n  }\n\n  //loop through each 64 bit chunk of the message\n  while (m < len) {\n    left = (message[m++] << 24) | (message[m++] << 16) | (message[m++] << 8) | message[m++];\n    right = (message[m++] << 24) | (message[m++] << 16) | (message[m++] << 8) | message[m++];\n\n    //for Cipher Block Chaining mode, xor the message with the previous result\n    if (mode === 1) {\n      if (encrypt) {\n        left ^= cbcleft;\n        right ^= cbcright;\n      } else {\n        cbcleft2 = cbcleft;\n        cbcright2 = cbcright;\n        cbcleft = left;\n        cbcright = right;\n      }\n    }\n\n    //first each 64 but chunk of the message must be permuted according to IP\n    temp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= temp;\n    left ^= (temp << 4);\n    temp = ((left >>> 16) ^ right) & 0x0000ffff;\n    right ^= temp;\n    left ^= (temp << 16);\n    temp = ((right >>> 2) ^ left) & 0x33333333;\n    left ^= temp;\n    right ^= (temp << 2);\n    temp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= temp;\n    right ^= (temp << 8);\n    temp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= temp;\n    left ^= (temp << 1);\n\n    left = ((left << 1) | (left >>> 31));\n    right = ((right << 1) | (right >>> 31));\n\n    //do this either 1 or 3 times for each chunk of the message\n    for (j = 0; j < iterations; j += 3) {\n      endloop = looping[j + 1];\n      loopinc = looping[j + 2];\n      //now go through and perform the encryption or decryption\n      for (i = looping[j]; i !== endloop; i += loopinc) { //for efficiency\n        right1 = right ^ keys[i];\n        right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n        //the result is attained by passing these bytes through the S selection functions\n        temp = left;\n        left = right;\n        right = temp ^ (spfunction2[(right1 >>> 24) & 0x3f] | spfunction4[(right1 >>> 16) & 0x3f] | spfunction6[(right1 >>>\n          8) & 0x3f] | spfunction8[right1 & 0x3f] | spfunction1[(right2 >>> 24) & 0x3f] | spfunction3[(right2 >>> 16) &\n          0x3f] | spfunction5[(right2 >>> 8) & 0x3f] | spfunction7[right2 & 0x3f]);\n      }\n      temp = left;\n      left = right;\n      right = temp; //unreverse left and right\n    } //for either 1 or 3 iterations\n\n    //move then each one bit to the right\n    left = ((left >>> 1) | (left << 31));\n    right = ((right >>> 1) | (right << 31));\n\n    //now perform IP-1, which is IP in the opposite direction\n    temp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= temp;\n    left ^= (temp << 1);\n    temp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= temp;\n    right ^= (temp << 8);\n    temp = ((right >>> 2) ^ left) & 0x33333333;\n    left ^= temp;\n    right ^= (temp << 2);\n    temp = ((left >>> 16) ^ right) & 0x0000ffff;\n    right ^= temp;\n    left ^= (temp << 16);\n    temp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= temp;\n    left ^= (temp << 4);\n\n    //for Cipher Block Chaining mode, xor the message with the previous result\n    if (mode === 1) {\n      if (encrypt) {\n        cbcleft = left;\n        cbcright = right;\n      } else {\n        left ^= cbcleft2;\n        right ^= cbcright2;\n      }\n    }\n\n    result[k++] = (left >>> 24);\n    result[k++] = ((left >>> 16) & 0xff);\n    result[k++] = ((left >>> 8) & 0xff);\n    result[k++] = (left & 0xff);\n    result[k++] = (right >>> 24);\n    result[k++] = ((right >>> 16) & 0xff);\n    result[k++] = ((right >>> 8) & 0xff);\n    result[k++] = (right & 0xff);\n  } //for every 8 characters, or 64 bits in the message\n\n  //only remove padding if decrypting - note that you need to use the same padding option for both encrypt and decrypt\n  if (!encrypt) {\n    result = desRemovePadding(result, padding);\n  }\n\n  return result;\n} //end of des\n\n\n//desCreateKeys\n//this takes as input a 64 bit key (even though only 56 bits are used)\n//as an array of 2 integers, and returns 16 48 bit keys\n\nfunction desCreateKeys(key) {\n  //declaring this locally speeds things up a bit\n  const pc2bytes0 = [\n    0, 0x4, 0x20000000, 0x20000004, 0x10000, 0x10004, 0x20010000, 0x20010004, 0x200, 0x204,\n    0x20000200, 0x20000204, 0x10200, 0x10204, 0x20010200, 0x20010204\n  ];\n  const pc2bytes1 = [\n    0, 0x1, 0x100000, 0x100001, 0x4000000, 0x4000001, 0x4100000, 0x4100001, 0x100, 0x101, 0x100100,\n    0x100101, 0x4000100, 0x4000101, 0x4100100, 0x4100101\n  ];\n  const pc2bytes2 = [\n    0, 0x8, 0x800, 0x808, 0x1000000, 0x1000008, 0x1000800, 0x1000808, 0, 0x8, 0x800, 0x808,\n    0x1000000, 0x1000008, 0x1000800, 0x1000808\n  ];\n  const pc2bytes3 = [\n    0, 0x200000, 0x8000000, 0x8200000, 0x2000, 0x202000, 0x8002000, 0x8202000, 0x20000, 0x220000,\n    0x8020000, 0x8220000, 0x22000, 0x222000, 0x8022000, 0x8222000\n  ];\n  const pc2bytes4 = [\n    0, 0x40000, 0x10, 0x40010, 0, 0x40000, 0x10, 0x40010, 0x1000, 0x41000, 0x1010, 0x41010, 0x1000,\n    0x41000, 0x1010, 0x41010\n  ];\n  const pc2bytes5 = [\n    0, 0x400, 0x20, 0x420, 0, 0x400, 0x20, 0x420, 0x2000000, 0x2000400, 0x2000020, 0x2000420,\n    0x2000000, 0x2000400, 0x2000020, 0x2000420\n  ];\n  const pc2bytes6 = [\n    0, 0x10000000, 0x80000, 0x10080000, 0x2, 0x10000002, 0x80002, 0x10080002, 0, 0x10000000,\n    0x80000, 0x10080000, 0x2, 0x10000002, 0x80002, 0x10080002\n  ];\n  const pc2bytes7 = [\n    0, 0x10000, 0x800, 0x10800, 0x20000000, 0x20010000, 0x20000800, 0x20010800, 0x20000, 0x30000,\n    0x20800, 0x30800, 0x20020000, 0x20030000, 0x20020800, 0x20030800\n  ];\n  const pc2bytes8 = [\n    0, 0x40000, 0, 0x40000, 0x2, 0x40002, 0x2, 0x40002, 0x2000000, 0x2040000, 0x2000000, 0x2040000,\n    0x2000002, 0x2040002, 0x2000002, 0x2040002\n  ];\n  const pc2bytes9 = [\n    0, 0x10000000, 0x8, 0x10000008, 0, 0x10000000, 0x8, 0x10000008, 0x400, 0x10000400, 0x408,\n    0x10000408, 0x400, 0x10000400, 0x408, 0x10000408\n  ];\n  const pc2bytes10 = [\n    0, 0x20, 0, 0x20, 0x100000, 0x100020, 0x100000, 0x100020, 0x2000, 0x2020, 0x2000, 0x2020,\n    0x102000, 0x102020, 0x102000, 0x102020\n  ];\n  const pc2bytes11 = [\n    0, 0x1000000, 0x200, 0x1000200, 0x200000, 0x1200000, 0x200200, 0x1200200, 0x4000000, 0x5000000,\n    0x4000200, 0x5000200, 0x4200000, 0x5200000, 0x4200200, 0x5200200\n  ];\n  const pc2bytes12 = [\n    0, 0x1000, 0x8000000, 0x8001000, 0x80000, 0x81000, 0x8080000, 0x8081000, 0x10, 0x1010,\n    0x8000010, 0x8001010, 0x80010, 0x81010, 0x8080010, 0x8081010\n  ];\n  const pc2bytes13 = [0, 0x4, 0x100, 0x104, 0, 0x4, 0x100, 0x104, 0x1, 0x5, 0x101, 0x105, 0x1, 0x5, 0x101, 0x105];\n\n  //how many iterations (1 for des, 3 for triple des)\n  const iterations = key.length > 8 ? 3 : 1; //changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  //stores the return keys\n  const keys = new Array(32 * iterations);\n  //now define the left shifts which need to be done\n  const shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n  //other variables\n  let lefttemp;\n  let righttemp;\n  let m = 0;\n  let n = 0;\n  let temp;\n\n  for (let j = 0; j < iterations; j++) { //either 1 or 3 iterations\n    let left = (key[m++] << 24) | (key[m++] << 16) | (key[m++] << 8) | key[m++];\n    let right = (key[m++] << 24) | (key[m++] << 16) | (key[m++] << 8) | key[m++];\n\n    temp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= temp;\n    left ^= (temp << 4);\n    temp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= temp;\n    right ^= (temp << -16);\n    temp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= temp;\n    left ^= (temp << 2);\n    temp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= temp;\n    right ^= (temp << -16);\n    temp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= temp;\n    left ^= (temp << 1);\n    temp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= temp;\n    right ^= (temp << 8);\n    temp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= temp;\n    left ^= (temp << 1);\n\n    //the right side needs to be shifted and to get the last four bits of the left side\n    temp = (left << 8) | ((right >>> 20) & 0x000000f0);\n    //left needs to be put upside down\n    left = (right << 24) | ((right << 8) & 0xff0000) | ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0);\n    right = temp;\n\n    //now go through and perform these shifts on the left and right keys\n    for (let i = 0; i < shifts.length; i++) {\n      //shift the keys either one or two bits to the left\n      if (shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      //now apply PC-2, in such a way that E is easier when encrypting or decrypting\n      //this conversion will look like PC-2 except only the last 6 bits of each byte are used\n      //rather than 48 consecutive bits and the order of lines will be according to\n      //how the S selection functions will be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      lefttemp = pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] | pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(\n        left >>> 16) & 0xf] | pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] | pc2bytes6[(left >>> 4) &\n        0xf];\n      righttemp = pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] | pc2bytes9[(right >>> 20) & 0xf] |\n        pc2bytes10[(right >>> 16) & 0xf] | pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf];\n      temp = ((righttemp >>> 16) ^ lefttemp) & 0x0000ffff;\n      keys[n++] = lefttemp ^ temp;\n      keys[n++] = righttemp ^ (temp << 16);\n    }\n  } //for each iterations\n  //return the keys we've created\n  return keys;\n} //end of desCreateKeys\n\n\nfunction desAddPadding(message, padding) {\n  const padLength = 8 - (message.length % 8);\n\n  let pad;\n  if (padding === 2 && (padLength < 8)) { //pad the message with spaces\n    pad = ' '.charCodeAt(0);\n  } else if (padding === 1) { //PKCS7 padding\n    pad = padLength;\n  } else if (!padding && (padLength < 8)) { //pad the message out with null bytes\n    pad = 0;\n  } else if (padLength === 8) {\n    return message;\n  } else {\n    throw new Error('des: invalid padding');\n  }\n\n  const paddedMessage = new Uint8Array(message.length + padLength);\n  for (let i = 0; i < message.length; i++) {\n    paddedMessage[i] = message[i];\n  }\n  for (let j = 0; j < padLength; j++) {\n    paddedMessage[message.length + j] = pad;\n  }\n\n  return paddedMessage;\n}\n\nfunction desRemovePadding(message, padding) {\n  let padLength = null;\n  let pad;\n  if (padding === 2) { // space padded\n    pad = ' '.charCodeAt(0);\n  } else if (padding === 1) { // PKCS7\n    padLength = message[message.length - 1];\n  } else if (!padding) { // null padding\n    pad = 0;\n  } else {\n    throw new Error('des: invalid padding');\n  }\n\n  if (!padLength) {\n    padLength = 1;\n    while (message[message.length - padLength] === pad) {\n      padLength++;\n    }\n    padLength--;\n  }\n\n  return message.subarray(0, message.length - padLength);\n}\n\n// added by Recurity Labs\n\nexport function TripleDES(key) {\n  this.key = [];\n\n  for (let i = 0; i < 3; i++) {\n    this.key.push(new Uint8Array(key.subarray(i * 8, (i * 8) + 8)));\n  }\n\n  this.encrypt = function(block) {\n    return des(\n      desCreateKeys(this.key[2]),\n      des(\n        desCreateKeys(this.key[1]),\n        des(\n          desCreateKeys(this.key[0]),\n          block, true, 0, null, null\n        ),\n        false, 0, null, null\n      ), true, 0, null, null\n    );\n  };\n}\n\nTripleDES.keySize = TripleDES.prototype.keySize = 24;\nTripleDES.blockSize = TripleDES.prototype.blockSize = 8;\n\n// This is \"original\" DES\n\nexport function DES(key) {\n  this.key = key;\n\n  this.encrypt = function(block, padding) {\n    const keys = desCreateKeys(this.key);\n    return des(keys, block, true, 0, null, padding);\n  };\n\n  this.decrypt = function(block, padding) {\n    const keys = desCreateKeys(this.key);\n    return des(keys, block, false, 0, null, padding);\n  };\n}\n","// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// Copyright 2010 pjacobs@xeekr.com . All rights reserved.\n\n// Modified by Recurity Labs GmbH\n\n// fixed/modified by Herbert Hanewinkel, www.haneWIN.de\n// check www.haneWIN.de for the latest version\n\n// cast5.js is a Javascript implementation of CAST-128, as defined in RFC 2144.\n// CAST-128 is a common OpenPGP cipher.\n\n\n// CAST5 constructor\n\nfunction OpenPGPSymEncCAST5() {\n  this.BlockSize = 8;\n  this.KeySize = 16;\n\n  this.setKey = function(key) {\n    this.masking = new Array(16);\n    this.rotate = new Array(16);\n\n    this.reset();\n\n    if (key.length === this.KeySize) {\n      this.keySchedule(key);\n    } else {\n      throw new Error('CAST-128: keys must be 16 bytes');\n    }\n    return true;\n  };\n\n  this.reset = function() {\n    for (let i = 0; i < 16; i++) {\n      this.masking[i] = 0;\n      this.rotate[i] = 0;\n    }\n  };\n\n  this.getBlockSize = function() {\n    return this.BlockSize;\n  };\n\n  this.encrypt = function(src) {\n    const dst = new Array(src.length);\n\n    for (let i = 0; i < src.length; i += 8) {\n      let l = (src[i] << 24) | (src[i + 1] << 16) | (src[i + 2] << 8) | src[i + 3];\n      let r = (src[i + 4] << 24) | (src[i + 5] << 16) | (src[i + 6] << 8) | src[i + 7];\n      let t;\n\n      t = r;\n      r = l ^ f1(r, this.masking[0], this.rotate[0]);\n      l = t;\n      t = r;\n      r = l ^ f2(r, this.masking[1], this.rotate[1]);\n      l = t;\n      t = r;\n      r = l ^ f3(r, this.masking[2], this.rotate[2]);\n      l = t;\n      t = r;\n      r = l ^ f1(r, this.masking[3], this.rotate[3]);\n      l = t;\n\n      t = r;\n      r = l ^ f2(r, this.masking[4], this.rotate[4]);\n      l = t;\n      t = r;\n      r = l ^ f3(r, this.masking[5], this.rotate[5]);\n      l = t;\n      t = r;\n      r = l ^ f1(r, this.masking[6], this.rotate[6]);\n      l = t;\n      t = r;\n      r = l ^ f2(r, this.masking[7], this.rotate[7]);\n      l = t;\n\n      t = r;\n      r = l ^ f3(r, this.masking[8], this.rotate[8]);\n      l = t;\n      t = r;\n      r = l ^ f1(r, this.masking[9], this.rotate[9]);\n      l = t;\n      t = r;\n      r = l ^ f2(r, this.masking[10], this.rotate[10]);\n      l = t;\n      t = r;\n      r = l ^ f3(r, this.masking[11], this.rotate[11]);\n      l = t;\n\n      t = r;\n      r = l ^ f1(r, this.masking[12], this.rotate[12]);\n      l = t;\n      t = r;\n      r = l ^ f2(r, this.masking[13], this.rotate[13]);\n      l = t;\n      t = r;\n      r = l ^ f3(r, this.masking[14], this.rotate[14]);\n      l = t;\n      t = r;\n      r = l ^ f1(r, this.masking[15], this.rotate[15]);\n      l = t;\n\n      dst[i] = (r >>> 24) & 255;\n      dst[i + 1] = (r >>> 16) & 255;\n      dst[i + 2] = (r >>> 8) & 255;\n      dst[i + 3] = r & 255;\n      dst[i + 4] = (l >>> 24) & 255;\n      dst[i + 5] = (l >>> 16) & 255;\n      dst[i + 6] = (l >>> 8) & 255;\n      dst[i + 7] = l & 255;\n    }\n\n    return dst;\n  };\n\n  this.decrypt = function(src) {\n    const dst = new Array(src.length);\n\n    for (let i = 0; i < src.length; i += 8) {\n      let l = (src[i] << 24) | (src[i + 1] << 16) | (src[i + 2] << 8) | src[i + 3];\n      let r = (src[i + 4] << 24) | (src[i + 5] << 16) | (src[i + 6] << 8) | src[i + 7];\n      let t;\n\n      t = r;\n      r = l ^ f1(r, this.masking[15], this.rotate[15]);\n      l = t;\n      t = r;\n      r = l ^ f3(r, this.masking[14], this.rotate[14]);\n      l = t;\n      t = r;\n      r = l ^ f2(r, this.masking[13], this.rotate[13]);\n      l = t;\n      t = r;\n      r = l ^ f1(r, this.masking[12], this.rotate[12]);\n      l = t;\n\n      t = r;\n      r = l ^ f3(r, this.masking[11], this.rotate[11]);\n      l = t;\n      t = r;\n      r = l ^ f2(r, this.masking[10], this.rotate[10]);\n      l = t;\n      t = r;\n      r = l ^ f1(r, this.masking[9], this.rotate[9]);\n      l = t;\n      t = r;\n      r = l ^ f3(r, this.masking[8], this.rotate[8]);\n      l = t;\n\n      t = r;\n      r = l ^ f2(r, this.masking[7], this.rotate[7]);\n      l = t;\n      t = r;\n      r = l ^ f1(r, this.masking[6], this.rotate[6]);\n      l = t;\n      t = r;\n      r = l ^ f3(r, this.masking[5], this.rotate[5]);\n      l = t;\n      t = r;\n      r = l ^ f2(r, this.masking[4], this.rotate[4]);\n      l = t;\n\n      t = r;\n      r = l ^ f1(r, this.masking[3], this.rotate[3]);\n      l = t;\n      t = r;\n      r = l ^ f3(r, this.masking[2], this.rotate[2]);\n      l = t;\n      t = r;\n      r = l ^ f2(r, this.masking[1], this.rotate[1]);\n      l = t;\n      t = r;\n      r = l ^ f1(r, this.masking[0], this.rotate[0]);\n      l = t;\n\n      dst[i] = (r >>> 24) & 255;\n      dst[i + 1] = (r >>> 16) & 255;\n      dst[i + 2] = (r >>> 8) & 255;\n      dst[i + 3] = r & 255;\n      dst[i + 4] = (l >>> 24) & 255;\n      dst[i + 5] = (l >> 16) & 255;\n      dst[i + 6] = (l >> 8) & 255;\n      dst[i + 7] = l & 255;\n    }\n\n    return dst;\n  };\n  const scheduleA = new Array(4);\n\n  scheduleA[0] = new Array(4);\n  scheduleA[0][0] = [4, 0, 0xd, 0xf, 0xc, 0xe, 0x8];\n  scheduleA[0][1] = [5, 2, 16 + 0, 16 + 2, 16 + 1, 16 + 3, 0xa];\n  scheduleA[0][2] = [6, 3, 16 + 7, 16 + 6, 16 + 5, 16 + 4, 9];\n  scheduleA[0][3] = [7, 1, 16 + 0xa, 16 + 9, 16 + 0xb, 16 + 8, 0xb];\n\n  scheduleA[1] = new Array(4);\n  scheduleA[1][0] = [0, 6, 16 + 5, 16 + 7, 16 + 4, 16 + 6, 16 + 0];\n  scheduleA[1][1] = [1, 4, 0, 2, 1, 3, 16 + 2];\n  scheduleA[1][2] = [2, 5, 7, 6, 5, 4, 16 + 1];\n  scheduleA[1][3] = [3, 7, 0xa, 9, 0xb, 8, 16 + 3];\n\n  scheduleA[2] = new Array(4);\n  scheduleA[2][0] = [4, 0, 0xd, 0xf, 0xc, 0xe, 8];\n  scheduleA[2][1] = [5, 2, 16 + 0, 16 + 2, 16 + 1, 16 + 3, 0xa];\n  scheduleA[2][2] = [6, 3, 16 + 7, 16 + 6, 16 + 5, 16 + 4, 9];\n  scheduleA[2][3] = [7, 1, 16 + 0xa, 16 + 9, 16 + 0xb, 16 + 8, 0xb];\n\n\n  scheduleA[3] = new Array(4);\n  scheduleA[3][0] = [0, 6, 16 + 5, 16 + 7, 16 + 4, 16 + 6, 16 + 0];\n  scheduleA[3][1] = [1, 4, 0, 2, 1, 3, 16 + 2];\n  scheduleA[3][2] = [2, 5, 7, 6, 5, 4, 16 + 1];\n  scheduleA[3][3] = [3, 7, 0xa, 9, 0xb, 8, 16 + 3];\n\n  const scheduleB = new Array(4);\n\n  scheduleB[0] = new Array(4);\n  scheduleB[0][0] = [16 + 8, 16 + 9, 16 + 7, 16 + 6, 16 + 2];\n  scheduleB[0][1] = [16 + 0xa, 16 + 0xb, 16 + 5, 16 + 4, 16 + 6];\n  scheduleB[0][2] = [16 + 0xc, 16 + 0xd, 16 + 3, 16 + 2, 16 + 9];\n  scheduleB[0][3] = [16 + 0xe, 16 + 0xf, 16 + 1, 16 + 0, 16 + 0xc];\n\n  scheduleB[1] = new Array(4);\n  scheduleB[1][0] = [3, 2, 0xc, 0xd, 8];\n  scheduleB[1][1] = [1, 0, 0xe, 0xf, 0xd];\n  scheduleB[1][2] = [7, 6, 8, 9, 3];\n  scheduleB[1][3] = [5, 4, 0xa, 0xb, 7];\n\n\n  scheduleB[2] = new Array(4);\n  scheduleB[2][0] = [16 + 3, 16 + 2, 16 + 0xc, 16 + 0xd, 16 + 9];\n  scheduleB[2][1] = [16 + 1, 16 + 0, 16 + 0xe, 16 + 0xf, 16 + 0xc];\n  scheduleB[2][2] = [16 + 7, 16 + 6, 16 + 8, 16 + 9, 16 + 2];\n  scheduleB[2][3] = [16 + 5, 16 + 4, 16 + 0xa, 16 + 0xb, 16 + 6];\n\n\n  scheduleB[3] = new Array(4);\n  scheduleB[3][0] = [8, 9, 7, 6, 3];\n  scheduleB[3][1] = [0xa, 0xb, 5, 4, 7];\n  scheduleB[3][2] = [0xc, 0xd, 3, 2, 8];\n  scheduleB[3][3] = [0xe, 0xf, 1, 0, 0xd];\n\n  // changed 'in' to 'inn' (in javascript 'in' is a reserved word)\n  this.keySchedule = function(inn) {\n    const t = new Array(8);\n    const k = new Array(32);\n\n    let j;\n\n    for (let i = 0; i < 4; i++) {\n      j = i * 4;\n      t[i] = (inn[j] << 24) | (inn[j + 1] << 16) | (inn[j + 2] << 8) | inn[j + 3];\n    }\n\n    const x = [6, 7, 4, 5];\n    let ki = 0;\n    let w;\n\n    for (let half = 0; half < 2; half++) {\n      for (let round = 0; round < 4; round++) {\n        for (j = 0; j < 4; j++) {\n          const a = scheduleA[round][j];\n          w = t[a[1]];\n\n          w ^= sBox[4][(t[a[2] >>> 2] >>> (24 - 8 * (a[2] & 3))) & 0xff];\n          w ^= sBox[5][(t[a[3] >>> 2] >>> (24 - 8 * (a[3] & 3))) & 0xff];\n          w ^= sBox[6][(t[a[4] >>> 2] >>> (24 - 8 * (a[4] & 3))) & 0xff];\n          w ^= sBox[7][(t[a[5] >>> 2] >>> (24 - 8 * (a[5] & 3))) & 0xff];\n          w ^= sBox[x[j]][(t[a[6] >>> 2] >>> (24 - 8 * (a[6] & 3))) & 0xff];\n          t[a[0]] = w;\n        }\n\n        for (j = 0; j < 4; j++) {\n          const b = scheduleB[round][j];\n          w = sBox[4][(t[b[0] >>> 2] >>> (24 - 8 * (b[0] & 3))) & 0xff];\n\n          w ^= sBox[5][(t[b[1] >>> 2] >>> (24 - 8 * (b[1] & 3))) & 0xff];\n          w ^= sBox[6][(t[b[2] >>> 2] >>> (24 - 8 * (b[2] & 3))) & 0xff];\n          w ^= sBox[7][(t[b[3] >>> 2] >>> (24 - 8 * (b[3] & 3))) & 0xff];\n          w ^= sBox[4 + j][(t[b[4] >>> 2] >>> (24 - 8 * (b[4] & 3))) & 0xff];\n          k[ki] = w;\n          ki++;\n        }\n      }\n    }\n\n    for (let i = 0; i < 16; i++) {\n      this.masking[i] = k[i];\n      this.rotate[i] = k[16 + i] & 0x1f;\n    }\n  };\n\n  // These are the three 'f' functions. See RFC 2144, section 2.2.\n\n  function f1(d, m, r) {\n    const t = m + d;\n    const I = (t << r) | (t >>> (32 - r));\n    return ((sBox[0][I >>> 24] ^ sBox[1][(I >>> 16) & 255]) - sBox[2][(I >>> 8) & 255]) + sBox[3][I & 255];\n  }\n\n  function f2(d, m, r) {\n    const t = m ^ d;\n    const I = (t << r) | (t >>> (32 - r));\n    return ((sBox[0][I >>> 24] - sBox[1][(I >>> 16) & 255]) + sBox[2][(I >>> 8) & 255]) ^ sBox[3][I & 255];\n  }\n\n  function f3(d, m, r) {\n    const t = m - d;\n    const I = (t << r) | (t >>> (32 - r));\n    return ((sBox[0][I >>> 24] + sBox[1][(I >>> 16) & 255]) ^ sBox[2][(I >>> 8) & 255]) - sBox[3][I & 255];\n  }\n\n  const sBox = new Array(8);\n  sBox[0] = [\n    0x30fb40d4, 0x9fa0ff0b, 0x6beccd2f, 0x3f258c7a, 0x1e213f2f, 0x9c004dd3, 0x6003e540, 0xcf9fc949,\n    0xbfd4af27, 0x88bbbdb5, 0xe2034090, 0x98d09675, 0x6e63a0e0, 0x15c361d2, 0xc2e7661d, 0x22d4ff8e,\n    0x28683b6f, 0xc07fd059, 0xff2379c8, 0x775f50e2, 0x43c340d3, 0xdf2f8656, 0x887ca41a, 0xa2d2bd2d,\n    0xa1c9e0d6, 0x346c4819, 0x61b76d87, 0x22540f2f, 0x2abe32e1, 0xaa54166b, 0x22568e3a, 0xa2d341d0,\n    0x66db40c8, 0xa784392f, 0x004dff2f, 0x2db9d2de, 0x97943fac, 0x4a97c1d8, 0x527644b7, 0xb5f437a7,\n    0xb82cbaef, 0xd751d159, 0x6ff7f0ed, 0x5a097a1f, 0x827b68d0, 0x90ecf52e, 0x22b0c054, 0xbc8e5935,\n    0x4b6d2f7f, 0x50bb64a2, 0xd2664910, 0xbee5812d, 0xb7332290, 0xe93b159f, 0xb48ee411, 0x4bff345d,\n    0xfd45c240, 0xad31973f, 0xc4f6d02e, 0x55fc8165, 0xd5b1caad, 0xa1ac2dae, 0xa2d4b76d, 0xc19b0c50,\n    0x882240f2, 0x0c6e4f38, 0xa4e4bfd7, 0x4f5ba272, 0x564c1d2f, 0xc59c5319, 0xb949e354, 0xb04669fe,\n    0xb1b6ab8a, 0xc71358dd, 0x6385c545, 0x110f935d, 0x57538ad5, 0x6a390493, 0xe63d37e0, 0x2a54f6b3,\n    0x3a787d5f, 0x6276a0b5, 0x19a6fcdf, 0x7a42206a, 0x29f9d4d5, 0xf61b1891, 0xbb72275e, 0xaa508167,\n    0x38901091, 0xc6b505eb, 0x84c7cb8c, 0x2ad75a0f, 0x874a1427, 0xa2d1936b, 0x2ad286af, 0xaa56d291,\n    0xd7894360, 0x425c750d, 0x93b39e26, 0x187184c9, 0x6c00b32d, 0x73e2bb14, 0xa0bebc3c, 0x54623779,\n    0x64459eab, 0x3f328b82, 0x7718cf82, 0x59a2cea6, 0x04ee002e, 0x89fe78e6, 0x3fab0950, 0x325ff6c2,\n    0x81383f05, 0x6963c5c8, 0x76cb5ad6, 0xd49974c9, 0xca180dcf, 0x380782d5, 0xc7fa5cf6, 0x8ac31511,\n    0x35e79e13, 0x47da91d0, 0xf40f9086, 0xa7e2419e, 0x31366241, 0x051ef495, 0xaa573b04, 0x4a805d8d,\n    0x548300d0, 0x00322a3c, 0xbf64cddf, 0xba57a68e, 0x75c6372b, 0x50afd341, 0xa7c13275, 0x915a0bf5,\n    0x6b54bfab, 0x2b0b1426, 0xab4cc9d7, 0x449ccd82, 0xf7fbf265, 0xab85c5f3, 0x1b55db94, 0xaad4e324,\n    0xcfa4bd3f, 0x2deaa3e2, 0x9e204d02, 0xc8bd25ac, 0xeadf55b3, 0xd5bd9e98, 0xe31231b2, 0x2ad5ad6c,\n    0x954329de, 0xadbe4528, 0xd8710f69, 0xaa51c90f, 0xaa786bf6, 0x22513f1e, 0xaa51a79b, 0x2ad344cc,\n    0x7b5a41f0, 0xd37cfbad, 0x1b069505, 0x41ece491, 0xb4c332e6, 0x032268d4, 0xc9600acc, 0xce387e6d,\n    0xbf6bb16c, 0x6a70fb78, 0x0d03d9c9, 0xd4df39de, 0xe01063da, 0x4736f464, 0x5ad328d8, 0xb347cc96,\n    0x75bb0fc3, 0x98511bfb, 0x4ffbcc35, 0xb58bcf6a, 0xe11f0abc, 0xbfc5fe4a, 0xa70aec10, 0xac39570a,\n    0x3f04442f, 0x6188b153, 0xe0397a2e, 0x5727cb79, 0x9ceb418f, 0x1cacd68d, 0x2ad37c96, 0x0175cb9d,\n    0xc69dff09, 0xc75b65f0, 0xd9db40d8, 0xec0e7779, 0x4744ead4, 0xb11c3274, 0xdd24cb9e, 0x7e1c54bd,\n    0xf01144f9, 0xd2240eb1, 0x9675b3fd, 0xa3ac3755, 0xd47c27af, 0x51c85f4d, 0x56907596, 0xa5bb15e6,\n    0x580304f0, 0xca042cf1, 0x011a37ea, 0x8dbfaadb, 0x35ba3e4a, 0x3526ffa0, 0xc37b4d09, 0xbc306ed9,\n    0x98a52666, 0x5648f725, 0xff5e569d, 0x0ced63d0, 0x7c63b2cf, 0x700b45e1, 0xd5ea50f1, 0x85a92872,\n    0xaf1fbda7, 0xd4234870, 0xa7870bf3, 0x2d3b4d79, 0x42e04198, 0x0cd0ede7, 0x26470db8, 0xf881814c,\n    0x474d6ad7, 0x7c0c5e5c, 0xd1231959, 0x381b7298, 0xf5d2f4db, 0xab838653, 0x6e2f1e23, 0x83719c9e,\n    0xbd91e046, 0x9a56456e, 0xdc39200c, 0x20c8c571, 0x962bda1c, 0xe1e696ff, 0xb141ab08, 0x7cca89b9,\n    0x1a69e783, 0x02cc4843, 0xa2f7c579, 0x429ef47d, 0x427b169c, 0x5ac9f049, 0xdd8f0f00, 0x5c8165bf\n  ];\n\n  sBox[1] = [\n    0x1f201094, 0xef0ba75b, 0x69e3cf7e, 0x393f4380, 0xfe61cf7a, 0xeec5207a, 0x55889c94, 0x72fc0651,\n    0xada7ef79, 0x4e1d7235, 0xd55a63ce, 0xde0436ba, 0x99c430ef, 0x5f0c0794, 0x18dcdb7d, 0xa1d6eff3,\n    0xa0b52f7b, 0x59e83605, 0xee15b094, 0xe9ffd909, 0xdc440086, 0xef944459, 0xba83ccb3, 0xe0c3cdfb,\n    0xd1da4181, 0x3b092ab1, 0xf997f1c1, 0xa5e6cf7b, 0x01420ddb, 0xe4e7ef5b, 0x25a1ff41, 0xe180f806,\n    0x1fc41080, 0x179bee7a, 0xd37ac6a9, 0xfe5830a4, 0x98de8b7f, 0x77e83f4e, 0x79929269, 0x24fa9f7b,\n    0xe113c85b, 0xacc40083, 0xd7503525, 0xf7ea615f, 0x62143154, 0x0d554b63, 0x5d681121, 0xc866c359,\n    0x3d63cf73, 0xcee234c0, 0xd4d87e87, 0x5c672b21, 0x071f6181, 0x39f7627f, 0x361e3084, 0xe4eb573b,\n    0x602f64a4, 0xd63acd9c, 0x1bbc4635, 0x9e81032d, 0x2701f50c, 0x99847ab4, 0xa0e3df79, 0xba6cf38c,\n    0x10843094, 0x2537a95e, 0xf46f6ffe, 0xa1ff3b1f, 0x208cfb6a, 0x8f458c74, 0xd9e0a227, 0x4ec73a34,\n    0xfc884f69, 0x3e4de8df, 0xef0e0088, 0x3559648d, 0x8a45388c, 0x1d804366, 0x721d9bfd, 0xa58684bb,\n    0xe8256333, 0x844e8212, 0x128d8098, 0xfed33fb4, 0xce280ae1, 0x27e19ba5, 0xd5a6c252, 0xe49754bd,\n    0xc5d655dd, 0xeb667064, 0x77840b4d, 0xa1b6a801, 0x84db26a9, 0xe0b56714, 0x21f043b7, 0xe5d05860,\n    0x54f03084, 0x066ff472, 0xa31aa153, 0xdadc4755, 0xb5625dbf, 0x68561be6, 0x83ca6b94, 0x2d6ed23b,\n    0xeccf01db, 0xa6d3d0ba, 0xb6803d5c, 0xaf77a709, 0x33b4a34c, 0x397bc8d6, 0x5ee22b95, 0x5f0e5304,\n    0x81ed6f61, 0x20e74364, 0xb45e1378, 0xde18639b, 0x881ca122, 0xb96726d1, 0x8049a7e8, 0x22b7da7b,\n    0x5e552d25, 0x5272d237, 0x79d2951c, 0xc60d894c, 0x488cb402, 0x1ba4fe5b, 0xa4b09f6b, 0x1ca815cf,\n    0xa20c3005, 0x8871df63, 0xb9de2fcb, 0x0cc6c9e9, 0x0beeff53, 0xe3214517, 0xb4542835, 0x9f63293c,\n    0xee41e729, 0x6e1d2d7c, 0x50045286, 0x1e6685f3, 0xf33401c6, 0x30a22c95, 0x31a70850, 0x60930f13,\n    0x73f98417, 0xa1269859, 0xec645c44, 0x52c877a9, 0xcdff33a6, 0xa02b1741, 0x7cbad9a2, 0x2180036f,\n    0x50d99c08, 0xcb3f4861, 0xc26bd765, 0x64a3f6ab, 0x80342676, 0x25a75e7b, 0xe4e6d1fc, 0x20c710e6,\n    0xcdf0b680, 0x17844d3b, 0x31eef84d, 0x7e0824e4, 0x2ccb49eb, 0x846a3bae, 0x8ff77888, 0xee5d60f6,\n    0x7af75673, 0x2fdd5cdb, 0xa11631c1, 0x30f66f43, 0xb3faec54, 0x157fd7fa, 0xef8579cc, 0xd152de58,\n    0xdb2ffd5e, 0x8f32ce19, 0x306af97a, 0x02f03ef8, 0x99319ad5, 0xc242fa0f, 0xa7e3ebb0, 0xc68e4906,\n    0xb8da230c, 0x80823028, 0xdcdef3c8, 0xd35fb171, 0x088a1bc8, 0xbec0c560, 0x61a3c9e8, 0xbca8f54d,\n    0xc72feffa, 0x22822e99, 0x82c570b4, 0xd8d94e89, 0x8b1c34bc, 0x301e16e6, 0x273be979, 0xb0ffeaa6,\n    0x61d9b8c6, 0x00b24869, 0xb7ffce3f, 0x08dc283b, 0x43daf65a, 0xf7e19798, 0x7619b72f, 0x8f1c9ba4,\n    0xdc8637a0, 0x16a7d3b1, 0x9fc393b7, 0xa7136eeb, 0xc6bcc63e, 0x1a513742, 0xef6828bc, 0x520365d6,\n    0x2d6a77ab, 0x3527ed4b, 0x821fd216, 0x095c6e2e, 0xdb92f2fb, 0x5eea29cb, 0x145892f5, 0x91584f7f,\n    0x5483697b, 0x2667a8cc, 0x85196048, 0x8c4bacea, 0x833860d4, 0x0d23e0f9, 0x6c387e8a, 0x0ae6d249,\n    0xb284600c, 0xd835731d, 0xdcb1c647, 0xac4c56ea, 0x3ebd81b3, 0x230eabb0, 0x6438bc87, 0xf0b5b1fa,\n    0x8f5ea2b3, 0xfc184642, 0x0a036b7a, 0x4fb089bd, 0x649da589, 0xa345415e, 0x5c038323, 0x3e5d3bb9,\n    0x43d79572, 0x7e6dd07c, 0x06dfdf1e, 0x6c6cc4ef, 0x7160a539, 0x73bfbe70, 0x83877605, 0x4523ecf1\n  ];\n\n  sBox[2] = [\n    0x8defc240, 0x25fa5d9f, 0xeb903dbf, 0xe810c907, 0x47607fff, 0x369fe44b, 0x8c1fc644, 0xaececa90,\n    0xbeb1f9bf, 0xeefbcaea, 0xe8cf1950, 0x51df07ae, 0x920e8806, 0xf0ad0548, 0xe13c8d83, 0x927010d5,\n    0x11107d9f, 0x07647db9, 0xb2e3e4d4, 0x3d4f285e, 0xb9afa820, 0xfade82e0, 0xa067268b, 0x8272792e,\n    0x553fb2c0, 0x489ae22b, 0xd4ef9794, 0x125e3fbc, 0x21fffcee, 0x825b1bfd, 0x9255c5ed, 0x1257a240,\n    0x4e1a8302, 0xbae07fff, 0x528246e7, 0x8e57140e, 0x3373f7bf, 0x8c9f8188, 0xa6fc4ee8, 0xc982b5a5,\n    0xa8c01db7, 0x579fc264, 0x67094f31, 0xf2bd3f5f, 0x40fff7c1, 0x1fb78dfc, 0x8e6bd2c1, 0x437be59b,\n    0x99b03dbf, 0xb5dbc64b, 0x638dc0e6, 0x55819d99, 0xa197c81c, 0x4a012d6e, 0xc5884a28, 0xccc36f71,\n    0xb843c213, 0x6c0743f1, 0x8309893c, 0x0feddd5f, 0x2f7fe850, 0xd7c07f7e, 0x02507fbf, 0x5afb9a04,\n    0xa747d2d0, 0x1651192e, 0xaf70bf3e, 0x58c31380, 0x5f98302e, 0x727cc3c4, 0x0a0fb402, 0x0f7fef82,\n    0x8c96fdad, 0x5d2c2aae, 0x8ee99a49, 0x50da88b8, 0x8427f4a0, 0x1eac5790, 0x796fb449, 0x8252dc15,\n    0xefbd7d9b, 0xa672597d, 0xada840d8, 0x45f54504, 0xfa5d7403, 0xe83ec305, 0x4f91751a, 0x925669c2,\n    0x23efe941, 0xa903f12e, 0x60270df2, 0x0276e4b6, 0x94fd6574, 0x927985b2, 0x8276dbcb, 0x02778176,\n    0xf8af918d, 0x4e48f79e, 0x8f616ddf, 0xe29d840e, 0x842f7d83, 0x340ce5c8, 0x96bbb682, 0x93b4b148,\n    0xef303cab, 0x984faf28, 0x779faf9b, 0x92dc560d, 0x224d1e20, 0x8437aa88, 0x7d29dc96, 0x2756d3dc,\n    0x8b907cee, 0xb51fd240, 0xe7c07ce3, 0xe566b4a1, 0xc3e9615e, 0x3cf8209d, 0x6094d1e3, 0xcd9ca341,\n    0x5c76460e, 0x00ea983b, 0xd4d67881, 0xfd47572c, 0xf76cedd9, 0xbda8229c, 0x127dadaa, 0x438a074e,\n    0x1f97c090, 0x081bdb8a, 0x93a07ebe, 0xb938ca15, 0x97b03cff, 0x3dc2c0f8, 0x8d1ab2ec, 0x64380e51,\n    0x68cc7bfb, 0xd90f2788, 0x12490181, 0x5de5ffd4, 0xdd7ef86a, 0x76a2e214, 0xb9a40368, 0x925d958f,\n    0x4b39fffa, 0xba39aee9, 0xa4ffd30b, 0xfaf7933b, 0x6d498623, 0x193cbcfa, 0x27627545, 0x825cf47a,\n    0x61bd8ba0, 0xd11e42d1, 0xcead04f4, 0x127ea392, 0x10428db7, 0x8272a972, 0x9270c4a8, 0x127de50b,\n    0x285ba1c8, 0x3c62f44f, 0x35c0eaa5, 0xe805d231, 0x428929fb, 0xb4fcdf82, 0x4fb66a53, 0x0e7dc15b,\n    0x1f081fab, 0x108618ae, 0xfcfd086d, 0xf9ff2889, 0x694bcc11, 0x236a5cae, 0x12deca4d, 0x2c3f8cc5,\n    0xd2d02dfe, 0xf8ef5896, 0xe4cf52da, 0x95155b67, 0x494a488c, 0xb9b6a80c, 0x5c8f82bc, 0x89d36b45,\n    0x3a609437, 0xec00c9a9, 0x44715253, 0x0a874b49, 0xd773bc40, 0x7c34671c, 0x02717ef6, 0x4feb5536,\n    0xa2d02fff, 0xd2bf60c4, 0xd43f03c0, 0x50b4ef6d, 0x07478cd1, 0x006e1888, 0xa2e53f55, 0xb9e6d4bc,\n    0xa2048016, 0x97573833, 0xd7207d67, 0xde0f8f3d, 0x72f87b33, 0xabcc4f33, 0x7688c55d, 0x7b00a6b0,\n    0x947b0001, 0x570075d2, 0xf9bb88f8, 0x8942019e, 0x4264a5ff, 0x856302e0, 0x72dbd92b, 0xee971b69,\n    0x6ea22fde, 0x5f08ae2b, 0xaf7a616d, 0xe5c98767, 0xcf1febd2, 0x61efc8c2, 0xf1ac2571, 0xcc8239c2,\n    0x67214cb8, 0xb1e583d1, 0xb7dc3e62, 0x7f10bdce, 0xf90a5c38, 0x0ff0443d, 0x606e6dc6, 0x60543a49,\n    0x5727c148, 0x2be98a1d, 0x8ab41738, 0x20e1be24, 0xaf96da0f, 0x68458425, 0x99833be5, 0x600d457d,\n    0x282f9350, 0x8334b362, 0xd91d1120, 0x2b6d8da0, 0x642b1e31, 0x9c305a00, 0x52bce688, 0x1b03588a,\n    0xf7baefd5, 0x4142ed9c, 0xa4315c11, 0x83323ec5, 0xdfef4636, 0xa133c501, 0xe9d3531c, 0xee353783\n  ];\n\n  sBox[3] = [\n    0x9db30420, 0x1fb6e9de, 0xa7be7bef, 0xd273a298, 0x4a4f7bdb, 0x64ad8c57, 0x85510443, 0xfa020ed1,\n    0x7e287aff, 0xe60fb663, 0x095f35a1, 0x79ebf120, 0xfd059d43, 0x6497b7b1, 0xf3641f63, 0x241e4adf,\n    0x28147f5f, 0x4fa2b8cd, 0xc9430040, 0x0cc32220, 0xfdd30b30, 0xc0a5374f, 0x1d2d00d9, 0x24147b15,\n    0xee4d111a, 0x0fca5167, 0x71ff904c, 0x2d195ffe, 0x1a05645f, 0x0c13fefe, 0x081b08ca, 0x05170121,\n    0x80530100, 0xe83e5efe, 0xac9af4f8, 0x7fe72701, 0xd2b8ee5f, 0x06df4261, 0xbb9e9b8a, 0x7293ea25,\n    0xce84ffdf, 0xf5718801, 0x3dd64b04, 0xa26f263b, 0x7ed48400, 0x547eebe6, 0x446d4ca0, 0x6cf3d6f5,\n    0x2649abdf, 0xaea0c7f5, 0x36338cc1, 0x503f7e93, 0xd3772061, 0x11b638e1, 0x72500e03, 0xf80eb2bb,\n    0xabe0502e, 0xec8d77de, 0x57971e81, 0xe14f6746, 0xc9335400, 0x6920318f, 0x081dbb99, 0xffc304a5,\n    0x4d351805, 0x7f3d5ce3, 0xa6c866c6, 0x5d5bcca9, 0xdaec6fea, 0x9f926f91, 0x9f46222f, 0x3991467d,\n    0xa5bf6d8e, 0x1143c44f, 0x43958302, 0xd0214eeb, 0x022083b8, 0x3fb6180c, 0x18f8931e, 0x281658e6,\n    0x26486e3e, 0x8bd78a70, 0x7477e4c1, 0xb506e07c, 0xf32d0a25, 0x79098b02, 0xe4eabb81, 0x28123b23,\n    0x69dead38, 0x1574ca16, 0xdf871b62, 0x211c40b7, 0xa51a9ef9, 0x0014377b, 0x041e8ac8, 0x09114003,\n    0xbd59e4d2, 0xe3d156d5, 0x4fe876d5, 0x2f91a340, 0x557be8de, 0x00eae4a7, 0x0ce5c2ec, 0x4db4bba6,\n    0xe756bdff, 0xdd3369ac, 0xec17b035, 0x06572327, 0x99afc8b0, 0x56c8c391, 0x6b65811c, 0x5e146119,\n    0x6e85cb75, 0xbe07c002, 0xc2325577, 0x893ff4ec, 0x5bbfc92d, 0xd0ec3b25, 0xb7801ab7, 0x8d6d3b24,\n    0x20c763ef, 0xc366a5fc, 0x9c382880, 0x0ace3205, 0xaac9548a, 0xeca1d7c7, 0x041afa32, 0x1d16625a,\n    0x6701902c, 0x9b757a54, 0x31d477f7, 0x9126b031, 0x36cc6fdb, 0xc70b8b46, 0xd9e66a48, 0x56e55a79,\n    0x026a4ceb, 0x52437eff, 0x2f8f76b4, 0x0df980a5, 0x8674cde3, 0xedda04eb, 0x17a9be04, 0x2c18f4df,\n    0xb7747f9d, 0xab2af7b4, 0xefc34d20, 0x2e096b7c, 0x1741a254, 0xe5b6a035, 0x213d42f6, 0x2c1c7c26,\n    0x61c2f50f, 0x6552daf9, 0xd2c231f8, 0x25130f69, 0xd8167fa2, 0x0418f2c8, 0x001a96a6, 0x0d1526ab,\n    0x63315c21, 0x5e0a72ec, 0x49bafefd, 0x187908d9, 0x8d0dbd86, 0x311170a7, 0x3e9b640c, 0xcc3e10d7,\n    0xd5cad3b6, 0x0caec388, 0xf73001e1, 0x6c728aff, 0x71eae2a1, 0x1f9af36e, 0xcfcbd12f, 0xc1de8417,\n    0xac07be6b, 0xcb44a1d8, 0x8b9b0f56, 0x013988c3, 0xb1c52fca, 0xb4be31cd, 0xd8782806, 0x12a3a4e2,\n    0x6f7de532, 0x58fd7eb6, 0xd01ee900, 0x24adffc2, 0xf4990fc5, 0x9711aac5, 0x001d7b95, 0x82e5e7d2,\n    0x109873f6, 0x00613096, 0xc32d9521, 0xada121ff, 0x29908415, 0x7fbb977f, 0xaf9eb3db, 0x29c9ed2a,\n    0x5ce2a465, 0xa730f32c, 0xd0aa3fe8, 0x8a5cc091, 0xd49e2ce7, 0x0ce454a9, 0xd60acd86, 0x015f1919,\n    0x77079103, 0xdea03af6, 0x78a8565e, 0xdee356df, 0x21f05cbe, 0x8b75e387, 0xb3c50651, 0xb8a5c3ef,\n    0xd8eeb6d2, 0xe523be77, 0xc2154529, 0x2f69efdf, 0xafe67afb, 0xf470c4b2, 0xf3e0eb5b, 0xd6cc9876,\n    0x39e4460c, 0x1fda8538, 0x1987832f, 0xca007367, 0xa99144f8, 0x296b299e, 0x492fc295, 0x9266beab,\n    0xb5676e69, 0x9bd3ddda, 0xdf7e052f, 0xdb25701c, 0x1b5e51ee, 0xf65324e6, 0x6afce36c, 0x0316cc04,\n    0x8644213e, 0xb7dc59d0, 0x7965291f, 0xccd6fd43, 0x41823979, 0x932bcdf6, 0xb657c34d, 0x4edfd282,\n    0x7ae5290c, 0x3cb9536b, 0x851e20fe, 0x9833557e, 0x13ecf0b0, 0xd3ffb372, 0x3f85c5c1, 0x0aef7ed2\n  ];\n\n  sBox[4] = [\n    0x7ec90c04, 0x2c6e74b9, 0x9b0e66df, 0xa6337911, 0xb86a7fff, 0x1dd358f5, 0x44dd9d44, 0x1731167f,\n    0x08fbf1fa, 0xe7f511cc, 0xd2051b00, 0x735aba00, 0x2ab722d8, 0x386381cb, 0xacf6243a, 0x69befd7a,\n    0xe6a2e77f, 0xf0c720cd, 0xc4494816, 0xccf5c180, 0x38851640, 0x15b0a848, 0xe68b18cb, 0x4caadeff,\n    0x5f480a01, 0x0412b2aa, 0x259814fc, 0x41d0efe2, 0x4e40b48d, 0x248eb6fb, 0x8dba1cfe, 0x41a99b02,\n    0x1a550a04, 0xba8f65cb, 0x7251f4e7, 0x95a51725, 0xc106ecd7, 0x97a5980a, 0xc539b9aa, 0x4d79fe6a,\n    0xf2f3f763, 0x68af8040, 0xed0c9e56, 0x11b4958b, 0xe1eb5a88, 0x8709e6b0, 0xd7e07156, 0x4e29fea7,\n    0x6366e52d, 0x02d1c000, 0xc4ac8e05, 0x9377f571, 0x0c05372a, 0x578535f2, 0x2261be02, 0xd642a0c9,\n    0xdf13a280, 0x74b55bd2, 0x682199c0, 0xd421e5ec, 0x53fb3ce8, 0xc8adedb3, 0x28a87fc9, 0x3d959981,\n    0x5c1ff900, 0xfe38d399, 0x0c4eff0b, 0x062407ea, 0xaa2f4fb1, 0x4fb96976, 0x90c79505, 0xb0a8a774,\n    0xef55a1ff, 0xe59ca2c2, 0xa6b62d27, 0xe66a4263, 0xdf65001f, 0x0ec50966, 0xdfdd55bc, 0x29de0655,\n    0x911e739a, 0x17af8975, 0x32c7911c, 0x89f89468, 0x0d01e980, 0x524755f4, 0x03b63cc9, 0x0cc844b2,\n    0xbcf3f0aa, 0x87ac36e9, 0xe53a7426, 0x01b3d82b, 0x1a9e7449, 0x64ee2d7e, 0xcddbb1da, 0x01c94910,\n    0xb868bf80, 0x0d26f3fd, 0x9342ede7, 0x04a5c284, 0x636737b6, 0x50f5b616, 0xf24766e3, 0x8eca36c1,\n    0x136e05db, 0xfef18391, 0xfb887a37, 0xd6e7f7d4, 0xc7fb7dc9, 0x3063fcdf, 0xb6f589de, 0xec2941da,\n    0x26e46695, 0xb7566419, 0xf654efc5, 0xd08d58b7, 0x48925401, 0xc1bacb7f, 0xe5ff550f, 0xb6083049,\n    0x5bb5d0e8, 0x87d72e5a, 0xab6a6ee1, 0x223a66ce, 0xc62bf3cd, 0x9e0885f9, 0x68cb3e47, 0x086c010f,\n    0xa21de820, 0xd18b69de, 0xf3f65777, 0xfa02c3f6, 0x407edac3, 0xcbb3d550, 0x1793084d, 0xb0d70eba,\n    0x0ab378d5, 0xd951fb0c, 0xded7da56, 0x4124bbe4, 0x94ca0b56, 0x0f5755d1, 0xe0e1e56e, 0x6184b5be,\n    0x580a249f, 0x94f74bc0, 0xe327888e, 0x9f7b5561, 0xc3dc0280, 0x05687715, 0x646c6bd7, 0x44904db3,\n    0x66b4f0a3, 0xc0f1648a, 0x697ed5af, 0x49e92ff6, 0x309e374f, 0x2cb6356a, 0x85808573, 0x4991f840,\n    0x76f0ae02, 0x083be84d, 0x28421c9a, 0x44489406, 0x736e4cb8, 0xc1092910, 0x8bc95fc6, 0x7d869cf4,\n    0x134f616f, 0x2e77118d, 0xb31b2be1, 0xaa90b472, 0x3ca5d717, 0x7d161bba, 0x9cad9010, 0xaf462ba2,\n    0x9fe459d2, 0x45d34559, 0xd9f2da13, 0xdbc65487, 0xf3e4f94e, 0x176d486f, 0x097c13ea, 0x631da5c7,\n    0x445f7382, 0x175683f4, 0xcdc66a97, 0x70be0288, 0xb3cdcf72, 0x6e5dd2f3, 0x20936079, 0x459b80a5,\n    0xbe60e2db, 0xa9c23101, 0xeba5315c, 0x224e42f2, 0x1c5c1572, 0xf6721b2c, 0x1ad2fff3, 0x8c25404e,\n    0x324ed72f, 0x4067b7fd, 0x0523138e, 0x5ca3bc78, 0xdc0fd66e, 0x75922283, 0x784d6b17, 0x58ebb16e,\n    0x44094f85, 0x3f481d87, 0xfcfeae7b, 0x77b5ff76, 0x8c2302bf, 0xaaf47556, 0x5f46b02a, 0x2b092801,\n    0x3d38f5f7, 0x0ca81f36, 0x52af4a8a, 0x66d5e7c0, 0xdf3b0874, 0x95055110, 0x1b5ad7a8, 0xf61ed5ad,\n    0x6cf6e479, 0x20758184, 0xd0cefa65, 0x88f7be58, 0x4a046826, 0x0ff6f8f3, 0xa09c7f70, 0x5346aba0,\n    0x5ce96c28, 0xe176eda3, 0x6bac307f, 0x376829d2, 0x85360fa9, 0x17e3fe2a, 0x24b79767, 0xf5a96b20,\n    0xd6cd2595, 0x68ff1ebf, 0x7555442c, 0xf19f06be, 0xf9e0659a, 0xeeb9491d, 0x34010718, 0xbb30cab8,\n    0xe822fe15, 0x88570983, 0x750e6249, 0xda627e55, 0x5e76ffa8, 0xb1534546, 0x6d47de08, 0xefe9e7d4\n  ];\n\n  sBox[5] = [\n    0xf6fa8f9d, 0x2cac6ce1, 0x4ca34867, 0xe2337f7c, 0x95db08e7, 0x016843b4, 0xeced5cbc, 0x325553ac,\n    0xbf9f0960, 0xdfa1e2ed, 0x83f0579d, 0x63ed86b9, 0x1ab6a6b8, 0xde5ebe39, 0xf38ff732, 0x8989b138,\n    0x33f14961, 0xc01937bd, 0xf506c6da, 0xe4625e7e, 0xa308ea99, 0x4e23e33c, 0x79cbd7cc, 0x48a14367,\n    0xa3149619, 0xfec94bd5, 0xa114174a, 0xeaa01866, 0xa084db2d, 0x09a8486f, 0xa888614a, 0x2900af98,\n    0x01665991, 0xe1992863, 0xc8f30c60, 0x2e78ef3c, 0xd0d51932, 0xcf0fec14, 0xf7ca07d2, 0xd0a82072,\n    0xfd41197e, 0x9305a6b0, 0xe86be3da, 0x74bed3cd, 0x372da53c, 0x4c7f4448, 0xdab5d440, 0x6dba0ec3,\n    0x083919a7, 0x9fbaeed9, 0x49dbcfb0, 0x4e670c53, 0x5c3d9c01, 0x64bdb941, 0x2c0e636a, 0xba7dd9cd,\n    0xea6f7388, 0xe70bc762, 0x35f29adb, 0x5c4cdd8d, 0xf0d48d8c, 0xb88153e2, 0x08a19866, 0x1ae2eac8,\n    0x284caf89, 0xaa928223, 0x9334be53, 0x3b3a21bf, 0x16434be3, 0x9aea3906, 0xefe8c36e, 0xf890cdd9,\n    0x80226dae, 0xc340a4a3, 0xdf7e9c09, 0xa694a807, 0x5b7c5ecc, 0x221db3a6, 0x9a69a02f, 0x68818a54,\n    0xceb2296f, 0x53c0843a, 0xfe893655, 0x25bfe68a, 0xb4628abc, 0xcf222ebf, 0x25ac6f48, 0xa9a99387,\n    0x53bddb65, 0xe76ffbe7, 0xe967fd78, 0x0ba93563, 0x8e342bc1, 0xe8a11be9, 0x4980740d, 0xc8087dfc,\n    0x8de4bf99, 0xa11101a0, 0x7fd37975, 0xda5a26c0, 0xe81f994f, 0x9528cd89, 0xfd339fed, 0xb87834bf,\n    0x5f04456d, 0x22258698, 0xc9c4c83b, 0x2dc156be, 0x4f628daa, 0x57f55ec5, 0xe2220abe, 0xd2916ebf,\n    0x4ec75b95, 0x24f2c3c0, 0x42d15d99, 0xcd0d7fa0, 0x7b6e27ff, 0xa8dc8af0, 0x7345c106, 0xf41e232f,\n    0x35162386, 0xe6ea8926, 0x3333b094, 0x157ec6f2, 0x372b74af, 0x692573e4, 0xe9a9d848, 0xf3160289,\n    0x3a62ef1d, 0xa787e238, 0xf3a5f676, 0x74364853, 0x20951063, 0x4576698d, 0xb6fad407, 0x592af950,\n    0x36f73523, 0x4cfb6e87, 0x7da4cec0, 0x6c152daa, 0xcb0396a8, 0xc50dfe5d, 0xfcd707ab, 0x0921c42f,\n    0x89dff0bb, 0x5fe2be78, 0x448f4f33, 0x754613c9, 0x2b05d08d, 0x48b9d585, 0xdc049441, 0xc8098f9b,\n    0x7dede786, 0xc39a3373, 0x42410005, 0x6a091751, 0x0ef3c8a6, 0x890072d6, 0x28207682, 0xa9a9f7be,\n    0xbf32679d, 0xd45b5b75, 0xb353fd00, 0xcbb0e358, 0x830f220a, 0x1f8fb214, 0xd372cf08, 0xcc3c4a13,\n    0x8cf63166, 0x061c87be, 0x88c98f88, 0x6062e397, 0x47cf8e7a, 0xb6c85283, 0x3cc2acfb, 0x3fc06976,\n    0x4e8f0252, 0x64d8314d, 0xda3870e3, 0x1e665459, 0xc10908f0, 0x513021a5, 0x6c5b68b7, 0x822f8aa0,\n    0x3007cd3e, 0x74719eef, 0xdc872681, 0x073340d4, 0x7e432fd9, 0x0c5ec241, 0x8809286c, 0xf592d891,\n    0x08a930f6, 0x957ef305, 0xb7fbffbd, 0xc266e96f, 0x6fe4ac98, 0xb173ecc0, 0xbc60b42a, 0x953498da,\n    0xfba1ae12, 0x2d4bd736, 0x0f25faab, 0xa4f3fceb, 0xe2969123, 0x257f0c3d, 0x9348af49, 0x361400bc,\n    0xe8816f4a, 0x3814f200, 0xa3f94043, 0x9c7a54c2, 0xbc704f57, 0xda41e7f9, 0xc25ad33a, 0x54f4a084,\n    0xb17f5505, 0x59357cbe, 0xedbd15c8, 0x7f97c5ab, 0xba5ac7b5, 0xb6f6deaf, 0x3a479c3a, 0x5302da25,\n    0x653d7e6a, 0x54268d49, 0x51a477ea, 0x5017d55b, 0xd7d25d88, 0x44136c76, 0x0404a8c8, 0xb8e5a121,\n    0xb81a928a, 0x60ed5869, 0x97c55b96, 0xeaec991b, 0x29935913, 0x01fdb7f1, 0x088e8dfa, 0x9ab6f6f5,\n    0x3b4cbf9f, 0x4a5de3ab, 0xe6051d35, 0xa0e1d855, 0xd36b4cf1, 0xf544edeb, 0xb0e93524, 0xbebb8fbd,\n    0xa2d762cf, 0x49c92f54, 0x38b5f331, 0x7128a454, 0x48392905, 0xa65b1db8, 0x851c97bd, 0xd675cf2f\n  ];\n\n  sBox[6] = [\n    0x85e04019, 0x332bf567, 0x662dbfff, 0xcfc65693, 0x2a8d7f6f, 0xab9bc912, 0xde6008a1, 0x2028da1f,\n    0x0227bce7, 0x4d642916, 0x18fac300, 0x50f18b82, 0x2cb2cb11, 0xb232e75c, 0x4b3695f2, 0xb28707de,\n    0xa05fbcf6, 0xcd4181e9, 0xe150210c, 0xe24ef1bd, 0xb168c381, 0xfde4e789, 0x5c79b0d8, 0x1e8bfd43,\n    0x4d495001, 0x38be4341, 0x913cee1d, 0x92a79c3f, 0x089766be, 0xbaeeadf4, 0x1286becf, 0xb6eacb19,\n    0x2660c200, 0x7565bde4, 0x64241f7a, 0x8248dca9, 0xc3b3ad66, 0x28136086, 0x0bd8dfa8, 0x356d1cf2,\n    0x107789be, 0xb3b2e9ce, 0x0502aa8f, 0x0bc0351e, 0x166bf52a, 0xeb12ff82, 0xe3486911, 0xd34d7516,\n    0x4e7b3aff, 0x5f43671b, 0x9cf6e037, 0x4981ac83, 0x334266ce, 0x8c9341b7, 0xd0d854c0, 0xcb3a6c88,\n    0x47bc2829, 0x4725ba37, 0xa66ad22b, 0x7ad61f1e, 0x0c5cbafa, 0x4437f107, 0xb6e79962, 0x42d2d816,\n    0x0a961288, 0xe1a5c06e, 0x13749e67, 0x72fc081a, 0xb1d139f7, 0xf9583745, 0xcf19df58, 0xbec3f756,\n    0xc06eba30, 0x07211b24, 0x45c28829, 0xc95e317f, 0xbc8ec511, 0x38bc46e9, 0xc6e6fa14, 0xbae8584a,\n    0xad4ebc46, 0x468f508b, 0x7829435f, 0xf124183b, 0x821dba9f, 0xaff60ff4, 0xea2c4e6d, 0x16e39264,\n    0x92544a8b, 0x009b4fc3, 0xaba68ced, 0x9ac96f78, 0x06a5b79a, 0xb2856e6e, 0x1aec3ca9, 0xbe838688,\n    0x0e0804e9, 0x55f1be56, 0xe7e5363b, 0xb3a1f25d, 0xf7debb85, 0x61fe033c, 0x16746233, 0x3c034c28,\n    0xda6d0c74, 0x79aac56c, 0x3ce4e1ad, 0x51f0c802, 0x98f8f35a, 0x1626a49f, 0xeed82b29, 0x1d382fe3,\n    0x0c4fb99a, 0xbb325778, 0x3ec6d97b, 0x6e77a6a9, 0xcb658b5c, 0xd45230c7, 0x2bd1408b, 0x60c03eb7,\n    0xb9068d78, 0xa33754f4, 0xf430c87d, 0xc8a71302, 0xb96d8c32, 0xebd4e7be, 0xbe8b9d2d, 0x7979fb06,\n    0xe7225308, 0x8b75cf77, 0x11ef8da4, 0xe083c858, 0x8d6b786f, 0x5a6317a6, 0xfa5cf7a0, 0x5dda0033,\n    0xf28ebfb0, 0xf5b9c310, 0xa0eac280, 0x08b9767a, 0xa3d9d2b0, 0x79d34217, 0x021a718d, 0x9ac6336a,\n    0x2711fd60, 0x438050e3, 0x069908a8, 0x3d7fedc4, 0x826d2bef, 0x4eeb8476, 0x488dcf25, 0x36c9d566,\n    0x28e74e41, 0xc2610aca, 0x3d49a9cf, 0xbae3b9df, 0xb65f8de6, 0x92aeaf64, 0x3ac7d5e6, 0x9ea80509,\n    0xf22b017d, 0xa4173f70, 0xdd1e16c3, 0x15e0d7f9, 0x50b1b887, 0x2b9f4fd5, 0x625aba82, 0x6a017962,\n    0x2ec01b9c, 0x15488aa9, 0xd716e740, 0x40055a2c, 0x93d29a22, 0xe32dbf9a, 0x058745b9, 0x3453dc1e,\n    0xd699296e, 0x496cff6f, 0x1c9f4986, 0xdfe2ed07, 0xb87242d1, 0x19de7eae, 0x053e561a, 0x15ad6f8c,\n    0x66626c1c, 0x7154c24c, 0xea082b2a, 0x93eb2939, 0x17dcb0f0, 0x58d4f2ae, 0x9ea294fb, 0x52cf564c,\n    0x9883fe66, 0x2ec40581, 0x763953c3, 0x01d6692e, 0xd3a0c108, 0xa1e7160e, 0xe4f2dfa6, 0x693ed285,\n    0x74904698, 0x4c2b0edd, 0x4f757656, 0x5d393378, 0xa132234f, 0x3d321c5d, 0xc3f5e194, 0x4b269301,\n    0xc79f022f, 0x3c997e7e, 0x5e4f9504, 0x3ffafbbd, 0x76f7ad0e, 0x296693f4, 0x3d1fce6f, 0xc61e45be,\n    0xd3b5ab34, 0xf72bf9b7, 0x1b0434c0, 0x4e72b567, 0x5592a33d, 0xb5229301, 0xcfd2a87f, 0x60aeb767,\n    0x1814386b, 0x30bcc33d, 0x38a0c07d, 0xfd1606f2, 0xc363519b, 0x589dd390, 0x5479f8e6, 0x1cb8d647,\n    0x97fd61a9, 0xea7759f4, 0x2d57539d, 0x569a58cf, 0xe84e63ad, 0x462e1b78, 0x6580f87e, 0xf3817914,\n    0x91da55f4, 0x40a230f3, 0xd1988f35, 0xb6e318d2, 0x3ffa50bc, 0x3d40f021, 0xc3c0bdae, 0x4958c24c,\n    0x518f36b2, 0x84b1d370, 0x0fedce83, 0x878ddada, 0xf2a279c7, 0x94e01be8, 0x90716f4b, 0x954b8aa3\n  ];\n\n  sBox[7] = [\n    0xe216300d, 0xbbddfffc, 0xa7ebdabd, 0x35648095, 0x7789f8b7, 0xe6c1121b, 0x0e241600, 0x052ce8b5,\n    0x11a9cfb0, 0xe5952f11, 0xece7990a, 0x9386d174, 0x2a42931c, 0x76e38111, 0xb12def3a, 0x37ddddfc,\n    0xde9adeb1, 0x0a0cc32c, 0xbe197029, 0x84a00940, 0xbb243a0f, 0xb4d137cf, 0xb44e79f0, 0x049eedfd,\n    0x0b15a15d, 0x480d3168, 0x8bbbde5a, 0x669ded42, 0xc7ece831, 0x3f8f95e7, 0x72df191b, 0x7580330d,\n    0x94074251, 0x5c7dcdfa, 0xabbe6d63, 0xaa402164, 0xb301d40a, 0x02e7d1ca, 0x53571dae, 0x7a3182a2,\n    0x12a8ddec, 0xfdaa335d, 0x176f43e8, 0x71fb46d4, 0x38129022, 0xce949ad4, 0xb84769ad, 0x965bd862,\n    0x82f3d055, 0x66fb9767, 0x15b80b4e, 0x1d5b47a0, 0x4cfde06f, 0xc28ec4b8, 0x57e8726e, 0x647a78fc,\n    0x99865d44, 0x608bd593, 0x6c200e03, 0x39dc5ff6, 0x5d0b00a3, 0xae63aff2, 0x7e8bd632, 0x70108c0c,\n    0xbbd35049, 0x2998df04, 0x980cf42a, 0x9b6df491, 0x9e7edd53, 0x06918548, 0x58cb7e07, 0x3b74ef2e,\n    0x522fffb1, 0xd24708cc, 0x1c7e27cd, 0xa4eb215b, 0x3cf1d2e2, 0x19b47a38, 0x424f7618, 0x35856039,\n    0x9d17dee7, 0x27eb35e6, 0xc9aff67b, 0x36baf5b8, 0x09c467cd, 0xc18910b1, 0xe11dbf7b, 0x06cd1af8,\n    0x7170c608, 0x2d5e3354, 0xd4de495a, 0x64c6d006, 0xbcc0c62c, 0x3dd00db3, 0x708f8f34, 0x77d51b42,\n    0x264f620f, 0x24b8d2bf, 0x15c1b79e, 0x46a52564, 0xf8d7e54e, 0x3e378160, 0x7895cda5, 0x859c15a5,\n    0xe6459788, 0xc37bc75f, 0xdb07ba0c, 0x0676a3ab, 0x7f229b1e, 0x31842e7b, 0x24259fd7, 0xf8bef472,\n    0x835ffcb8, 0x6df4c1f2, 0x96f5b195, 0xfd0af0fc, 0xb0fe134c, 0xe2506d3d, 0x4f9b12ea, 0xf215f225,\n    0xa223736f, 0x9fb4c428, 0x25d04979, 0x34c713f8, 0xc4618187, 0xea7a6e98, 0x7cd16efc, 0x1436876c,\n    0xf1544107, 0xbedeee14, 0x56e9af27, 0xa04aa441, 0x3cf7c899, 0x92ecbae6, 0xdd67016d, 0x151682eb,\n    0xa842eedf, 0xfdba60b4, 0xf1907b75, 0x20e3030f, 0x24d8c29e, 0xe139673b, 0xefa63fb8, 0x71873054,\n    0xb6f2cf3b, 0x9f326442, 0xcb15a4cc, 0xb01a4504, 0xf1e47d8d, 0x844a1be5, 0xbae7dfdc, 0x42cbda70,\n    0xcd7dae0a, 0x57e85b7a, 0xd53f5af6, 0x20cf4d8c, 0xcea4d428, 0x79d130a4, 0x3486ebfb, 0x33d3cddc,\n    0x77853b53, 0x37effcb5, 0xc5068778, 0xe580b3e6, 0x4e68b8f4, 0xc5c8b37e, 0x0d809ea2, 0x398feb7c,\n    0x132a4f94, 0x43b7950e, 0x2fee7d1c, 0x223613bd, 0xdd06caa2, 0x37df932b, 0xc4248289, 0xacf3ebc3,\n    0x5715f6b7, 0xef3478dd, 0xf267616f, 0xc148cbe4, 0x9052815e, 0x5e410fab, 0xb48a2465, 0x2eda7fa4,\n    0xe87b40e4, 0xe98ea084, 0x5889e9e1, 0xefd390fc, 0xdd07d35b, 0xdb485694, 0x38d7e5b2, 0x57720101,\n    0x730edebc, 0x5b643113, 0x94917e4f, 0x503c2fba, 0x646f1282, 0x7523d24a, 0xe0779695, 0xf9c17a8f,\n    0x7a5b2121, 0xd187b896, 0x29263a4d, 0xba510cdf, 0x81f47c9f, 0xad1163ed, 0xea7b5965, 0x1a00726e,\n    0x11403092, 0x00da6d77, 0x4a0cdd61, 0xad1f4603, 0x605bdfb0, 0x9eedc364, 0x22ebe6a8, 0xcee7d28a,\n    0xa0e736a0, 0x5564a6b9, 0x10853209, 0xc7eb8f37, 0x2de705ca, 0x8951570f, 0xdf09822b, 0xbd691a6c,\n    0xaa12e4f2, 0x87451c0f, 0xe0f6a27a, 0x3ada4819, 0x4cf1764f, 0x0d771c2b, 0x67cdb156, 0x350d8384,\n    0x5938fa0f, 0x42399ef3, 0x36997b07, 0x0e84093d, 0x4aa93e61, 0x8360d87b, 0x1fa98b0c, 0x1149382c,\n    0xe97625a5, 0x0614d1b7, 0x0e25244b, 0x0c768347, 0x589e8d82, 0x0d2059d1, 0xa466bb1e, 0xf8da0a82,\n    0x04f19130, 0xba6e4ec0, 0x99265164, 0x1ee7230d, 0x50b2ad80, 0xeaee6801, 0x8db2a283, 0xea8bf59e\n  ];\n}\n\nfunction CAST5(key) {\n  this.cast5 = new OpenPGPSymEncCAST5();\n  this.cast5.setKey(key);\n\n  this.encrypt = function(block) {\n    return this.cast5.encrypt(block);\n  };\n}\n\nCAST5.blockSize = CAST5.prototype.blockSize = 8;\nCAST5.keySize = CAST5.prototype.keySize = 16;\n\nexport default CAST5;\n","/* eslint-disable no-mixed-operators, no-fallthrough */\n\n\n/* Modified by Recurity Labs GmbH\n *\n * Cipher.js\n * A block-cipher algorithm implementation on JavaScript\n * See Cipher.readme.txt for further information.\n *\n * Copyright(c) 2009 Atsushi Oka [ http://oka.nu/ ]\n * This script file is distributed under the LGPL\n *\n * ACKNOWLEDGMENT\n *\n *     The main subroutines are written by Michiel van Everdingen.\n *\n *     Michiel van Everdingen\n *     http://home.versatel.nl/MAvanEverdingen/index.html\n *\n *     All rights for these routines are reserved to Michiel van Everdingen.\n *\n */\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//Math\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nconst MAXINT = 0xFFFFFFFF;\n\nfunction rotw(w, n) {\n  return (w << n | w >>> (32 - n)) & MAXINT;\n}\n\nfunction getW(a, i) {\n  return a[i] | a[i + 1] << 8 | a[i + 2] << 16 | a[i + 3] << 24;\n}\n\nfunction setW(a, i, w) {\n  a.splice(i, 4, w & 0xFF, (w >>> 8) & 0xFF, (w >>> 16) & 0xFF, (w >>> 24) & 0xFF);\n}\n\nfunction getB(x, n) {\n  return (x >>> (n * 8)) & 0xFF;\n}\n\n// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// Twofish\n// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nfunction createTwofish() {\n  //\n  let keyBytes = null;\n  let dataBytes = null;\n  let dataOffset = -1;\n  // var dataLength = -1;\n  // var idx2 = -1;\n  //\n\n  let tfsKey = [];\n  let tfsM = [\n    [],\n    [],\n    [],\n    []\n  ];\n\n  function tfsInit(key) {\n    keyBytes = key;\n    let i;\n    let a;\n    let b;\n    let c;\n    let d;\n    const meKey = [];\n    const moKey = [];\n    const inKey = [];\n    let kLen;\n    const sKey = [];\n    let f01;\n    let f5b;\n    let fef;\n\n    const q0 = [\n      [8, 1, 7, 13, 6, 15, 3, 2, 0, 11, 5, 9, 14, 12, 10, 4],\n      [2, 8, 11, 13, 15, 7, 6, 14, 3, 1, 9, 4, 0, 10, 12, 5]\n    ];\n    const q1 = [\n      [14, 12, 11, 8, 1, 2, 3, 5, 15, 4, 10, 6, 7, 0, 9, 13],\n      [1, 14, 2, 11, 4, 12, 3, 7, 6, 13, 10, 5, 15, 9, 0, 8]\n    ];\n    const q2 = [\n      [11, 10, 5, 14, 6, 13, 9, 0, 12, 8, 15, 3, 2, 4, 7, 1],\n      [4, 12, 7, 5, 1, 6, 9, 10, 0, 14, 13, 8, 2, 11, 3, 15]\n    ];\n    const q3 = [\n      [13, 7, 15, 4, 1, 2, 6, 14, 9, 11, 3, 0, 8, 5, 12, 10],\n      [11, 9, 5, 1, 12, 3, 13, 14, 6, 4, 7, 15, 2, 0, 8, 10]\n    ];\n    const ror4 = [0, 8, 1, 9, 2, 10, 3, 11, 4, 12, 5, 13, 6, 14, 7, 15];\n    const ashx = [0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 5, 14, 7];\n    const q = [\n      [],\n      []\n    ];\n    const m = [\n      [],\n      [],\n      [],\n      []\n    ];\n\n    function ffm5b(x) {\n      return x ^ (x >> 2) ^ [0, 90, 180, 238][x & 3];\n    }\n\n    function ffmEf(x) {\n      return x ^ (x >> 1) ^ (x >> 2) ^ [0, 238, 180, 90][x & 3];\n    }\n\n    function mdsRem(p, q) {\n      let i;\n      let t;\n      let u;\n      for (i = 0; i < 8; i++) {\n        t = q >>> 24;\n        q = ((q << 8) & MAXINT) | p >>> 24;\n        p = (p << 8) & MAXINT;\n        u = t << 1;\n        if (t & 128) {\n          u ^= 333;\n        }\n        q ^= t ^ (u << 16);\n        u ^= t >>> 1;\n        if (t & 1) {\n          u ^= 166;\n        }\n        q ^= u << 24 | u << 8;\n      }\n      return q;\n    }\n\n    function qp(n, x) {\n      const a = x >> 4;\n      const b = x & 15;\n      const c = q0[n][a ^ b];\n      const d = q1[n][ror4[b] ^ ashx[a]];\n      return q3[n][ror4[d] ^ ashx[c]] << 4 | q2[n][c ^ d];\n    }\n\n    function hFun(x, key) {\n      let a = getB(x, 0);\n      let b = getB(x, 1);\n      let c = getB(x, 2);\n      let d = getB(x, 3);\n      switch (kLen) {\n        case 4:\n          a = q[1][a] ^ getB(key[3], 0);\n          b = q[0][b] ^ getB(key[3], 1);\n          c = q[0][c] ^ getB(key[3], 2);\n          d = q[1][d] ^ getB(key[3], 3);\n        case 3:\n          a = q[1][a] ^ getB(key[2], 0);\n          b = q[1][b] ^ getB(key[2], 1);\n          c = q[0][c] ^ getB(key[2], 2);\n          d = q[0][d] ^ getB(key[2], 3);\n        case 2:\n          a = q[0][q[0][a] ^ getB(key[1], 0)] ^ getB(key[0], 0);\n          b = q[0][q[1][b] ^ getB(key[1], 1)] ^ getB(key[0], 1);\n          c = q[1][q[0][c] ^ getB(key[1], 2)] ^ getB(key[0], 2);\n          d = q[1][q[1][d] ^ getB(key[1], 3)] ^ getB(key[0], 3);\n      }\n      return m[0][a] ^ m[1][b] ^ m[2][c] ^ m[3][d];\n    }\n\n    keyBytes = keyBytes.slice(0, 32);\n    i = keyBytes.length;\n    while (i !== 16 && i !== 24 && i !== 32) {\n      keyBytes[i++] = 0;\n    }\n\n    for (i = 0; i < keyBytes.length; i += 4) {\n      inKey[i >> 2] = getW(keyBytes, i);\n    }\n    for (i = 0; i < 256; i++) {\n      q[0][i] = qp(0, i);\n      q[1][i] = qp(1, i);\n    }\n    for (i = 0; i < 256; i++) {\n      f01 = q[1][i];\n      f5b = ffm5b(f01);\n      fef = ffmEf(f01);\n      m[0][i] = f01 + (f5b << 8) + (fef << 16) + (fef << 24);\n      m[2][i] = f5b + (fef << 8) + (f01 << 16) + (fef << 24);\n      f01 = q[0][i];\n      f5b = ffm5b(f01);\n      fef = ffmEf(f01);\n      m[1][i] = fef + (fef << 8) + (f5b << 16) + (f01 << 24);\n      m[3][i] = f5b + (f01 << 8) + (fef << 16) + (f5b << 24);\n    }\n\n    kLen = inKey.length / 2;\n    for (i = 0; i < kLen; i++) {\n      a = inKey[i + i];\n      meKey[i] = a;\n      b = inKey[i + i + 1];\n      moKey[i] = b;\n      sKey[kLen - i - 1] = mdsRem(a, b);\n    }\n    for (i = 0; i < 40; i += 2) {\n      a = 0x1010101 * i;\n      b = a + 0x1010101;\n      a = hFun(a, meKey);\n      b = rotw(hFun(b, moKey), 8);\n      tfsKey[i] = (a + b) & MAXINT;\n      tfsKey[i + 1] = rotw(a + 2 * b, 9);\n    }\n    for (i = 0; i < 256; i++) {\n      a = b = c = d = i;\n      switch (kLen) {\n        case 4:\n          a = q[1][a] ^ getB(sKey[3], 0);\n          b = q[0][b] ^ getB(sKey[3], 1);\n          c = q[0][c] ^ getB(sKey[3], 2);\n          d = q[1][d] ^ getB(sKey[3], 3);\n        case 3:\n          a = q[1][a] ^ getB(sKey[2], 0);\n          b = q[1][b] ^ getB(sKey[2], 1);\n          c = q[0][c] ^ getB(sKey[2], 2);\n          d = q[0][d] ^ getB(sKey[2], 3);\n        case 2:\n          tfsM[0][i] = m[0][q[0][q[0][a] ^ getB(sKey[1], 0)] ^ getB(sKey[0], 0)];\n          tfsM[1][i] = m[1][q[0][q[1][b] ^ getB(sKey[1], 1)] ^ getB(sKey[0], 1)];\n          tfsM[2][i] = m[2][q[1][q[0][c] ^ getB(sKey[1], 2)] ^ getB(sKey[0], 2)];\n          tfsM[3][i] = m[3][q[1][q[1][d] ^ getB(sKey[1], 3)] ^ getB(sKey[0], 3)];\n      }\n    }\n  }\n\n  function tfsG0(x) {\n    return tfsM[0][getB(x, 0)] ^ tfsM[1][getB(x, 1)] ^ tfsM[2][getB(x, 2)] ^ tfsM[3][getB(x, 3)];\n  }\n\n  function tfsG1(x) {\n    return tfsM[0][getB(x, 3)] ^ tfsM[1][getB(x, 0)] ^ tfsM[2][getB(x, 1)] ^ tfsM[3][getB(x, 2)];\n  }\n\n  function tfsFrnd(r, blk) {\n    let a = tfsG0(blk[0]);\n    let b = tfsG1(blk[1]);\n    blk[2] = rotw(blk[2] ^ (a + b + tfsKey[4 * r + 8]) & MAXINT, 31);\n    blk[3] = rotw(blk[3], 1) ^ (a + 2 * b + tfsKey[4 * r + 9]) & MAXINT;\n    a = tfsG0(blk[2]);\n    b = tfsG1(blk[3]);\n    blk[0] = rotw(blk[0] ^ (a + b + tfsKey[4 * r + 10]) & MAXINT, 31);\n    blk[1] = rotw(blk[1], 1) ^ (a + 2 * b + tfsKey[4 * r + 11]) & MAXINT;\n  }\n\n  function tfsIrnd(i, blk) {\n    let a = tfsG0(blk[0]);\n    let b = tfsG1(blk[1]);\n    blk[2] = rotw(blk[2], 1) ^ (a + b + tfsKey[4 * i + 10]) & MAXINT;\n    blk[3] = rotw(blk[3] ^ (a + 2 * b + tfsKey[4 * i + 11]) & MAXINT, 31);\n    a = tfsG0(blk[2]);\n    b = tfsG1(blk[3]);\n    blk[0] = rotw(blk[0], 1) ^ (a + b + tfsKey[4 * i + 8]) & MAXINT;\n    blk[1] = rotw(blk[1] ^ (a + 2 * b + tfsKey[4 * i + 9]) & MAXINT, 31);\n  }\n\n  function tfsClose() {\n    tfsKey = [];\n    tfsM = [\n      [],\n      [],\n      [],\n      []\n    ];\n  }\n\n  function tfsEncrypt(data, offset) {\n    dataBytes = data;\n    dataOffset = offset;\n    const blk = [getW(dataBytes, dataOffset) ^ tfsKey[0],\n      getW(dataBytes, dataOffset + 4) ^ tfsKey[1],\n      getW(dataBytes, dataOffset + 8) ^ tfsKey[2],\n      getW(dataBytes, dataOffset + 12) ^ tfsKey[3]];\n    for (let j = 0; j < 8; j++) {\n      tfsFrnd(j, blk);\n    }\n    setW(dataBytes, dataOffset, blk[2] ^ tfsKey[4]);\n    setW(dataBytes, dataOffset + 4, blk[3] ^ tfsKey[5]);\n    setW(dataBytes, dataOffset + 8, blk[0] ^ tfsKey[6]);\n    setW(dataBytes, dataOffset + 12, blk[1] ^ tfsKey[7]);\n    dataOffset += 16;\n    return dataBytes;\n  }\n\n  function tfsDecrypt(data, offset) {\n    dataBytes = data;\n    dataOffset = offset;\n    const blk = [getW(dataBytes, dataOffset) ^ tfsKey[4],\n      getW(dataBytes, dataOffset + 4) ^ tfsKey[5],\n      getW(dataBytes, dataOffset + 8) ^ tfsKey[6],\n      getW(dataBytes, dataOffset + 12) ^ tfsKey[7]];\n    for (let j = 7; j >= 0; j--) {\n      tfsIrnd(j, blk);\n    }\n    setW(dataBytes, dataOffset, blk[2] ^ tfsKey[0]);\n    setW(dataBytes, dataOffset + 4, blk[3] ^ tfsKey[1]);\n    setW(dataBytes, dataOffset + 8, blk[0] ^ tfsKey[2]);\n    setW(dataBytes, dataOffset + 12, blk[1] ^ tfsKey[3]);\n    dataOffset += 16;\n  }\n\n  // added by Recurity Labs\n\n  function tfsFinal() {\n    return dataBytes;\n  }\n\n  return {\n    name: 'twofish',\n    blocksize: 128 / 8,\n    open: tfsInit,\n    close: tfsClose,\n    encrypt: tfsEncrypt,\n    decrypt: tfsDecrypt,\n    // added by Recurity Labs\n    finalize: tfsFinal\n  };\n}\n\n// added by Recurity Labs\n\nfunction TF(key) {\n  this.tf = createTwofish();\n  this.tf.open(Array.from(key), 0);\n\n  this.encrypt = function(block) {\n    return this.tf.encrypt(Array.from(block), 0);\n  };\n}\n\nTF.keySize = TF.prototype.keySize = 32;\nTF.blockSize = TF.prototype.blockSize = 16;\n\nexport default TF;\n","/* Modified by Recurity Labs GmbH\n *\n * Originally written by nklein software (nklein.com)\n */\n\n/*\n * Javascript implementation based on Bruce Schneier's reference implementation.\n *\n *\n * The constructor doesn't do much of anything.  It's just here\n * so we can start defining properties and methods and such.\n */\nfunction Blowfish() {}\n\n/*\n * Declare the block size so that protocols know what size\n * Initialization Vector (IV) they will need.\n */\nBlowfish.prototype.BLOCKSIZE = 8;\n\n/*\n * These are the default SBOXES.\n */\nBlowfish.prototype.SBOXES = [\n  [\n    0xd1310ba6, 0x98dfb5ac, 0x2ffd72db, 0xd01adfb7, 0xb8e1afed, 0x6a267e96,\n    0xba7c9045, 0xf12c7f99, 0x24a19947, 0xb3916cf7, 0x0801f2e2, 0x858efc16,\n    0x636920d8, 0x71574e69, 0xa458fea3, 0xf4933d7e, 0x0d95748f, 0x728eb658,\n    0x718bcd58, 0x82154aee, 0x7b54a41d, 0xc25a59b5, 0x9c30d539, 0x2af26013,\n    0xc5d1b023, 0x286085f0, 0xca417918, 0xb8db38ef, 0x8e79dcb0, 0x603a180e,\n    0x6c9e0e8b, 0xb01e8a3e, 0xd71577c1, 0xbd314b27, 0x78af2fda, 0x55605c60,\n    0xe65525f3, 0xaa55ab94, 0x57489862, 0x63e81440, 0x55ca396a, 0x2aab10b6,\n    0xb4cc5c34, 0x1141e8ce, 0xa15486af, 0x7c72e993, 0xb3ee1411, 0x636fbc2a,\n    0x2ba9c55d, 0x741831f6, 0xce5c3e16, 0x9b87931e, 0xafd6ba33, 0x6c24cf5c,\n    0x7a325381, 0x28958677, 0x3b8f4898, 0x6b4bb9af, 0xc4bfe81b, 0x66282193,\n    0x61d809cc, 0xfb21a991, 0x487cac60, 0x5dec8032, 0xef845d5d, 0xe98575b1,\n    0xdc262302, 0xeb651b88, 0x23893e81, 0xd396acc5, 0x0f6d6ff3, 0x83f44239,\n    0x2e0b4482, 0xa4842004, 0x69c8f04a, 0x9e1f9b5e, 0x21c66842, 0xf6e96c9a,\n    0x670c9c61, 0xabd388f0, 0x6a51a0d2, 0xd8542f68, 0x960fa728, 0xab5133a3,\n    0x6eef0b6c, 0x137a3be4, 0xba3bf050, 0x7efb2a98, 0xa1f1651d, 0x39af0176,\n    0x66ca593e, 0x82430e88, 0x8cee8619, 0x456f9fb4, 0x7d84a5c3, 0x3b8b5ebe,\n    0xe06f75d8, 0x85c12073, 0x401a449f, 0x56c16aa6, 0x4ed3aa62, 0x363f7706,\n    0x1bfedf72, 0x429b023d, 0x37d0d724, 0xd00a1248, 0xdb0fead3, 0x49f1c09b,\n    0x075372c9, 0x80991b7b, 0x25d479d8, 0xf6e8def7, 0xe3fe501a, 0xb6794c3b,\n    0x976ce0bd, 0x04c006ba, 0xc1a94fb6, 0x409f60c4, 0x5e5c9ec2, 0x196a2463,\n    0x68fb6faf, 0x3e6c53b5, 0x1339b2eb, 0x3b52ec6f, 0x6dfc511f, 0x9b30952c,\n    0xcc814544, 0xaf5ebd09, 0xbee3d004, 0xde334afd, 0x660f2807, 0x192e4bb3,\n    0xc0cba857, 0x45c8740f, 0xd20b5f39, 0xb9d3fbdb, 0x5579c0bd, 0x1a60320a,\n    0xd6a100c6, 0x402c7279, 0x679f25fe, 0xfb1fa3cc, 0x8ea5e9f8, 0xdb3222f8,\n    0x3c7516df, 0xfd616b15, 0x2f501ec8, 0xad0552ab, 0x323db5fa, 0xfd238760,\n    0x53317b48, 0x3e00df82, 0x9e5c57bb, 0xca6f8ca0, 0x1a87562e, 0xdf1769db,\n    0xd542a8f6, 0x287effc3, 0xac6732c6, 0x8c4f5573, 0x695b27b0, 0xbbca58c8,\n    0xe1ffa35d, 0xb8f011a0, 0x10fa3d98, 0xfd2183b8, 0x4afcb56c, 0x2dd1d35b,\n    0x9a53e479, 0xb6f84565, 0xd28e49bc, 0x4bfb9790, 0xe1ddf2da, 0xa4cb7e33,\n    0x62fb1341, 0xcee4c6e8, 0xef20cada, 0x36774c01, 0xd07e9efe, 0x2bf11fb4,\n    0x95dbda4d, 0xae909198, 0xeaad8e71, 0x6b93d5a0, 0xd08ed1d0, 0xafc725e0,\n    0x8e3c5b2f, 0x8e7594b7, 0x8ff6e2fb, 0xf2122b64, 0x8888b812, 0x900df01c,\n    0x4fad5ea0, 0x688fc31c, 0xd1cff191, 0xb3a8c1ad, 0x2f2f2218, 0xbe0e1777,\n    0xea752dfe, 0x8b021fa1, 0xe5a0cc0f, 0xb56f74e8, 0x18acf3d6, 0xce89e299,\n    0xb4a84fe0, 0xfd13e0b7, 0x7cc43b81, 0xd2ada8d9, 0x165fa266, 0x80957705,\n    0x93cc7314, 0x211a1477, 0xe6ad2065, 0x77b5fa86, 0xc75442f5, 0xfb9d35cf,\n    0xebcdaf0c, 0x7b3e89a0, 0xd6411bd3, 0xae1e7e49, 0x00250e2d, 0x2071b35e,\n    0x226800bb, 0x57b8e0af, 0x2464369b, 0xf009b91e, 0x5563911d, 0x59dfa6aa,\n    0x78c14389, 0xd95a537f, 0x207d5ba2, 0x02e5b9c5, 0x83260376, 0x6295cfa9,\n    0x11c81968, 0x4e734a41, 0xb3472dca, 0x7b14a94a, 0x1b510052, 0x9a532915,\n    0xd60f573f, 0xbc9bc6e4, 0x2b60a476, 0x81e67400, 0x08ba6fb5, 0x571be91f,\n    0xf296ec6b, 0x2a0dd915, 0xb6636521, 0xe7b9f9b6, 0xff34052e, 0xc5855664,\n    0x53b02d5d, 0xa99f8fa1, 0x08ba4799, 0x6e85076a\n  ],\n  [\n    0x4b7a70e9, 0xb5b32944, 0xdb75092e, 0xc4192623, 0xad6ea6b0, 0x49a7df7d,\n    0x9cee60b8, 0x8fedb266, 0xecaa8c71, 0x699a17ff, 0x5664526c, 0xc2b19ee1,\n    0x193602a5, 0x75094c29, 0xa0591340, 0xe4183a3e, 0x3f54989a, 0x5b429d65,\n    0x6b8fe4d6, 0x99f73fd6, 0xa1d29c07, 0xefe830f5, 0x4d2d38e6, 0xf0255dc1,\n    0x4cdd2086, 0x8470eb26, 0x6382e9c6, 0x021ecc5e, 0x09686b3f, 0x3ebaefc9,\n    0x3c971814, 0x6b6a70a1, 0x687f3584, 0x52a0e286, 0xb79c5305, 0xaa500737,\n    0x3e07841c, 0x7fdeae5c, 0x8e7d44ec, 0x5716f2b8, 0xb03ada37, 0xf0500c0d,\n    0xf01c1f04, 0x0200b3ff, 0xae0cf51a, 0x3cb574b2, 0x25837a58, 0xdc0921bd,\n    0xd19113f9, 0x7ca92ff6, 0x94324773, 0x22f54701, 0x3ae5e581, 0x37c2dadc,\n    0xc8b57634, 0x9af3dda7, 0xa9446146, 0x0fd0030e, 0xecc8c73e, 0xa4751e41,\n    0xe238cd99, 0x3bea0e2f, 0x3280bba1, 0x183eb331, 0x4e548b38, 0x4f6db908,\n    0x6f420d03, 0xf60a04bf, 0x2cb81290, 0x24977c79, 0x5679b072, 0xbcaf89af,\n    0xde9a771f, 0xd9930810, 0xb38bae12, 0xdccf3f2e, 0x5512721f, 0x2e6b7124,\n    0x501adde6, 0x9f84cd87, 0x7a584718, 0x7408da17, 0xbc9f9abc, 0xe94b7d8c,\n    0xec7aec3a, 0xdb851dfa, 0x63094366, 0xc464c3d2, 0xef1c1847, 0x3215d908,\n    0xdd433b37, 0x24c2ba16, 0x12a14d43, 0x2a65c451, 0x50940002, 0x133ae4dd,\n    0x71dff89e, 0x10314e55, 0x81ac77d6, 0x5f11199b, 0x043556f1, 0xd7a3c76b,\n    0x3c11183b, 0x5924a509, 0xf28fe6ed, 0x97f1fbfa, 0x9ebabf2c, 0x1e153c6e,\n    0x86e34570, 0xeae96fb1, 0x860e5e0a, 0x5a3e2ab3, 0x771fe71c, 0x4e3d06fa,\n    0x2965dcb9, 0x99e71d0f, 0x803e89d6, 0x5266c825, 0x2e4cc978, 0x9c10b36a,\n    0xc6150eba, 0x94e2ea78, 0xa5fc3c53, 0x1e0a2df4, 0xf2f74ea7, 0x361d2b3d,\n    0x1939260f, 0x19c27960, 0x5223a708, 0xf71312b6, 0xebadfe6e, 0xeac31f66,\n    0xe3bc4595, 0xa67bc883, 0xb17f37d1, 0x018cff28, 0xc332ddef, 0xbe6c5aa5,\n    0x65582185, 0x68ab9802, 0xeecea50f, 0xdb2f953b, 0x2aef7dad, 0x5b6e2f84,\n    0x1521b628, 0x29076170, 0xecdd4775, 0x619f1510, 0x13cca830, 0xeb61bd96,\n    0x0334fe1e, 0xaa0363cf, 0xb5735c90, 0x4c70a239, 0xd59e9e0b, 0xcbaade14,\n    0xeecc86bc, 0x60622ca7, 0x9cab5cab, 0xb2f3846e, 0x648b1eaf, 0x19bdf0ca,\n    0xa02369b9, 0x655abb50, 0x40685a32, 0x3c2ab4b3, 0x319ee9d5, 0xc021b8f7,\n    0x9b540b19, 0x875fa099, 0x95f7997e, 0x623d7da8, 0xf837889a, 0x97e32d77,\n    0x11ed935f, 0x16681281, 0x0e358829, 0xc7e61fd6, 0x96dedfa1, 0x7858ba99,\n    0x57f584a5, 0x1b227263, 0x9b83c3ff, 0x1ac24696, 0xcdb30aeb, 0x532e3054,\n    0x8fd948e4, 0x6dbc3128, 0x58ebf2ef, 0x34c6ffea, 0xfe28ed61, 0xee7c3c73,\n    0x5d4a14d9, 0xe864b7e3, 0x42105d14, 0x203e13e0, 0x45eee2b6, 0xa3aaabea,\n    0xdb6c4f15, 0xfacb4fd0, 0xc742f442, 0xef6abbb5, 0x654f3b1d, 0x41cd2105,\n    0xd81e799e, 0x86854dc7, 0xe44b476a, 0x3d816250, 0xcf62a1f2, 0x5b8d2646,\n    0xfc8883a0, 0xc1c7b6a3, 0x7f1524c3, 0x69cb7492, 0x47848a0b, 0x5692b285,\n    0x095bbf00, 0xad19489d, 0x1462b174, 0x23820e00, 0x58428d2a, 0x0c55f5ea,\n    0x1dadf43e, 0x233f7061, 0x3372f092, 0x8d937e41, 0xd65fecf1, 0x6c223bdb,\n    0x7cde3759, 0xcbee7460, 0x4085f2a7, 0xce77326e, 0xa6078084, 0x19f8509e,\n    0xe8efd855, 0x61d99735, 0xa969a7aa, 0xc50c06c2, 0x5a04abfc, 0x800bcadc,\n    0x9e447a2e, 0xc3453484, 0xfdd56705, 0x0e1e9ec9, 0xdb73dbd3, 0x105588cd,\n    0x675fda79, 0xe3674340, 0xc5c43465, 0x713e38d8, 0x3d28f89e, 0xf16dff20,\n    0x153e21e7, 0x8fb03d4a, 0xe6e39f2b, 0xdb83adf7\n  ],\n  [\n    0xe93d5a68, 0x948140f7, 0xf64c261c, 0x94692934, 0x411520f7, 0x7602d4f7,\n    0xbcf46b2e, 0xd4a20068, 0xd4082471, 0x3320f46a, 0x43b7d4b7, 0x500061af,\n    0x1e39f62e, 0x97244546, 0x14214f74, 0xbf8b8840, 0x4d95fc1d, 0x96b591af,\n    0x70f4ddd3, 0x66a02f45, 0xbfbc09ec, 0x03bd9785, 0x7fac6dd0, 0x31cb8504,\n    0x96eb27b3, 0x55fd3941, 0xda2547e6, 0xabca0a9a, 0x28507825, 0x530429f4,\n    0x0a2c86da, 0xe9b66dfb, 0x68dc1462, 0xd7486900, 0x680ec0a4, 0x27a18dee,\n    0x4f3ffea2, 0xe887ad8c, 0xb58ce006, 0x7af4d6b6, 0xaace1e7c, 0xd3375fec,\n    0xce78a399, 0x406b2a42, 0x20fe9e35, 0xd9f385b9, 0xee39d7ab, 0x3b124e8b,\n    0x1dc9faf7, 0x4b6d1856, 0x26a36631, 0xeae397b2, 0x3a6efa74, 0xdd5b4332,\n    0x6841e7f7, 0xca7820fb, 0xfb0af54e, 0xd8feb397, 0x454056ac, 0xba489527,\n    0x55533a3a, 0x20838d87, 0xfe6ba9b7, 0xd096954b, 0x55a867bc, 0xa1159a58,\n    0xcca92963, 0x99e1db33, 0xa62a4a56, 0x3f3125f9, 0x5ef47e1c, 0x9029317c,\n    0xfdf8e802, 0x04272f70, 0x80bb155c, 0x05282ce3, 0x95c11548, 0xe4c66d22,\n    0x48c1133f, 0xc70f86dc, 0x07f9c9ee, 0x41041f0f, 0x404779a4, 0x5d886e17,\n    0x325f51eb, 0xd59bc0d1, 0xf2bcc18f, 0x41113564, 0x257b7834, 0x602a9c60,\n    0xdff8e8a3, 0x1f636c1b, 0x0e12b4c2, 0x02e1329e, 0xaf664fd1, 0xcad18115,\n    0x6b2395e0, 0x333e92e1, 0x3b240b62, 0xeebeb922, 0x85b2a20e, 0xe6ba0d99,\n    0xde720c8c, 0x2da2f728, 0xd0127845, 0x95b794fd, 0x647d0862, 0xe7ccf5f0,\n    0x5449a36f, 0x877d48fa, 0xc39dfd27, 0xf33e8d1e, 0x0a476341, 0x992eff74,\n    0x3a6f6eab, 0xf4f8fd37, 0xa812dc60, 0xa1ebddf8, 0x991be14c, 0xdb6e6b0d,\n    0xc67b5510, 0x6d672c37, 0x2765d43b, 0xdcd0e804, 0xf1290dc7, 0xcc00ffa3,\n    0xb5390f92, 0x690fed0b, 0x667b9ffb, 0xcedb7d9c, 0xa091cf0b, 0xd9155ea3,\n    0xbb132f88, 0x515bad24, 0x7b9479bf, 0x763bd6eb, 0x37392eb3, 0xcc115979,\n    0x8026e297, 0xf42e312d, 0x6842ada7, 0xc66a2b3b, 0x12754ccc, 0x782ef11c,\n    0x6a124237, 0xb79251e7, 0x06a1bbe6, 0x4bfb6350, 0x1a6b1018, 0x11caedfa,\n    0x3d25bdd8, 0xe2e1c3c9, 0x44421659, 0x0a121386, 0xd90cec6e, 0xd5abea2a,\n    0x64af674e, 0xda86a85f, 0xbebfe988, 0x64e4c3fe, 0x9dbc8057, 0xf0f7c086,\n    0x60787bf8, 0x6003604d, 0xd1fd8346, 0xf6381fb0, 0x7745ae04, 0xd736fccc,\n    0x83426b33, 0xf01eab71, 0xb0804187, 0x3c005e5f, 0x77a057be, 0xbde8ae24,\n    0x55464299, 0xbf582e61, 0x4e58f48f, 0xf2ddfda2, 0xf474ef38, 0x8789bdc2,\n    0x5366f9c3, 0xc8b38e74, 0xb475f255, 0x46fcd9b9, 0x7aeb2661, 0x8b1ddf84,\n    0x846a0e79, 0x915f95e2, 0x466e598e, 0x20b45770, 0x8cd55591, 0xc902de4c,\n    0xb90bace1, 0xbb8205d0, 0x11a86248, 0x7574a99e, 0xb77f19b6, 0xe0a9dc09,\n    0x662d09a1, 0xc4324633, 0xe85a1f02, 0x09f0be8c, 0x4a99a025, 0x1d6efe10,\n    0x1ab93d1d, 0x0ba5a4df, 0xa186f20f, 0x2868f169, 0xdcb7da83, 0x573906fe,\n    0xa1e2ce9b, 0x4fcd7f52, 0x50115e01, 0xa70683fa, 0xa002b5c4, 0x0de6d027,\n    0x9af88c27, 0x773f8641, 0xc3604c06, 0x61a806b5, 0xf0177a28, 0xc0f586e0,\n    0x006058aa, 0x30dc7d62, 0x11e69ed7, 0x2338ea63, 0x53c2dd94, 0xc2c21634,\n    0xbbcbee56, 0x90bcb6de, 0xebfc7da1, 0xce591d76, 0x6f05e409, 0x4b7c0188,\n    0x39720a3d, 0x7c927c24, 0x86e3725f, 0x724d9db9, 0x1ac15bb4, 0xd39eb8fc,\n    0xed545578, 0x08fca5b5, 0xd83d7cd3, 0x4dad0fc4, 0x1e50ef5e, 0xb161e6f8,\n    0xa28514d9, 0x6c51133c, 0x6fd5c7e7, 0x56e14ec4, 0x362abfce, 0xddc6c837,\n    0xd79a3234, 0x92638212, 0x670efa8e, 0x406000e0\n  ],\n  [\n    0x3a39ce37, 0xd3faf5cf, 0xabc27737, 0x5ac52d1b, 0x5cb0679e, 0x4fa33742,\n    0xd3822740, 0x99bc9bbe, 0xd5118e9d, 0xbf0f7315, 0xd62d1c7e, 0xc700c47b,\n    0xb78c1b6b, 0x21a19045, 0xb26eb1be, 0x6a366eb4, 0x5748ab2f, 0xbc946e79,\n    0xc6a376d2, 0x6549c2c8, 0x530ff8ee, 0x468dde7d, 0xd5730a1d, 0x4cd04dc6,\n    0x2939bbdb, 0xa9ba4650, 0xac9526e8, 0xbe5ee304, 0xa1fad5f0, 0x6a2d519a,\n    0x63ef8ce2, 0x9a86ee22, 0xc089c2b8, 0x43242ef6, 0xa51e03aa, 0x9cf2d0a4,\n    0x83c061ba, 0x9be96a4d, 0x8fe51550, 0xba645bd6, 0x2826a2f9, 0xa73a3ae1,\n    0x4ba99586, 0xef5562e9, 0xc72fefd3, 0xf752f7da, 0x3f046f69, 0x77fa0a59,\n    0x80e4a915, 0x87b08601, 0x9b09e6ad, 0x3b3ee593, 0xe990fd5a, 0x9e34d797,\n    0x2cf0b7d9, 0x022b8b51, 0x96d5ac3a, 0x017da67d, 0xd1cf3ed6, 0x7c7d2d28,\n    0x1f9f25cf, 0xadf2b89b, 0x5ad6b472, 0x5a88f54c, 0xe029ac71, 0xe019a5e6,\n    0x47b0acfd, 0xed93fa9b, 0xe8d3c48d, 0x283b57cc, 0xf8d56629, 0x79132e28,\n    0x785f0191, 0xed756055, 0xf7960e44, 0xe3d35e8c, 0x15056dd4, 0x88f46dba,\n    0x03a16125, 0x0564f0bd, 0xc3eb9e15, 0x3c9057a2, 0x97271aec, 0xa93a072a,\n    0x1b3f6d9b, 0x1e6321f5, 0xf59c66fb, 0x26dcf319, 0x7533d928, 0xb155fdf5,\n    0x03563482, 0x8aba3cbb, 0x28517711, 0xc20ad9f8, 0xabcc5167, 0xccad925f,\n    0x4de81751, 0x3830dc8e, 0x379d5862, 0x9320f991, 0xea7a90c2, 0xfb3e7bce,\n    0x5121ce64, 0x774fbe32, 0xa8b6e37e, 0xc3293d46, 0x48de5369, 0x6413e680,\n    0xa2ae0810, 0xdd6db224, 0x69852dfd, 0x09072166, 0xb39a460a, 0x6445c0dd,\n    0x586cdecf, 0x1c20c8ae, 0x5bbef7dd, 0x1b588d40, 0xccd2017f, 0x6bb4e3bb,\n    0xdda26a7e, 0x3a59ff45, 0x3e350a44, 0xbcb4cdd5, 0x72eacea8, 0xfa6484bb,\n    0x8d6612ae, 0xbf3c6f47, 0xd29be463, 0x542f5d9e, 0xaec2771b, 0xf64e6370,\n    0x740e0d8d, 0xe75b1357, 0xf8721671, 0xaf537d5d, 0x4040cb08, 0x4eb4e2cc,\n    0x34d2466a, 0x0115af84, 0xe1b00428, 0x95983a1d, 0x06b89fb4, 0xce6ea048,\n    0x6f3f3b82, 0x3520ab82, 0x011a1d4b, 0x277227f8, 0x611560b1, 0xe7933fdc,\n    0xbb3a792b, 0x344525bd, 0xa08839e1, 0x51ce794b, 0x2f32c9b7, 0xa01fbac9,\n    0xe01cc87e, 0xbcc7d1f6, 0xcf0111c3, 0xa1e8aac7, 0x1a908749, 0xd44fbd9a,\n    0xd0dadecb, 0xd50ada38, 0x0339c32a, 0xc6913667, 0x8df9317c, 0xe0b12b4f,\n    0xf79e59b7, 0x43f5bb3a, 0xf2d519ff, 0x27d9459c, 0xbf97222c, 0x15e6fc2a,\n    0x0f91fc71, 0x9b941525, 0xfae59361, 0xceb69ceb, 0xc2a86459, 0x12baa8d1,\n    0xb6c1075e, 0xe3056a0c, 0x10d25065, 0xcb03a442, 0xe0ec6e0e, 0x1698db3b,\n    0x4c98a0be, 0x3278e964, 0x9f1f9532, 0xe0d392df, 0xd3a0342b, 0x8971f21e,\n    0x1b0a7441, 0x4ba3348c, 0xc5be7120, 0xc37632d8, 0xdf359f8d, 0x9b992f2e,\n    0xe60b6f47, 0x0fe3f11d, 0xe54cda54, 0x1edad891, 0xce6279cf, 0xcd3e7e6f,\n    0x1618b166, 0xfd2c1d05, 0x848fd2c5, 0xf6fb2299, 0xf523f357, 0xa6327623,\n    0x93a83531, 0x56cccd02, 0xacf08162, 0x5a75ebb5, 0x6e163697, 0x88d273cc,\n    0xde966292, 0x81b949d0, 0x4c50901b, 0x71c65614, 0xe6c6c7bd, 0x327a140a,\n    0x45e1d006, 0xc3f27b9a, 0xc9aa53fd, 0x62a80f00, 0xbb25bfe2, 0x35bdd2f6,\n    0x71126905, 0xb2040222, 0xb6cbcf7c, 0xcd769c2b, 0x53113ec0, 0x1640e3d3,\n    0x38abbd60, 0x2547adf0, 0xba38209c, 0xf746ce76, 0x77afa1c5, 0x20756060,\n    0x85cbfe4e, 0x8ae88dd8, 0x7aaaf9b0, 0x4cf9aa7e, 0x1948c25c, 0x02fb8a8c,\n    0x01c36ae4, 0xd6ebe1f9, 0x90d4f869, 0xa65cdea0, 0x3f09252d, 0xc208e69f,\n    0xb74e6132, 0xce77e25b, 0x578fdfe3, 0x3ac372e6\n  ]\n];\n\n//*\n//* This is the default PARRAY\n//*\nBlowfish.prototype.PARRAY = [\n  0x243f6a88, 0x85a308d3, 0x13198a2e, 0x03707344, 0xa4093822, 0x299f31d0,\n  0x082efa98, 0xec4e6c89, 0x452821e6, 0x38d01377, 0xbe5466cf, 0x34e90c6c,\n  0xc0ac29b7, 0xc97c50dd, 0x3f84d5b5, 0xb5470917, 0x9216d5d9, 0x8979fb1b\n];\n\n//*\n//* This is the number of rounds the cipher will go\n//*\nBlowfish.prototype.NN = 16;\n\n//*\n//* This function is needed to get rid of problems\n//* with the high-bit getting set.  If we don't do\n//* this, then sometimes ( aa & 0x00FFFFFFFF ) is not\n//* equal to ( bb & 0x00FFFFFFFF ) even when they\n//* agree bit-for-bit for the first 32 bits.\n//*\nBlowfish.prototype._clean = function(xx) {\n  if (xx < 0) {\n    const yy = xx & 0x7FFFFFFF;\n    xx = yy + 0x80000000;\n  }\n  return xx;\n};\n\n//*\n//* This is the mixing function that uses the sboxes\n//*\nBlowfish.prototype._F = function(xx) {\n  let yy;\n\n  const dd = xx & 0x00FF;\n  xx >>>= 8;\n  const cc = xx & 0x00FF;\n  xx >>>= 8;\n  const bb = xx & 0x00FF;\n  xx >>>= 8;\n  const aa = xx & 0x00FF;\n\n  yy = this.sboxes[0][aa] + this.sboxes[1][bb];\n  yy ^= this.sboxes[2][cc];\n  yy += this.sboxes[3][dd];\n\n  return yy;\n};\n\n//*\n//* This method takes an array with two values, left and right\n//* and does NN rounds of Blowfish on them.\n//*\nBlowfish.prototype._encryptBlock = function(vals) {\n  let dataL = vals[0];\n  let dataR = vals[1];\n\n  let ii;\n\n  for (ii = 0; ii < this.NN; ++ii) {\n    dataL ^= this.parray[ii];\n    dataR = this._F(dataL) ^ dataR;\n\n    const tmp = dataL;\n    dataL = dataR;\n    dataR = tmp;\n  }\n\n  dataL ^= this.parray[this.NN + 0];\n  dataR ^= this.parray[this.NN + 1];\n\n  vals[0] = this._clean(dataR);\n  vals[1] = this._clean(dataL);\n};\n\n//*\n//* This method takes a vector of numbers and turns them\n//* into long words so that they can be processed by the\n//* real algorithm.\n//*\n//* Maybe I should make the real algorithm above take a vector\n//* instead.  That will involve more looping, but it won't require\n//* the F() method to deconstruct the vector.\n//*\nBlowfish.prototype.encryptBlock = function(vector) {\n  let ii;\n  const vals = [0, 0];\n  const off = this.BLOCKSIZE / 2;\n  for (ii = 0; ii < this.BLOCKSIZE / 2; ++ii) {\n    vals[0] = (vals[0] << 8) | (vector[ii + 0] & 0x00FF);\n    vals[1] = (vals[1] << 8) | (vector[ii + off] & 0x00FF);\n  }\n\n  this._encryptBlock(vals);\n\n  const ret = [];\n  for (ii = 0; ii < this.BLOCKSIZE / 2; ++ii) {\n    ret[ii + 0] = ((vals[0] >>> (24 - 8 * (ii))) & 0x00FF);\n    ret[ii + off] = ((vals[1] >>> (24 - 8 * (ii))) & 0x00FF);\n    // vals[ 0 ] = ( vals[ 0 ] >>> 8 );\n    // vals[ 1 ] = ( vals[ 1 ] >>> 8 );\n  }\n\n  return ret;\n};\n\n//*\n//* This method takes an array with two values, left and right\n//* and undoes NN rounds of Blowfish on them.\n//*\nBlowfish.prototype._decryptBlock = function(vals) {\n  let dataL = vals[0];\n  let dataR = vals[1];\n\n  let ii;\n\n  for (ii = this.NN + 1; ii > 1; --ii) {\n    dataL ^= this.parray[ii];\n    dataR = this._F(dataL) ^ dataR;\n\n    const tmp = dataL;\n    dataL = dataR;\n    dataR = tmp;\n  }\n\n  dataL ^= this.parray[1];\n  dataR ^= this.parray[0];\n\n  vals[0] = this._clean(dataR);\n  vals[1] = this._clean(dataL);\n};\n\n//*\n//* This method takes a key array and initializes the\n//* sboxes and parray for this encryption.\n//*\nBlowfish.prototype.init = function(key) {\n  let ii;\n  let jj = 0;\n\n  this.parray = [];\n  for (ii = 0; ii < this.NN + 2; ++ii) {\n    let data = 0x00000000;\n    for (let kk = 0; kk < 4; ++kk) {\n      data = (data << 8) | (key[jj] & 0x00FF);\n      if (++jj >= key.length) {\n        jj = 0;\n      }\n    }\n    this.parray[ii] = this.PARRAY[ii] ^ data;\n  }\n\n  this.sboxes = [];\n  for (ii = 0; ii < 4; ++ii) {\n    this.sboxes[ii] = [];\n    for (jj = 0; jj < 256; ++jj) {\n      this.sboxes[ii][jj] = this.SBOXES[ii][jj];\n    }\n  }\n\n  const vals = [0x00000000, 0x00000000];\n\n  for (ii = 0; ii < this.NN + 2; ii += 2) {\n    this._encryptBlock(vals);\n    this.parray[ii + 0] = vals[0];\n    this.parray[ii + 1] = vals[1];\n  }\n\n  for (ii = 0; ii < 4; ++ii) {\n    for (jj = 0; jj < 256; jj += 2) {\n      this._encryptBlock(vals);\n      this.sboxes[ii][jj + 0] = vals[0];\n      this.sboxes[ii][jj + 1] = vals[1];\n    }\n  }\n};\n\n// added by Recurity Labs\nfunction BF(key) {\n  this.bf = new Blowfish();\n  this.bf.init(key);\n\n  this.encrypt = function(block) {\n    return this.bf.encryptBlock(block);\n  };\n}\n\nBF.keySize = BF.prototype.keySize = 16;\nBF.blockSize = BF.prototype.blockSize = 8;\n\nexport default BF;\n","/**\n * @fileoverview Symmetric cryptography functions\n * @module crypto/cipher\n * @private\n */\n\nimport aes from './aes';\nimport { DES, TripleDES } from './des';\nimport CAST5 from './cast5';\nimport TF from './twofish';\nimport BF from './blowfish';\n\n/**\n * AES-128 encryption and decryption (ID 7)\n * @function\n * @param {String} key - 128-bit key\n * @see {@link https://github.com/asmcrypto/asmcrypto.js|asmCrypto}\n * @see {@link https://csrc.nist.gov/publications/fips/fips197/fips-197.pdf|NIST FIPS-197}\n * @returns {Object}\n */\nexport const aes128 = aes(128);\n/**\n * AES-128 Block Cipher (ID 8)\n * @function\n * @param {String} key - 192-bit key\n * @see {@link https://github.com/asmcrypto/asmcrypto.js|asmCrypto}\n * @see {@link https://csrc.nist.gov/publications/fips/fips197/fips-197.pdf|NIST FIPS-197}\n * @returns {Object}\n */\nexport const aes192 = aes(192);\n/**\n * AES-128 Block Cipher (ID 9)\n * @function\n * @param {String} key - 256-bit key\n * @see {@link https://github.com/asmcrypto/asmcrypto.js|asmCrypto}\n * @see {@link https://csrc.nist.gov/publications/fips/fips197/fips-197.pdf|NIST FIPS-197}\n * @returns {Object}\n */\nexport const aes256 = aes(256);\n// Not in OpenPGP specifications\nexport const des = DES;\n/**\n * Triple DES Block Cipher (ID 2)\n * @function\n * @param {String} key - 192-bit key\n * @see {@link https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-67r2.pdf|NIST SP 800-67}\n * @returns {Object}\n */\nexport const tripledes = TripleDES;\n/**\n * CAST-128 Block Cipher (ID 3)\n * @function\n * @param {String} key - 128-bit key\n * @see {@link https://tools.ietf.org/html/rfc2144|The CAST-128 Encryption Algorithm}\n * @returns {Object}\n */\nexport const cast5 = CAST5;\n/**\n * Twofish Block Cipher (ID 10)\n * @function\n * @param {String} key - 256-bit key\n * @see {@link https://tools.ietf.org/html/rfc4880#ref-TWOFISH|TWOFISH}\n * @returns {Object}\n */\nexport const twofish = TF;\n/**\n * Blowfish Block Cipher (ID 4)\n * @function\n * @param {String} key - 128-bit key\n * @see {@link https://tools.ietf.org/html/rfc4880#ref-BLOWFISH|BLOWFISH}\n * @returns {Object}\n */\nexport const blowfish = BF;\n/**\n * Not implemented\n * @function\n * @throws {Error}\n */\nexport const idea = function() {\n  throw new Error('IDEA symmetric-key algorithm not implemented');\n};\n","export var sha1_asm = function ( stdlib, foreign, buffer ) {\n    \"use asm\";\n\n    // SHA256 state\n    var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0,\n        TOTAL0 = 0, TOTAL1 = 0;\n\n    // HMAC state\n    var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0,\n        O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0;\n\n    // I/O buffer\n    var HEAP = new stdlib.Uint8Array(buffer);\n\n    function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {\n        w0 = w0|0;\n        w1 = w1|0;\n        w2 = w2|0;\n        w3 = w3|0;\n        w4 = w4|0;\n        w5 = w5|0;\n        w6 = w6|0;\n        w7 = w7|0;\n        w8 = w8|0;\n        w9 = w9|0;\n        w10 = w10|0;\n        w11 = w11|0;\n        w12 = w12|0;\n        w13 = w13|0;\n        w14 = w14|0;\n        w15 = w15|0;\n\n        var a = 0, b = 0, c = 0, d = 0, e = 0, n = 0, t = 0,\n            w16 = 0, w17 = 0, w18 = 0, w19 = 0,\n            w20 = 0, w21 = 0, w22 = 0, w23 = 0, w24 = 0, w25 = 0, w26 = 0, w27 = 0, w28 = 0, w29 = 0,\n            w30 = 0, w31 = 0, w32 = 0, w33 = 0, w34 = 0, w35 = 0, w36 = 0, w37 = 0, w38 = 0, w39 = 0,\n            w40 = 0, w41 = 0, w42 = 0, w43 = 0, w44 = 0, w45 = 0, w46 = 0, w47 = 0, w48 = 0, w49 = 0,\n            w50 = 0, w51 = 0, w52 = 0, w53 = 0, w54 = 0, w55 = 0, w56 = 0, w57 = 0, w58 = 0, w59 = 0,\n            w60 = 0, w61 = 0, w62 = 0, w63 = 0, w64 = 0, w65 = 0, w66 = 0, w67 = 0, w68 = 0, w69 = 0,\n            w70 = 0, w71 = 0, w72 = 0, w73 = 0, w74 = 0, w75 = 0, w76 = 0, w77 = 0, w78 = 0, w79 = 0;\n\n        a = H0;\n        b = H1;\n        c = H2;\n        d = H3;\n        e = H4;\n\n        // 0\n        t = ( w0 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 1\n        t = ( w1 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 2\n        t = ( w2 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 3\n        t = ( w3 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 4\n        t = ( w4 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 5\n        t = ( w5 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 6\n        t = ( w6 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 7\n        t = ( w7 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 8\n        t = ( w8 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 9\n        t = ( w9 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 10\n        t = ( w10 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 11\n        t = ( w11 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 12\n        t = ( w12 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 13\n        t = ( w13 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 14\n        t = ( w14 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 15\n        t = ( w15 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 16\n        n = w13 ^ w8 ^ w2 ^ w0;\n        w16 = (n << 1) | (n >>> 31);\n        t = (w16 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 17\n        n = w14 ^ w9 ^ w3 ^ w1;\n        w17 = (n << 1) | (n >>> 31);\n        t = (w17 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 18\n        n = w15 ^ w10 ^ w4 ^ w2;\n        w18 = (n << 1) | (n >>> 31);\n        t = (w18 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 19\n        n = w16 ^ w11 ^ w5 ^ w3;\n        w19 = (n << 1) | (n >>> 31);\n        t = (w19 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 20\n        n = w17 ^ w12 ^ w6 ^ w4;\n        w20 = (n << 1) | (n >>> 31);\n        t = (w20 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 21\n        n = w18 ^ w13 ^ w7 ^ w5;\n        w21 = (n << 1) | (n >>> 31);\n        t = (w21 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 22\n        n = w19 ^ w14 ^ w8 ^ w6;\n        w22 = (n << 1) | (n >>> 31);\n        t = (w22 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 23\n        n = w20 ^ w15 ^ w9 ^ w7;\n        w23 = (n << 1) | (n >>> 31);\n        t = (w23 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 24\n        n = w21 ^ w16 ^ w10 ^ w8;\n        w24 = (n << 1) | (n >>> 31);\n        t = (w24 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 25\n        n = w22 ^ w17 ^ w11 ^ w9;\n        w25 = (n << 1) | (n >>> 31);\n        t = (w25 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 26\n        n = w23 ^ w18 ^ w12 ^ w10;\n        w26 = (n << 1) | (n >>> 31);\n        t = (w26 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 27\n        n = w24 ^ w19 ^ w13 ^ w11;\n        w27 = (n << 1) | (n >>> 31);\n        t = (w27 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 28\n        n = w25 ^ w20 ^ w14 ^ w12;\n        w28 = (n << 1) | (n >>> 31);\n        t = (w28 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 29\n        n = w26 ^ w21 ^ w15 ^ w13;\n        w29 = (n << 1) | (n >>> 31);\n        t = (w29 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 30\n        n = w27 ^ w22 ^ w16 ^ w14;\n        w30 = (n << 1) | (n >>> 31);\n        t = (w30 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 31\n        n = w28 ^ w23 ^ w17 ^ w15;\n        w31 = (n << 1) | (n >>> 31);\n        t = (w31 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 32\n        n = w29 ^ w24 ^ w18 ^ w16;\n        w32 = (n << 1) | (n >>> 31);\n        t = (w32 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 33\n        n = w30 ^ w25 ^ w19 ^ w17;\n        w33 = (n << 1) | (n >>> 31);\n        t = (w33 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 34\n        n = w31 ^ w26 ^ w20 ^ w18;\n        w34 = (n << 1) | (n >>> 31);\n        t = (w34 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 35\n        n = w32 ^ w27 ^ w21 ^ w19;\n        w35 = (n << 1) | (n >>> 31);\n        t = (w35 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 36\n        n = w33 ^ w28 ^ w22 ^ w20;\n        w36 = (n << 1) | (n >>> 31);\n        t = (w36 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 37\n        n = w34 ^ w29 ^ w23 ^ w21;\n        w37 = (n << 1) | (n >>> 31);\n        t = (w37 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 38\n        n = w35 ^ w30 ^ w24 ^ w22;\n        w38 = (n << 1) | (n >>> 31);\n        t = (w38 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 39\n        n = w36 ^ w31 ^ w25 ^ w23;\n        w39 = (n << 1) | (n >>> 31);\n        t = (w39 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 40\n        n = w37 ^ w32 ^ w26 ^ w24;\n        w40 = (n << 1) | (n >>> 31);\n        t = (w40 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 41\n        n = w38 ^ w33 ^ w27 ^ w25;\n        w41 = (n << 1) | (n >>> 31);\n        t = (w41 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 42\n        n = w39 ^ w34 ^ w28 ^ w26;\n        w42 = (n << 1) | (n >>> 31);\n        t = (w42 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 43\n        n = w40 ^ w35 ^ w29 ^ w27;\n        w43 = (n << 1) | (n >>> 31);\n        t = (w43 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 44\n        n = w41 ^ w36 ^ w30 ^ w28;\n        w44 = (n << 1) | (n >>> 31);\n        t = (w44 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 45\n        n = w42 ^ w37 ^ w31 ^ w29;\n        w45 = (n << 1) | (n >>> 31);\n        t = (w45 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 46\n        n = w43 ^ w38 ^ w32 ^ w30;\n        w46 = (n << 1) | (n >>> 31);\n        t = (w46 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 47\n        n = w44 ^ w39 ^ w33 ^ w31;\n        w47 = (n << 1) | (n >>> 31);\n        t = (w47 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 48\n        n = w45 ^ w40 ^ w34 ^ w32;\n        w48 = (n << 1) | (n >>> 31);\n        t = (w48 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 49\n        n = w46 ^ w41 ^ w35 ^ w33;\n        w49 = (n << 1) | (n >>> 31);\n        t = (w49 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 50\n        n = w47 ^ w42 ^ w36 ^ w34;\n        w50 = (n << 1) | (n >>> 31);\n        t = (w50 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 51\n        n = w48 ^ w43 ^ w37 ^ w35;\n        w51 = (n << 1) | (n >>> 31);\n        t = (w51 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 52\n        n = w49 ^ w44 ^ w38 ^ w36;\n        w52 = (n << 1) | (n >>> 31);\n        t = (w52 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 53\n        n = w50 ^ w45 ^ w39 ^ w37;\n        w53 = (n << 1) | (n >>> 31);\n        t = (w53 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 54\n        n = w51 ^ w46 ^ w40 ^ w38;\n        w54 = (n << 1) | (n >>> 31);\n        t = (w54 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 55\n        n = w52 ^ w47 ^ w41 ^ w39;\n        w55 = (n << 1) | (n >>> 31);\n        t = (w55 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 56\n        n = w53 ^ w48 ^ w42 ^ w40;\n        w56 = (n << 1) | (n >>> 31);\n        t = (w56 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 57\n        n = w54 ^ w49 ^ w43 ^ w41;\n        w57 = (n << 1) | (n >>> 31);\n        t = (w57 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 58\n        n = w55 ^ w50 ^ w44 ^ w42;\n        w58 = (n << 1) | (n >>> 31);\n        t = (w58 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 59\n        n = w56 ^ w51 ^ w45 ^ w43;\n        w59 = (n << 1) | (n >>> 31);\n        t = (w59 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 60\n        n = w57 ^ w52 ^ w46 ^ w44;\n        w60 = (n << 1) | (n >>> 31);\n        t = (w60 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 61\n        n = w58 ^ w53 ^ w47 ^ w45;\n        w61 = (n << 1) | (n >>> 31);\n        t = (w61 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 62\n        n = w59 ^ w54 ^ w48 ^ w46;\n        w62 = (n << 1) | (n >>> 31);\n        t = (w62 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 63\n        n = w60 ^ w55 ^ w49 ^ w47;\n        w63 = (n << 1) | (n >>> 31);\n        t = (w63 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 64\n        n = w61 ^ w56 ^ w50 ^ w48;\n        w64 = (n << 1) | (n >>> 31);\n        t = (w64 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 65\n        n = w62 ^ w57 ^ w51 ^ w49;\n        w65 = (n << 1) | (n >>> 31);\n        t = (w65 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 66\n        n = w63 ^ w58 ^ w52 ^ w50;\n        w66 = (n << 1) | (n >>> 31);\n        t = (w66 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 67\n        n = w64 ^ w59 ^ w53 ^ w51;\n        w67 = (n << 1) | (n >>> 31);\n        t = (w67 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 68\n        n = w65 ^ w60 ^ w54 ^ w52;\n        w68 = (n << 1) | (n >>> 31);\n        t = (w68 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 69\n        n = w66 ^ w61 ^ w55 ^ w53;\n        w69 = (n << 1) | (n >>> 31);\n        t = (w69 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 70\n        n = w67 ^ w62 ^ w56 ^ w54;\n        w70 = (n << 1) | (n >>> 31);\n        t = (w70 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 71\n        n = w68 ^ w63 ^ w57 ^ w55;\n        w71 = (n << 1) | (n >>> 31);\n        t = (w71 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 72\n        n = w69 ^ w64 ^ w58 ^ w56;\n        w72 = (n << 1) | (n >>> 31);\n        t = (w72 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 73\n        n = w70 ^ w65 ^ w59 ^ w57;\n        w73 = (n << 1) | (n >>> 31);\n        t = (w73 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 74\n        n = w71 ^ w66 ^ w60 ^ w58;\n        w74 = (n << 1) | (n >>> 31);\n        t = (w74 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 75\n        n = w72 ^ w67 ^ w61 ^ w59;\n        w75 = (n << 1) | (n >>> 31);\n        t = (w75 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 76\n        n = w73 ^ w68 ^ w62 ^ w60;\n        w76 = (n << 1) | (n >>> 31);\n        t = (w76 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 77\n        n = w74 ^ w69 ^ w63 ^ w61;\n        w77 = (n << 1) | (n >>> 31);\n        t = (w77 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 78\n        n = w75 ^ w70 ^ w64 ^ w62;\n        w78 = (n << 1) | (n >>> 31);\n        t = (w78 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 79\n        n = w76 ^ w71 ^ w65 ^ w63;\n        w79 = (n << 1) | (n >>> 31);\n        t = (w79 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        H0 = ( H0 + a )|0;\n        H1 = ( H1 + b )|0;\n        H2 = ( H2 + c )|0;\n        H3 = ( H3 + d )|0;\n        H4 = ( H4 + e )|0;\n\n    }\n\n    function _core_heap ( offset ) {\n        offset = offset|0;\n\n        _core(\n            HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],\n            HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],\n            HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],\n            HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],\n            HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],\n            HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],\n            HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],\n            HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],\n            HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],\n            HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],\n            HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],\n            HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],\n            HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],\n            HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],\n            HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],\n            HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]\n        );\n    }\n\n    // offset — multiple of 32\n    function _state_to_heap ( output ) {\n        output = output|0;\n\n        HEAP[output|0] = H0>>>24;\n        HEAP[output|1] = H0>>>16&255;\n        HEAP[output|2] = H0>>>8&255;\n        HEAP[output|3] = H0&255;\n        HEAP[output|4] = H1>>>24;\n        HEAP[output|5] = H1>>>16&255;\n        HEAP[output|6] = H1>>>8&255;\n        HEAP[output|7] = H1&255;\n        HEAP[output|8] = H2>>>24;\n        HEAP[output|9] = H2>>>16&255;\n        HEAP[output|10] = H2>>>8&255;\n        HEAP[output|11] = H2&255;\n        HEAP[output|12] = H3>>>24;\n        HEAP[output|13] = H3>>>16&255;\n        HEAP[output|14] = H3>>>8&255;\n        HEAP[output|15] = H3&255;\n        HEAP[output|16] = H4>>>24;\n        HEAP[output|17] = H4>>>16&255;\n        HEAP[output|18] = H4>>>8&255;\n        HEAP[output|19] = H4&255;\n    }\n\n    function reset () {\n        H0 = 0x67452301;\n        H1 = 0xefcdab89;\n        H2 = 0x98badcfe;\n        H3 = 0x10325476;\n        H4 = 0xc3d2e1f0;\n        TOTAL0 = TOTAL1 = 0;\n    }\n\n    function init ( h0, h1, h2, h3, h4, total0, total1 ) {\n        h0 = h0|0;\n        h1 = h1|0;\n        h2 = h2|0;\n        h3 = h3|0;\n        h4 = h4|0;\n        total0 = total0|0;\n        total1 = total1|0;\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n        TOTAL0 = total0;\n        TOTAL1 = total1;\n    }\n\n    // offset — multiple of 64\n    function process ( offset, length ) {\n        offset = offset|0;\n        length = length|0;\n\n        var hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        while ( (length|0) >= 64 ) {\n            _core_heap(offset);\n\n            offset = ( offset + 64 )|0;\n            length = ( length - 64 )|0;\n\n            hashed = ( hashed + 64 )|0;\n        }\n\n        TOTAL0 = ( TOTAL0 + hashed )|0;\n        if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;\n\n        return hashed|0;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var hashed = 0,\n            i = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        if ( (length|0) >= 64 ) {\n            hashed = process( offset, length )|0;\n            if ( (hashed|0) == -1 )\n                return -1;\n\n            offset = ( offset + hashed )|0;\n            length = ( length - hashed )|0;\n        }\n\n        hashed = ( hashed + length )|0;\n        TOTAL0 = ( TOTAL0 + length )|0;\n        if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = (TOTAL1 + 1)|0;\n\n        HEAP[offset|length] = 0x80;\n\n        if ( (length|0) >= 56 ) {\n            for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )\n                HEAP[offset|i] = 0x00;\n            _core_heap(offset);\n\n            length = 0;\n\n            HEAP[offset|0] = 0;\n        }\n\n        for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )\n            HEAP[offset|i] = 0;\n\n        HEAP[offset|56] = TOTAL1>>>21&255;\n        HEAP[offset|57] = TOTAL1>>>13&255;\n        HEAP[offset|58] = TOTAL1>>>5&255;\n        HEAP[offset|59] = TOTAL1<<3&255 | TOTAL0>>>29;\n        HEAP[offset|60] = TOTAL0>>>21&255;\n        HEAP[offset|61] = TOTAL0>>>13&255;\n        HEAP[offset|62] = TOTAL0>>>5&255;\n        HEAP[offset|63] = TOTAL0<<3&255;\n        _core_heap(offset);\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    function hmac_reset () {\n        H0 = I0;\n        H1 = I1;\n        H2 = I2;\n        H3 = I3;\n        H4 = I4;\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    function _hmac_opad () {\n        H0 = O0;\n        H1 = O1;\n        H2 = O2;\n        H3 = O3;\n        H4 = O4;\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {\n        p0 = p0|0;\n        p1 = p1|0;\n        p2 = p2|0;\n        p3 = p3|0;\n        p4 = p4|0;\n        p5 = p5|0;\n        p6 = p6|0;\n        p7 = p7|0;\n        p8 = p8|0;\n        p9 = p9|0;\n        p10 = p10|0;\n        p11 = p11|0;\n        p12 = p12|0;\n        p13 = p13|0;\n        p14 = p14|0;\n        p15 = p15|0;\n\n        // opad\n        reset();\n        _core(\n            p0 ^ 0x5c5c5c5c,\n            p1 ^ 0x5c5c5c5c,\n            p2 ^ 0x5c5c5c5c,\n            p3 ^ 0x5c5c5c5c,\n            p4 ^ 0x5c5c5c5c,\n            p5 ^ 0x5c5c5c5c,\n            p6 ^ 0x5c5c5c5c,\n            p7 ^ 0x5c5c5c5c,\n            p8 ^ 0x5c5c5c5c,\n            p9 ^ 0x5c5c5c5c,\n            p10 ^ 0x5c5c5c5c,\n            p11 ^ 0x5c5c5c5c,\n            p12 ^ 0x5c5c5c5c,\n            p13 ^ 0x5c5c5c5c,\n            p14 ^ 0x5c5c5c5c,\n            p15 ^ 0x5c5c5c5c\n        );\n        O0 = H0;\n        O1 = H1;\n        O2 = H2;\n        O3 = H3;\n        O4 = H4;\n\n        // ipad\n        reset();\n        _core(\n            p0 ^ 0x36363636,\n            p1 ^ 0x36363636,\n            p2 ^ 0x36363636,\n            p3 ^ 0x36363636,\n            p4 ^ 0x36363636,\n            p5 ^ 0x36363636,\n            p6 ^ 0x36363636,\n            p7 ^ 0x36363636,\n            p8 ^ 0x36363636,\n            p9 ^ 0x36363636,\n            p10 ^ 0x36363636,\n            p11 ^ 0x36363636,\n            p12 ^ 0x36363636,\n            p13 ^ 0x36363636,\n            p14 ^ 0x36363636,\n            p15 ^ 0x36363636\n        );\n        I0 = H0;\n        I1 = H1;\n        I2 = H2;\n        I3 = H3;\n        I4 = H4;\n\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function hmac_finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        hashed = finish( offset, length, -1 )|0;\n        t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\n\n        _hmac_opad();\n        _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    // salt is assumed to be already processed\n    // offset — multiple of 64\n    // output — multiple of 32\n    function pbkdf2_generate_block ( offset, length, block, count, output ) {\n        offset = offset|0;\n        length = length|0;\n        block = block|0;\n        count = count|0;\n        output = output|0;\n\n        var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0,\n            t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        // pad block number into heap\n        // FIXME probable OOB write\n        HEAP[(offset+length)|0]   = block>>>24;\n        HEAP[(offset+length+1)|0] = block>>>16&255;\n        HEAP[(offset+length+2)|0] = block>>>8&255;\n        HEAP[(offset+length+3)|0] = block&255;\n\n        // finish first iteration\n        hmac_finish( offset, (length+4)|0, -1 )|0;\n        h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4;\n        count = (count-1)|0;\n\n        // perform the rest iterations\n        while ( (count|0) > 0 ) {\n            hmac_reset();\n            _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\n\n            _hmac_opad();\n            _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\n\n            h0 = h0 ^ H0;\n            h1 = h1 ^ H1;\n            h2 = h2 ^ H2;\n            h3 = h3 ^ H3;\n            h4 = h4 ^ H4;\n\n            count = (count-1)|0;\n        }\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return 0;\n    }\n\n    return {\n      // SHA1\n      reset: reset,\n      init: init,\n      process: process,\n      finish: finish,\n\n      // HMAC-SHA1\n      hmac_reset: hmac_reset,\n      hmac_init: hmac_init,\n      hmac_finish: hmac_finish,\n\n      // PBKDF2-HMAC-SHA1\n      pbkdf2_generate_block: pbkdf2_generate_block\n    }\n}\n","import { _heap_write } from '../other/utils';\nimport { IllegalStateError } from '../other/errors';\nexport class Hash {\n    constructor() {\n        this.pos = 0;\n        this.len = 0;\n    }\n    reset() {\n        const { asm } = this.acquire_asm();\n        this.result = null;\n        this.pos = 0;\n        this.len = 0;\n        asm.reset();\n        return this;\n    }\n    process(data) {\n        if (this.result !== null)\n            throw new IllegalStateError('state must be reset before processing new data');\n        const { asm, heap } = this.acquire_asm();\n        let hpos = this.pos;\n        let hlen = this.len;\n        let dpos = 0;\n        let dlen = data.length;\n        let wlen = 0;\n        while (dlen > 0) {\n            wlen = _heap_write(heap, hpos + hlen, data, dpos, dlen);\n            hlen += wlen;\n            dpos += wlen;\n            dlen -= wlen;\n            wlen = asm.process(hpos, hlen);\n            hpos += wlen;\n            hlen -= wlen;\n            if (!hlen)\n                hpos = 0;\n        }\n        this.pos = hpos;\n        this.len = hlen;\n        return this;\n    }\n    finish() {\n        if (this.result !== null)\n            throw new IllegalStateError('state must be reset before processing new data');\n        const { asm, heap } = this.acquire_asm();\n        asm.finish(this.pos, this.len, 0);\n        this.result = new Uint8Array(this.HASH_SIZE);\n        this.result.set(heap.subarray(0, this.HASH_SIZE));\n        this.pos = 0;\n        this.len = 0;\n        this.release_asm();\n        return this;\n    }\n}\n","import { sha1_asm } from './sha1.asm';\nimport { Hash } from '../hash';\nimport { _heap_init } from '../../other/utils';\nexport const _sha1_block_size = 64;\nexport const _sha1_hash_size = 20;\nconst heap_pool = [];\nconst asm_pool = [];\nexport class Sha1 extends Hash {\n    constructor() {\n        super();\n        this.NAME = 'sha1';\n        this.BLOCK_SIZE = _sha1_block_size;\n        this.HASH_SIZE = _sha1_hash_size;\n        this.acquire_asm();\n    }\n    acquire_asm() {\n        if (this.heap === undefined || this.asm === undefined) {\n            this.heap = heap_pool.pop() || _heap_init();\n            this.asm = asm_pool.pop() || sha1_asm({ Uint8Array: Uint8Array }, null, this.heap.buffer);\n            this.reset();\n        }\n        return { heap: this.heap, asm: this.asm };\n    }\n    release_asm() {\n        if (this.heap !== undefined && this.asm !== undefined) {\n            heap_pool.push(this.heap);\n            asm_pool.push(this.asm);\n        }\n        this.heap = undefined;\n        this.asm = undefined;\n    }\n    static bytes(data) {\n        return new Sha1().process(data).finish().result;\n    }\n}\nSha1.NAME = 'sha1';\nSha1.heap_pool = [];\nSha1.asm_pool = [];\nSha1.asm_function = sha1_asm;\n","import { sha256_asm } from './sha256.asm';\nimport { Hash } from '../hash';\nimport { _heap_init } from '../../other/utils';\nexport const _sha256_block_size = 64;\nexport const _sha256_hash_size = 32;\nconst heap_pool = [];\nconst asm_pool = [];\nexport class Sha256 extends Hash {\n    constructor() {\n        super();\n        this.NAME = 'sha256';\n        this.BLOCK_SIZE = _sha256_block_size;\n        this.HASH_SIZE = _sha256_hash_size;\n        this.acquire_asm();\n    }\n    acquire_asm() {\n        if (this.heap === undefined || this.asm === undefined) {\n            this.heap = heap_pool.pop() || _heap_init();\n            this.asm = asm_pool.pop() || sha256_asm({ Uint8Array: Uint8Array }, null, this.heap.buffer);\n            this.reset();\n        }\n        return { heap: this.heap, asm: this.asm };\n    }\n    release_asm() {\n        if (this.heap !== undefined && this.asm !== undefined) {\n            heap_pool.push(this.heap);\n            asm_pool.push(this.asm);\n        }\n        this.heap = undefined;\n        this.asm = undefined;\n    }\n    static bytes(data) {\n        return new Sha256().process(data).finish().result;\n    }\n}\nSha256.NAME = 'sha256';\n","export var sha256_asm = function ( stdlib, foreign, buffer ) {\n    \"use asm\";\n\n    // SHA256 state\n    var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0, H5 = 0, H6 = 0, H7 = 0,\n        TOTAL0 = 0, TOTAL1 = 0;\n\n    // HMAC state\n    var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0, I5 = 0, I6 = 0, I7 = 0,\n        O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0, O5 = 0, O6 = 0, O7 = 0;\n\n    // I/O buffer\n    var HEAP = new stdlib.Uint8Array(buffer);\n\n    function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {\n        w0 = w0|0;\n        w1 = w1|0;\n        w2 = w2|0;\n        w3 = w3|0;\n        w4 = w4|0;\n        w5 = w5|0;\n        w6 = w6|0;\n        w7 = w7|0;\n        w8 = w8|0;\n        w9 = w9|0;\n        w10 = w10|0;\n        w11 = w11|0;\n        w12 = w12|0;\n        w13 = w13|0;\n        w14 = w14|0;\n        w15 = w15|0;\n\n        var a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0;\n\n        a = H0;\n        b = H1;\n        c = H2;\n        d = H3;\n        e = H4;\n        f = H5;\n        g = H6;\n        h = H7;\n        \n        // 0\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x428a2f98 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 1\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x71374491 )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 2\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xb5c0fbcf )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 3\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xe9b5dba5 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 4\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x3956c25b )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 5\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x59f111f1 )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 6\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x923f82a4 )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 7\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xab1c5ed5 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 8\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xd807aa98 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 9\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x12835b01 )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 10\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x243185be )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 11\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x550c7dc3 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 12\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x72be5d74 )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 13\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x80deb1fe )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 14\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x9bdc06a7 )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 15\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xc19bf174 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 16\n        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xe49b69c1 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 17\n        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xefbe4786 )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 18\n        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x0fc19dc6 )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 19\n        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x240ca1cc )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 20\n        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x2de92c6f )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 21\n        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x4a7484aa )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 22\n        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x5cb0a9dc )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 23\n        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x76f988da )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 24\n        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x983e5152 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 25\n        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xa831c66d )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 26\n        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xb00327c8 )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 27\n        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xbf597fc7 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 28\n        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0xc6e00bf3 )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 29\n        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xd5a79147 )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 30\n        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x06ca6351 )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 31\n        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x14292967 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 32\n        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x27b70a85 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 33\n        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x2e1b2138 )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 34\n        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x4d2c6dfc )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 35\n        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x53380d13 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 36\n        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x650a7354 )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 37\n        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x766a0abb )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 38\n        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x81c2c92e )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 39\n        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x92722c85 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 40\n        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xa2bfe8a1 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 41\n        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xa81a664b )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 42\n        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xc24b8b70 )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 43\n        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xc76c51a3 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 44\n        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0xd192e819 )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 45\n        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xd6990624 )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 46\n        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0xf40e3585 )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 47\n        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x106aa070 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 48\n        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x19a4c116 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 49\n        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x1e376c08 )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 50\n        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x2748774c )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 51\n        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x34b0bcb5 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 52\n        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x391c0cb3 )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 53\n        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x4ed8aa4a )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 54\n        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x5b9cca4f )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 55\n        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x682e6ff3 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 56\n        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x748f82ee )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 57\n        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x78a5636f )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 58\n        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x84c87814 )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 59\n        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x8cc70208 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 60\n        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x90befffa )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 61\n        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xa4506ceb )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 62\n        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0xbef9a3f7 )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 63\n        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xc67178f2 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        H0 = ( H0 + a )|0;\n        H1 = ( H1 + b )|0;\n        H2 = ( H2 + c )|0;\n        H3 = ( H3 + d )|0;\n        H4 = ( H4 + e )|0;\n        H5 = ( H5 + f )|0;\n        H6 = ( H6 + g )|0;\n        H7 = ( H7 + h )|0;\n    }\n\n    function _core_heap ( offset ) {\n        offset = offset|0;\n\n        _core(\n            HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],\n            HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],\n            HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],\n            HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],\n            HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],\n            HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],\n            HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],\n            HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],\n            HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],\n            HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],\n            HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],\n            HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],\n            HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],\n            HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],\n            HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],\n            HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]\n        );\n    }\n\n    // offset — multiple of 32\n    function _state_to_heap ( output ) {\n        output = output|0;\n\n        HEAP[output|0] = H0>>>24;\n        HEAP[output|1] = H0>>>16&255;\n        HEAP[output|2] = H0>>>8&255;\n        HEAP[output|3] = H0&255;\n        HEAP[output|4] = H1>>>24;\n        HEAP[output|5] = H1>>>16&255;\n        HEAP[output|6] = H1>>>8&255;\n        HEAP[output|7] = H1&255;\n        HEAP[output|8] = H2>>>24;\n        HEAP[output|9] = H2>>>16&255;\n        HEAP[output|10] = H2>>>8&255;\n        HEAP[output|11] = H2&255;\n        HEAP[output|12] = H3>>>24;\n        HEAP[output|13] = H3>>>16&255;\n        HEAP[output|14] = H3>>>8&255;\n        HEAP[output|15] = H3&255;\n        HEAP[output|16] = H4>>>24;\n        HEAP[output|17] = H4>>>16&255;\n        HEAP[output|18] = H4>>>8&255;\n        HEAP[output|19] = H4&255;\n        HEAP[output|20] = H5>>>24;\n        HEAP[output|21] = H5>>>16&255;\n        HEAP[output|22] = H5>>>8&255;\n        HEAP[output|23] = H5&255;\n        HEAP[output|24] = H6>>>24;\n        HEAP[output|25] = H6>>>16&255;\n        HEAP[output|26] = H6>>>8&255;\n        HEAP[output|27] = H6&255;\n        HEAP[output|28] = H7>>>24;\n        HEAP[output|29] = H7>>>16&255;\n        HEAP[output|30] = H7>>>8&255;\n        HEAP[output|31] = H7&255;\n    }\n\n    function reset () {\n        H0 = 0x6a09e667;\n        H1 = 0xbb67ae85;\n        H2 = 0x3c6ef372;\n        H3 = 0xa54ff53a;\n        H4 = 0x510e527f;\n        H5 = 0x9b05688c;\n        H6 = 0x1f83d9ab;\n        H7 = 0x5be0cd19;\n        TOTAL0 = TOTAL1 = 0;\n    }\n\n    function init ( h0, h1, h2, h3, h4, h5, h6, h7, total0, total1 ) {\n        h0 = h0|0;\n        h1 = h1|0;\n        h2 = h2|0;\n        h3 = h3|0;\n        h4 = h4|0;\n        h5 = h5|0;\n        h6 = h6|0;\n        h7 = h7|0;\n        total0 = total0|0;\n        total1 = total1|0;\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n        H5 = h5;\n        H6 = h6;\n        H7 = h7;\n        TOTAL0 = total0;\n        TOTAL1 = total1;\n    }\n\n    // offset — multiple of 64\n    function process ( offset, length ) {\n        offset = offset|0;\n        length = length|0;\n\n        var hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        while ( (length|0) >= 64 ) {\n            _core_heap(offset);\n\n            offset = ( offset + 64 )|0;\n            length = ( length - 64 )|0;\n\n            hashed = ( hashed + 64 )|0;\n        }\n\n        TOTAL0 = ( TOTAL0 + hashed )|0;\n        if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;\n\n        return hashed|0;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var hashed = 0,\n            i = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        if ( (length|0) >= 64 ) {\n            hashed = process( offset, length )|0;\n            if ( (hashed|0) == -1 )\n                return -1;\n\n            offset = ( offset + hashed )|0;\n            length = ( length - hashed )|0;\n        }\n\n        hashed = ( hashed + length )|0;\n        TOTAL0 = ( TOTAL0 + length )|0;\n        if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;\n\n        HEAP[offset|length] = 0x80;\n\n        if ( (length|0) >= 56 ) {\n            for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )\n                HEAP[offset|i] = 0x00;\n\n            _core_heap(offset);\n\n            length = 0;\n\n            HEAP[offset|0] = 0;\n        }\n\n        for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )\n            HEAP[offset|i] = 0;\n\n        HEAP[offset|56] = TOTAL1>>>21&255;\n        HEAP[offset|57] = TOTAL1>>>13&255;\n        HEAP[offset|58] = TOTAL1>>>5&255;\n        HEAP[offset|59] = TOTAL1<<3&255 | TOTAL0>>>29;\n        HEAP[offset|60] = TOTAL0>>>21&255;\n        HEAP[offset|61] = TOTAL0>>>13&255;\n        HEAP[offset|62] = TOTAL0>>>5&255;\n        HEAP[offset|63] = TOTAL0<<3&255;\n        _core_heap(offset);\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    function hmac_reset () {\n        H0 = I0;\n        H1 = I1;\n        H2 = I2;\n        H3 = I3;\n        H4 = I4;\n        H5 = I5;\n        H6 = I6;\n        H7 = I7;\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    function _hmac_opad () {\n        H0 = O0;\n        H1 = O1;\n        H2 = O2;\n        H3 = O3;\n        H4 = O4;\n        H5 = O5;\n        H6 = O6;\n        H7 = O7;\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {\n        p0 = p0|0;\n        p1 = p1|0;\n        p2 = p2|0;\n        p3 = p3|0;\n        p4 = p4|0;\n        p5 = p5|0;\n        p6 = p6|0;\n        p7 = p7|0;\n        p8 = p8|0;\n        p9 = p9|0;\n        p10 = p10|0;\n        p11 = p11|0;\n        p12 = p12|0;\n        p13 = p13|0;\n        p14 = p14|0;\n        p15 = p15|0;\n\n        // opad\n        reset();\n        _core(\n            p0 ^ 0x5c5c5c5c,\n            p1 ^ 0x5c5c5c5c,\n            p2 ^ 0x5c5c5c5c,\n            p3 ^ 0x5c5c5c5c,\n            p4 ^ 0x5c5c5c5c,\n            p5 ^ 0x5c5c5c5c,\n            p6 ^ 0x5c5c5c5c,\n            p7 ^ 0x5c5c5c5c,\n            p8 ^ 0x5c5c5c5c,\n            p9 ^ 0x5c5c5c5c,\n            p10 ^ 0x5c5c5c5c,\n            p11 ^ 0x5c5c5c5c,\n            p12 ^ 0x5c5c5c5c,\n            p13 ^ 0x5c5c5c5c,\n            p14 ^ 0x5c5c5c5c,\n            p15 ^ 0x5c5c5c5c\n        );\n        O0 = H0;\n        O1 = H1;\n        O2 = H2;\n        O3 = H3;\n        O4 = H4;\n        O5 = H5;\n        O6 = H6;\n        O7 = H7;\n\n        // ipad\n        reset();\n        _core(\n            p0 ^ 0x36363636,\n            p1 ^ 0x36363636,\n            p2 ^ 0x36363636,\n            p3 ^ 0x36363636,\n            p4 ^ 0x36363636,\n            p5 ^ 0x36363636,\n            p6 ^ 0x36363636,\n            p7 ^ 0x36363636,\n            p8 ^ 0x36363636,\n            p9 ^ 0x36363636,\n            p10 ^ 0x36363636,\n            p11 ^ 0x36363636,\n            p12 ^ 0x36363636,\n            p13 ^ 0x36363636,\n            p14 ^ 0x36363636,\n            p15 ^ 0x36363636\n        );\n        I0 = H0;\n        I1 = H1;\n        I2 = H2;\n        I3 = H3;\n        I4 = H4;\n        I5 = H5;\n        I6 = H6;\n        I7 = H7;\n\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function hmac_finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\n            hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        hashed = finish( offset, length, -1 )|0;\n        t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\n\n        _hmac_opad();\n        _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    // salt is assumed to be already processed\n    // offset — multiple of 64\n    // output — multiple of 32\n    function pbkdf2_generate_block ( offset, length, block, count, output ) {\n        offset = offset|0;\n        length = length|0;\n        block = block|0;\n        count = count|0;\n        output = output|0;\n\n        var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0, h5 = 0, h6 = 0, h7 = 0,\n            t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        // pad block number into heap\n        // FIXME probable OOB write\n        HEAP[(offset+length)|0]   = block>>>24;\n        HEAP[(offset+length+1)|0] = block>>>16&255;\n        HEAP[(offset+length+2)|0] = block>>>8&255;\n        HEAP[(offset+length+3)|0] = block&255;\n\n        // finish first iteration\n        hmac_finish( offset, (length+4)|0, -1 )|0;\n        h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4, h5 = t5 = H5, h6 = t6 = H6, h7 = t7 = H7;\n        count = (count-1)|0;\n\n        // perform the rest iterations\n        while ( (count|0) > 0 ) {\n            hmac_reset();\n            _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\n\n            _hmac_opad();\n            _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\n\n            h0 = h0 ^ H0;\n            h1 = h1 ^ H1;\n            h2 = h2 ^ H2;\n            h3 = h3 ^ H3;\n            h4 = h4 ^ H4;\n            h5 = h5 ^ H5;\n            h6 = h6 ^ H6;\n            h7 = h7 ^ H7;\n\n            count = (count-1)|0;\n        }\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n        H5 = h5;\n        H6 = h6;\n        H7 = h7;\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return 0;\n    }\n\n    return {\n      // SHA256\n      reset: reset,\n      init: init,\n      process: process,\n      finish: finish,\n\n      // HMAC-SHA256\n      hmac_reset: hmac_reset,\n      hmac_init: hmac_init,\n      hmac_finish: hmac_finish,\n\n      // PBKDF2-HMAC-SHA256\n      pbkdf2_generate_block: pbkdf2_generate_block\n    }\n}\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","/**\n * A fast MD5 JavaScript implementation\n * Copyright (c) 2012 Joseph Myers\n * http://www.myersdaily.org/joseph/javascript/md5-text.html\n *\n * Permission to use, copy, modify, and distribute this software\n * and its documentation for any purposes and without\n * fee is hereby granted provided that this copyright notice\n * appears in all copies.\n *\n * Of course, this soft is provided \"as is\" without express or implied\n * warranty of any kind.\n */\n\nimport util from '../../util';\n\n// MD5 Digest\nasync function md5(entree) {\n  const digest = md51(util.uint8ArrayToString(entree));\n  return util.hexToUint8Array(hex(digest));\n}\n\nfunction md5cycle(x, k) {\n  let a = x[0];\n  let b = x[1];\n  let c = x[2];\n  let d = x[3];\n\n  a = ff(a, b, c, d, k[0], 7, -680876936);\n  d = ff(d, a, b, c, k[1], 12, -389564586);\n  c = ff(c, d, a, b, k[2], 17, 606105819);\n  b = ff(b, c, d, a, k[3], 22, -1044525330);\n  a = ff(a, b, c, d, k[4], 7, -176418897);\n  d = ff(d, a, b, c, k[5], 12, 1200080426);\n  c = ff(c, d, a, b, k[6], 17, -1473231341);\n  b = ff(b, c, d, a, k[7], 22, -45705983);\n  a = ff(a, b, c, d, k[8], 7, 1770035416);\n  d = ff(d, a, b, c, k[9], 12, -1958414417);\n  c = ff(c, d, a, b, k[10], 17, -42063);\n  b = ff(b, c, d, a, k[11], 22, -1990404162);\n  a = ff(a, b, c, d, k[12], 7, 1804603682);\n  d = ff(d, a, b, c, k[13], 12, -40341101);\n  c = ff(c, d, a, b, k[14], 17, -1502002290);\n  b = ff(b, c, d, a, k[15], 22, 1236535329);\n\n  a = gg(a, b, c, d, k[1], 5, -165796510);\n  d = gg(d, a, b, c, k[6], 9, -1069501632);\n  c = gg(c, d, a, b, k[11], 14, 643717713);\n  b = gg(b, c, d, a, k[0], 20, -373897302);\n  a = gg(a, b, c, d, k[5], 5, -701558691);\n  d = gg(d, a, b, c, k[10], 9, 38016083);\n  c = gg(c, d, a, b, k[15], 14, -660478335);\n  b = gg(b, c, d, a, k[4], 20, -405537848);\n  a = gg(a, b, c, d, k[9], 5, 568446438);\n  d = gg(d, a, b, c, k[14], 9, -1019803690);\n  c = gg(c, d, a, b, k[3], 14, -187363961);\n  b = gg(b, c, d, a, k[8], 20, 1163531501);\n  a = gg(a, b, c, d, k[13], 5, -1444681467);\n  d = gg(d, a, b, c, k[2], 9, -51403784);\n  c = gg(c, d, a, b, k[7], 14, 1735328473);\n  b = gg(b, c, d, a, k[12], 20, -1926607734);\n\n  a = hh(a, b, c, d, k[5], 4, -378558);\n  d = hh(d, a, b, c, k[8], 11, -2022574463);\n  c = hh(c, d, a, b, k[11], 16, 1839030562);\n  b = hh(b, c, d, a, k[14], 23, -35309556);\n  a = hh(a, b, c, d, k[1], 4, -1530992060);\n  d = hh(d, a, b, c, k[4], 11, 1272893353);\n  c = hh(c, d, a, b, k[7], 16, -155497632);\n  b = hh(b, c, d, a, k[10], 23, -1094730640);\n  a = hh(a, b, c, d, k[13], 4, 681279174);\n  d = hh(d, a, b, c, k[0], 11, -358537222);\n  c = hh(c, d, a, b, k[3], 16, -722521979);\n  b = hh(b, c, d, a, k[6], 23, 76029189);\n  a = hh(a, b, c, d, k[9], 4, -640364487);\n  d = hh(d, a, b, c, k[12], 11, -421815835);\n  c = hh(c, d, a, b, k[15], 16, 530742520);\n  b = hh(b, c, d, a, k[2], 23, -995338651);\n\n  a = ii(a, b, c, d, k[0], 6, -198630844);\n  d = ii(d, a, b, c, k[7], 10, 1126891415);\n  c = ii(c, d, a, b, k[14], 15, -1416354905);\n  b = ii(b, c, d, a, k[5], 21, -57434055);\n  a = ii(a, b, c, d, k[12], 6, 1700485571);\n  d = ii(d, a, b, c, k[3], 10, -1894986606);\n  c = ii(c, d, a, b, k[10], 15, -1051523);\n  b = ii(b, c, d, a, k[1], 21, -2054922799);\n  a = ii(a, b, c, d, k[8], 6, 1873313359);\n  d = ii(d, a, b, c, k[15], 10, -30611744);\n  c = ii(c, d, a, b, k[6], 15, -1560198380);\n  b = ii(b, c, d, a, k[13], 21, 1309151649);\n  a = ii(a, b, c, d, k[4], 6, -145523070);\n  d = ii(d, a, b, c, k[11], 10, -1120210379);\n  c = ii(c, d, a, b, k[2], 15, 718787259);\n  b = ii(b, c, d, a, k[9], 21, -343485551);\n\n  x[0] = add32(a, x[0]);\n  x[1] = add32(b, x[1]);\n  x[2] = add32(c, x[2]);\n  x[3] = add32(d, x[3]);\n}\n\nfunction cmn(q, a, b, x, s, t) {\n  a = add32(add32(a, q), add32(x, t));\n  return add32((a << s) | (a >>> (32 - s)), b);\n}\n\nfunction ff(a, b, c, d, x, s, t) {\n  return cmn((b & c) | ((~b) & d), a, b, x, s, t);\n}\n\nfunction gg(a, b, c, d, x, s, t) {\n  return cmn((b & d) | (c & (~d)), a, b, x, s, t);\n}\n\nfunction hh(a, b, c, d, x, s, t) {\n  return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction ii(a, b, c, d, x, s, t) {\n  return cmn(c ^ (b | (~d)), a, b, x, s, t);\n}\n\nfunction md51(s) {\n  const n = s.length;\n  const state = [1732584193, -271733879, -1732584194, 271733878];\n  let i;\n  for (i = 64; i <= s.length; i += 64) {\n    md5cycle(state, md5blk(s.substring(i - 64, i)));\n  }\n  s = s.substring(i - 64);\n  const tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  for (i = 0; i < s.length; i++) {\n    tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n  }\n  tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n  if (i > 55) {\n    md5cycle(state, tail);\n    for (i = 0; i < 16; i++) {\n      tail[i] = 0;\n    }\n  }\n  tail[14] = n * 8;\n  md5cycle(state, tail);\n  return state;\n}\n\n/* there needs to be support for Unicode here,\n * unless we pretend that we can redefine the MD-5\n * algorithm for multi-byte characters (perhaps\n * by adding every four 16-bit characters and\n * shortening the sum to 32 bits). Otherwise\n * I suggest performing MD-5 as if every character\n * was two bytes--e.g., 0040 0025 = @%--but then\n * how will an ordinary MD-5 sum be matched?\n * There is no way to standardize text to something\n * like UTF-8 before transformation; speed cost is\n * utterly prohibitive. The JavaScript standard\n * itself needs to look at this: it should start\n * providing access to strings as preformed UTF-8\n * 8-bit unsigned value arrays.\n */\nfunction md5blk(s) { /* I figured global was faster.   */\n  const md5blks = [];\n  let i; /* Andy King said do it this way. */\n  for (i = 0; i < 64; i += 4) {\n    md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) <<\n      24);\n  }\n  return md5blks;\n}\n\nconst hex_chr = '0123456789abcdef'.split('');\n\nfunction rhex(n) {\n  let s = '';\n  let j = 0;\n  for (; j < 4; j++) {\n    s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n  }\n  return s;\n}\n\nfunction hex(x) {\n  for (let i = 0; i < x.length; i++) {\n    x[i] = rhex(x[i]);\n  }\n  return x.join('');\n}\n\n/* this function is much faster,\nso if possible we use it. Some IEs\nare the only ones I know of that\nneed the idiotic second function,\ngenerated by an if clause.  */\n\nfunction add32(a, b) {\n  return (a + b) & 0xFFFFFFFF;\n}\n\nexport default md5;\n","/**\n * @fileoverview Provides an interface to hashing functions available in Node.js or external libraries.\n * @see {@link https://github.com/asmcrypto/asmcrypto.js|asmCrypto}\n * @see {@link https://github.com/indutny/hash.js|hash.js}\n * @module crypto/hash\n * @private\n */\n\nimport { Sha1 } from '@openpgp/asmcrypto.js/dist_es8/hash/sha1/sha1';\nimport { Sha256 } from '@openpgp/asmcrypto.js/dist_es8/hash/sha256/sha256';\nimport sha224 from 'hash.js/lib/hash/sha/224';\nimport sha384 from 'hash.js/lib/hash/sha/384';\nimport sha512 from 'hash.js/lib/hash/sha/512';\nimport { ripemd160 } from 'hash.js/lib/hash/ripemd';\nimport * as stream from '@openpgp/web-stream-tools';\nimport md5 from './md5';\nimport util from '../../util';\nimport defaultConfig from '../../config';\nimport enums from '../../enums';\n\nconst webCrypto = util.getWebCrypto();\nconst nodeCrypto = util.getNodeCrypto();\nconst nodeCryptoHashes = nodeCrypto && nodeCrypto.getHashes();\n\nfunction nodeHash(type) {\n  if (!nodeCrypto || !nodeCryptoHashes.includes(type)) {\n    return;\n  }\n  return async function (data) {\n    const shasum = nodeCrypto.createHash(type);\n    return stream.transform(data, value => {\n      shasum.update(value);\n    }, () => new Uint8Array(shasum.digest()));\n  };\n}\n\nfunction hashjsHash(hash, webCryptoHash) {\n  return async function(data, config = defaultConfig) {\n    if (stream.isArrayStream(data)) {\n      data = await stream.readToEnd(data);\n    }\n    if (!util.isStream(data) && webCrypto && webCryptoHash && data.length >= config.minBytesForWebCrypto) {\n      return new Uint8Array(await webCrypto.digest(webCryptoHash, data));\n    }\n    const hashInstance = hash();\n    return stream.transform(data, value => {\n      hashInstance.update(value);\n    }, () => new Uint8Array(hashInstance.digest()));\n  };\n}\n\nfunction asmcryptoHash(hash, webCryptoHash) {\n  return async function(data, config = defaultConfig) {\n    if (stream.isArrayStream(data)) {\n      data = await stream.readToEnd(data);\n    }\n    if (util.isStream(data)) {\n      const hashInstance = new hash();\n      return stream.transform(data, value => {\n        hashInstance.process(value);\n      }, () => hashInstance.finish().result);\n    } else if (webCrypto && webCryptoHash && data.length >= config.minBytesForWebCrypto) {\n      return new Uint8Array(await webCrypto.digest(webCryptoHash, data));\n    } else {\n      return hash.bytes(data);\n    }\n  };\n}\n\nconst hashFunctions = {\n  md5: nodeHash('md5') || md5,\n  sha1: nodeHash('sha1') || asmcryptoHash(Sha1, 'SHA-1'),\n  sha224: nodeHash('sha224') || hashjsHash(sha224),\n  sha256: nodeHash('sha256') || asmcryptoHash(Sha256, 'SHA-256'),\n  sha384: nodeHash('sha384') || hashjsHash(sha384, 'SHA-384'),\n  sha512: nodeHash('sha512') || hashjsHash(sha512, 'SHA-512'), // asmcrypto sha512 is huge.\n  ripemd: nodeHash('ripemd160') || hashjsHash(ripemd160)\n};\n\nexport default {\n\n  /** @see module:md5 */\n  md5: hashFunctions.md5,\n  /** @see asmCrypto */\n  sha1: hashFunctions.sha1,\n  /** @see hash.js */\n  sha224: hashFunctions.sha224,\n  /** @see asmCrypto */\n  sha256: hashFunctions.sha256,\n  /** @see hash.js */\n  sha384: hashFunctions.sha384,\n  /** @see asmCrypto */\n  sha512: hashFunctions.sha512,\n  /** @see hash.js */\n  ripemd: hashFunctions.ripemd,\n\n  /**\n   * Create a hash on the specified data using the specified algorithm\n   * @param {module:enums.hash} algo - Hash algorithm type (see {@link https://tools.ietf.org/html/rfc4880#section-9.4|RFC 4880 9.4})\n   * @param {Uint8Array} data - Data to be hashed\n   * @returns {Promise<Uint8Array>} Hash value.\n   */\n  digest: function(algo, data) {\n    switch (algo) {\n      case enums.hash.md5:\n        return this.md5(data);\n      case enums.hash.sha1:\n        return this.sha1(data);\n      case enums.hash.ripemd:\n        return this.ripemd(data);\n      case enums.hash.sha256:\n        return this.sha256(data);\n      case enums.hash.sha384:\n        return this.sha384(data);\n      case enums.hash.sha512:\n        return this.sha512(data);\n      case enums.hash.sha224:\n        return this.sha224(data);\n      default:\n        throw new Error('Invalid hash function.');\n    }\n  },\n\n  /**\n   * Returns the hash size in bytes of the specified hash algorithm type\n   * @param {module:enums.hash} algo - Hash algorithm type (See {@link https://tools.ietf.org/html/rfc4880#section-9.4|RFC 4880 9.4})\n   * @returns {Integer} Size in bytes of the resulting hash.\n   */\n  getHashByteLength: function(algo) {\n    switch (algo) {\n      case enums.hash.md5:\n        return 16;\n      case enums.hash.sha1:\n      case enums.hash.ripemd:\n        return 20;\n      case enums.hash.sha256:\n        return 32;\n      case enums.hash.sha384:\n        return 48;\n      case enums.hash.sha512:\n        return 64;\n      case enums.hash.sha224:\n        return 28;\n      default:\n        throw new Error('Invalid hash algorithm.');\n    }\n  }\n};\n","import { AES } from './aes';\nimport { joinBytes } from '../other/utils';\nexport class AES_CFB {\n    static encrypt(data, key, iv) {\n        return new AES_CFB(key, iv).encrypt(data);\n    }\n    static decrypt(data, key, iv) {\n        return new AES_CFB(key, iv).decrypt(data);\n    }\n    constructor(key, iv, aes) {\n        this.aes = aes ? aes : new AES(key, iv, true, 'CFB');\n        delete this.aes.padding;\n    }\n    encrypt(data) {\n        const r1 = this.aes.AES_Encrypt_process(data);\n        const r2 = this.aes.AES_Encrypt_finish();\n        return joinBytes(r1, r2);\n    }\n    decrypt(data) {\n        const r1 = this.aes.AES_Decrypt_process(data);\n        const r2 = this.aes.AES_Decrypt_finish();\n        return joinBytes(r1, r2);\n    }\n}\n","import * as cipher from '.';\nimport enums from '../../enums';\n\n/**\n * Get implementation of the given cipher\n * @param {enums.symmetric} algo\n * @returns {Object}\n * @throws {Error} on invalid algo\n */\nexport default function getCipher(algo) {\n  const algoName = enums.read(enums.symmetric, algo);\n  return cipher[algoName];\n}\n","// Modified by ProtonTech AG\n\n// Modified by Recurity Labs GmbH\n\n// modified version of https://www.hanewin.net/encrypt/PGdecode.js:\n\n/* OpenPGP encryption using RSA/AES\n * Copyright 2005-2006 Herbert Hanewinkel, www.haneWIN.de\n * version 2.0, check www.haneWIN.de for the latest version\n\n * This software is provided as-is, without express or implied warranty.\n * Permission to use, copy, modify, distribute or sell this software, with or\n * without fee, for any purpose and by any individual or organization, is hereby\n * granted, provided that the above copyright notice and this paragraph appear\n * in all copies. Distribution as a part of an application or binary must\n * include the above copyright notice in the documentation and/or other\n * materials provided with the application or distribution.\n */\n\n/**\n * @module crypto/mode/cfb\n * @private\n */\n\nimport { AES_CFB } from '@openpgp/asmcrypto.js/dist_es8/aes/cfb';\nimport * as stream from '@openpgp/web-stream-tools';\nimport getCipher from '../cipher/getCipher';\nimport util from '../../util';\nimport enums from '../../enums';\n\nconst webCrypto = util.getWebCrypto();\nconst nodeCrypto = util.getNodeCrypto();\n\nconst knownAlgos = nodeCrypto ? nodeCrypto.getCiphers() : [];\nconst nodeAlgos = {\n  idea: knownAlgos.includes('idea-cfb') ? 'idea-cfb' : undefined, /* Unused, not implemented */\n  tripledes: knownAlgos.includes('des-ede3-cfb') ? 'des-ede3-cfb' : undefined,\n  cast5: knownAlgos.includes('cast5-cfb') ? 'cast5-cfb' : undefined,\n  blowfish: knownAlgos.includes('bf-cfb') ? 'bf-cfb' : undefined,\n  aes128: knownAlgos.includes('aes-128-cfb') ? 'aes-128-cfb' : undefined,\n  aes192: knownAlgos.includes('aes-192-cfb') ? 'aes-192-cfb' : undefined,\n  aes256: knownAlgos.includes('aes-256-cfb') ? 'aes-256-cfb' : undefined\n  /* twofish is not implemented in OpenSSL */\n};\n\n/**\n * CFB encryption\n * @param {enums.symmetric} algo - block cipher algorithm\n * @param {Uint8Array} key\n * @param {MaybeStream<Uint8Array>} plaintext\n * @param {Uint8Array} iv\n * @param {Object} config - full configuration, defaults to openpgp.config\n * @returns MaybeStream<Uint8Array>\n */\nexport async function encrypt(algo, key, plaintext, iv, config) {\n  const algoName = enums.read(enums.symmetric, algo);\n  if (util.getNodeCrypto() && nodeAlgos[algoName]) { // Node crypto library.\n    return nodeEncrypt(algo, key, plaintext, iv);\n  }\n  if (util.isAES(algo)) {\n    return aesEncrypt(algo, key, plaintext, iv, config);\n  }\n\n  const Cipher = getCipher(algo);\n  const cipherfn = new Cipher(key);\n  const block_size = cipherfn.blockSize;\n\n  const blockc = iv.slice();\n  let pt = new Uint8Array();\n  const process = chunk => {\n    if (chunk) {\n      pt = util.concatUint8Array([pt, chunk]);\n    }\n    const ciphertext = new Uint8Array(pt.length);\n    let i;\n    let j = 0;\n    while (chunk ? pt.length >= block_size : pt.length) {\n      const encblock = cipherfn.encrypt(blockc);\n      for (i = 0; i < block_size; i++) {\n        blockc[i] = pt[i] ^ encblock[i];\n        ciphertext[j++] = blockc[i];\n      }\n      pt = pt.subarray(block_size);\n    }\n    return ciphertext.subarray(0, j);\n  };\n  return stream.transform(plaintext, process, process);\n}\n\n/**\n * CFB decryption\n * @param {enums.symmetric} algo - block cipher algorithm\n * @param {Uint8Array} key\n * @param {MaybeStream<Uint8Array>} ciphertext\n * @param {Uint8Array} iv\n * @returns MaybeStream<Uint8Array>\n */\nexport async function decrypt(algo, key, ciphertext, iv) {\n  const algoName = enums.read(enums.symmetric, algo);\n  if (util.getNodeCrypto() && nodeAlgos[algoName]) { // Node crypto library.\n    return nodeDecrypt(algo, key, ciphertext, iv);\n  }\n  if (util.isAES(algo)) {\n    return aesDecrypt(algo, key, ciphertext, iv);\n  }\n\n  const Cipher = getCipher(algo);\n  const cipherfn = new Cipher(key);\n  const block_size = cipherfn.blockSize;\n\n  let blockp = iv;\n  let ct = new Uint8Array();\n  const process = chunk => {\n    if (chunk) {\n      ct = util.concatUint8Array([ct, chunk]);\n    }\n    const plaintext = new Uint8Array(ct.length);\n    let i;\n    let j = 0;\n    while (chunk ? ct.length >= block_size : ct.length) {\n      const decblock = cipherfn.encrypt(blockp);\n      blockp = ct.subarray(0, block_size);\n      for (i = 0; i < block_size; i++) {\n        plaintext[j++] = blockp[i] ^ decblock[i];\n      }\n      ct = ct.subarray(block_size);\n    }\n    return plaintext.subarray(0, j);\n  };\n  return stream.transform(ciphertext, process, process);\n}\n\nfunction aesEncrypt(algo, key, pt, iv, config) {\n  if (\n    util.getWebCrypto() &&\n    key.length !== 24 && // Chrome doesn't support 192 bit keys, see https://www.chromium.org/blink/webcrypto#TOC-AES-support\n    !util.isStream(pt) &&\n    pt.length >= 3000 * config.minBytesForWebCrypto // Default to a 3MB minimum. Chrome is pretty slow for small messages, see: https://bugs.chromium.org/p/chromium/issues/detail?id=701188#c2\n  ) { // Web Crypto\n    return webEncrypt(algo, key, pt, iv);\n  }\n  // asm.js fallback\n  const cfb = new AES_CFB(key, iv);\n  return stream.transform(pt, value => cfb.aes.AES_Encrypt_process(value), () => cfb.aes.AES_Encrypt_finish());\n}\n\nfunction aesDecrypt(algo, key, ct, iv) {\n  if (util.isStream(ct)) {\n    const cfb = new AES_CFB(key, iv);\n    return stream.transform(ct, value => cfb.aes.AES_Decrypt_process(value), () => cfb.aes.AES_Decrypt_finish());\n  }\n  return AES_CFB.decrypt(ct, key, iv);\n}\n\nfunction xorMut(a, b) {\n  for (let i = 0; i < a.length; i++) {\n    a[i] = a[i] ^ b[i];\n  }\n}\n\nasync function webEncrypt(algo, key, pt, iv) {\n  const ALGO = 'AES-CBC';\n  const _key = await webCrypto.importKey('raw', key, { name: ALGO }, false, ['encrypt']);\n  const { blockSize } = getCipher(algo);\n  const cbc_pt = util.concatUint8Array([new Uint8Array(blockSize), pt]);\n  const ct = new Uint8Array(await webCrypto.encrypt({ name: ALGO, iv }, _key, cbc_pt)).subarray(0, pt.length);\n  xorMut(ct, pt);\n  return ct;\n}\n\nfunction nodeEncrypt(algo, key, pt, iv) {\n  const algoName = enums.read(enums.symmetric, algo);\n  const cipherObj = new nodeCrypto.createCipheriv(nodeAlgos[algoName], key, iv);\n  return stream.transform(pt, value => new Uint8Array(cipherObj.update(value)));\n}\n\nfunction nodeDecrypt(algo, key, ct, iv) {\n  const algoName = enums.read(enums.symmetric, algo);\n  const decipherObj = new nodeCrypto.createDecipheriv(nodeAlgos[algoName], key, iv);\n  return stream.transform(ct, value => new Uint8Array(decipherObj.update(value)));\n}\n","import { AES } from './aes';\nimport { IllegalArgumentError } from '../other/errors';\nimport { joinBytes } from '../other/utils';\nexport class AES_CTR {\n    static encrypt(data, key, nonce) {\n        return new AES_CTR(key, nonce).encrypt(data);\n    }\n    static decrypt(data, key, nonce) {\n        return new AES_CTR(key, nonce).encrypt(data);\n    }\n    constructor(key, nonce, aes) {\n        this.aes = aes ? aes : new AES(key, undefined, false, 'CTR');\n        delete this.aes.padding;\n        this.AES_CTR_set_options(nonce);\n    }\n    encrypt(data) {\n        const r1 = this.aes.AES_Encrypt_process(data);\n        const r2 = this.aes.AES_Encrypt_finish();\n        return joinBytes(r1, r2);\n    }\n    decrypt(data) {\n        const r1 = this.aes.AES_Encrypt_process(data);\n        const r2 = this.aes.AES_Encrypt_finish();\n        return joinBytes(r1, r2);\n    }\n    AES_CTR_set_options(nonce, counter, size) {\n        let { asm } = this.aes.acquire_asm();\n        if (size !== undefined) {\n            if (size < 8 || size > 48)\n                throw new IllegalArgumentError('illegal counter size');\n            let mask = Math.pow(2, size) - 1;\n            asm.set_mask(0, 0, (mask / 0x100000000) | 0, mask | 0);\n        }\n        else {\n            size = 48;\n            asm.set_mask(0, 0, 0xffff, 0xffffffff);\n        }\n        if (nonce !== undefined) {\n            let len = nonce.length;\n            if (!len || len > 16)\n                throw new IllegalArgumentError('illegal nonce size');\n            let view = new DataView(new ArrayBuffer(16));\n            new Uint8Array(view.buffer).set(nonce);\n            asm.set_nonce(view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12));\n        }\n        else {\n            throw new Error('nonce is required');\n        }\n        if (counter !== undefined) {\n            if (counter < 0 || counter >= Math.pow(2, size))\n                throw new IllegalArgumentError('illegal counter value');\n            asm.set_counter(0, 0, (counter / 0x100000000) | 0, counter | 0);\n        }\n    }\n}\n","import { AES } from './aes';\nimport { joinBytes } from '../other/utils';\nexport class AES_CBC {\n    static encrypt(data, key, padding = true, iv) {\n        return new AES_CBC(key, iv, padding).encrypt(data);\n    }\n    static decrypt(data, key, padding = true, iv) {\n        return new AES_CBC(key, iv, padding).decrypt(data);\n    }\n    constructor(key, iv, padding = true, aes) {\n        this.aes = aes ? aes : new AES(key, iv, padding, 'CBC');\n    }\n    encrypt(data) {\n        const r1 = this.aes.AES_Encrypt_process(data);\n        const r2 = this.aes.AES_Encrypt_finish();\n        return joinBytes(r1, r2);\n    }\n    decrypt(data) {\n        const r1 = this.aes.AES_Decrypt_process(data);\n        const r2 = this.aes.AES_Decrypt_finish();\n        return joinBytes(r1, r2);\n    }\n}\n","/**\n * @fileoverview This module implements AES-CMAC on top of\n * native AES-CBC using either the WebCrypto API or Node.js' crypto API.\n * @module crypto/cmac\n * @private\n */\n\nimport { AES_CBC } from '@openpgp/asmcrypto.js/dist_es8/aes/cbc';\nimport util from '../util';\n\nconst webCrypto = util.getWebCrypto();\nconst nodeCrypto = util.getNodeCrypto();\n\n\n/**\n * This implementation of CMAC is based on the description of OMAC in\n * http://web.cs.ucdavis.edu/~rogaway/papers/eax.pdf. As per that\n * document:\n *\n * We have made a small modification to the OMAC algorithm as it was\n * originally presented, changing one of its two constants.\n * Specifically, the constant 4 at line 85 was the constant 1/2 (the\n * multiplicative inverse of 2) in the original definition of OMAC [14].\n * The OMAC authors indicate that they will promulgate this modification\n * [15], which slightly simplifies implementations.\n */\n\nconst blockLength = 16;\n\n\n/**\n * xor `padding` into the end of `data`. This function implements \"the\n * operation xor→ [which] xors the shorter string into the end of longer\n * one\". Since data is always as least as long as padding, we can\n * simplify the implementation.\n * @param {Uint8Array} data\n * @param {Uint8Array} padding\n */\nfunction rightXORMut(data, padding) {\n  const offset = data.length - blockLength;\n  for (let i = 0; i < blockLength; i++) {\n    data[i + offset] ^= padding[i];\n  }\n  return data;\n}\n\nfunction pad(data, padding, padding2) {\n  // if |M| in {n, 2n, 3n, ...}\n  if (data.length && data.length % blockLength === 0) {\n    // then return M xor→ B,\n    return rightXORMut(data, padding);\n  }\n  // else return (M || 10^(n−1−(|M| mod n))) xor→ P\n  const padded = new Uint8Array(data.length + (blockLength - (data.length % blockLength)));\n  padded.set(data);\n  padded[data.length] = 0b10000000;\n  return rightXORMut(padded, padding2);\n}\n\nconst zeroBlock = new Uint8Array(blockLength);\n\nexport default async function CMAC(key) {\n  const cbc = await CBC(key);\n\n  // L ← E_K(0^n); B ← 2L; P ← 4L\n  const padding = util.double(await cbc(zeroBlock));\n  const padding2 = util.double(padding);\n\n  return async function(data) {\n    // return CBC_K(pad(M; B, P))\n    return (await cbc(pad(data, padding, padding2))).subarray(-blockLength);\n  };\n}\n\nasync function CBC(key) {\n  if (util.getWebCrypto() && key.length !== 24) { // WebCrypto (no 192 bit support) see: https://www.chromium.org/blink/webcrypto#TOC-AES-support\n    key = await webCrypto.importKey('raw', key, { name: 'AES-CBC', length: key.length * 8 }, false, ['encrypt']);\n    return async function(pt) {\n      const ct = await webCrypto.encrypt({ name: 'AES-CBC', iv: zeroBlock, length: blockLength * 8 }, key, pt);\n      return new Uint8Array(ct).subarray(0, ct.byteLength - blockLength);\n    };\n  }\n  if (util.getNodeCrypto()) { // Node crypto library\n    return async function(pt) {\n      const en = new nodeCrypto.createCipheriv('aes-' + (key.length * 8) + '-cbc', key, zeroBlock);\n      const ct = en.update(pt);\n      return new Uint8Array(ct);\n    };\n  }\n  // asm.js fallback\n  return async function(pt) {\n    return AES_CBC.encrypt(pt, key, false, zeroBlock);\n  };\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2018 ProtonTech AG\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview This module implements AES-EAX en/decryption on top of\n * native AES-CTR using either the WebCrypto API or Node.js' crypto API.\n * @module crypto/mode/eax\n * @private\n */\n\nimport { AES_CTR } from '@openpgp/asmcrypto.js/dist_es8/aes/ctr';\nimport CMAC from '../cmac';\nimport util from '../../util';\nimport enums from '../../enums';\n\nconst webCrypto = util.getWebCrypto();\nconst nodeCrypto = util.getNodeCrypto();\nconst Buffer = util.getNodeBuffer();\n\n\nconst blockLength = 16;\nconst ivLength = blockLength;\nconst tagLength = blockLength;\n\nconst zero = new Uint8Array(blockLength);\nconst one = new Uint8Array(blockLength); one[blockLength - 1] = 1;\nconst two = new Uint8Array(blockLength); two[blockLength - 1] = 2;\n\nasync function OMAC(key) {\n  const cmac = await CMAC(key);\n  return function(t, message) {\n    return cmac(util.concatUint8Array([t, message]));\n  };\n}\n\nasync function CTR(key) {\n  if (\n    util.getWebCrypto() &&\n    key.length !== 24 // WebCrypto (no 192 bit support) see: https://www.chromium.org/blink/webcrypto#TOC-AES-support\n  ) {\n    key = await webCrypto.importKey('raw', key, { name: 'AES-CTR', length: key.length * 8 }, false, ['encrypt']);\n    return async function(pt, iv) {\n      const ct = await webCrypto.encrypt({ name: 'AES-CTR', counter: iv, length: blockLength * 8 }, key, pt);\n      return new Uint8Array(ct);\n    };\n  }\n  if (util.getNodeCrypto()) { // Node crypto library\n    return async function(pt, iv) {\n      const en = new nodeCrypto.createCipheriv('aes-' + (key.length * 8) + '-ctr', key, iv);\n      const ct = Buffer.concat([en.update(pt), en.final()]);\n      return new Uint8Array(ct);\n    };\n  }\n  // asm.js fallback\n  return async function(pt, iv) {\n    return AES_CTR.encrypt(pt, key, iv);\n  };\n}\n\n\n/**\n * Class to en/decrypt using EAX mode.\n * @param {enums.symmetric} cipher - The symmetric cipher algorithm to use\n * @param {Uint8Array} key - The encryption key\n */\nasync function EAX(cipher, key) {\n  if (cipher !== enums.symmetric.aes128 &&\n    cipher !== enums.symmetric.aes192 &&\n    cipher !== enums.symmetric.aes256) {\n    throw new Error('EAX mode supports only AES cipher');\n  }\n\n  const [\n    omac,\n    ctr\n  ] = await Promise.all([\n    OMAC(key),\n    CTR(key)\n  ]);\n\n  return {\n    /**\n     * Encrypt plaintext input.\n     * @param {Uint8Array} plaintext - The cleartext input to be encrypted\n     * @param {Uint8Array} nonce - The nonce (16 bytes)\n     * @param {Uint8Array} adata - Associated data to sign\n     * @returns {Promise<Uint8Array>} The ciphertext output.\n     */\n    encrypt: async function(plaintext, nonce, adata) {\n      const [\n        omacNonce,\n        omacAdata\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata)\n      ]);\n      const ciphered = await ctr(plaintext, omacNonce);\n      const omacCiphered = await omac(two, ciphered);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      return util.concatUint8Array([ciphered, tag]);\n    },\n\n    /**\n     * Decrypt ciphertext input.\n     * @param {Uint8Array} ciphertext - The ciphertext input to be decrypted\n     * @param {Uint8Array} nonce - The nonce (16 bytes)\n     * @param {Uint8Array} adata - Associated data to verify\n     * @returns {Promise<Uint8Array>} The plaintext output.\n     */\n    decrypt: async function(ciphertext, nonce, adata) {\n      if (ciphertext.length < tagLength) throw new Error('Invalid EAX ciphertext');\n      const ciphered = ciphertext.subarray(0, -tagLength);\n      const ctTag = ciphertext.subarray(-tagLength);\n      const [\n        omacNonce,\n        omacAdata,\n        omacCiphered\n      ] = await Promise.all([\n        omac(zero, nonce),\n        omac(one, adata),\n        omac(two, ciphered)\n      ]);\n      const tag = omacCiphered; // Assumes that omac(*).length === tagLength.\n      for (let i = 0; i < tagLength; i++) {\n        tag[i] ^= omacAdata[i] ^ omacNonce[i];\n      }\n      if (!util.equalsUint8Array(ctTag, tag)) throw new Error('Authentication tag mismatch');\n      const plaintext = await ctr(ciphered, omacNonce);\n      return plaintext;\n    }\n  };\n}\n\n\n/**\n * Get EAX nonce as defined by {@link https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-04#section-5.16.1|RFC4880bis-04, section 5.16.1}.\n * @param {Uint8Array} iv - The initialization vector (16 bytes)\n * @param {Uint8Array} chunkIndex - The chunk index (8 bytes)\n */\nEAX.getNonce = function(iv, chunkIndex) {\n  const nonce = iv.slice();\n  for (let i = 0; i < chunkIndex.length; i++) {\n    nonce[8 + i] ^= chunkIndex[i];\n  }\n  return nonce;\n};\n\nEAX.blockLength = blockLength;\nEAX.ivLength = ivLength;\nEAX.tagLength = tagLength;\n\nexport default EAX;\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2018 ProtonTech AG\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview This module implements AES-OCB en/decryption.\n * @module crypto/mode/ocb\n * @private\n */\n\nimport * as ciphers from '../cipher';\nimport util from '../../util';\nimport enums from '../../enums';\n\nconst blockLength = 16;\nconst ivLength = 15;\n\n// https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-04#section-5.16.2:\n// While OCB [RFC7253] allows the authentication tag length to be of any\n// number up to 128 bits long, this document requires a fixed\n// authentication tag length of 128 bits (16 octets) for simplicity.\nconst tagLength = 16;\n\n\nfunction ntz(n) {\n  let ntz = 0;\n  for (let i = 1; (n & i) === 0; i <<= 1) {\n    ntz++;\n  }\n  return ntz;\n}\n\nfunction xorMut(S, T) {\n  for (let i = 0; i < S.length; i++) {\n    S[i] ^= T[i];\n  }\n  return S;\n}\n\nfunction xor(S, T) {\n  return xorMut(S.slice(), T);\n}\n\nconst zeroBlock = new Uint8Array(blockLength);\nconst one = new Uint8Array([1]);\n\n/**\n * Class to en/decrypt using OCB mode.\n * @param {enums.symmetric} cipher - The symmetric cipher algorithm to use\n * @param {Uint8Array} key - The encryption key\n */\nasync function OCB(cipher, key) {\n\n  let maxNtz = 0;\n  let encipher;\n  let decipher;\n  let mask;\n\n  constructKeyVariables(cipher, key);\n\n  function constructKeyVariables(cipher, key) {\n    const cipherName = enums.read(enums.symmetric, cipher);\n    const aes = new ciphers[cipherName](key);\n    encipher = aes.encrypt.bind(aes);\n    decipher = aes.decrypt.bind(aes);\n\n    const mask_x = encipher(zeroBlock);\n    const mask_$ = util.double(mask_x);\n    mask = [];\n    mask[0] = util.double(mask_$);\n\n\n    mask.x = mask_x;\n    mask.$ = mask_$;\n  }\n\n  function extendKeyVariables(text, adata) {\n    const newMaxNtz = util.nbits(Math.max(text.length, adata.length) / blockLength | 0) - 1;\n    for (let i = maxNtz + 1; i <= newMaxNtz; i++) {\n      mask[i] = util.double(mask[i - 1]);\n    }\n    maxNtz = newMaxNtz;\n  }\n\n  function hash(adata) {\n    if (!adata.length) {\n      // Fast path\n      return zeroBlock;\n    }\n\n    //\n    // Consider A as a sequence of 128-bit blocks\n    //\n    const m = adata.length / blockLength | 0;\n\n    const offset = new Uint8Array(blockLength);\n    const sum = new Uint8Array(blockLength);\n    for (let i = 0; i < m; i++) {\n      xorMut(offset, mask[ntz(i + 1)]);\n      xorMut(sum, encipher(xor(offset, adata)));\n      adata = adata.subarray(blockLength);\n    }\n\n    //\n    // Process any final partial block; compute final hash value\n    //\n    if (adata.length) {\n      xorMut(offset, mask.x);\n\n      const cipherInput = new Uint8Array(blockLength);\n      cipherInput.set(adata, 0);\n      cipherInput[adata.length] = 0b10000000;\n      xorMut(cipherInput, offset);\n\n      xorMut(sum, encipher(cipherInput));\n    }\n\n    return sum;\n  }\n\n  /**\n   * Encrypt/decrypt data.\n   * @param {encipher|decipher} fn - Encryption/decryption block cipher function\n   * @param {Uint8Array} text - The cleartext or ciphertext (without tag) input\n   * @param {Uint8Array} nonce - The nonce (15 bytes)\n   * @param {Uint8Array} adata - Associated data to sign\n   * @returns {Promise<Uint8Array>} The ciphertext or plaintext output, with tag appended in both cases.\n   */\n  function crypt(fn, text, nonce, adata) {\n    //\n    // Consider P as a sequence of 128-bit blocks\n    //\n    const m = text.length / blockLength | 0;\n\n    //\n    // Key-dependent variables\n    //\n    extendKeyVariables(text, adata);\n\n    //\n    // Nonce-dependent and per-encryption variables\n    //\n    //    Nonce = num2str(TAGLEN mod 128,7) || zeros(120-bitlen(N)) || 1 || N\n    // Note: We assume here that tagLength mod 16 == 0.\n    const paddedNonce = util.concatUint8Array([zeroBlock.subarray(0, ivLength - nonce.length), one, nonce]);\n    //    bottom = str2num(Nonce[123..128])\n    const bottom = paddedNonce[blockLength - 1] & 0b111111;\n    //    Ktop = ENCIPHER(K, Nonce[1..122] || zeros(6))\n    paddedNonce[blockLength - 1] &= 0b11000000;\n    const kTop = encipher(paddedNonce);\n    //    Stretch = Ktop || (Ktop[1..64] xor Ktop[9..72])\n    const stretched = util.concatUint8Array([kTop, xor(kTop.subarray(0, 8), kTop.subarray(1, 9))]);\n    //    Offset_0 = Stretch[1+bottom..128+bottom]\n    const offset = util.shiftRight(stretched.subarray(0 + (bottom >> 3), 17 + (bottom >> 3)), 8 - (bottom & 7)).subarray(1);\n    //    Checksum_0 = zeros(128)\n    const checksum = new Uint8Array(blockLength);\n\n    const ct = new Uint8Array(text.length + tagLength);\n\n    //\n    // Process any whole blocks\n    //\n    let i;\n    let pos = 0;\n    for (i = 0; i < m; i++) {\n      // Offset_i = Offset_{i-1} xor L_{ntz(i)}\n      xorMut(offset, mask[ntz(i + 1)]);\n      // C_i = Offset_i xor ENCIPHER(K, P_i xor Offset_i)\n      // P_i = Offset_i xor DECIPHER(K, C_i xor Offset_i)\n      ct.set(xorMut(fn(xor(offset, text)), offset), pos);\n      // Checksum_i = Checksum_{i-1} xor P_i\n      xorMut(checksum, fn === encipher ? text : ct.subarray(pos));\n\n      text = text.subarray(blockLength);\n      pos += blockLength;\n    }\n\n    //\n    // Process any final partial block and compute raw tag\n    //\n    if (text.length) {\n      // Offset_* = Offset_m xor L_*\n      xorMut(offset, mask.x);\n      // Pad = ENCIPHER(K, Offset_*)\n      const padding = encipher(offset);\n      // C_* = P_* xor Pad[1..bitlen(P_*)]\n      ct.set(xor(text, padding), pos);\n\n      // Checksum_* = Checksum_m xor (P_* || 1 || new Uint8Array(127-bitlen(P_*)))\n      const xorInput = new Uint8Array(blockLength);\n      xorInput.set(fn === encipher ? text : ct.subarray(pos, -tagLength), 0);\n      xorInput[text.length] = 0b10000000;\n      xorMut(checksum, xorInput);\n      pos += text.length;\n    }\n    // Tag = ENCIPHER(K, Checksum_* xor Offset_* xor L_$) xor HASH(K,A)\n    const tag = xorMut(encipher(xorMut(xorMut(checksum, offset), mask.$)), hash(adata));\n\n    //\n    // Assemble ciphertext\n    //\n    // C = C_1 || C_2 || ... || C_m || C_* || Tag[1..TAGLEN]\n    ct.set(tag, pos);\n    return ct;\n  }\n\n\n  return {\n    /**\n     * Encrypt plaintext input.\n     * @param {Uint8Array} plaintext - The cleartext input to be encrypted\n     * @param {Uint8Array} nonce - The nonce (15 bytes)\n     * @param {Uint8Array} adata - Associated data to sign\n     * @returns {Promise<Uint8Array>} The ciphertext output.\n     */\n    encrypt: async function(plaintext, nonce, adata) {\n      return crypt(encipher, plaintext, nonce, adata);\n    },\n\n    /**\n     * Decrypt ciphertext input.\n     * @param {Uint8Array} ciphertext - The ciphertext input to be decrypted\n     * @param {Uint8Array} nonce - The nonce (15 bytes)\n     * @param {Uint8Array} adata - Associated data to sign\n     * @returns {Promise<Uint8Array>} The ciphertext output.\n     */\n    decrypt: async function(ciphertext, nonce, adata) {\n      if (ciphertext.length < tagLength) throw new Error('Invalid OCB ciphertext');\n\n      const tag = ciphertext.subarray(-tagLength);\n      ciphertext = ciphertext.subarray(0, -tagLength);\n\n      const crypted = crypt(decipher, ciphertext, nonce, adata);\n      // if (Tag[1..TAGLEN] == T)\n      if (util.equalsUint8Array(tag, crypted.subarray(-tagLength))) {\n        return crypted.subarray(0, -tagLength);\n      }\n      throw new Error('Authentication tag mismatch');\n    }\n  };\n}\n\n\n/**\n * Get OCB nonce as defined by {@link https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-04#section-5.16.2|RFC4880bis-04, section 5.16.2}.\n * @param {Uint8Array} iv - The initialization vector (15 bytes)\n * @param {Uint8Array} chunkIndex - The chunk index (8 bytes)\n */\nOCB.getNonce = function(iv, chunkIndex) {\n  const nonce = iv.slice();\n  for (let i = 0; i < chunkIndex.length; i++) {\n    nonce[7 + i] ^= chunkIndex[i];\n  }\n  return nonce;\n};\n\nOCB.blockLength = blockLength;\nOCB.ivLength = ivLength;\nOCB.tagLength = tagLength;\n\nexport default OCB;\n","import { IllegalArgumentError, IllegalStateError, SecurityError } from '../other/errors';\nimport { _heap_write } from '../other/utils';\nimport { AES } from './aes';\nimport { AES_asm } from './aes.asm';\nconst _AES_GCM_data_maxLength = 68719476704; // 2^36 - 2^5\nexport class AES_GCM {\n    constructor(key, nonce, adata, tagSize = 16, aes) {\n        this.tagSize = tagSize;\n        this.gamma0 = 0;\n        this.counter = 1;\n        this.aes = aes ? aes : new AES(key, undefined, false, 'CTR');\n        let { asm, heap } = this.aes.acquire_asm();\n        // Init GCM\n        asm.gcm_init();\n        // Tag size\n        if (this.tagSize < 4 || this.tagSize > 16)\n            throw new IllegalArgumentError('illegal tagSize value');\n        // Nonce\n        const noncelen = nonce.length || 0;\n        const noncebuf = new Uint8Array(16);\n        if (noncelen !== 12) {\n            this._gcm_mac_process(nonce);\n            heap[0] = 0;\n            heap[1] = 0;\n            heap[2] = 0;\n            heap[3] = 0;\n            heap[4] = 0;\n            heap[5] = 0;\n            heap[6] = 0;\n            heap[7] = 0;\n            heap[8] = 0;\n            heap[9] = 0;\n            heap[10] = 0;\n            heap[11] = noncelen >>> 29;\n            heap[12] = (noncelen >>> 21) & 255;\n            heap[13] = (noncelen >>> 13) & 255;\n            heap[14] = (noncelen >>> 5) & 255;\n            heap[15] = (noncelen << 3) & 255;\n            asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16);\n            asm.get_iv(AES_asm.HEAP_DATA);\n            asm.set_iv(0, 0, 0, 0);\n            noncebuf.set(heap.subarray(0, 16));\n        }\n        else {\n            noncebuf.set(nonce);\n            noncebuf[15] = 1;\n        }\n        const nonceview = new DataView(noncebuf.buffer);\n        this.gamma0 = nonceview.getUint32(12);\n        asm.set_nonce(nonceview.getUint32(0), nonceview.getUint32(4), nonceview.getUint32(8), 0);\n        asm.set_mask(0, 0, 0, 0xffffffff);\n        // Associated data\n        if (adata !== undefined) {\n            if (adata.length > _AES_GCM_data_maxLength)\n                throw new IllegalArgumentError('illegal adata length');\n            if (adata.length) {\n                this.adata = adata;\n                this._gcm_mac_process(adata);\n            }\n            else {\n                this.adata = undefined;\n            }\n        }\n        else {\n            this.adata = undefined;\n        }\n        // Counter\n        if (this.counter < 1 || this.counter > 0xffffffff)\n            throw new RangeError('counter must be a positive 32-bit integer');\n        asm.set_counter(0, 0, 0, (this.gamma0 + this.counter) | 0);\n    }\n    static encrypt(cleartext, key, nonce, adata, tagsize) {\n        return new AES_GCM(key, nonce, adata, tagsize).encrypt(cleartext);\n    }\n    static decrypt(ciphertext, key, nonce, adata, tagsize) {\n        return new AES_GCM(key, nonce, adata, tagsize).decrypt(ciphertext);\n    }\n    encrypt(data) {\n        return this.AES_GCM_encrypt(data);\n    }\n    decrypt(data) {\n        return this.AES_GCM_decrypt(data);\n    }\n    AES_GCM_Encrypt_process(data) {\n        let dpos = 0;\n        let dlen = data.length || 0;\n        let { asm, heap } = this.aes.acquire_asm();\n        let counter = this.counter;\n        let pos = this.aes.pos;\n        let len = this.aes.len;\n        let rpos = 0;\n        let rlen = (len + dlen) & -16;\n        let wlen = 0;\n        if (((counter - 1) << 4) + len + dlen > _AES_GCM_data_maxLength)\n            throw new RangeError('counter overflow');\n        const result = new Uint8Array(rlen);\n        while (dlen > 0) {\n            wlen = _heap_write(heap, pos + len, data, dpos, dlen);\n            len += wlen;\n            dpos += wlen;\n            dlen -= wlen;\n            wlen = asm.cipher(AES_asm.ENC.CTR, AES_asm.HEAP_DATA + pos, len);\n            wlen = asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, wlen);\n            if (wlen)\n                result.set(heap.subarray(pos, pos + wlen), rpos);\n            counter += wlen >>> 4;\n            rpos += wlen;\n            if (wlen < len) {\n                pos += wlen;\n                len -= wlen;\n            }\n            else {\n                pos = 0;\n                len = 0;\n            }\n        }\n        this.counter = counter;\n        this.aes.pos = pos;\n        this.aes.len = len;\n        return result;\n    }\n    AES_GCM_Encrypt_finish() {\n        let { asm, heap } = this.aes.acquire_asm();\n        let counter = this.counter;\n        let tagSize = this.tagSize;\n        let adata = this.adata;\n        let pos = this.aes.pos;\n        let len = this.aes.len;\n        const result = new Uint8Array(len + tagSize);\n        asm.cipher(AES_asm.ENC.CTR, AES_asm.HEAP_DATA + pos, (len + 15) & -16);\n        if (len)\n            result.set(heap.subarray(pos, pos + len));\n        let i = len;\n        for (; i & 15; i++)\n            heap[pos + i] = 0;\n        asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, i);\n        const alen = adata !== undefined ? adata.length : 0;\n        const clen = ((counter - 1) << 4) + len;\n        heap[0] = 0;\n        heap[1] = 0;\n        heap[2] = 0;\n        heap[3] = alen >>> 29;\n        heap[4] = alen >>> 21;\n        heap[5] = (alen >>> 13) & 255;\n        heap[6] = (alen >>> 5) & 255;\n        heap[7] = (alen << 3) & 255;\n        heap[8] = heap[9] = heap[10] = 0;\n        heap[11] = clen >>> 29;\n        heap[12] = (clen >>> 21) & 255;\n        heap[13] = (clen >>> 13) & 255;\n        heap[14] = (clen >>> 5) & 255;\n        heap[15] = (clen << 3) & 255;\n        asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16);\n        asm.get_iv(AES_asm.HEAP_DATA);\n        asm.set_counter(0, 0, 0, this.gamma0);\n        asm.cipher(AES_asm.ENC.CTR, AES_asm.HEAP_DATA, 16);\n        result.set(heap.subarray(0, tagSize), len);\n        this.counter = 1;\n        this.aes.pos = 0;\n        this.aes.len = 0;\n        return result;\n    }\n    AES_GCM_Decrypt_process(data) {\n        let dpos = 0;\n        let dlen = data.length || 0;\n        let { asm, heap } = this.aes.acquire_asm();\n        let counter = this.counter;\n        let tagSize = this.tagSize;\n        let pos = this.aes.pos;\n        let len = this.aes.len;\n        let rpos = 0;\n        let rlen = len + dlen > tagSize ? (len + dlen - tagSize) & -16 : 0;\n        let tlen = len + dlen - rlen;\n        let wlen = 0;\n        if (((counter - 1) << 4) + len + dlen > _AES_GCM_data_maxLength)\n            throw new RangeError('counter overflow');\n        const result = new Uint8Array(rlen);\n        while (dlen > tlen) {\n            wlen = _heap_write(heap, pos + len, data, dpos, dlen - tlen);\n            len += wlen;\n            dpos += wlen;\n            dlen -= wlen;\n            wlen = asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, wlen);\n            wlen = asm.cipher(AES_asm.DEC.CTR, AES_asm.HEAP_DATA + pos, wlen);\n            if (wlen)\n                result.set(heap.subarray(pos, pos + wlen), rpos);\n            counter += wlen >>> 4;\n            rpos += wlen;\n            pos = 0;\n            len = 0;\n        }\n        if (dlen > 0) {\n            len += _heap_write(heap, 0, data, dpos, dlen);\n        }\n        this.counter = counter;\n        this.aes.pos = pos;\n        this.aes.len = len;\n        return result;\n    }\n    AES_GCM_Decrypt_finish() {\n        let { asm, heap } = this.aes.acquire_asm();\n        let tagSize = this.tagSize;\n        let adata = this.adata;\n        let counter = this.counter;\n        let pos = this.aes.pos;\n        let len = this.aes.len;\n        let rlen = len - tagSize;\n        if (len < tagSize)\n            throw new IllegalStateError('authentication tag not found');\n        const result = new Uint8Array(rlen);\n        const atag = new Uint8Array(heap.subarray(pos + rlen, pos + len));\n        let i = rlen;\n        for (; i & 15; i++)\n            heap[pos + i] = 0;\n        asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, i);\n        asm.cipher(AES_asm.DEC.CTR, AES_asm.HEAP_DATA + pos, i);\n        if (rlen)\n            result.set(heap.subarray(pos, pos + rlen));\n        const alen = adata !== undefined ? adata.length : 0;\n        const clen = ((counter - 1) << 4) + len - tagSize;\n        heap[0] = 0;\n        heap[1] = 0;\n        heap[2] = 0;\n        heap[3] = alen >>> 29;\n        heap[4] = alen >>> 21;\n        heap[5] = (alen >>> 13) & 255;\n        heap[6] = (alen >>> 5) & 255;\n        heap[7] = (alen << 3) & 255;\n        heap[8] = heap[9] = heap[10] = 0;\n        heap[11] = clen >>> 29;\n        heap[12] = (clen >>> 21) & 255;\n        heap[13] = (clen >>> 13) & 255;\n        heap[14] = (clen >>> 5) & 255;\n        heap[15] = (clen << 3) & 255;\n        asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16);\n        asm.get_iv(AES_asm.HEAP_DATA);\n        asm.set_counter(0, 0, 0, this.gamma0);\n        asm.cipher(AES_asm.ENC.CTR, AES_asm.HEAP_DATA, 16);\n        let acheck = 0;\n        for (let i = 0; i < tagSize; ++i)\n            acheck |= atag[i] ^ heap[i];\n        if (acheck)\n            throw new SecurityError('data integrity check failed');\n        this.counter = 1;\n        this.aes.pos = 0;\n        this.aes.len = 0;\n        return result;\n    }\n    AES_GCM_decrypt(data) {\n        const result1 = this.AES_GCM_Decrypt_process(data);\n        const result2 = this.AES_GCM_Decrypt_finish();\n        const result = new Uint8Array(result1.length + result2.length);\n        if (result1.length)\n            result.set(result1);\n        if (result2.length)\n            result.set(result2, result1.length);\n        return result;\n    }\n    AES_GCM_encrypt(data) {\n        const result1 = this.AES_GCM_Encrypt_process(data);\n        const result2 = this.AES_GCM_Encrypt_finish();\n        const result = new Uint8Array(result1.length + result2.length);\n        if (result1.length)\n            result.set(result1);\n        if (result2.length)\n            result.set(result2, result1.length);\n        return result;\n    }\n    _gcm_mac_process(data) {\n        let { asm, heap } = this.aes.acquire_asm();\n        let dpos = 0;\n        let dlen = data.length || 0;\n        let wlen = 0;\n        while (dlen > 0) {\n            wlen = _heap_write(heap, 0, data, dpos, dlen);\n            dpos += wlen;\n            dlen -= wlen;\n            while (wlen & 15)\n                heap[wlen++] = 0;\n            asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA, wlen);\n        }\n    }\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2016 Tankred Hase\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview This module wraps native AES-GCM en/decryption for both\n * the WebCrypto api as well as node.js' crypto api.\n * @module crypto/mode/gcm\n * @private\n */\n\nimport { AES_GCM } from '@openpgp/asmcrypto.js/dist_es8/aes/gcm';\nimport util from '../../util';\nimport enums from '../../enums';\n\nconst webCrypto = util.getWebCrypto();\nconst nodeCrypto = util.getNodeCrypto();\nconst Buffer = util.getNodeBuffer();\n\nconst blockLength = 16;\nconst ivLength = 12; // size of the IV in bytes\nconst tagLength = 16; // size of the tag in bytes\nconst ALGO = 'AES-GCM';\n\n/**\n * Class to en/decrypt using GCM mode.\n * @param {enums.symmetric} cipher - The symmetric cipher algorithm to use\n * @param {Uint8Array} key - The encryption key\n */\nasync function GCM(cipher, key) {\n  if (cipher !== enums.symmetric.aes128 &&\n    cipher !== enums.symmetric.aes192 &&\n    cipher !== enums.symmetric.aes256) {\n    throw new Error('GCM mode supports only AES cipher');\n  }\n\n  if (util.getNodeCrypto()) { // Node crypto library\n    return {\n      encrypt: async function(pt, iv, adata = new Uint8Array()) {\n        const en = new nodeCrypto.createCipheriv('aes-' + (key.length * 8) + '-gcm', key, iv);\n        en.setAAD(adata);\n        const ct = Buffer.concat([en.update(pt), en.final(), en.getAuthTag()]); // append auth tag to ciphertext\n        return new Uint8Array(ct);\n      },\n\n      decrypt: async function(ct, iv, adata = new Uint8Array()) {\n        const de = new nodeCrypto.createDecipheriv('aes-' + (key.length * 8) + '-gcm', key, iv);\n        de.setAAD(adata);\n        de.setAuthTag(ct.slice(ct.length - tagLength, ct.length)); // read auth tag at end of ciphertext\n        const pt = Buffer.concat([de.update(ct.slice(0, ct.length - tagLength)), de.final()]);\n        return new Uint8Array(pt);\n      }\n    };\n  }\n\n  if (util.getWebCrypto() && key.length !== 24) { // WebCrypto (no 192 bit support) see: https://www.chromium.org/blink/webcrypto#TOC-AES-support\n    const _key = await webCrypto.importKey('raw', key, { name: ALGO }, false, ['encrypt', 'decrypt']);\n\n    return {\n      encrypt: async function(pt, iv, adata = new Uint8Array()) {\n        if (!pt.length) { // iOS does not support GCM-en/decrypting empty messages\n          return AES_GCM.encrypt(pt, key, iv, adata);\n        }\n        const ct = await webCrypto.encrypt({ name: ALGO, iv, additionalData: adata, tagLength: tagLength * 8 }, _key, pt);\n        return new Uint8Array(ct);\n      },\n\n      decrypt: async function(ct, iv, adata = new Uint8Array()) {\n        if (ct.length === tagLength) { // iOS does not support GCM-en/decrypting empty messages\n          return AES_GCM.decrypt(ct, key, iv, adata);\n        }\n        const pt = await webCrypto.decrypt({ name: ALGO, iv, additionalData: adata, tagLength: tagLength * 8 }, _key, ct);\n        return new Uint8Array(pt);\n      }\n    };\n  }\n\n  return {\n    encrypt: async function(pt, iv, adata) {\n      return AES_GCM.encrypt(pt, key, iv, adata);\n    },\n\n    decrypt: async function(ct, iv, adata) {\n      return AES_GCM.decrypt(ct, key, iv, adata);\n    }\n  };\n}\n\n\n/**\n * Get GCM nonce. Note: this operation is not defined by the standard.\n * A future version of the standard may define GCM mode differently,\n * hopefully under a different ID (we use Private/Experimental algorithm\n * ID 100) so that we can maintain backwards compatibility.\n * @param {Uint8Array} iv - The initialization vector (12 bytes)\n * @param {Uint8Array} chunkIndex - The chunk index (8 bytes)\n */\nGCM.getNonce = function(iv, chunkIndex) {\n  const nonce = iv.slice();\n  for (let i = 0; i < chunkIndex.length; i++) {\n    nonce[4 + i] ^= chunkIndex[i];\n  }\n  return nonce;\n};\n\nGCM.blockLength = blockLength;\nGCM.ivLength = ivLength;\nGCM.tagLength = tagLength;\n\nexport default GCM;\n","/**\n * @fileoverview Cipher modes\n * @module crypto/mode\n * @private\n */\n\nimport * as cfb from './cfb';\nimport eax from './eax';\nimport ocb from './ocb';\nimport gcm from './gcm';\n\nexport default {\n  /** @see module:crypto/mode/cfb */\n  cfb: cfb,\n  /** @see module:crypto/mode/gcm */\n  gcm: gcm,\n  experimentalGCM: gcm,\n  /** @see module:crypto/mode/eax */\n  eax: eax,\n  /** @see module:crypto/mode/ocb */\n  ocb: ocb\n};\n","/*jshint bitwise: false*/\n\n(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d;\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  d = nacl.hash(sk.subarray(0, 32));\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d, h, r;\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  d = nacl.hash(sk.subarray(0, 32));\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  r = nacl.hash(sm.subarray(32, smlen));\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  h = nacl.hash(sm.subarray(0, smlen));\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h;\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  h = nacl.hash(m.subarray(0, n));\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32;\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.box = {};\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n// The GPG4Browsers crypto interface\n\n/**\n * @fileoverview Provides tools for retrieving secure randomness from browsers or Node.js\n * @module crypto/random\n * @private\n */\nimport util from '../util';\n\nconst nodeCrypto = util.getNodeCrypto();\n\n/**\n * Retrieve secure random byte array of the specified length\n * @param {Integer} length - Length in bytes to generate\n * @returns {Uint8Array} Random byte array.\n */\nexport function getRandomBytes(length) {\n  const buf = new Uint8Array(length);\n  if (nodeCrypto) {\n    const bytes = nodeCrypto.randomBytes(buf.length);\n    buf.set(bytes);\n  } else if (typeof crypto !== 'undefined' && crypto.getRandomValues) {\n    crypto.getRandomValues(buf);\n  } else {\n    throw new Error('No secure random number generator available.');\n  }\n  return buf;\n}\n\n/**\n * Create a secure random BigInteger that is greater than or equal to min and less than max.\n * @param {module:BigInteger} min - Lower bound, included\n * @param {module:BigInteger} max - Upper bound, excluded\n * @returns {Promise<module:BigInteger>} Random BigInteger.\n * @async\n */\nexport async function getRandomBigInteger(min, max) {\n  const BigInteger = await util.getBigInteger();\n\n  if (max.lt(min)) {\n    throw new Error('Illegal parameter value: max <= min');\n  }\n\n  const modulus = max.sub(min);\n  const bytes = modulus.byteLength();\n\n  // Using a while loop is necessary to avoid bias introduced by the mod operation.\n  // However, we request 64 extra random bits so that the bias is negligible.\n  // Section B.1.1 here: https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf\n  const r = new BigInteger(await getRandomBytes(bytes + 8));\n  return r.mod(modulus).add(min);\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2018 Proton Technologies AG\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview Algorithms for probabilistic random prime generation\n * @module crypto/public_key/prime\n * @private\n */\n\nimport util from '../../util';\nimport { getRandomBigInteger } from '../random';\n\n/**\n * Generate a probably prime random number\n * @param {Integer} bits - Bit length of the prime\n * @param {BigInteger} e - Optional RSA exponent to check against the prime\n * @param {Integer} k - Optional number of iterations of Miller-Rabin test\n * @returns BigInteger\n * @async\n */\nexport async function randomProbablePrime(bits, e, k) {\n  const BigInteger = await util.getBigInteger();\n  const one = new BigInteger(1);\n  const min = one.leftShift(new BigInteger(bits - 1));\n  const thirty = new BigInteger(30);\n  /*\n   * We can avoid any multiples of 3 and 5 by looking at n mod 30\n   * n mod 30 = 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29\n   * the next possible prime is mod 30:\n   *            1  7  7  7  7  7  7 11 11 11 11 13 13 17 17 17 17 19 19 23 23 23 23 29 29 29 29 29 29 1\n   */\n  const adds = [1, 6, 5, 4, 3, 2, 1, 4, 3, 2, 1, 2, 1, 4, 3, 2, 1, 2, 1, 4, 3, 2, 1, 6, 5, 4, 3, 2, 1, 2];\n\n  const n = await getRandomBigInteger(min, min.leftShift(one));\n  let i = n.mod(thirty).toNumber();\n\n  do {\n    n.iadd(new BigInteger(adds[i]));\n    i = (i + adds[i]) % adds.length;\n    // If reached the maximum, go back to the minimum.\n    if (n.bitLength() > bits) {\n      n.imod(min.leftShift(one)).iadd(min);\n      i = n.mod(thirty).toNumber();\n    }\n  } while (!await isProbablePrime(n, e, k));\n  return n;\n}\n\n/**\n * Probabilistic primality testing\n * @param {BigInteger} n - Number to test\n * @param {BigInteger} e - Optional RSA exponent to check against the prime\n * @param {Integer} k - Optional number of iterations of Miller-Rabin test\n * @returns {boolean}\n * @async\n */\nexport async function isProbablePrime(n, e, k) {\n  if (e && !n.dec().gcd(e).isOne()) {\n    return false;\n  }\n  if (!await divisionTest(n)) {\n    return false;\n  }\n  if (!await fermat(n)) {\n    return false;\n  }\n  if (!await millerRabin(n, k)) {\n    return false;\n  }\n  // TODO implement the Lucas test\n  // See Section C.3.3 here: https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf\n  return true;\n}\n\n/**\n * Tests whether n is probably prime or not using Fermat's test with b = 2.\n * Fails if b^(n-1) mod n != 1.\n * @param {BigInteger} n - Number to test\n * @param {BigInteger} b - Optional Fermat test base\n * @returns {boolean}\n */\nexport async function fermat(n, b) {\n  const BigInteger = await util.getBigInteger();\n  b = b || new BigInteger(2);\n  return b.modExp(n.dec(), n).isOne();\n}\n\nexport async function divisionTest(n) {\n  const BigInteger = await util.getBigInteger();\n  return smallPrimes.every(m => {\n    return n.mod(new BigInteger(m)) !== 0;\n  });\n}\n\n// https://github.com/gpg/libgcrypt/blob/master/cipher/primegen.c\nconst smallPrimes = [\n  7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43,\n  47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101,\n  103, 107, 109, 113, 127, 131, 137, 139, 149, 151,\n  157, 163, 167, 173, 179, 181, 191, 193, 197, 199,\n  211, 223, 227, 229, 233, 239, 241, 251, 257, 263,\n  269, 271, 277, 281, 283, 293, 307, 311, 313, 317,\n  331, 337, 347, 349, 353, 359, 367, 373, 379, 383,\n  389, 397, 401, 409, 419, 421, 431, 433, 439, 443,\n  449, 457, 461, 463, 467, 479, 487, 491, 499, 503,\n  509, 521, 523, 541, 547, 557, 563, 569, 571, 577,\n  587, 593, 599, 601, 607, 613, 617, 619, 631, 641,\n  643, 647, 653, 659, 661, 673, 677, 683, 691, 701,\n  709, 719, 727, 733, 739, 743, 751, 757, 761, 769,\n  773, 787, 797, 809, 811, 821, 823, 827, 829, 839,\n  853, 857, 859, 863, 877, 881, 883, 887, 907, 911,\n  919, 929, 937, 941, 947, 953, 967, 971, 977, 983,\n  991, 997, 1009, 1013, 1019, 1021, 1031, 1033,\n  1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091,\n  1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151,\n  1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213,\n  1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277,\n  1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307,\n  1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399,\n  1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451,\n  1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493,\n  1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559,\n  1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609,\n  1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667,\n  1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733,\n  1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789,\n  1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871,\n  1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931,\n  1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997,\n  1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053,\n  2063, 2069, 2081, 2083, 2087, 2089, 2099, 2111,\n  2113, 2129, 2131, 2137, 2141, 2143, 2153, 2161,\n  2179, 2203, 2207, 2213, 2221, 2237, 2239, 2243,\n  2251, 2267, 2269, 2273, 2281, 2287, 2293, 2297,\n  2309, 2311, 2333, 2339, 2341, 2347, 2351, 2357,\n  2371, 2377, 2381, 2383, 2389, 2393, 2399, 2411,\n  2417, 2423, 2437, 2441, 2447, 2459, 2467, 2473,\n  2477, 2503, 2521, 2531, 2539, 2543, 2549, 2551,\n  2557, 2579, 2591, 2593, 2609, 2617, 2621, 2633,\n  2647, 2657, 2659, 2663, 2671, 2677, 2683, 2687,\n  2689, 2693, 2699, 2707, 2711, 2713, 2719, 2729,\n  2731, 2741, 2749, 2753, 2767, 2777, 2789, 2791,\n  2797, 2801, 2803, 2819, 2833, 2837, 2843, 2851,\n  2857, 2861, 2879, 2887, 2897, 2903, 2909, 2917,\n  2927, 2939, 2953, 2957, 2963, 2969, 2971, 2999,\n  3001, 3011, 3019, 3023, 3037, 3041, 3049, 3061,\n  3067, 3079, 3083, 3089, 3109, 3119, 3121, 3137,\n  3163, 3167, 3169, 3181, 3187, 3191, 3203, 3209,\n  3217, 3221, 3229, 3251, 3253, 3257, 3259, 3271,\n  3299, 3301, 3307, 3313, 3319, 3323, 3329, 3331,\n  3343, 3347, 3359, 3361, 3371, 3373, 3389, 3391,\n  3407, 3413, 3433, 3449, 3457, 3461, 3463, 3467,\n  3469, 3491, 3499, 3511, 3517, 3527, 3529, 3533,\n  3539, 3541, 3547, 3557, 3559, 3571, 3581, 3583,\n  3593, 3607, 3613, 3617, 3623, 3631, 3637, 3643,\n  3659, 3671, 3673, 3677, 3691, 3697, 3701, 3709,\n  3719, 3727, 3733, 3739, 3761, 3767, 3769, 3779,\n  3793, 3797, 3803, 3821, 3823, 3833, 3847, 3851,\n  3853, 3863, 3877, 3881, 3889, 3907, 3911, 3917,\n  3919, 3923, 3929, 3931, 3943, 3947, 3967, 3989,\n  4001, 4003, 4007, 4013, 4019, 4021, 4027, 4049,\n  4051, 4057, 4073, 4079, 4091, 4093, 4099, 4111,\n  4127, 4129, 4133, 4139, 4153, 4157, 4159, 4177,\n  4201, 4211, 4217, 4219, 4229, 4231, 4241, 4243,\n  4253, 4259, 4261, 4271, 4273, 4283, 4289, 4297,\n  4327, 4337, 4339, 4349, 4357, 4363, 4373, 4391,\n  4397, 4409, 4421, 4423, 4441, 4447, 4451, 4457,\n  4463, 4481, 4483, 4493, 4507, 4513, 4517, 4519,\n  4523, 4547, 4549, 4561, 4567, 4583, 4591, 4597,\n  4603, 4621, 4637, 4639, 4643, 4649, 4651, 4657,\n  4663, 4673, 4679, 4691, 4703, 4721, 4723, 4729,\n  4733, 4751, 4759, 4783, 4787, 4789, 4793, 4799,\n  4801, 4813, 4817, 4831, 4861, 4871, 4877, 4889,\n  4903, 4909, 4919, 4931, 4933, 4937, 4943, 4951,\n  4957, 4967, 4969, 4973, 4987, 4993, 4999\n];\n\n\n// Miller-Rabin - Miller Rabin algorithm for primality test\n// Copyright Fedor Indutny, 2014.\n//\n// This software is licensed under the MIT License.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// Adapted on Jan 2018 from version 4.0.1 at https://github.com/indutny/miller-rabin\n\n// Sample syntax for Fixed-Base Miller-Rabin:\n// millerRabin(n, k, () => new BN(small_primes[Math.random() * small_primes.length | 0]))\n\n/**\n * Tests whether n is probably prime or not using the Miller-Rabin test.\n * See HAC Remark 4.28.\n * @param {BigInteger} n - Number to test\n * @param {Integer} k - Optional number of iterations of Miller-Rabin test\n * @param {Function} rand - Optional function to generate potential witnesses\n * @returns {boolean}\n * @async\n */\nexport async function millerRabin(n, k, rand) {\n  const BigInteger = await util.getBigInteger();\n  const len = n.bitLength();\n\n  if (!k) {\n    k = Math.max(1, (len / 48) | 0);\n  }\n\n  const n1 = n.dec(); // n - 1\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  let s = 0;\n  while (!n1.getBit(s)) { s++; }\n  const d = n.rightShift(new BigInteger(s));\n\n  for (; k > 0; k--) {\n    const a = rand ? rand() : await getRandomBigInteger(new BigInteger(2), n1);\n\n    let x = a.modExp(d, n);\n    if (x.isOne() || x.equal(n1)) {\n      continue;\n    }\n\n    let i;\n    for (i = 1; i < s; i++) {\n      x = x.mul(x).mod(n);\n\n      if (x.isOne()) {\n        return false;\n      }\n      if (x.equal(n1)) {\n        break;\n      }\n    }\n\n    if (i === s) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview Provides EME-PKCS1-v1_5 encoding and decoding and EMSA-PKCS1-v1_5 encoding function\n * @see module:crypto/public_key/rsa\n * @see module:crypto/public_key/elliptic/ecdh\n * @see PublicKeyEncryptedSessionKeyPacket\n * @module crypto/pkcs1\n * @private\n */\n\nimport { getRandomBytes } from './random';\nimport hash from './hash';\nimport util from '../util';\n\n/**\n * ASN1 object identifiers for hashes\n * @see {@link https://tools.ietf.org/html/rfc4880#section-5.2.2}\n */\nconst hash_headers = [];\nhash_headers[1] = [0x30, 0x20, 0x30, 0x0c, 0x06, 0x08, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x02, 0x05, 0x05, 0x00, 0x04,\n  0x10];\nhash_headers[2] = [0x30, 0x21, 0x30, 0x09, 0x06, 0x05, 0x2b, 0x0e, 0x03, 0x02, 0x1a, 0x05, 0x00, 0x04, 0x14];\nhash_headers[3] = [0x30, 0x21, 0x30, 0x09, 0x06, 0x05, 0x2B, 0x24, 0x03, 0x02, 0x01, 0x05, 0x00, 0x04, 0x14];\nhash_headers[8] = [0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00,\n  0x04, 0x20];\nhash_headers[9] = [0x30, 0x41, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x02, 0x05, 0x00,\n  0x04, 0x30];\nhash_headers[10] = [0x30, 0x51, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x03, 0x05,\n  0x00, 0x04, 0x40];\nhash_headers[11] = [0x30, 0x2d, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x04, 0x05,\n  0x00, 0x04, 0x1C];\n\n/**\n * Create padding with secure random data\n * @private\n * @param {Integer} length - Length of the padding in bytes\n * @returns {Uint8Array} Random padding.\n */\nfunction getPKCS1Padding(length) {\n  const result = new Uint8Array(length);\n  let count = 0;\n  while (count < length) {\n    const randomBytes = getRandomBytes(length - count);\n    for (let i = 0; i < randomBytes.length; i++) {\n      if (randomBytes[i] !== 0) {\n        result[count++] = randomBytes[i];\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Create a EME-PKCS1-v1_5 padded message\n * @see {@link https://tools.ietf.org/html/rfc4880#section-13.1.1|RFC 4880 13.1.1}\n * @param {Uint8Array} message - Message to be encoded\n * @param {Integer} keyLength - The length in octets of the key modulus\n * @returns {Uint8Array} EME-PKCS1 padded message.\n */\nexport function emeEncode(message, keyLength) {\n  const mLength = message.length;\n  // length checking\n  if (mLength > keyLength - 11) {\n    throw new Error('Message too long');\n  }\n  // Generate an octet string PS of length k - mLen - 3 consisting of\n  // pseudo-randomly generated nonzero octets\n  const PS = getPKCS1Padding(keyLength - mLength - 3);\n  // Concatenate PS, the message M, and other padding to form an\n  // encoded message EM of length k octets as EM = 0x00 || 0x02 || PS || 0x00 || M.\n  const encoded = new Uint8Array(keyLength);\n  // 0x00 byte\n  encoded[1] = 2;\n  encoded.set(PS, 2);\n  // 0x00 bytes\n  encoded.set(message, keyLength - mLength);\n  return encoded;\n}\n\n/**\n * Decode a EME-PKCS1-v1_5 padded message\n * @see {@link https://tools.ietf.org/html/rfc4880#section-13.1.2|RFC 4880 13.1.2}\n * @param {Uint8Array} encoded - Encoded message bytes\n * @param {Uint8Array} randomPayload - Data to return in case of decoding error (needed for constant-time processing)\n * @returns {Uint8Array} decoded data or `randomPayload` (on error, if given)\n * @throws {Error} on decoding failure, unless `randomPayload` is provided\n */\nexport function emeDecode(encoded, randomPayload) {\n  // encoded format: 0x00 0x02 <PS> 0x00 <payload>\n  let offset = 2;\n  let separatorNotFound = 1;\n  for (let j = offset; j < encoded.length; j++) {\n    separatorNotFound &= encoded[j] !== 0;\n    offset += separatorNotFound;\n  }\n\n  const psLen = offset - 2;\n  const payload = encoded.subarray(offset + 1); // discard the 0x00 separator\n  const isValidPadding = encoded[0] === 0 & encoded[1] === 2 & psLen >= 8 & !separatorNotFound;\n\n  if (randomPayload) {\n    return util.selectUint8Array(isValidPadding, payload, randomPayload);\n  }\n\n  if (isValidPadding) {\n    return payload;\n  }\n\n  throw new Error('Decryption error');\n}\n\n/**\n * Create a EMSA-PKCS1-v1_5 padded message\n * @see {@link https://tools.ietf.org/html/rfc4880#section-13.1.3|RFC 4880 13.1.3}\n * @param {Integer} algo - Hash algorithm type used\n * @param {Uint8Array} hashed - Message to be encoded\n * @param {Integer} emLen - Intended length in octets of the encoded message\n * @returns {Uint8Array} Encoded message.\n */\nexport async function emsaEncode(algo, hashed, emLen) {\n  let i;\n  if (hashed.length !== hash.getHashByteLength(algo)) {\n    throw new Error('Invalid hash length');\n  }\n  // produce an ASN.1 DER value for the hash function used.\n  // Let T be the full hash prefix\n  const hashPrefix = new Uint8Array(hash_headers[algo].length);\n  for (i = 0; i < hash_headers[algo].length; i++) {\n    hashPrefix[i] = hash_headers[algo][i];\n  }\n  // and let tLen be the length in octets prefix and hashed data\n  const tLen = hashPrefix.length + hashed.length;\n  if (emLen < tLen + 11) {\n    throw new Error('Intended encoded message length too short');\n  }\n  // an octet string PS consisting of emLen - tLen - 3 octets with hexadecimal value 0xFF\n  // The length of PS will be at least 8 octets\n  const PS = new Uint8Array(emLen - tLen - 3).fill(0xff);\n\n  // Concatenate PS, the hash prefix, hashed data, and other padding to form the\n  // encoded message EM as EM = 0x00 || 0x01 || PS || 0x00 || prefix || hashed\n  const EM = new Uint8Array(emLen);\n  EM[1] = 0x01;\n  EM.set(PS, 2);\n  EM.set(hashPrefix, emLen - tLen);\n  EM.set(hashed, emLen - hashed.length);\n  return EM;\n}\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview RSA implementation\n * @module crypto/public_key/rsa\n * @private\n */\n\nimport { randomProbablePrime } from './prime';\nimport { getRandomBigInteger } from '../random';\nimport util from '../../util';\nimport { uint8ArrayToB64, b64ToUint8Array } from '../../encoding/base64';\nimport { emsaEncode, emeEncode, emeDecode } from '../pkcs1';\nimport enums from '../../enums';\n\nconst webCrypto = util.getWebCrypto();\nconst nodeCrypto = util.getNodeCrypto();\nconst asn1 = nodeCrypto ? require('asn1.js') : undefined;\n\n/* eslint-disable no-invalid-this */\nconst RSAPrivateKey = nodeCrypto ? asn1.define('RSAPrivateKey', function () {\n  this.seq().obj( // used for native NodeJS crypto\n    this.key('version').int(), // 0\n    this.key('modulus').int(), // n\n    this.key('publicExponent').int(), // e\n    this.key('privateExponent').int(), // d\n    this.key('prime1').int(), // p\n    this.key('prime2').int(), // q\n    this.key('exponent1').int(), // dp\n    this.key('exponent2').int(), // dq\n    this.key('coefficient').int() // u\n  );\n}) : undefined;\n\nconst RSAPublicKey = nodeCrypto ? asn1.define('RSAPubliceKey', function () {\n  this.seq().obj( // used for native NodeJS crypto\n    this.key('modulus').int(), // n\n    this.key('publicExponent').int() // e\n  );\n}) : undefined;\n/* eslint-enable no-invalid-this */\n\n/** Create signature\n * @param {module:enums.hash} hashAlgo - Hash algorithm\n * @param {Uint8Array} data - Message\n * @param {Uint8Array} n - RSA public modulus\n * @param {Uint8Array} e - RSA public exponent\n * @param {Uint8Array} d - RSA private exponent\n * @param {Uint8Array} p - RSA private prime p\n * @param {Uint8Array} q - RSA private prime q\n * @param {Uint8Array} u - RSA private coefficient\n * @param {Uint8Array} hashed - Hashed message\n * @returns {Promise<Uint8Array>} RSA Signature.\n * @async\n */\nexport async function sign(hashAlgo, data, n, e, d, p, q, u, hashed) {\n  if (data && !util.isStream(data)) {\n    if (util.getWebCrypto()) {\n      try {\n        return await webSign(enums.read(enums.webHash, hashAlgo), data, n, e, d, p, q, u);\n      } catch (err) {\n        util.printDebugError(err);\n      }\n    } else if (util.getNodeCrypto()) {\n      return nodeSign(hashAlgo, data, n, e, d, p, q, u);\n    }\n  }\n  return bnSign(hashAlgo, n, d, hashed);\n}\n\n/**\n * Verify signature\n * @param {module:enums.hash} hashAlgo - Hash algorithm\n * @param {Uint8Array} data - Message\n * @param {Uint8Array} s - Signature\n * @param {Uint8Array} n - RSA public modulus\n * @param {Uint8Array} e - RSA public exponent\n * @param {Uint8Array} hashed - Hashed message\n * @returns {Boolean}\n * @async\n */\nexport async function verify(hashAlgo, data, s, n, e, hashed) {\n  if (data && !util.isStream(data)) {\n    if (util.getWebCrypto()) {\n      try {\n        return await webVerify(enums.read(enums.webHash, hashAlgo), data, s, n, e);\n      } catch (err) {\n        util.printDebugError(err);\n      }\n    } else if (util.getNodeCrypto()) {\n      return nodeVerify(hashAlgo, data, s, n, e);\n    }\n  }\n  return bnVerify(hashAlgo, s, n, e, hashed);\n}\n\n/**\n * Encrypt message\n * @param {Uint8Array} data - Message\n * @param {Uint8Array} n - RSA public modulus\n * @param {Uint8Array} e - RSA public exponent\n * @returns {Promise<Uint8Array>} RSA Ciphertext.\n * @async\n */\nexport async function encrypt(data, n, e) {\n  if (util.getNodeCrypto()) {\n    return nodeEncrypt(data, n, e);\n  }\n  return bnEncrypt(data, n, e);\n}\n\n/**\n * Decrypt RSA message\n * @param {Uint8Array} m - Message\n * @param {Uint8Array} n - RSA public modulus\n * @param {Uint8Array} e - RSA public exponent\n * @param {Uint8Array} d - RSA private exponent\n * @param {Uint8Array} p - RSA private prime p\n * @param {Uint8Array} q - RSA private prime q\n * @param {Uint8Array} u - RSA private coefficient\n * @param {Uint8Array} randomPayload - Data to return on decryption error, instead of throwing\n *                                     (needed for constant-time processing)\n * @returns {Promise<String>} RSA Plaintext.\n * @throws {Error} on decryption error, unless `randomPayload` is given\n * @async\n */\nexport async function decrypt(data, n, e, d, p, q, u, randomPayload) {\n  // Node v18.19.1, 20.11.1 and 21.6.2 have disabled support for PKCS#1 decryption,\n  // and we want to avoid checking the error type to decide if the random payload\n  // should indeed be returned.\n  if (util.getNodeCrypto() && !randomPayload) {\n    try {\n      return await nodeDecrypt(data, n, e, d, p, q, u);\n    } catch (err) {\n      util.printDebugError(err);\n    }\n  }\n  return bnDecrypt(data, n, e, d, p, q, u, randomPayload);\n}\n\n/**\n * Generate a new random private key B bits long with public exponent E.\n *\n * When possible, webCrypto or nodeCrypto is used. Otherwise, primes are generated using\n * 40 rounds of the Miller-Rabin probabilistic random prime generation algorithm.\n * @see module:crypto/public_key/prime\n * @param {Integer} bits - RSA bit length\n * @param {Integer} e - RSA public exponent\n * @returns {{n, e, d,\n *            p, q ,u: Uint8Array}} RSA public modulus, RSA public exponent, RSA private exponent,\n *                                  RSA private prime p, RSA private prime q, u = p ** -1 mod q\n * @async\n */\nexport async function generate(bits, e) {\n  const BigInteger = await util.getBigInteger();\n\n  e = new BigInteger(e);\n\n  // Native RSA keygen using Web Crypto\n  if (util.getWebCrypto()) {\n    const keyGenOpt = {\n      name: 'RSASSA-PKCS1-v1_5',\n      modulusLength: bits, // the specified keysize in bits\n      publicExponent: e.toUint8Array(), // take three bytes (max 65537) for exponent\n      hash: {\n        name: 'SHA-1' // not required for actual RSA keys, but for crypto api 'sign' and 'verify'\n      }\n    };\n    const keyPair = await webCrypto.generateKey(keyGenOpt, true, ['sign', 'verify']);\n\n    // export the generated keys as JsonWebKey (JWK)\n    // https://tools.ietf.org/html/draft-ietf-jose-json-web-key-33\n    const jwk = await webCrypto.exportKey('jwk', keyPair.privateKey);\n    // map JWK parameters to corresponding OpenPGP names\n    return {\n      n: b64ToUint8Array(jwk.n),\n      e: e.toUint8Array(),\n      d: b64ToUint8Array(jwk.d),\n      // switch p and q\n      p: b64ToUint8Array(jwk.q),\n      q: b64ToUint8Array(jwk.p),\n      // Since p and q are switched in places, u is the inverse of jwk.q\n      u: b64ToUint8Array(jwk.qi)\n    };\n  } else if (util.getNodeCrypto() && nodeCrypto.generateKeyPair && RSAPrivateKey) {\n    const opts = {\n      modulusLength: bits,\n      publicExponent: e.toNumber(),\n      publicKeyEncoding: { type: 'pkcs1', format: 'der' },\n      privateKeyEncoding: { type: 'pkcs1', format: 'der' }\n    };\n    const prv = await new Promise((resolve, reject) => {\n      nodeCrypto.generateKeyPair('rsa', opts, (err, _, der) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(RSAPrivateKey.decode(der, 'der'));\n        }\n      });\n    });\n    /**\n     * OpenPGP spec differs from DER spec, DER: `u = (inverse of q) mod p`, OpenPGP: `u = (inverse of p) mod q`.\n     * @link https://tools.ietf.org/html/rfc3447#section-3.2\n     * @link https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-08#section-5.6.1\n     */\n    return {\n      n: prv.modulus.toArrayLike(Uint8Array),\n      e: prv.publicExponent.toArrayLike(Uint8Array),\n      d: prv.privateExponent.toArrayLike(Uint8Array),\n      // switch p and q\n      p: prv.prime2.toArrayLike(Uint8Array),\n      q: prv.prime1.toArrayLike(Uint8Array),\n      // Since p and q are switched in places, we can keep u as defined by DER\n      u: prv.coefficient.toArrayLike(Uint8Array)\n    };\n  }\n\n  // RSA keygen fallback using 40 iterations of the Miller-Rabin test\n  // See https://stackoverflow.com/a/6330138 for justification\n  // Also see section C.3 here: https://nvlpubs.nist.gov/nistpubs/FIPS/NIST\n  let p;\n  let q;\n  let n;\n  do {\n    q = await randomProbablePrime(bits - (bits >> 1), e, 40);\n    p = await randomProbablePrime(bits >> 1, e, 40);\n    n = p.mul(q);\n  } while (n.bitLength() !== bits);\n\n  const phi = p.dec().imul(q.dec());\n\n  if (q.lt(p)) {\n    [p, q] = [q, p];\n  }\n\n  return {\n    n: n.toUint8Array(),\n    e: e.toUint8Array(),\n    d: e.modInv(phi).toUint8Array(),\n    p: p.toUint8Array(),\n    q: q.toUint8Array(),\n    // dp: d.mod(p.subn(1)),\n    // dq: d.mod(q.subn(1)),\n    u: p.modInv(q).toUint8Array()\n  };\n}\n\n/**\n * Validate RSA parameters\n * @param {Uint8Array} n - RSA public modulus\n * @param {Uint8Array} e - RSA public exponent\n * @param {Uint8Array} d - RSA private exponent\n * @param {Uint8Array} p - RSA private prime p\n * @param {Uint8Array} q - RSA private prime q\n * @param {Uint8Array} u - RSA inverse of p w.r.t. q\n * @returns {Promise<Boolean>} Whether params are valid.\n * @async\n */\nexport async function validateParams(n, e, d, p, q, u) {\n  const BigInteger = await util.getBigInteger();\n  n = new BigInteger(n);\n  p = new BigInteger(p);\n  q = new BigInteger(q);\n\n  // expect pq = n\n  if (!p.mul(q).equal(n)) {\n    return false;\n  }\n\n  const two = new BigInteger(2);\n  // expect p*u = 1 mod q\n  u = new BigInteger(u);\n  if (!p.mul(u).mod(q).isOne()) {\n    return false;\n  }\n\n  e = new BigInteger(e);\n  d = new BigInteger(d);\n  /**\n   * In RSA pkcs#1 the exponents (d, e) are inverses modulo lcm(p-1, q-1)\n   * We check that [de = 1 mod (p-1)] and [de = 1 mod (q-1)]\n   * By CRT on coprime factors of (p-1, q-1) it follows that [de = 1 mod lcm(p-1, q-1)]\n   *\n   * We blind the multiplication with r, and check that rde = r mod lcm(p-1, q-1)\n   */\n  const nSizeOver3 = new BigInteger(Math.floor(n.bitLength() / 3));\n  const r = await getRandomBigInteger(two, two.leftShift(nSizeOver3)); // r in [ 2, 2^{|n|/3} ) < p and q\n  const rde = r.mul(d).mul(e);\n\n  const areInverses = rde.mod(p.dec()).equal(r) && rde.mod(q.dec()).equal(r);\n  if (!areInverses) {\n    return false;\n  }\n\n  return true;\n}\n\nasync function bnSign(hashAlgo, n, d, hashed) {\n  const BigInteger = await util.getBigInteger();\n  n = new BigInteger(n);\n  const m = new BigInteger(await emsaEncode(hashAlgo, hashed, n.byteLength()));\n  d = new BigInteger(d);\n  if (m.gte(n)) {\n    throw new Error('Message size cannot exceed modulus size');\n  }\n  return m.modExp(d, n).toUint8Array('be', n.byteLength());\n}\n\nasync function webSign(hashName, data, n, e, d, p, q, u) {\n  /** OpenPGP keys require that p < q, and Safari Web Crypto requires that p > q.\n   * We swap them in privateToJWK, so it usually works out, but nevertheless,\n   * not all OpenPGP keys are compatible with this requirement.\n   * OpenPGP.js used to generate RSA keys the wrong way around (p > q), and still\n   * does if the underlying Web Crypto does so (though the tested implementations\n   * don't do so).\n   */\n  const jwk = await privateToJWK(n, e, d, p, q, u);\n  const algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: hashName }\n  };\n  const key = await webCrypto.importKey('jwk', jwk, algo, false, ['sign']);\n  return new Uint8Array(await webCrypto.sign('RSASSA-PKCS1-v1_5', key, data));\n}\n\nasync function nodeSign(hashAlgo, data, n, e, d, p, q, u) {\n  const { default: BN } = await import('bn.js');\n  const pBNum = new BN(p);\n  const qBNum = new BN(q);\n  const dBNum = new BN(d);\n  const dq = dBNum.mod(qBNum.subn(1)); // d mod (q-1)\n  const dp = dBNum.mod(pBNum.subn(1)); // d mod (p-1)\n  const sign = nodeCrypto.createSign(enums.read(enums.hash, hashAlgo));\n  sign.write(data);\n  sign.end();\n  const keyObject = {\n    version: 0,\n    modulus: new BN(n),\n    publicExponent: new BN(e),\n    privateExponent: new BN(d),\n    // switch p and q\n    prime1: new BN(q),\n    prime2: new BN(p),\n    // switch dp and dq\n    exponent1: dq,\n    exponent2: dp,\n    coefficient: new BN(u)\n  };\n  if (typeof nodeCrypto.createPrivateKey !== 'undefined') { //from version 11.6.0 Node supports der encoded key objects\n    const der = RSAPrivateKey.encode(keyObject, 'der');\n    return new Uint8Array(sign.sign({ key: der, format: 'der', type: 'pkcs1' }));\n  }\n  const pem = RSAPrivateKey.encode(keyObject, 'pem', {\n    label: 'RSA PRIVATE KEY'\n  });\n  return new Uint8Array(sign.sign(pem));\n}\n\nasync function bnVerify(hashAlgo, s, n, e, hashed) {\n  const BigInteger = await util.getBigInteger();\n  n = new BigInteger(n);\n  s = new BigInteger(s);\n  e = new BigInteger(e);\n  if (s.gte(n)) {\n    throw new Error('Signature size cannot exceed modulus size');\n  }\n  const EM1 = s.modExp(e, n).toUint8Array('be', n.byteLength());\n  const EM2 = await emsaEncode(hashAlgo, hashed, n.byteLength());\n  return util.equalsUint8Array(EM1, EM2);\n}\n\nasync function webVerify(hashName, data, s, n, e) {\n  const jwk = publicToJWK(n, e);\n  const key = await webCrypto.importKey('jwk', jwk, {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name:  hashName }\n  }, false, ['verify']);\n  return webCrypto.verify('RSASSA-PKCS1-v1_5', key, s, data);\n}\n\nasync function nodeVerify(hashAlgo, data, s, n, e) {\n  const { default: BN } = await import('bn.js');\n\n  const verify = nodeCrypto.createVerify(enums.read(enums.hash, hashAlgo));\n  verify.write(data);\n  verify.end();\n  const keyObject = {\n    modulus: new BN(n),\n    publicExponent: new BN(e)\n  };\n  let key;\n  if (typeof nodeCrypto.createPrivateKey !== 'undefined') { //from version 11.6.0 Node supports der encoded key objects\n    const der = RSAPublicKey.encode(keyObject, 'der');\n    key = { key: der, format: 'der', type: 'pkcs1' };\n  } else {\n    key = RSAPublicKey.encode(keyObject, 'pem', {\n      label: 'RSA PUBLIC KEY'\n    });\n  }\n  try {\n    return await verify.verify(key, s);\n  } catch (err) {\n    return false;\n  }\n}\n\nasync function nodeEncrypt(data, n, e) {\n  const { default: BN } = await import('bn.js');\n\n  const keyObject = {\n    modulus: new BN(n),\n    publicExponent: new BN(e)\n  };\n  let key;\n  if (typeof nodeCrypto.createPrivateKey !== 'undefined') {\n    const der = RSAPublicKey.encode(keyObject, 'der');\n    key = { key: der, format: 'der', type: 'pkcs1', padding: nodeCrypto.constants.RSA_PKCS1_PADDING };\n  } else {\n    const pem = RSAPublicKey.encode(keyObject, 'pem', {\n      label: 'RSA PUBLIC KEY'\n    });\n    key = { key: pem, padding: nodeCrypto.constants.RSA_PKCS1_PADDING };\n  }\n  return new Uint8Array(nodeCrypto.publicEncrypt(key, data));\n}\n\nasync function bnEncrypt(data, n, e) {\n  const BigInteger = await util.getBigInteger();\n  n = new BigInteger(n);\n  data = new BigInteger(emeEncode(data, n.byteLength()));\n  e = new BigInteger(e);\n  if (data.gte(n)) {\n    throw new Error('Message size cannot exceed modulus size');\n  }\n  return data.modExp(e, n).toUint8Array('be', n.byteLength());\n}\n\nasync function nodeDecrypt(data, n, e, d, p, q, u) {\n  const { default: BN } = await import('bn.js');\n\n  const pBNum = new BN(p);\n  const qBNum = new BN(q);\n  const dBNum = new BN(d);\n  const dq = dBNum.mod(qBNum.subn(1)); // d mod (q-1)\n  const dp = dBNum.mod(pBNum.subn(1)); // d mod (p-1)\n  const keyObject = {\n    version: 0,\n    modulus: new BN(n),\n    publicExponent: new BN(e),\n    privateExponent: new BN(d),\n    // switch p and q\n    prime1: new BN(q),\n    prime2: new BN(p),\n    // switch dp and dq\n    exponent1: dq,\n    exponent2: dp,\n    coefficient: new BN(u)\n  };\n  let key;\n  if (typeof nodeCrypto.createPrivateKey !== 'undefined') {\n    const der = RSAPrivateKey.encode(keyObject, 'der');\n    key = { key: der, format: 'der' , type: 'pkcs1', padding: nodeCrypto.constants.RSA_PKCS1_PADDING };\n  } else {\n    const pem = RSAPrivateKey.encode(keyObject, 'pem', {\n      label: 'RSA PRIVATE KEY'\n    });\n    key = { key: pem, padding: nodeCrypto.constants.RSA_PKCS1_PADDING };\n  }\n  try {\n    return new Uint8Array(nodeCrypto.privateDecrypt(key, data));\n  } catch (err) {\n    throw new Error('Decryption error');\n  }\n}\n\nasync function bnDecrypt(data, n, e, d, p, q, u, randomPayload) {\n  const BigInteger = await util.getBigInteger();\n  data = new BigInteger(data);\n  n = new BigInteger(n);\n  e = new BigInteger(e);\n  d = new BigInteger(d);\n  p = new BigInteger(p);\n  q = new BigInteger(q);\n  u = new BigInteger(u);\n  if (data.gte(n)) {\n    throw new Error('Data too large.');\n  }\n  const dq = d.mod(q.dec()); // d mod (q-1)\n  const dp = d.mod(p.dec()); // d mod (p-1)\n\n  const unblinder = (await getRandomBigInteger(new BigInteger(2), n)).mod(n);\n  const blinder = unblinder.modInv(n).modExp(e, n);\n  data = data.mul(blinder).mod(n);\n\n\n  const mp = data.modExp(dp, p); // data**{d mod (q-1)} mod p\n  const mq = data.modExp(dq, q); // data**{d mod (p-1)} mod q\n  const h = u.mul(mq.sub(mp)).mod(q); // u * (mq-mp) mod q (operands already < q)\n\n  let result = h.mul(p).add(mp); // result < n due to relations above\n\n  result = result.mul(unblinder).mod(n);\n\n\n  return emeDecode(result.toUint8Array('be', n.byteLength()), randomPayload);\n}\n\n/** Convert Openpgp private key params to jwk key according to\n * @link https://tools.ietf.org/html/rfc7517\n * @param {String} hashAlgo\n * @param {Uint8Array} n\n * @param {Uint8Array} e\n * @param {Uint8Array} d\n * @param {Uint8Array} p\n * @param {Uint8Array} q\n * @param {Uint8Array} u\n */\nasync function privateToJWK(n, e, d, p, q, u) {\n  const BigInteger = await util.getBigInteger();\n  const pNum = new BigInteger(p);\n  const qNum = new BigInteger(q);\n  const dNum = new BigInteger(d);\n\n  let dq = dNum.mod(qNum.dec()); // d mod (q-1)\n  let dp = dNum.mod(pNum.dec()); // d mod (p-1)\n  dp = dp.toUint8Array();\n  dq = dq.toUint8Array();\n  return {\n    kty: 'RSA',\n    n: uint8ArrayToB64(n, true),\n    e: uint8ArrayToB64(e, true),\n    d: uint8ArrayToB64(d, true),\n    // switch p and q\n    p: uint8ArrayToB64(q, true),\n    q: uint8ArrayToB64(p, true),\n    // switch dp and dq\n    dp: uint8ArrayToB64(dq, true),\n    dq: uint8ArrayToB64(dp, true),\n    qi: uint8ArrayToB64(u, true),\n    ext: true\n  };\n}\n\n/** Convert Openpgp key public params to jwk key according to\n * @link https://tools.ietf.org/html/rfc7517\n * @param {String} hashAlgo\n * @param {Uint8Array} n\n * @param {Uint8Array} e\n */\nfunction publicToJWK(n, e) {\n  return {\n    kty: 'RSA',\n    n: uint8ArrayToB64(n, true),\n    e: uint8ArrayToB64(e, true),\n    ext: true\n  };\n}\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview ElGamal implementation\n * @module crypto/public_key/elgamal\n * @private\n */\n\nimport util from '../../util';\nimport { getRandomBigInteger } from '../random';\nimport { emeEncode, emeDecode } from '../pkcs1';\n\n/**\n * ElGamal Encryption function\n * Note that in OpenPGP, the message needs to be padded with PKCS#1 (same as RSA)\n * @param {Uint8Array} data - To be padded and encrypted\n * @param {Uint8Array} p\n * @param {Uint8Array} g\n * @param {Uint8Array} y\n * @returns {Promise<{ c1: Uint8Array, c2: Uint8Array }>}\n * @async\n */\nexport async function encrypt(data, p, g, y) {\n  const BigInteger = await util.getBigInteger();\n  p = new BigInteger(p);\n  g = new BigInteger(g);\n  y = new BigInteger(y);\n\n  const padded = emeEncode(data, p.byteLength());\n  const m = new BigInteger(padded);\n\n  // OpenPGP uses a \"special\" version of ElGamal where g is generator of the full group Z/pZ*\n  // hence g has order p-1, and to avoid that k = 0 mod p-1, we need to pick k in [1, p-2]\n  const k = await getRandomBigInteger(new BigInteger(1), p.dec());\n  return {\n    c1: g.modExp(k, p).toUint8Array(),\n    c2: y.modExp(k, p).imul(m).imod(p).toUint8Array()\n  };\n}\n\n/**\n * ElGamal Encryption function\n * @param {Uint8Array} c1\n * @param {Uint8Array} c2\n * @param {Uint8Array} p\n * @param {Uint8Array} x\n * @param {Uint8Array} randomPayload - Data to return on unpadding error, instead of throwing\n *                                     (needed for constant-time processing)\n * @returns {Promise<Uint8Array>} Unpadded message.\n * @throws {Error} on decryption error, unless `randomPayload` is given\n * @async\n */\nexport async function decrypt(c1, c2, p, x, randomPayload) {\n  const BigInteger = await util.getBigInteger();\n  c1 = new BigInteger(c1);\n  c2 = new BigInteger(c2);\n  p = new BigInteger(p);\n  x = new BigInteger(x);\n\n  const padded = c1.modExp(x, p).modInv(p).imul(c2).imod(p);\n  return emeDecode(padded.toUint8Array('be', p.byteLength()), randomPayload);\n}\n\n/**\n * Validate ElGamal parameters\n * @param {Uint8Array} p - ElGamal prime\n * @param {Uint8Array} g - ElGamal group generator\n * @param {Uint8Array} y - ElGamal public key\n * @param {Uint8Array} x - ElGamal private exponent\n * @returns {Promise<Boolean>} Whether params are valid.\n * @async\n */\nexport async function validateParams(p, g, y, x) {\n  const BigInteger = await util.getBigInteger();\n  p = new BigInteger(p);\n  g = new BigInteger(g);\n  y = new BigInteger(y);\n\n  const one = new BigInteger(1);\n  // Check that 1 < g < p\n  if (g.lte(one) || g.gte(p)) {\n    return false;\n  }\n\n  // Expect p-1 to be large\n  const pSize = new BigInteger(p.bitLength());\n  const n1023 = new BigInteger(1023);\n  if (pSize.lt(n1023)) {\n    return false;\n  }\n\n  /**\n   * g should have order p-1\n   * Check that g ** (p-1) = 1 mod p\n   */\n  if (!g.modExp(p.dec(), p).isOne()) {\n    return false;\n  }\n\n  /**\n   * Since p-1 is not prime, g might have a smaller order that divides p-1\n   * We want to make sure that the order is large enough to hinder a small subgroup attack\n   *\n   * We just check g**i != 1 for all i up to a threshold\n   */\n  let res = g;\n  const i = new BigInteger(1);\n  const threshold = new BigInteger(2).leftShift(new BigInteger(17)); // we want order > threshold\n  while (i.lt(threshold)) {\n    res = res.mul(g).imod(p);\n    if (res.isOne()) {\n      return false;\n    }\n    i.iinc();\n  }\n\n  /**\n   * Re-derive public key y' = g ** x mod p\n   * Expect y == y'\n   *\n   * Blinded exponentiation computes g**{r(p-1) + x} to compare to y\n   */\n  x = new BigInteger(x);\n  const two = new BigInteger(2);\n  const r = await getRandomBigInteger(two.leftShift(pSize.dec()), two.leftShift(pSize)); // draw r of same size as p-1\n  const rqx = p.dec().imul(r).iadd(x);\n  if (!y.equal(g.modExp(rqx, p))) {\n    return false;\n  }\n\n  return true;\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2015-2016 Decentral\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * Wrapper to an OID value\n *\n * {@link https://tools.ietf.org/html/rfc6637#section-11|RFC6637, section 11}:\n * The sequence of octets in the third column is the result of applying\n * the Distinguished Encoding Rules (DER) to the ASN.1 Object Identifier\n * with subsequent truncation.  The truncation removes the two fields of\n * encoded Object Identifier.  The first omitted field is one octet\n * representing the Object Identifier tag, and the second omitted field\n * is the length of the Object Identifier body.  For example, the\n * complete ASN.1 DER encoding for the NIST P-256 curve OID is \"06 08 2A\n * 86 48 CE 3D 03 01 07\", from which the first entry in the table above\n * is constructed by omitting the first two octets.  Only the truncated\n * sequence of octets is the valid representation of a curve OID.\n * @module type/oid\n * @private\n */\n\nimport util from '../util';\nimport enums from '../enums';\n\nclass OID {\n  constructor(oid) {\n    if (oid instanceof OID) {\n      this.oid = oid.oid;\n    } else if (util.isArray(oid) ||\n               util.isUint8Array(oid)) {\n      oid = new Uint8Array(oid);\n      if (oid[0] === 0x06) { // DER encoded oid byte array\n        if (oid[1] !== oid.length - 2) {\n          throw new Error('Length mismatch in DER encoded oid');\n        }\n        oid = oid.subarray(2);\n      }\n      this.oid = oid;\n    } else {\n      this.oid = '';\n    }\n  }\n\n  /**\n   * Method to read an OID object\n   * @param {Uint8Array} input - Where to read the OID from\n   * @returns {Number} Number of read bytes.\n   */\n  read(input) {\n    if (input.length >= 1) {\n      const length = input[0];\n      if (input.length >= 1 + length) {\n        this.oid = input.subarray(1, 1 + length);\n        return 1 + this.oid.length;\n      }\n    }\n    throw new Error('Invalid oid');\n  }\n\n  /**\n   * Serialize an OID object\n   * @returns {Uint8Array} Array with the serialized value the OID.\n   */\n  write() {\n    return util.concatUint8Array([new Uint8Array([this.oid.length]), this.oid]);\n  }\n\n  /**\n   * Serialize an OID object as a hex string\n   * @returns {string} String with the hex value of the OID.\n   */\n  toHex() {\n    return util.uint8ArrayToHex(this.oid);\n  }\n\n  /**\n   * If a known curve object identifier, return the canonical name of the curve\n   * @returns {string} String with the canonical name of the curve.\n   */\n  getName() {\n    const hex = this.toHex();\n    if (enums.curve[hex]) {\n      return enums.write(enums.curve, hex);\n    } else {\n      throw new Error('Unknown curve object identifier.');\n    }\n  }\n}\n\nexport default OID;\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2015-2016 Decentral\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview Wrapper for a KeyPair of an curve from indutny/elliptic library\n * @module crypto/public_key/elliptic/indutnyKey\n * @private\n */\n\nimport config from '../../../config';\n\nexport function keyFromPrivate(indutnyCurve, priv) {\n  const keyPair = indutnyCurve.keyPair({ priv: priv });\n  return keyPair;\n}\n\nexport function keyFromPublic(indutnyCurve, pub) {\n  const keyPair = indutnyCurve.keyPair({ pub: pub });\n  if (keyPair.validate().result !== true) {\n    throw new Error('Invalid elliptic public key');\n  }\n  return keyPair;\n}\n\nexport async function getIndutnyCurve(name) {\n  if (!config.useIndutnyElliptic) {\n    throw new Error('This curve is only supported in the full build of OpenPGP.js');\n  }\n  const { default: elliptic } = await import('@openpgp/elliptic');\n  return new elliptic.ec(name);\n}\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview Functions for reading and writing packets\n * @module packet/packet\n * @private\n */\n\nimport * as stream from '@openpgp/web-stream-tools';\nimport enums from '../enums';\nimport util from '../util';\n\nexport function readSimpleLength(bytes) {\n  let len = 0;\n  let offset;\n  const type = bytes[0];\n\n\n  if (type < 192) {\n    [len] = bytes;\n    offset = 1;\n  } else if (type < 255) {\n    len = ((bytes[0] - 192) << 8) + (bytes[1]) + 192;\n    offset = 2;\n  } else if (type === 255) {\n    len = util.readNumber(bytes.subarray(1, 1 + 4));\n    offset = 5;\n  }\n\n  return {\n    len: len,\n    offset: offset\n  };\n}\n\n/**\n * Encodes a given integer of length to the openpgp length specifier to a\n * string\n *\n * @param {Integer} length - The length to encode\n * @returns {Uint8Array} String with openpgp length representation.\n */\nexport function writeSimpleLength(length) {\n  if (length < 192) {\n    return new Uint8Array([length]);\n  } else if (length > 191 && length < 8384) {\n    /*\n      * let a = (total data packet length) - 192 let bc = two octet\n      * representation of a let d = b + 192\n      */\n    return new Uint8Array([((length - 192) >> 8) + 192, (length - 192) & 0xFF]);\n  }\n  return util.concatUint8Array([new Uint8Array([255]), util.writeNumber(length, 4)]);\n}\n\nexport function writePartialLength(power) {\n  if (power < 0 || power > 30) {\n    throw new Error('Partial Length power must be between 1 and 30');\n  }\n  return new Uint8Array([224 + power]);\n}\n\nexport function writeTag(tag_type) {\n  /* we're only generating v4 packet headers here */\n  return new Uint8Array([0xC0 | tag_type]);\n}\n\n/**\n * Writes a packet header version 4 with the given tag_type and length to a\n * string\n *\n * @param {Integer} tag_type - Tag type\n * @param {Integer} length - Length of the payload\n * @returns {String} String of the header.\n */\nexport function writeHeader(tag_type, length) {\n  /* we're only generating v4 packet headers here */\n  return util.concatUint8Array([writeTag(tag_type), writeSimpleLength(length)]);\n}\n\n/**\n * Whether the packet type supports partial lengths per RFC4880\n * @param {Integer} tag - Tag type\n * @returns {Boolean} String of the header.\n */\nexport function supportsStreaming(tag) {\n  return [\n    enums.packet.literalData,\n    enums.packet.compressedData,\n    enums.packet.symmetricallyEncryptedData,\n    enums.packet.symEncryptedIntegrityProtectedData,\n    enums.packet.aeadEncryptedData\n  ].includes(tag);\n}\n\n/**\n * Generic static Packet Parser function\n *\n * @param {Uint8Array | ReadableStream<Uint8Array>} input - Input stream as string\n * @param {Function} callback - Function to call with the parsed packet\n * @returns {Boolean} Returns false if the stream was empty and parsing is done, and true otherwise.\n */\nexport async function readPackets(input, callback) {\n  const reader = stream.getReader(input);\n  let writer;\n  let callbackReturned;\n  try {\n    const peekedBytes = await reader.peekBytes(2);\n    // some sanity checks\n    if (!peekedBytes || peekedBytes.length < 2 || (peekedBytes[0] & 0x80) === 0) {\n      throw new Error('Error during parsing. This message / key probably does not conform to a valid OpenPGP format.');\n    }\n    const headerByte = await reader.readByte();\n    let tag = -1;\n    let format = -1;\n    let packetLength;\n\n    format = 0; // 0 = old format; 1 = new format\n    if ((headerByte & 0x40) !== 0) {\n      format = 1;\n    }\n\n    let packetLengthType;\n    if (format) {\n      // new format header\n      tag = headerByte & 0x3F; // bit 5-0\n    } else {\n      // old format header\n      tag = (headerByte & 0x3F) >> 2; // bit 5-2\n      packetLengthType = headerByte & 0x03; // bit 1-0\n    }\n\n    const packetSupportsStreaming = supportsStreaming(tag);\n    let packet = null;\n    if (packetSupportsStreaming) {\n      if (util.isStream(input) === 'array') {\n        const arrayStream = new stream.ArrayStream();\n        writer = stream.getWriter(arrayStream);\n        packet = arrayStream;\n      } else {\n        const transform = new stream.TransformStream();\n        writer = stream.getWriter(transform.writable);\n        packet = transform.readable;\n      }\n      // eslint-disable-next-line callback-return\n      callbackReturned = callback({ tag, packet });\n    } else {\n      packet = [];\n    }\n\n    let wasPartialLength;\n    do {\n      if (!format) {\n        // 4.2.1. Old Format Packet Lengths\n        switch (packetLengthType) {\n          case 0:\n            // The packet has a one-octet length. The header is 2 octets\n            // long.\n            packetLength = await reader.readByte();\n            break;\n          case 1:\n            // The packet has a two-octet length. The header is 3 octets\n            // long.\n            packetLength = (await reader.readByte() << 8) | await reader.readByte();\n            break;\n          case 2:\n            // The packet has a four-octet length. The header is 5\n            // octets long.\n            packetLength = (await reader.readByte() << 24) | (await reader.readByte() << 16) | (await reader.readByte() <<\n              8) | await reader.readByte();\n            break;\n          default:\n            // 3 - The packet is of indeterminate length. The header is 1\n            // octet long, and the implementation must determine how long\n            // the packet is. If the packet is in a file, this means that\n            // the packet extends until the end of the file. In general,\n            // an implementation SHOULD NOT use indeterminate-length\n            // packets except where the end of the data will be clear\n            // from the context, and even then it is better to use a\n            // definite length, or a new format header. The new format\n            // headers described below have a mechanism for precisely\n            // encoding data of indeterminate length.\n            packetLength = Infinity;\n            break;\n        }\n      } else { // 4.2.2. New Format Packet Lengths\n        // 4.2.2.1. One-Octet Lengths\n        const lengthByte = await reader.readByte();\n        wasPartialLength = false;\n        if (lengthByte < 192) {\n          packetLength = lengthByte;\n          // 4.2.2.2. Two-Octet Lengths\n        } else if (lengthByte >= 192 && lengthByte < 224) {\n          packetLength = ((lengthByte - 192) << 8) + (await reader.readByte()) + 192;\n          // 4.2.2.4. Partial Body Lengths\n        } else if (lengthByte > 223 && lengthByte < 255) {\n          packetLength = 1 << (lengthByte & 0x1F);\n          wasPartialLength = true;\n          if (!packetSupportsStreaming) {\n            throw new TypeError('This packet type does not support partial lengths.');\n          }\n          // 4.2.2.3. Five-Octet Lengths\n        } else {\n          packetLength = (await reader.readByte() << 24) | (await reader.readByte() << 16) | (await reader.readByte() <<\n            8) | await reader.readByte();\n        }\n      }\n      if (packetLength > 0) {\n        let bytesRead = 0;\n        while (true) {\n          if (writer) await writer.ready;\n          const { done, value } = await reader.read();\n          if (done) {\n            if (packetLength === Infinity) break;\n            throw new Error('Unexpected end of packet');\n          }\n          const chunk = packetLength === Infinity ? value : value.subarray(0, packetLength - bytesRead);\n          if (writer) await writer.write(chunk);\n          else packet.push(chunk);\n          bytesRead += value.length;\n          if (bytesRead >= packetLength) {\n            reader.unshift(value.subarray(packetLength - bytesRead + value.length));\n            break;\n          }\n        }\n      }\n    } while (wasPartialLength);\n\n    // If this was not a packet that \"supports streaming\", we peek to check\n    // whether it is the last packet in the message. We peek 2 bytes instead\n    // of 1 because the beginning of this function also peeks 2 bytes, and we\n    // want to cut a `subarray` of the correct length into `web-stream-tools`'\n    // `externalBuffer` as a tiny optimization here.\n    //\n    // If it *was* a streaming packet (i.e. the data packets), we peek at the\n    // entire remainder of the stream, in order to forward errors in the\n    // remainder of the stream to the packet data. (Note that this means we\n    // read/peek at all signature packets before closing the literal data\n    // packet, for example.) This forwards MDC errors to the literal data\n    // stream, for example, so that they don't get lost / forgotten on\n    // decryptedMessage.packets.stream, which we never look at.\n    //\n    // An example of what we do when stream-parsing a message containing\n    // [ one-pass signature packet, literal data packet, signature packet ]:\n    // 1. Read the one-pass signature packet\n    // 2. Peek 2 bytes of the literal data packet\n    // 3. Parse the one-pass signature packet\n    //\n    // 4. Read the literal data packet, simultaneously stream-parsing it\n    // 5. Peek until the end of the message\n    // 6. Finish parsing the literal data packet\n    //\n    // 7. Read the signature packet again (we already peeked at it in step 5)\n    // 8. Peek at the end of the stream again (`peekBytes` returns undefined)\n    // 9. Parse the signature packet\n    //\n    // Note that this means that if there's an error in the very end of the\n    // stream, such as an MDC error, we throw in step 5 instead of in step 8\n    // (or never), which is the point of this exercise.\n    const nextPacket = await reader.peekBytes(packetSupportsStreaming ? Infinity : 2);\n    if (writer) {\n      await writer.ready;\n      await writer.close();\n    } else {\n      packet = util.concatUint8Array(packet);\n      // eslint-disable-next-line callback-return\n      await callback({ tag, packet });\n    }\n    return !nextPacket || !nextPacket.length;\n  } catch (e) {\n    if (writer) {\n      await writer.abort(e);\n      return true;\n    } else {\n      throw e;\n    }\n  } finally {\n    if (writer) {\n      await callbackReturned;\n    }\n    reader.releaseLock();\n  }\n}\n\nexport class UnsupportedError extends Error {\n  constructor(...params) {\n    super(...params);\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, UnsupportedError);\n    }\n\n    this.name = 'UnsupportedError';\n  }\n}\n\nexport class UnparseablePacket {\n  constructor(tag, rawContent) {\n    this.tag = tag;\n    this.rawContent = rawContent;\n  }\n\n  write() {\n    return this.rawContent;\n  }\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2015-2016 Decentral\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview Wrapper of an instance of an Elliptic Curve\n * @module crypto/public_key/elliptic/curve\n * @private\n */\n\nimport nacl from '@openpgp/tweetnacl/nacl-fast-light';\nimport { getRandomBytes } from '../../random';\nimport enums from '../../../enums';\nimport util from '../../../util';\nimport { uint8ArrayToB64, b64ToUint8Array } from '../../../encoding/base64';\nimport OID from '../../../type/oid';\nimport { keyFromPublic, keyFromPrivate, getIndutnyCurve } from './indutnyKey';\nimport { UnsupportedError } from '../../../packet/packet';\n\nconst webCrypto = util.getWebCrypto();\nconst nodeCrypto = util.getNodeCrypto();\n\nconst webCurves = {\n  'p256': 'P-256',\n  'p384': 'P-384',\n  'p521': 'P-521'\n};\nconst knownCurves = nodeCrypto ? nodeCrypto.getCurves() : [];\nconst nodeCurves = nodeCrypto ? {\n  secp256k1: knownCurves.includes('secp256k1') ? 'secp256k1' : undefined,\n  p256: knownCurves.includes('prime256v1') ? 'prime256v1' : undefined,\n  p384: knownCurves.includes('secp384r1') ? 'secp384r1' : undefined,\n  p521: knownCurves.includes('secp521r1') ? 'secp521r1' : undefined,\n  ed25519: knownCurves.includes('ED25519') ? 'ED25519' : undefined,\n  curve25519: knownCurves.includes('X25519') ? 'X25519' : undefined,\n  brainpoolP256r1: knownCurves.includes('brainpoolP256r1') ? 'brainpoolP256r1' : undefined,\n  brainpoolP384r1: knownCurves.includes('brainpoolP384r1') ? 'brainpoolP384r1' : undefined,\n  brainpoolP512r1: knownCurves.includes('brainpoolP512r1') ? 'brainpoolP512r1' : undefined\n} : {};\n\nconst curves = {\n  p256: {\n    oid: [0x06, 0x08, 0x2A, 0x86, 0x48, 0xCE, 0x3D, 0x03, 0x01, 0x07],\n    keyType: enums.publicKey.ecdsa,\n    hash: enums.hash.sha256,\n    cipher: enums.symmetric.aes128,\n    node: nodeCurves.p256,\n    web: webCurves.p256,\n    payloadSize: 32,\n    sharedSize: 256\n  },\n  p384: {\n    oid: [0x06, 0x05, 0x2B, 0x81, 0x04, 0x00, 0x22],\n    keyType: enums.publicKey.ecdsa,\n    hash: enums.hash.sha384,\n    cipher: enums.symmetric.aes192,\n    node: nodeCurves.p384,\n    web: webCurves.p384,\n    payloadSize: 48,\n    sharedSize: 384\n  },\n  p521: {\n    oid: [0x06, 0x05, 0x2B, 0x81, 0x04, 0x00, 0x23],\n    keyType: enums.publicKey.ecdsa,\n    hash: enums.hash.sha512,\n    cipher: enums.symmetric.aes256,\n    node: nodeCurves.p521,\n    web: webCurves.p521,\n    payloadSize: 66,\n    sharedSize: 528\n  },\n  secp256k1: {\n    oid: [0x06, 0x05, 0x2B, 0x81, 0x04, 0x00, 0x0A],\n    keyType: enums.publicKey.ecdsa,\n    hash: enums.hash.sha256,\n    cipher: enums.symmetric.aes128,\n    node: nodeCurves.secp256k1,\n    payloadSize: 32\n  },\n  ed25519: {\n    oid: [0x06, 0x09, 0x2B, 0x06, 0x01, 0x04, 0x01, 0xDA, 0x47, 0x0F, 0x01],\n    keyType: enums.publicKey.eddsaLegacy,\n    hash: enums.hash.sha512,\n    node: false, // nodeCurves.ed25519 TODO\n    payloadSize: 32\n  },\n  curve25519: {\n    oid: [0x06, 0x0A, 0x2B, 0x06, 0x01, 0x04, 0x01, 0x97, 0x55, 0x01, 0x05, 0x01],\n    keyType: enums.publicKey.ecdh,\n    hash: enums.hash.sha256,\n    cipher: enums.symmetric.aes128,\n    node: false, // nodeCurves.curve25519 TODO\n    payloadSize: 32\n  },\n  brainpoolP256r1: {\n    oid: [0x06, 0x09, 0x2B, 0x24, 0x03, 0x03, 0x02, 0x08, 0x01, 0x01, 0x07],\n    keyType: enums.publicKey.ecdsa,\n    hash: enums.hash.sha256,\n    cipher: enums.symmetric.aes128,\n    node: nodeCurves.brainpoolP256r1,\n    payloadSize: 32\n  },\n  brainpoolP384r1: {\n    oid: [0x06, 0x09, 0x2B, 0x24, 0x03, 0x03, 0x02, 0x08, 0x01, 0x01, 0x0B],\n    keyType: enums.publicKey.ecdsa,\n    hash: enums.hash.sha384,\n    cipher: enums.symmetric.aes192,\n    node: nodeCurves.brainpoolP384r1,\n    payloadSize: 48\n  },\n  brainpoolP512r1: {\n    oid: [0x06, 0x09, 0x2B, 0x24, 0x03, 0x03, 0x02, 0x08, 0x01, 0x01, 0x0D],\n    keyType: enums.publicKey.ecdsa,\n    hash: enums.hash.sha512,\n    cipher: enums.symmetric.aes256,\n    node: nodeCurves.brainpoolP512r1,\n    payloadSize: 64\n  }\n};\n\nclass CurveWithOID {\n  constructor(oidOrName, params) {\n    try {\n      if (util.isArray(oidOrName) ||\n          util.isUint8Array(oidOrName)) {\n        // by oid byte array\n        oidOrName = new OID(oidOrName);\n      }\n      if (oidOrName instanceof OID) {\n        // by curve OID\n        oidOrName = oidOrName.getName();\n      }\n      // by curve name or oid string\n      this.name = enums.write(enums.curve, oidOrName);\n    } catch (err) {\n      throw new UnsupportedError('Unknown curve');\n    }\n    params = params || curves[this.name];\n\n    this.keyType = params.keyType;\n\n    this.oid = params.oid;\n    this.hash = params.hash;\n    this.cipher = params.cipher;\n    this.node = params.node && curves[this.name];\n    this.web = params.web && curves[this.name];\n    this.payloadSize = params.payloadSize;\n    if (this.web && util.getWebCrypto()) {\n      this.type = 'web';\n    } else if (this.node && util.getNodeCrypto()) {\n      this.type = 'node';\n    } else if (this.name === 'curve25519') {\n      this.type = 'curve25519';\n    } else if (this.name === 'ed25519') {\n      this.type = 'ed25519';\n    }\n  }\n\n  async genKeyPair() {\n    let keyPair;\n    switch (this.type) {\n      case 'web':\n        try {\n          return await webGenKeyPair(this.name);\n        } catch (err) {\n          util.printDebugError('Browser did not support generating ec key ' + err.message);\n          break;\n        }\n      case 'node':\n        return nodeGenKeyPair(this.name);\n      case 'curve25519': {\n        const privateKey = getRandomBytes(32);\n        privateKey[0] = (privateKey[0] & 127) | 64;\n        privateKey[31] &= 248;\n        const secretKey = privateKey.slice().reverse();\n        keyPair = nacl.box.keyPair.fromSecretKey(secretKey);\n        const publicKey = util.concatUint8Array([new Uint8Array([0x40]), keyPair.publicKey]);\n        return { publicKey, privateKey };\n      }\n      case 'ed25519': {\n        const privateKey = getRandomBytes(32);\n        const keyPair = nacl.sign.keyPair.fromSeed(privateKey);\n        const publicKey = util.concatUint8Array([new Uint8Array([0x40]), keyPair.publicKey]);\n        return { publicKey, privateKey };\n      }\n    }\n    const indutnyCurve = await getIndutnyCurve(this.name);\n    keyPair = await indutnyCurve.genKeyPair({\n      entropy: util.uint8ArrayToString(getRandomBytes(32))\n    });\n    return { publicKey: new Uint8Array(keyPair.getPublic('array', false)), privateKey: keyPair.getPrivate().toArrayLike(Uint8Array) };\n  }\n}\n\nasync function generate(curve) {\n  const BigInteger = await util.getBigInteger();\n\n  curve = new CurveWithOID(curve);\n  const keyPair = await curve.genKeyPair();\n  const Q = new BigInteger(keyPair.publicKey).toUint8Array();\n  const secret = new BigInteger(keyPair.privateKey).toUint8Array('be', curve.payloadSize);\n  return {\n    oid: curve.oid,\n    Q,\n    secret,\n    hash: curve.hash,\n    cipher: curve.cipher\n  };\n}\n\n/**\n * Get preferred hash algo to use with the given curve\n * @param {module:type/oid} oid - curve oid\n * @returns {enums.hash} hash algorithm\n */\nfunction getPreferredHashAlgo(oid) {\n  return curves[enums.write(enums.curve, oid.toHex())].hash;\n}\n\n/**\n * Validate ECDH and ECDSA parameters\n * Not suitable for EdDSA (different secret key format)\n * @param {module:enums.publicKey} algo - EC algorithm, to filter supported curves\n * @param {module:type/oid} oid - EC object identifier\n * @param {Uint8Array} Q - EC public point\n * @param {Uint8Array} d - EC secret scalar\n * @returns {Promise<Boolean>} Whether params are valid.\n * @async\n */\nasync function validateStandardParams(algo, oid, Q, d) {\n  const supportedCurves = {\n    p256: true,\n    p384: true,\n    p521: true,\n    secp256k1: true,\n    curve25519: algo === enums.publicKey.ecdh,\n    brainpoolP256r1: true,\n    brainpoolP384r1: true,\n    brainpoolP512r1: true\n  };\n\n  // Check whether the given curve is supported\n  const curveName = oid.getName();\n  if (!supportedCurves[curveName]) {\n    return false;\n  }\n\n  if (curveName === 'curve25519') {\n    d = d.slice().reverse();\n    // Re-derive public point Q'\n    const { publicKey } = nacl.box.keyPair.fromSecretKey(d);\n\n    Q = new Uint8Array(Q);\n    const dG = new Uint8Array([0x40, ...publicKey]); // Add public key prefix\n    if (!util.equalsUint8Array(dG, Q)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  const curve = await getIndutnyCurve(curveName);\n  try {\n    // Parse Q and check that it is on the curve but not at infinity\n    Q = keyFromPublic(curve, Q).getPublic();\n  } catch (validationErrors) {\n    return false;\n  }\n\n  /**\n   * Re-derive public point Q' = dG from private key\n   * Expect Q == Q'\n   */\n  const dG = keyFromPrivate(curve, d).getPublic();\n  if (!dG.eq(Q)) {\n    return false;\n  }\n\n  return true;\n}\n\nexport {\n  CurveWithOID, curves, webCurves, nodeCurves, generate, getPreferredHashAlgo, jwkToRawPublic, rawPublicToJWK, privateToJWK, validateStandardParams\n};\n\n//////////////////////////\n//                      //\n//   Helper functions   //\n//                      //\n//////////////////////////\n\n\nasync function webGenKeyPair(name) {\n  // Note: keys generated with ECDSA and ECDH are structurally equivalent\n  const webCryptoKey = await webCrypto.generateKey({ name: 'ECDSA', namedCurve: webCurves[name] }, true, ['sign', 'verify']);\n\n  const privateKey = await webCrypto.exportKey('jwk', webCryptoKey.privateKey);\n  const publicKey = await webCrypto.exportKey('jwk', webCryptoKey.publicKey);\n\n  return {\n    publicKey: jwkToRawPublic(publicKey),\n    privateKey: b64ToUint8Array(privateKey.d, true)\n  };\n}\n\nasync function nodeGenKeyPair(name) {\n  // Note: ECDSA and ECDH key generation is structurally equivalent\n  const ecdh = nodeCrypto.createECDH(nodeCurves[name]);\n  await ecdh.generateKeys();\n  return {\n    publicKey: new Uint8Array(ecdh.getPublicKey()),\n    privateKey: new Uint8Array(ecdh.getPrivateKey())\n  };\n}\n\n//////////////////////////\n//                      //\n//   Helper functions   //\n//                      //\n//////////////////////////\n\n/**\n * @param {JsonWebKey} jwk - key for conversion\n *\n * @returns {Uint8Array} Raw public key.\n */\nfunction jwkToRawPublic(jwk) {\n  const bufX = b64ToUint8Array(jwk.x);\n  const bufY = b64ToUint8Array(jwk.y);\n  const publicKey = new Uint8Array(bufX.length + bufY.length + 1);\n  publicKey[0] = 0x04;\n  publicKey.set(bufX, 1);\n  publicKey.set(bufY, bufX.length + 1);\n  return publicKey;\n}\n\n/**\n * @param {Integer} payloadSize - ec payload size\n * @param {String} name - curve name\n * @param {Uint8Array} publicKey - public key\n *\n * @returns {JsonWebKey} Public key in jwk format.\n */\nfunction rawPublicToJWK(payloadSize, name, publicKey) {\n  const len = payloadSize;\n  const bufX = publicKey.slice(1, len + 1);\n  const bufY = publicKey.slice(len + 1, len * 2 + 1);\n  // https://www.rfc-editor.org/rfc/rfc7518.txt\n  const jwk = {\n    kty: 'EC',\n    crv: name,\n    x: uint8ArrayToB64(bufX, true),\n    y: uint8ArrayToB64(bufY, true),\n    ext: true\n  };\n  return jwk;\n}\n\n/**\n * @param {Integer} payloadSize - ec payload size\n * @param {String} name - curve name\n * @param {Uint8Array} publicKey - public key\n * @param {Uint8Array} privateKey - private key\n *\n * @returns {JsonWebKey} Private key in jwk format.\n */\nfunction privateToJWK(payloadSize, name, publicKey, privateKey) {\n  const jwk = rawPublicToJWK(payloadSize, name, publicKey);\n  jwk.d = uint8ArrayToB64(privateKey, true);\n  return jwk;\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2015-2016 Decentral\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview Implementation of ECDSA following RFC6637 for Openpgpjs\n * @module crypto/public_key/elliptic/ecdsa\n * @private\n */\n\nimport enums from '../../../enums';\nimport util from '../../../util';\nimport { getRandomBytes } from '../../random';\nimport hash from '../../hash';\nimport { CurveWithOID, webCurves, privateToJWK, rawPublicToJWK, validateStandardParams } from './oid_curves';\nimport { getIndutnyCurve, keyFromPrivate, keyFromPublic } from './indutnyKey';\n\nconst webCrypto = util.getWebCrypto();\nconst nodeCrypto = util.getNodeCrypto();\n\n/**\n * Sign a message using the provided key\n * @param {module:type/oid} oid - Elliptic curve object identifier\n * @param {module:enums.hash} hashAlgo - Hash algorithm used to sign\n * @param {Uint8Array} message - Message to sign\n * @param {Uint8Array} publicKey - Public key\n * @param {Uint8Array} privateKey - Private key used to sign the message\n * @param {Uint8Array} hashed - The hashed message\n * @returns {Promise<{\n *   r: Uint8Array,\n *   s: Uint8Array\n * }>} Signature of the message\n * @async\n */\nexport async function sign(oid, hashAlgo, message, publicKey, privateKey, hashed) {\n  const curve = new CurveWithOID(oid);\n  if (message && !util.isStream(message)) {\n    const keyPair = { publicKey, privateKey };\n    switch (curve.type) {\n      case 'web': {\n        // If browser doesn't support a curve, we'll catch it\n        try {\n          // Need to await to make sure browser succeeds\n          return await webSign(curve, hashAlgo, message, keyPair);\n        } catch (err) {\n          // We do not fallback if the error is related to key integrity\n          // Unfortunaley Safari does not support p521 and throws a DataError when using it\n          // So we need to always fallback for that curve\n          if (curve.name !== 'p521' && (err.name === 'DataError' || err.name === 'OperationError')) {\n            throw err;\n          }\n          util.printDebugError('Browser did not support signing: ' + err.message);\n        }\n        break;\n      }\n      case 'node': {\n        const signature = await nodeSign(curve, hashAlgo, message, keyPair);\n        return {\n          r: signature.r.toArrayLike(Uint8Array),\n          s: signature.s.toArrayLike(Uint8Array)\n        };\n      }\n    }\n  }\n  return ellipticSign(curve, hashed, privateKey);\n}\n\n/**\n * Verifies if a signature is valid for a message\n * @param {module:type/oid} oid - Elliptic curve object identifier\n * @param {module:enums.hash} hashAlgo - Hash algorithm used in the signature\n * @param  {{r: Uint8Array,\n             s: Uint8Array}}   signature Signature to verify\n * @param {Uint8Array} message - Message to verify\n * @param {Uint8Array} publicKey - Public key used to verify the message\n * @param {Uint8Array} hashed - The hashed message\n * @returns {Boolean}\n * @async\n */\nexport async function verify(oid, hashAlgo, signature, message, publicKey, hashed) {\n  const curve = new CurveWithOID(oid);\n  if (message && !util.isStream(message)) {\n    switch (curve.type) {\n      case 'web':\n        try {\n          // Need to await to make sure browser succeeds\n          return await webVerify(curve, hashAlgo, signature, message, publicKey);\n        } catch (err) {\n          // We do not fallback if the error is related to key integrity\n          // Unfortunately Safari does not support p521 and throws a DataError when using it\n          // So we need to always fallback for that curve\n          if (curve.name !== 'p521' && (err.name === 'DataError' || err.name === 'OperationError')) {\n            throw err;\n          }\n          util.printDebugError('Browser did not support verifying: ' + err.message);\n        }\n        break;\n      case 'node':\n        return nodeVerify(curve, hashAlgo, signature, message, publicKey);\n    }\n  }\n  const digest = (typeof hashAlgo === 'undefined') ? message : hashed;\n  return ellipticVerify(curve, signature, digest, publicKey);\n}\n\n/**\n * Validate ECDSA parameters\n * @param {module:type/oid} oid - Elliptic curve object identifier\n * @param {Uint8Array} Q - ECDSA public point\n * @param {Uint8Array} d - ECDSA secret scalar\n * @returns {Promise<Boolean>} Whether params are valid.\n * @async\n */\nexport async function validateParams(oid, Q, d) {\n  const curve = new CurveWithOID(oid);\n  // Reject curves x25519 and ed25519\n  if (curve.keyType !== enums.publicKey.ecdsa) {\n    return false;\n  }\n\n  // To speed up the validation, we try to use node- or webcrypto when available\n  // and sign + verify a random message\n  switch (curve.type) {\n    case 'web':\n    case 'node': {\n      const message = getRandomBytes(8);\n      const hashAlgo = enums.hash.sha256;\n      const hashed = await hash.digest(hashAlgo, message);\n      try {\n        const signature = await sign(oid, hashAlgo, message, Q, d, hashed);\n        return await verify(oid, hashAlgo, signature, message, Q, hashed);\n      } catch (err) {\n        return false;\n      }\n    }\n    default:\n      return validateStandardParams(enums.publicKey.ecdsa, oid, Q, d);\n  }\n}\n\n\n//////////////////////////\n//                      //\n//   Helper functions   //\n//                      //\n//////////////////////////\n\nasync function ellipticSign(curve, hashed, privateKey) {\n  const indutnyCurve = await getIndutnyCurve(curve.name);\n  const key = keyFromPrivate(indutnyCurve, privateKey);\n  const signature = key.sign(hashed);\n  return {\n    r: signature.r.toArrayLike(Uint8Array),\n    s: signature.s.toArrayLike(Uint8Array)\n  };\n}\n\nasync function ellipticVerify(curve, signature, digest, publicKey) {\n  const indutnyCurve = await getIndutnyCurve(curve.name);\n  const key = keyFromPublic(indutnyCurve, publicKey);\n  return key.verify(digest, signature);\n}\n\nasync function webSign(curve, hashAlgo, message, keyPair) {\n  const len = curve.payloadSize;\n  const jwk = privateToJWK(curve.payloadSize, webCurves[curve.name], keyPair.publicKey, keyPair.privateKey);\n  const key = await webCrypto.importKey(\n    'jwk',\n    jwk,\n    {\n      'name': 'ECDSA',\n      'namedCurve': webCurves[curve.name],\n      'hash': { name: enums.read(enums.webHash, curve.hash) }\n    },\n    false,\n    ['sign']\n  );\n\n  const signature = new Uint8Array(await webCrypto.sign(\n    {\n      'name': 'ECDSA',\n      'namedCurve': webCurves[curve.name],\n      'hash': { name: enums.read(enums.webHash, hashAlgo) }\n    },\n    key,\n    message\n  ));\n\n  return {\n    r: signature.slice(0, len),\n    s: signature.slice(len, len << 1)\n  };\n}\n\nasync function webVerify(curve, hashAlgo, { r, s }, message, publicKey) {\n  const jwk = rawPublicToJWK(curve.payloadSize, webCurves[curve.name], publicKey);\n  const key = await webCrypto.importKey(\n    'jwk',\n    jwk,\n    {\n      'name': 'ECDSA',\n      'namedCurve': webCurves[curve.name],\n      'hash': { name: enums.read(enums.webHash, curve.hash) }\n    },\n    false,\n    ['verify']\n  );\n\n  const signature = util.concatUint8Array([r, s]).buffer;\n\n  return webCrypto.verify(\n    {\n      'name': 'ECDSA',\n      'namedCurve': webCurves[curve.name],\n      'hash': { name: enums.read(enums.webHash, hashAlgo) }\n    },\n    key,\n    signature,\n    message\n  );\n}\n\nasync function nodeSign(curve, hashAlgo, message, keyPair) {\n  const sign = nodeCrypto.createSign(enums.read(enums.hash, hashAlgo));\n  sign.write(message);\n  sign.end();\n  const key = ECPrivateKey.encode({\n    version: 1,\n    parameters: curve.oid,\n    privateKey: Array.from(keyPair.privateKey),\n    publicKey: { unused: 0, data: Array.from(keyPair.publicKey) }\n  }, 'pem', {\n    label: 'EC PRIVATE KEY'\n  });\n\n  return ECDSASignature.decode(sign.sign(key), 'der');\n}\n\nasync function nodeVerify(curve, hashAlgo, { r, s }, message, publicKey) {\n  const { default: BN } = await import('bn.js');\n\n  const verify = nodeCrypto.createVerify(enums.read(enums.hash, hashAlgo));\n  verify.write(message);\n  verify.end();\n  const key = SubjectPublicKeyInfo.encode({\n    algorithm: {\n      algorithm: [1, 2, 840, 10045, 2, 1],\n      parameters: curve.oid\n    },\n    subjectPublicKey: { unused: 0, data: Array.from(publicKey) }\n  }, 'pem', {\n    label: 'PUBLIC KEY'\n  });\n  const signature = ECDSASignature.encode({\n    r: new BN(r), s: new BN(s)\n  }, 'der');\n\n  try {\n    return verify.verify(key, signature);\n  } catch (err) {\n    return false;\n  }\n}\n\n// Originally written by Owen Smith https://github.com/omsmith\n// Adapted on Feb 2018 from https://github.com/Brightspace/node-jwk-to-pem/\n\n/* eslint-disable no-invalid-this */\n\nconst asn1 = nodeCrypto ? require('asn1.js') : undefined;\n\nconst ECDSASignature = nodeCrypto ?\n  asn1.define('ECDSASignature', function() {\n    this.seq().obj(\n      this.key('r').int(),\n      this.key('s').int()\n    );\n  }) : undefined;\n\nconst ECPrivateKey = nodeCrypto ?\n  asn1.define('ECPrivateKey', function() {\n    this.seq().obj(\n      this.key('version').int(),\n      this.key('privateKey').octstr(),\n      this.key('parameters').explicit(0).optional().any(),\n      this.key('publicKey').explicit(1).optional().bitstr()\n    );\n  }) : undefined;\n\nconst AlgorithmIdentifier = nodeCrypto ?\n  asn1.define('AlgorithmIdentifier', function() {\n    this.seq().obj(\n      this.key('algorithm').objid(),\n      this.key('parameters').optional().any()\n    );\n  }) : undefined;\n\nconst SubjectPublicKeyInfo = nodeCrypto ?\n  asn1.define('SubjectPublicKeyInfo', function() {\n    this.seq().obj(\n      this.key('algorithm').use(AlgorithmIdentifier),\n      this.key('subjectPublicKey').bitstr()\n    );\n  }) : undefined;\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2018 Proton Technologies AG\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview Implementation of legacy EdDSA following RFC4880bis-03 for OpenPGP.\n * This key type has been deprecated by the crypto-refresh RFC.\n * @module crypto/public_key/elliptic/eddsa_legacy\n * @private\n */\n\nimport sha512 from 'hash.js/lib/hash/sha/512';\nimport nacl from '@openpgp/tweetnacl/nacl-fast-light';\nimport util from '../../../util';\nimport enums from '../../../enums';\nimport hash from '../../hash';\n\nnacl.hash = bytes => new Uint8Array(sha512().update(bytes).digest());\n\n/**\n * Sign a message using the provided legacy EdDSA key\n * @param {module:type/oid} oid - Elliptic curve object identifier\n * @param {module:enums.hash} hashAlgo - Hash algorithm used to sign (must be sha256 or stronger)\n * @param {Uint8Array} message - Message to sign\n * @param {Uint8Array} publicKey - Public key\n * @param {Uint8Array} privateKey - Private key used to sign the message\n * @param {Uint8Array} hashed - The hashed message\n * @returns {Promise<{\n *   r: Uint8Array,\n *   s: Uint8Array\n * }>} Signature of the message\n * @async\n */\nexport async function sign(oid, hashAlgo, message, publicKey, privateKey, hashed) {\n  if (hash.getHashByteLength(hashAlgo) < hash.getHashByteLength(enums.hash.sha256)) {\n    // see https://tools.ietf.org/id/draft-ietf-openpgp-rfc4880bis-10.html#section-15-7.2\n    throw new Error('Hash algorithm too weak for EdDSA.');\n  }\n  const secretKey = util.concatUint8Array([privateKey, publicKey.subarray(1)]);\n  const signature = nacl.sign.detached(hashed, secretKey);\n  // EdDSA signature params are returned in little-endian format\n  return {\n    r: signature.subarray(0, 32),\n    s: signature.subarray(32)\n  };\n}\n\n/**\n * Verifies if a legacy EdDSA signature is valid for a message\n * @param {module:type/oid} oid - Elliptic curve object identifier\n * @param {module:enums.hash} hashAlgo - Hash algorithm used in the signature\n * @param  {{r: Uint8Array,\n             s: Uint8Array}}   signature Signature to verify the message\n * @param {Uint8Array} m - Message to verify\n * @param {Uint8Array} publicKey - Public key used to verify the message\n * @param {Uint8Array} hashed - The hashed message\n * @returns {Boolean}\n * @async\n */\nexport async function verify(oid, hashAlgo, { r, s }, m, publicKey, hashed) {\n  if (hash.getHashByteLength(hashAlgo) < hash.getHashByteLength(enums.hash.sha256)) {\n    throw new Error('Hash algorithm too weak for EdDSA.');\n  }\n  const signature = util.concatUint8Array([r, s]);\n  return nacl.sign.detached.verify(hashed, signature, publicKey.subarray(1));\n}\n/**\n * Validate legacy EdDSA parameters\n * @param {module:type/oid} oid - Elliptic curve object identifier\n * @param {Uint8Array} Q - EdDSA public point\n * @param {Uint8Array} k - EdDSA secret seed\n * @returns {Promise<Boolean>} Whether params are valid.\n * @async\n */\nexport async function validateParams(oid, Q, k) {\n  // Check whether the given curve is supported\n  if (oid.getName() !== 'ed25519') {\n    return false;\n  }\n\n  /**\n   * Derive public point Q' = dG from private key\n   * and expect Q == Q'\n   */\n  const { publicKey } = nacl.sign.keyPair.fromSeed(k);\n  const dG = new Uint8Array([0x40, ...publicKey]); // Add public key prefix\n  return util.equalsUint8Array(Q, dG);\n\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2018 Proton Technologies AG\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview Implementation of EdDSA following RFC4880bis-03 for OpenPGP\n * @module crypto/public_key/elliptic/eddsa\n * @private\n */\n\nimport sha512 from 'hash.js/lib/hash/sha/512';\nimport nacl from '@openpgp/tweetnacl/nacl-fast-light';\nimport util from '../../../util';\nimport enums from '../../../enums';\nimport hash from '../../hash';\nimport { getRandomBytes } from '../../random';\n\nnacl.hash = bytes => new Uint8Array(sha512().update(bytes).digest());\n\n/**\n * Generate (non-legacy) EdDSA key\n * @param {module:enums.publicKey} algo - Algorithm identifier\n * @returns {Promise<{ A: Uint8Array, seed: Uint8Array }>}\n */\nexport async function generate(algo) {\n  switch (algo) {\n    case enums.publicKey.ed25519: {\n      const seed = getRandomBytes(32);\n      const { publicKey: A } = nacl.sign.keyPair.fromSeed(seed);\n      return { A, seed };\n    }\n    default:\n      throw new Error('Unsupported EdDSA algorithm');\n  }\n}\n\n/**\n * Sign a message using the provided key\n * @param {module:enums.publicKey} algo - Algorithm identifier\n * @param {module:enums.hash} hashAlgo - Hash algorithm used to sign (must be sha256 or stronger)\n * @param {Uint8Array} message - Message to sign\n * @param {Uint8Array} publicKey - Public key\n * @param {Uint8Array} privateKey - Private key used to sign the message\n * @param {Uint8Array} hashed - The hashed message\n * @returns {Promise<{\n *   RS: Uint8Array\n * }>} Signature of the message\n * @async\n */\nexport async function sign(algo, hashAlgo, message, publicKey, privateKey, hashed) {\n  if (hash.getHashByteLength(hashAlgo) < hash.getHashByteLength(getPreferredHashAlgo(algo))) {\n    throw new Error('Hash algorithm too weak for EdDSA.');\n  }\n  switch (algo) {\n    case enums.publicKey.ed25519: {\n      const secretKey = util.concatUint8Array([privateKey, publicKey]);\n      const signature = nacl.sign.detached(hashed, secretKey);\n      return { RS: signature };\n    }\n    case enums.publicKey.ed448:\n    default:\n      throw new Error('Unsupported EdDSA algorithm');\n  }\n\n}\n\n/**\n * Verifies if a signature is valid for a message\n * @param {module:enums.publicKey} algo - Algorithm identifier\n * @param {module:enums.hash} hashAlgo - Hash algorithm used in the signature\n * @param  {{ RS: Uint8Array }} signature Signature to verify the message\n * @param {Uint8Array} m - Message to verify\n * @param {Uint8Array} publicKey - Public key used to verify the message\n * @param {Uint8Array} hashed - The hashed message\n * @returns {Boolean}\n * @async\n */\nexport async function verify(algo, hashAlgo, { RS }, m, publicKey, hashed) {\n  if (hash.getHashByteLength(hashAlgo) < hash.getHashByteLength(getPreferredHashAlgo(algo))) {\n    throw new Error('Hash algorithm too weak for EdDSA.');\n  }\n  switch (algo) {\n    case enums.publicKey.ed25519: {\n      return nacl.sign.detached.verify(hashed, RS, publicKey);\n    }\n    case enums.publicKey.ed448:\n    default:\n      throw new Error('Unsupported EdDSA algorithm');\n  }\n}\n/**\n * Validate (non-legacy) EdDSA parameters\n * @param {module:enums.publicKey} algo - Algorithm identifier\n * @param {Uint8Array} A - EdDSA public point\n * @param {Uint8Array} seed - EdDSA secret seed\n * @param {Uint8Array} oid - (legacy only) EdDSA OID\n * @returns {Promise<Boolean>} Whether params are valid.\n * @async\n */\nexport async function validateParams(algo, A, seed) {\n  switch (algo) {\n    case enums.publicKey.ed25519: {\n      /**\n       * Derive public point A' from private key\n       * and expect A == A'\n       */\n      const { publicKey } = nacl.sign.keyPair.fromSeed(seed);\n      return util.equalsUint8Array(A, publicKey);\n    }\n\n    case enums.publicKey.ed448: // unsupported\n    default:\n      return false;\n  }\n}\n\nexport function getPreferredHashAlgo(algo) {\n  switch (algo) {\n    case enums.publicKey.ed25519:\n      return enums.hash.sha256;\n    default:\n      throw new Error('Unknown EdDSA algo');\n  }\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2015-2016 Decentral\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview Implementation of RFC 3394 AES Key Wrap & Key Unwrap funcions\n * @see module:crypto/public_key/elliptic/ecdh\n * @module crypto/aes_kw\n * @private\n */\n\nimport * as cipher from './cipher';\nimport util from '../util';\n\n/**\n * AES key wrap\n * @function\n * @param {Uint8Array} key\n * @param {Uint8Array} data\n * @returns {Uint8Array}\n */\nexport function wrap(key, data) {\n  const aes = new cipher['aes' + (key.length * 8)](key);\n  const IV = new Uint32Array([0xA6A6A6A6, 0xA6A6A6A6]);\n  const P = unpack(data);\n  let A = IV;\n  const R = P;\n  const n = P.length / 2;\n  const t = new Uint32Array([0, 0]);\n  let B = new Uint32Array(4);\n  for (let j = 0; j <= 5; ++j) {\n    for (let i = 0; i < n; ++i) {\n      t[1] = n * j + (1 + i);\n      // B = A\n      B[0] = A[0];\n      B[1] = A[1];\n      // B = A || R[i]\n      B[2] = R[2 * i];\n      B[3] = R[2 * i + 1];\n      // B = AES(K, B)\n      B = unpack(aes.encrypt(pack(B)));\n      // A = MSB(64, B) ^ t\n      A = B.subarray(0, 2);\n      A[0] ^= t[0];\n      A[1] ^= t[1];\n      // R[i] = LSB(64, B)\n      R[2 * i] = B[2];\n      R[2 * i + 1] = B[3];\n    }\n  }\n  return pack(A, R);\n}\n\n/**\n * AES key unwrap\n * @function\n * @param {String} key\n * @param {String} data\n * @returns {Uint8Array}\n * @throws {Error}\n */\nexport function unwrap(key, data) {\n  const aes = new cipher['aes' + (key.length * 8)](key);\n  const IV = new Uint32Array([0xA6A6A6A6, 0xA6A6A6A6]);\n  const C = unpack(data);\n  let A = C.subarray(0, 2);\n  const R = C.subarray(2);\n  const n = C.length / 2 - 1;\n  const t = new Uint32Array([0, 0]);\n  let B = new Uint32Array(4);\n  for (let j = 5; j >= 0; --j) {\n    for (let i = n - 1; i >= 0; --i) {\n      t[1] = n * j + (i + 1);\n      // B = A ^ t\n      B[0] = A[0] ^ t[0];\n      B[1] = A[1] ^ t[1];\n      // B = (A ^ t) || R[i]\n      B[2] = R[2 * i];\n      B[3] = R[2 * i + 1];\n      // B = AES-1(B)\n      B = unpack(aes.decrypt(pack(B)));\n      // A = MSB(64, B)\n      A = B.subarray(0, 2);\n      // R[i] = LSB(64, B)\n      R[2 * i] = B[2];\n      R[2 * i + 1] = B[3];\n    }\n  }\n  if (A[0] === IV[0] && A[1] === IV[1]) {\n    return pack(R);\n  }\n  throw new Error('Key Data Integrity failed');\n}\n\nfunction createArrayBuffer(data) {\n  if (util.isString(data)) {\n    const { length } = data;\n    const buffer = new ArrayBuffer(length);\n    const view = new Uint8Array(buffer);\n    for (let j = 0; j < length; ++j) {\n      view[j] = data.charCodeAt(j);\n    }\n    return buffer;\n  }\n  return new Uint8Array(data).buffer;\n}\n\nfunction unpack(data) {\n  const { length } = data;\n  const buffer = createArrayBuffer(data);\n  const view = new DataView(buffer);\n  const arr = new Uint32Array(length / 4);\n  for (let i = 0; i < length / 4; ++i) {\n    arr[i] = view.getUint32(4 * i);\n  }\n  return arr;\n}\n\nfunction pack() {\n  let length = 0;\n  for (let k = 0; k < arguments.length; ++k) {\n    length += 4 * arguments[k].length;\n  }\n  const buffer = new ArrayBuffer(length);\n  const view = new DataView(buffer);\n  let offset = 0;\n  for (let i = 0; i < arguments.length; ++i) {\n    for (let j = 0; j < arguments[i].length; ++j) {\n      view.setUint32(offset + 4 * j, arguments[i][j]);\n    }\n    offset += 4 * arguments[i].length;\n  }\n  return new Uint8Array(buffer);\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2015-2016 Decentral\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport util from '../util';\n\n/**\n * @fileoverview Functions to add and remove PKCS5 padding\n * @see PublicKeyEncryptedSessionKeyPacket\n * @module crypto/pkcs5\n * @private\n */\n\n/**\n * Add pkcs5 padding to a message\n * @param {Uint8Array} message - message to pad\n * @returns {Uint8Array} Padded message.\n */\nexport function encode(message) {\n  const c = 8 - (message.length % 8);\n  const padded = new Uint8Array(message.length + c).fill(c);\n  padded.set(message);\n  return padded;\n}\n\n/**\n * Remove pkcs5 padding from a message\n * @param {Uint8Array} message - message to remove padding from\n * @returns {Uint8Array} Message without padding.\n */\nexport function decode(message) {\n  const len = message.length;\n  if (len > 0) {\n    const c = message[len - 1];\n    if (c >= 1) {\n      const provided = message.subarray(len - c);\n      const computed = new Uint8Array(c).fill(c);\n      if (util.equalsUint8Array(provided, computed)) {\n        return message.subarray(0, len - c);\n      }\n    }\n  }\n  throw new Error('Invalid padding');\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2015-2016 Decentral\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview Key encryption and decryption for RFC 6637 ECDH\n * @module crypto/public_key/elliptic/ecdh\n * @private\n */\n\nimport nacl from '@openpgp/tweetnacl/nacl-fast-light';\nimport { CurveWithOID, jwkToRawPublic, rawPublicToJWK, privateToJWK, validateStandardParams } from './oid_curves';\nimport * as aesKW from '../../aes_kw';\nimport { getRandomBytes } from '../../random';\nimport hash from '../../hash';\nimport enums from '../../../enums';\nimport util from '../../../util';\nimport { b64ToUint8Array } from '../../../encoding/base64';\nimport * as pkcs5 from '../../pkcs5';\nimport { keyFromPublic, keyFromPrivate, getIndutnyCurve } from './indutnyKey';\nimport getCipher from '../../cipher/getCipher';\n\nconst webCrypto = util.getWebCrypto();\nconst nodeCrypto = util.getNodeCrypto();\n\n/**\n * Validate ECDH parameters\n * @param {module:type/oid} oid - Elliptic curve object identifier\n * @param {Uint8Array} Q - ECDH public point\n * @param {Uint8Array} d - ECDH secret scalar\n * @returns {Promise<Boolean>} Whether params are valid.\n * @async\n */\nexport async function validateParams(oid, Q, d) {\n  return validateStandardParams(enums.publicKey.ecdh, oid, Q, d);\n}\n\n// Build Param for ECDH algorithm (RFC 6637)\nfunction buildEcdhParam(public_algo, oid, kdfParams, fingerprint) {\n  return util.concatUint8Array([\n    oid.write(),\n    new Uint8Array([public_algo]),\n    kdfParams.write(),\n    util.stringToUint8Array('Anonymous Sender    '),\n    fingerprint.subarray(0, 20)\n  ]);\n}\n\n// Key Derivation Function (RFC 6637)\nasync function kdf(hashAlgo, X, length, param, stripLeading = false, stripTrailing = false) {\n  // Note: X is little endian for Curve25519, big-endian for all others.\n  // This is not ideal, but the RFC's are unclear\n  // https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-02#appendix-B\n  let i;\n  if (stripLeading) {\n    // Work around old go crypto bug\n    for (i = 0; i < X.length && X[i] === 0; i++);\n    X = X.subarray(i);\n  }\n  if (stripTrailing) {\n    // Work around old OpenPGP.js bug\n    for (i = X.length - 1; i >= 0 && X[i] === 0; i--);\n    X = X.subarray(0, i + 1);\n  }\n  const digest = await hash.digest(hashAlgo, util.concatUint8Array([\n    new Uint8Array([0, 0, 0, 1]),\n    X,\n    param\n  ]));\n  return digest.subarray(0, length);\n}\n\n/**\n * Generate ECDHE ephemeral key and secret from public key\n *\n * @param {CurveWithOID} curve - Elliptic curve object\n * @param {Uint8Array} Q - Recipient public key\n * @returns {Promise<{publicKey: Uint8Array, sharedKey: Uint8Array}>}\n * @async\n */\nasync function genPublicEphemeralKey(curve, Q) {\n  switch (curve.type) {\n    case 'curve25519': {\n      const d = getRandomBytes(32);\n      const { secretKey, sharedKey } = await genPrivateEphemeralKey(curve, Q, null, d);\n      let { publicKey } = nacl.box.keyPair.fromSecretKey(secretKey);\n      publicKey = util.concatUint8Array([new Uint8Array([0x40]), publicKey]);\n      return { publicKey, sharedKey }; // Note: sharedKey is little-endian here, unlike below\n    }\n    case 'web':\n      if (curve.web && util.getWebCrypto()) {\n        try {\n          return await webPublicEphemeralKey(curve, Q);\n        } catch (err) {\n          util.printDebugError(err);\n        }\n      }\n      break;\n    case 'node':\n      return nodePublicEphemeralKey(curve, Q);\n  }\n  return ellipticPublicEphemeralKey(curve, Q);\n}\n\n/**\n * Encrypt and wrap a session key\n *\n * @param {module:type/oid} oid - Elliptic curve object identifier\n * @param {module:type/kdf_params} kdfParams - KDF params including cipher and algorithm to use\n * @param {Uint8Array} data - Unpadded session key data\n * @param {Uint8Array} Q - Recipient public key\n * @param {Uint8Array} fingerprint - Recipient fingerprint\n * @returns {Promise<{publicKey: Uint8Array, wrappedKey: Uint8Array}>}\n * @async\n */\nexport async function encrypt(oid, kdfParams, data, Q, fingerprint) {\n  const m = pkcs5.encode(data);\n\n  const curve = new CurveWithOID(oid);\n  const { publicKey, sharedKey } = await genPublicEphemeralKey(curve, Q);\n  const param = buildEcdhParam(enums.publicKey.ecdh, oid, kdfParams, fingerprint);\n  const { keySize } = getCipher(kdfParams.cipher);\n  const Z = await kdf(kdfParams.hash, sharedKey, keySize, param);\n  const wrappedKey = aesKW.wrap(Z, m);\n  return { publicKey, wrappedKey };\n}\n\n/**\n * Generate ECDHE secret from private key and public part of ephemeral key\n *\n * @param {CurveWithOID} curve - Elliptic curve object\n * @param {Uint8Array} V - Public part of ephemeral key\n * @param {Uint8Array} Q - Recipient public key\n * @param {Uint8Array} d - Recipient private key\n * @returns {Promise<{secretKey: Uint8Array, sharedKey: Uint8Array}>}\n * @async\n */\nasync function genPrivateEphemeralKey(curve, V, Q, d) {\n  if (d.length !== curve.payloadSize) {\n    const privateKey = new Uint8Array(curve.payloadSize);\n    privateKey.set(d, curve.payloadSize - d.length);\n    d = privateKey;\n  }\n  switch (curve.type) {\n    case 'curve25519': {\n      const secretKey = d.slice().reverse();\n      const sharedKey = nacl.scalarMult(secretKey, V.subarray(1));\n      return { secretKey, sharedKey }; // Note: sharedKey is little-endian here, unlike below\n    }\n    case 'web':\n      if (curve.web && util.getWebCrypto()) {\n        try {\n          return await webPrivateEphemeralKey(curve, V, Q, d);\n        } catch (err) {\n          util.printDebugError(err);\n        }\n      }\n      break;\n    case 'node':\n      return nodePrivateEphemeralKey(curve, V, d);\n  }\n  return ellipticPrivateEphemeralKey(curve, V, d);\n}\n\n/**\n * Decrypt and unwrap the value derived from session key\n *\n * @param {module:type/oid} oid - Elliptic curve object identifier\n * @param {module:type/kdf_params} kdfParams - KDF params including cipher and algorithm to use\n * @param {Uint8Array} V - Public part of ephemeral key\n * @param {Uint8Array} C - Encrypted and wrapped value derived from session key\n * @param {Uint8Array} Q - Recipient public key\n * @param {Uint8Array} d - Recipient private key\n * @param {Uint8Array} fingerprint - Recipient fingerprint\n * @returns {Promise<Uint8Array>} Value derived from session key.\n * @async\n */\nexport async function decrypt(oid, kdfParams, V, C, Q, d, fingerprint) {\n  const curve = new CurveWithOID(oid);\n  const { sharedKey } = await genPrivateEphemeralKey(curve, V, Q, d);\n  const param = buildEcdhParam(enums.publicKey.ecdh, oid, kdfParams, fingerprint);\n  const { keySize } = getCipher(kdfParams.cipher);\n  let err;\n  for (let i = 0; i < 3; i++) {\n    try {\n      // Work around old go crypto bug and old OpenPGP.js bug, respectively.\n      const Z = await kdf(kdfParams.hash, sharedKey, keySize, param, i === 1, i === 2);\n      return pkcs5.decode(aesKW.unwrap(Z, C));\n    } catch (e) {\n      err = e;\n    }\n  }\n  throw err;\n}\n\n/**\n * Generate ECDHE secret from private key and public part of ephemeral key using webCrypto\n *\n * @param {CurveWithOID} curve - Elliptic curve object\n * @param {Uint8Array} V - Public part of ephemeral key\n * @param {Uint8Array} Q - Recipient public key\n * @param {Uint8Array} d - Recipient private key\n * @returns {Promise<{secretKey: Uint8Array, sharedKey: Uint8Array}>}\n * @async\n */\nasync function webPrivateEphemeralKey(curve, V, Q, d) {\n  const recipient = privateToJWK(curve.payloadSize, curve.web.web, Q, d);\n  let privateKey = webCrypto.importKey(\n    'jwk',\n    recipient,\n    {\n      name: 'ECDH',\n      namedCurve: curve.web.web\n    },\n    true,\n    ['deriveKey', 'deriveBits']\n  );\n  const jwk = rawPublicToJWK(curve.payloadSize, curve.web.web, V);\n  let sender = webCrypto.importKey(\n    'jwk',\n    jwk,\n    {\n      name: 'ECDH',\n      namedCurve: curve.web.web\n    },\n    true,\n    []\n  );\n  [privateKey, sender] = await Promise.all([privateKey, sender]);\n  let S = webCrypto.deriveBits(\n    {\n      name: 'ECDH',\n      namedCurve: curve.web.web,\n      public: sender\n    },\n    privateKey,\n    curve.web.sharedSize\n  );\n  let secret = webCrypto.exportKey(\n    'jwk',\n    privateKey\n  );\n  [S, secret] = await Promise.all([S, secret]);\n  const sharedKey = new Uint8Array(S);\n  const secretKey = b64ToUint8Array(secret.d, true);\n  return { secretKey, sharedKey };\n}\n\n/**\n * Generate ECDHE ephemeral key and secret from public key using webCrypto\n *\n * @param {CurveWithOID} curve - Elliptic curve object\n * @param {Uint8Array} Q - Recipient public key\n * @returns {Promise<{publicKey: Uint8Array, sharedKey: Uint8Array}>}\n * @async\n */\nasync function webPublicEphemeralKey(curve, Q) {\n  const jwk = rawPublicToJWK(curve.payloadSize, curve.web.web, Q);\n  let keyPair = webCrypto.generateKey(\n    {\n      name: 'ECDH',\n      namedCurve: curve.web.web\n    },\n    true,\n    ['deriveKey', 'deriveBits']\n  );\n  let recipient = webCrypto.importKey(\n    'jwk',\n    jwk,\n    {\n      name: 'ECDH',\n      namedCurve: curve.web.web\n    },\n    false,\n    []\n  );\n  [keyPair, recipient] = await Promise.all([keyPair, recipient]);\n  let s = webCrypto.deriveBits(\n    {\n      name: 'ECDH',\n      namedCurve: curve.web.web,\n      public: recipient\n    },\n    keyPair.privateKey,\n    curve.web.sharedSize\n  );\n  let p = webCrypto.exportKey(\n    'jwk',\n    keyPair.publicKey\n  );\n  [s, p] = await Promise.all([s, p]);\n  const sharedKey = new Uint8Array(s);\n  const publicKey = new Uint8Array(jwkToRawPublic(p));\n  return { publicKey, sharedKey };\n}\n\n/**\n * Generate ECDHE secret from private key and public part of ephemeral key using indutny/elliptic\n *\n * @param {CurveWithOID} curve - Elliptic curve object\n * @param {Uint8Array} V - Public part of ephemeral key\n * @param {Uint8Array} d - Recipient private key\n * @returns {Promise<{secretKey: Uint8Array, sharedKey: Uint8Array}>}\n * @async\n */\nasync function ellipticPrivateEphemeralKey(curve, V, d) {\n  const indutnyCurve = await getIndutnyCurve(curve.name);\n  V = keyFromPublic(indutnyCurve, V);\n  d = keyFromPrivate(indutnyCurve, d);\n  const secretKey = new Uint8Array(d.getPrivate());\n  const S = d.derive(V.getPublic());\n  const len = indutnyCurve.curve.p.byteLength();\n  const sharedKey = S.toArrayLike(Uint8Array, 'be', len);\n  return { secretKey, sharedKey };\n}\n\n/**\n * Generate ECDHE ephemeral key and secret from public key using indutny/elliptic\n *\n * @param {CurveWithOID} curve - Elliptic curve object\n * @param {Uint8Array} Q - Recipient public key\n * @returns {Promise<{publicKey: Uint8Array, sharedKey: Uint8Array}>}\n * @async\n */\nasync function ellipticPublicEphemeralKey(curve, Q) {\n  const indutnyCurve = await getIndutnyCurve(curve.name);\n  const v = await curve.genKeyPair();\n  Q = keyFromPublic(indutnyCurve, Q);\n  const V = keyFromPrivate(indutnyCurve, v.privateKey);\n  const publicKey = v.publicKey;\n  const S = V.derive(Q.getPublic());\n  const len = indutnyCurve.curve.p.byteLength();\n  const sharedKey = S.toArrayLike(Uint8Array, 'be', len);\n  return { publicKey, sharedKey };\n}\n\n/**\n * Generate ECDHE secret from private key and public part of ephemeral key using nodeCrypto\n *\n * @param {CurveWithOID} curve - Elliptic curve object\n * @param {Uint8Array} V - Public part of ephemeral key\n * @param {Uint8Array} d - Recipient private key\n * @returns {Promise<{secretKey: Uint8Array, sharedKey: Uint8Array}>}\n * @async\n */\nasync function nodePrivateEphemeralKey(curve, V, d) {\n  const recipient = nodeCrypto.createECDH(curve.node.node);\n  recipient.setPrivateKey(d);\n  const sharedKey = new Uint8Array(recipient.computeSecret(V));\n  const secretKey = new Uint8Array(recipient.getPrivateKey());\n  return { secretKey, sharedKey };\n}\n\n/**\n * Generate ECDHE ephemeral key and secret from public key using nodeCrypto\n *\n * @param {CurveWithOID} curve - Elliptic curve object\n * @param {Uint8Array} Q - Recipient public key\n * @returns {Promise<{publicKey: Uint8Array, sharedKey: Uint8Array}>}\n * @async\n */\nasync function nodePublicEphemeralKey(curve, Q) {\n  const sender = nodeCrypto.createECDH(curve.node.node);\n  sender.generateKeys();\n  const sharedKey = new Uint8Array(sender.computeSecret(Q));\n  const publicKey = new Uint8Array(sender.getPublicKey());\n  return { publicKey, sharedKey };\n}\n","/**\n * @fileoverview This module implements HKDF using either the WebCrypto API or Node.js' crypto API.\n * @module crypto/hkdf\n * @private\n */\n\nimport enums from '../enums';\nimport util from '../util';\n\nconst webCrypto = util.getWebCrypto();\nconst nodeCrypto = util.getNodeCrypto();\nconst nodeSubtleCrypto = nodeCrypto && nodeCrypto.webcrypto && nodeCrypto.webcrypto.subtle;\n\nexport default async function HKDF(hashAlgo, inputKey, salt, info, outLen) {\n  const hash = enums.read(enums.webHash, hashAlgo);\n  if (!hash) throw new Error('Hash algo not supported with HKDF');\n\n  if (webCrypto || nodeSubtleCrypto) {\n    const crypto = webCrypto || nodeSubtleCrypto;\n    const importedKey = await crypto.importKey('raw', inputKey, 'HKDF', false, ['deriveBits']);\n    const bits = await crypto.deriveBits({ name: 'HKDF', hash, salt, info }, importedKey, outLen * 8);\n    return new Uint8Array(bits);\n  }\n\n  if (nodeCrypto) {\n    const hashAlgoName = enums.read(enums.hash, hashAlgo);\n    // Node-only HKDF implementation based on https://www.rfc-editor.org/rfc/rfc5869\n\n    const computeHMAC = (hmacKey, hmacMessage) => nodeCrypto.createHmac(hashAlgoName, hmacKey).update(hmacMessage).digest();\n    // Step 1: Extract\n    // PRK = HMAC-Hash(salt, IKM)\n    const pseudoRandomKey = computeHMAC(salt, inputKey);\n\n    const hashLen = pseudoRandomKey.length;\n\n    // Step 2: Expand\n    // HKDF-Expand(PRK, info, L) -> OKM\n    const n = Math.ceil(outLen / hashLen);\n    const outputKeyingMaterial = new Uint8Array(n * hashLen);\n\n    // HMAC input buffer updated at each iteration\n    const roundInput = new Uint8Array(hashLen + info.length + 1);\n    // T_i and last byte are updated at each iteration, but `info` remains constant\n    roundInput.set(info, hashLen);\n\n    for (let i = 0; i < n; i++) {\n      // T(0) = empty string (zero length)\n      // T(i) = HMAC-Hash(PRK, T(i-1) | info | i)\n      roundInput[roundInput.length - 1] = i + 1;\n      // t = T(i+1)\n      const t = computeHMAC(pseudoRandomKey, i > 0 ? roundInput : roundInput.subarray(hashLen));\n      roundInput.set(t, 0);\n\n      outputKeyingMaterial.set(t, i * hashLen);\n    }\n\n    return outputKeyingMaterial.subarray(0, outLen);\n  }\n\n  throw new Error('No HKDF implementation available');\n}\n","/**\n * @fileoverview Key encryption and decryption for RFC 6637 ECDH\n * @module crypto/public_key/elliptic/ecdh\n * @private\n */\n\nimport nacl from '@openpgp/tweetnacl/nacl-fast-light';\nimport * as aesKW from '../../aes_kw';\nimport { getRandomBytes } from '../../random';\n\nimport enums from '../../../enums';\nimport util from '../../../util';\nimport getCipher from '../../cipher/getCipher';\nimport computeHKDF from '../../hkdf';\n\nconst HKDF_INFO = {\n  x25519: util.encodeUTF8('OpenPGP X25519')\n};\n\n/**\n * Generate ECDH key for Montgomery curves\n * @param {module:enums.publicKey} algo - Algorithm identifier\n * @returns {Promise<{ A: Uint8Array, k: Uint8Array }>}\n */\nexport async function generate(algo) {\n  switch (algo) {\n    case enums.publicKey.x25519: {\n      // k stays in little-endian, unlike legacy ECDH over curve25519\n      const k = getRandomBytes(32);\n      const { publicKey: A } = nacl.box.keyPair.fromSecretKey(k);\n      return { A, k };\n    }\n    default:\n      throw new Error('Unsupported ECDH algorithm');\n  }\n}\n\n/**\n* Validate ECDH parameters\n* @param {module:enums.publicKey} algo - Algorithm identifier\n* @param {Uint8Array} A - ECDH public point\n* @param {Uint8Array} k - ECDH secret scalar\n* @returns {Promise<Boolean>} Whether params are valid.\n* @async\n*/\nexport async function validateParams(algo, A, k) {\n  switch (algo) {\n    case enums.publicKey.x25519: {\n      /**\n       * Derive public point A' from private key\n       * and expect A == A'\n       */\n      const { publicKey } = nacl.box.keyPair.fromSecretKey(k);\n      return util.equalsUint8Array(A, publicKey);\n    }\n\n    default:\n      return false;\n  }\n}\n\n/**\n * Wrap and encrypt a session key\n *\n * @param {module:enums.publicKey} algo - Algorithm identifier\n * @param {Uint8Array} data - session key data to be encrypted\n * @param {Uint8Array} recipientA - Recipient public key (K_B)\n * @returns {Promise<{\n *  ephemeralPublicKey: Uint8Array,\n * wrappedKey: Uint8Array\n * }>} ephemeral public key (K_A) and encrypted key\n * @async\n */\nexport async function encrypt(algo, data, recipientA) {\n  switch (algo) {\n    case enums.publicKey.x25519: {\n      const ephemeralSecretKey = getRandomBytes(32);\n      const sharedSecret = nacl.scalarMult(ephemeralSecretKey, recipientA);\n      const { publicKey: ephemeralPublicKey } = nacl.box.keyPair.fromSecretKey(ephemeralSecretKey);\n      const hkdfInput = util.concatUint8Array([\n        ephemeralPublicKey,\n        recipientA,\n        sharedSecret\n      ]);\n      const { keySize } = getCipher(enums.symmetric.aes128);\n      const encryptionKey = await computeHKDF(enums.hash.sha256, hkdfInput, new Uint8Array(), HKDF_INFO.x25519, keySize);\n      const wrappedKey = aesKW.wrap(encryptionKey, data);\n      return { ephemeralPublicKey, wrappedKey };\n    }\n\n    default:\n      throw new Error('Unsupported ECDH algorithm');\n  }\n}\n\n/**\n * Decrypt and unwrap the session key\n *\n * @param {module:enums.publicKey} algo - Algorithm identifier\n * @param {Uint8Array} ephemeralPublicKey - (K_A)\n * @param {Uint8Array} wrappedKey,\n * @param {Uint8Array} A - Recipient public key (K_b), needed for KDF\n * @param {Uint8Array} k - Recipient secret key (b)\n * @returns {Promise<Uint8Array>} decrypted session key data\n * @async\n */\nexport async function decrypt(algo, ephemeralPublicKey, wrappedKey, A, k) {\n  switch (algo) {\n    case enums.publicKey.x25519: {\n      const sharedSecret = nacl.scalarMult(k, ephemeralPublicKey);\n      const hkdfInput = util.concatUint8Array([\n        ephemeralPublicKey,\n        A,\n        sharedSecret\n      ]);\n      const { keySize } = getCipher(enums.symmetric.aes128);\n      const encryptionKey = await computeHKDF(enums.hash.sha256, hkdfInput, new Uint8Array(), HKDF_INFO.x25519, keySize);\n      return aesKW.unwrap(encryptionKey, wrappedKey);\n    }\n    default:\n      throw new Error('Unsupported ECDH algorithm');\n  }\n}\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * @fileoverview A Digital signature algorithm implementation\n * @module crypto/public_key/dsa\n * @private\n */\nimport { getRandomBigInteger } from '../random';\nimport util from '../../util';\nimport { isProbablePrime } from './prime';\n\n/*\n  TODO regarding the hash function, read:\n   https://tools.ietf.org/html/rfc4880#section-13.6\n   https://tools.ietf.org/html/rfc4880#section-14\n*/\n\n/**\n * DSA Sign function\n * @param {Integer} hashAlgo\n * @param {Uint8Array} hashed\n * @param {Uint8Array} g\n * @param {Uint8Array} p\n * @param {Uint8Array} q\n * @param {Uint8Array} x\n * @returns {Promise<{ r: Uint8Array, s: Uint8Array }>}\n * @async\n */\nexport async function sign(hashAlgo, hashed, g, p, q, x) {\n  const BigInteger = await util.getBigInteger();\n  const one = new BigInteger(1);\n  p = new BigInteger(p);\n  q = new BigInteger(q);\n  g = new BigInteger(g);\n  x = new BigInteger(x);\n\n  let k;\n  let r;\n  let s;\n  let t;\n  g = g.mod(p);\n  x = x.mod(q);\n  // If the output size of the chosen hash is larger than the number of\n  // bits of q, the hash result is truncated to fit by taking the number\n  // of leftmost bits equal to the number of bits of q.  This (possibly\n  // truncated) hash function result is treated as a number and used\n  // directly in the DSA signature algorithm.\n  const h = new BigInteger(hashed.subarray(0, q.byteLength())).mod(q);\n  // FIPS-186-4, section 4.6:\n  // The values of r and s shall be checked to determine if r = 0 or s = 0.\n  // If either r = 0 or s = 0, a new value of k shall be generated, and the\n  // signature shall be recalculated. It is extremely unlikely that r = 0\n  // or s = 0 if signatures are generated properly.\n  while (true) {\n    // See Appendix B here: https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf\n    k = await getRandomBigInteger(one, q); // returns in [1, q-1]\n    r = g.modExp(k, p).imod(q); // (g**k mod p) mod q\n    if (r.isZero()) {\n      continue;\n    }\n    const xr = x.mul(r).imod(q);\n    t = h.add(xr).imod(q); // H(m) + x*r mod q\n    s = k.modInv(q).imul(t).imod(q); // k**-1 * (H(m) + x*r) mod q\n    if (s.isZero()) {\n      continue;\n    }\n    break;\n  }\n  return {\n    r: r.toUint8Array('be', q.byteLength()),\n    s: s.toUint8Array('be', q.byteLength())\n  };\n}\n\n/**\n * DSA Verify function\n * @param {Integer} hashAlgo\n * @param {Uint8Array} r\n * @param {Uint8Array} s\n * @param {Uint8Array} hashed\n * @param {Uint8Array} g\n * @param {Uint8Array} p\n * @param {Uint8Array} q\n * @param {Uint8Array} y\n * @returns {boolean}\n * @async\n */\nexport async function verify(hashAlgo, r, s, hashed, g, p, q, y) {\n  const BigInteger = await util.getBigInteger();\n  const zero = new BigInteger(0);\n  r = new BigInteger(r);\n  s = new BigInteger(s);\n\n  p = new BigInteger(p);\n  q = new BigInteger(q);\n  g = new BigInteger(g);\n  y = new BigInteger(y);\n\n  if (r.lte(zero) || r.gte(q) ||\n      s.lte(zero) || s.gte(q)) {\n    util.printDebug('invalid DSA Signature');\n    return false;\n  }\n  const h = new BigInteger(hashed.subarray(0, q.byteLength())).imod(q);\n  const w = s.modInv(q); // s**-1 mod q\n  if (w.isZero()) {\n    util.printDebug('invalid DSA Signature');\n    return false;\n  }\n\n  g = g.mod(p);\n  y = y.mod(p);\n  const u1 = h.mul(w).imod(q); // H(m) * w mod q\n  const u2 = r.mul(w).imod(q); // r * w mod q\n  const t1 = g.modExp(u1, p); // g**u1 mod p\n  const t2 = y.modExp(u2, p); // y**u2 mod p\n  const v = t1.mul(t2).imod(p).imod(q); // (g**u1 * y**u2 mod p) mod q\n  return v.equal(r);\n}\n\n/**\n * Validate DSA parameters\n * @param {Uint8Array} p - DSA prime\n * @param {Uint8Array} q - DSA group order\n * @param {Uint8Array} g - DSA sub-group generator\n * @param {Uint8Array} y - DSA public key\n * @param {Uint8Array} x - DSA private key\n * @returns {Promise<Boolean>} Whether params are valid.\n * @async\n */\nexport async function validateParams(p, q, g, y, x) {\n  const BigInteger = await util.getBigInteger();\n  p = new BigInteger(p);\n  q = new BigInteger(q);\n  g = new BigInteger(g);\n  y = new BigInteger(y);\n  const one = new BigInteger(1);\n  // Check that 1 < g < p\n  if (g.lte(one) || g.gte(p)) {\n    return false;\n  }\n\n  /**\n   * Check that subgroup order q divides p-1\n   */\n  if (!p.dec().mod(q).isZero()) {\n    return false;\n  }\n\n  /**\n   * g has order q\n   * Check that g ** q = 1 mod p\n   */\n  if (!g.modExp(q, p).isOne()) {\n    return false;\n  }\n\n  /**\n   * Check q is large and probably prime (we mainly want to avoid small factors)\n   */\n  const qSize = new BigInteger(q.bitLength());\n  const n150 = new BigInteger(150);\n  if (qSize.lt(n150) || !(await isProbablePrime(q, null, 32))) {\n    return false;\n  }\n\n  /**\n   * Re-derive public key y' = g ** x mod p\n   * Expect y == y'\n   *\n   * Blinded exponentiation computes g**{rq + x} to compare to y\n   */\n  x = new BigInteger(x);\n  const two = new BigInteger(2);\n  const r = await getRandomBigInteger(two.leftShift(qSize.dec()), two.leftShift(qSize)); // draw r of same size as q\n  const rqx = q.mul(r).add(x);\n  if (!y.equal(g.modExp(rqx, p))) {\n    return false;\n  }\n\n  return true;\n}\n","/**\n * @fileoverview Asymmetric cryptography functions\n * @module crypto/public_key\n * @private\n */\n\nimport nacl from '@openpgp/tweetnacl/nacl-fast-light';\nimport * as rsa from './rsa';\nimport * as elgamal from './elgamal';\nimport * as elliptic from './elliptic';\nimport * as dsa from './dsa';\n\nexport default {\n  /** @see module:crypto/public_key/rsa */\n  rsa: rsa,\n  /** @see module:crypto/public_key/elgamal */\n  elgamal: elgamal,\n  /** @see module:crypto/public_key/elliptic */\n  elliptic: elliptic,\n  /** @see module:crypto/public_key/dsa */\n  dsa: dsa,\n  /** @see tweetnacl */\n  nacl: nacl\n};\n","/**\n * @fileoverview Provides functions for asymmetric signing and signature verification\n * @module crypto/signature\n * @private\n */\n\nimport publicKey from './public_key';\nimport enums from '../enums';\nimport util from '../util';\nimport { UnsupportedError } from '../packet/packet';\n\n/**\n * Parse signature in binary form to get the parameters.\n * The returned values are only padded for EdDSA, since in the other cases their expected length\n * depends on the key params, hence we delegate the padding to the signature verification function.\n * See {@link https://tools.ietf.org/html/rfc4880#section-9.1|RFC 4880 9.1}\n * See {@link https://tools.ietf.org/html/rfc4880#section-5.2.2|RFC 4880 5.2.2.}\n * @param {module:enums.publicKey} algo - Public key algorithm\n * @param {Uint8Array} signature - Data for which the signature was created\n * @returns {Promise<Object>} True if signature is valid.\n * @async\n */\nexport function parseSignatureParams(algo, signature) {\n  let read = 0;\n  switch (algo) {\n    // Algorithm-Specific Fields for RSA signatures:\n    // -  MPI of RSA signature value m**d mod n.\n    case enums.publicKey.rsaEncryptSign:\n    case enums.publicKey.rsaEncrypt:\n    case enums.publicKey.rsaSign: {\n      const s = util.readMPI(signature.subarray(read));\n      // The signature needs to be the same length as the public key modulo n.\n      // We pad s on signature verification, where we have access to n.\n      return { s };\n    }\n    // Algorithm-Specific Fields for DSA or ECDSA signatures:\n    // -  MPI of DSA or ECDSA value r.\n    // -  MPI of DSA or ECDSA value s.\n    case enums.publicKey.dsa:\n    case enums.publicKey.ecdsa:\n    {\n      const r = util.readMPI(signature.subarray(read)); read += r.length + 2;\n      const s = util.readMPI(signature.subarray(read));\n      return { r, s };\n    }\n    // Algorithm-Specific Fields for legacy EdDSA signatures:\n    // -  MPI of an EC point r.\n    // -  EdDSA value s, in MPI, in the little endian representation\n    case enums.publicKey.eddsaLegacy: {\n      // When parsing little-endian MPI data, we always need to left-pad it, as done with big-endian values:\n      // https://www.ietf.org/archive/id/draft-ietf-openpgp-rfc4880bis-10.html#section-3.2-9\n      let r = util.readMPI(signature.subarray(read)); read += r.length + 2;\n      r = util.leftPad(r, 32);\n      let s = util.readMPI(signature.subarray(read));\n      s = util.leftPad(s, 32);\n      return { r, s };\n    }\n    // Algorithm-Specific Fields for Ed25519 signatures:\n    // - 64 octets of the native signature\n    case enums.publicKey.ed25519: {\n      const RS = signature.subarray(read, read + 64); read += RS.length;\n      return { RS };\n    }\n    default:\n      throw new UnsupportedError('Unknown signature algorithm.');\n  }\n}\n\n/**\n * Verifies the signature provided for data using specified algorithms and public key parameters.\n * See {@link https://tools.ietf.org/html/rfc4880#section-9.1|RFC 4880 9.1}\n * and {@link https://tools.ietf.org/html/rfc4880#section-9.4|RFC 4880 9.4}\n * for public key and hash algorithms.\n * @param {module:enums.publicKey} algo - Public key algorithm\n * @param {module:enums.hash} hashAlgo - Hash algorithm\n * @param {Object} signature - Named algorithm-specific signature parameters\n * @param {Object} publicParams - Algorithm-specific public key parameters\n * @param {Uint8Array} data - Data for which the signature was created\n * @param {Uint8Array} hashed - The hashed data\n * @returns {Promise<Boolean>} True if signature is valid.\n * @async\n */\nexport async function verify(algo, hashAlgo, signature, publicParams, data, hashed) {\n  switch (algo) {\n    case enums.publicKey.rsaEncryptSign:\n    case enums.publicKey.rsaEncrypt:\n    case enums.publicKey.rsaSign: {\n      const { n, e } = publicParams;\n      const s = util.leftPad(signature.s, n.length); // padding needed for webcrypto and node crypto\n      return publicKey.rsa.verify(hashAlgo, data, s, n, e, hashed);\n    }\n    case enums.publicKey.dsa: {\n      const { g, p, q, y } = publicParams;\n      const { r, s } = signature; // no need to pad, since we always handle them as BigIntegers\n      return publicKey.dsa.verify(hashAlgo, r, s, hashed, g, p, q, y);\n    }\n    case enums.publicKey.ecdsa: {\n      const { oid, Q } = publicParams;\n      const curveSize = new publicKey.elliptic.CurveWithOID(oid).payloadSize;\n      // padding needed for webcrypto\n      const r = util.leftPad(signature.r, curveSize);\n      const s = util.leftPad(signature.s, curveSize);\n      return publicKey.elliptic.ecdsa.verify(oid, hashAlgo, { r, s }, data, Q, hashed);\n    }\n    case enums.publicKey.eddsaLegacy: {\n      const { oid, Q } = publicParams;\n      // signature already padded on parsing\n      return publicKey.elliptic.eddsaLegacy.verify(oid, hashAlgo, signature, data, Q, hashed);\n    }\n    case enums.publicKey.ed25519: {\n      const { A } = publicParams;\n      return publicKey.elliptic.eddsa.verify(algo, hashAlgo, signature, data, A, hashed);\n    }\n    default:\n      throw new Error('Unknown signature algorithm.');\n  }\n}\n\n/**\n * Creates a signature on data using specified algorithms and private key parameters.\n * See {@link https://tools.ietf.org/html/rfc4880#section-9.1|RFC 4880 9.1}\n * and {@link https://tools.ietf.org/html/rfc4880#section-9.4|RFC 4880 9.4}\n * for public key and hash algorithms.\n * @param {module:enums.publicKey} algo - Public key algorithm\n * @param {module:enums.hash} hashAlgo - Hash algorithm\n * @param {Object} publicKeyParams - Algorithm-specific public and private key parameters\n * @param {Object} privateKeyParams - Algorithm-specific public and private key parameters\n * @param {Uint8Array} data - Data to be signed\n * @param {Uint8Array} hashed - The hashed data\n * @returns {Promise<Object>} Signature                      Object containing named signature parameters.\n * @async\n */\nexport async function sign(algo, hashAlgo, publicKeyParams, privateKeyParams, data, hashed) {\n  if (!publicKeyParams || !privateKeyParams) {\n    throw new Error('Missing key parameters');\n  }\n  switch (algo) {\n    case enums.publicKey.rsaEncryptSign:\n    case enums.publicKey.rsaEncrypt:\n    case enums.publicKey.rsaSign: {\n      const { n, e } = publicKeyParams;\n      const { d, p, q, u } = privateKeyParams;\n      const s = await publicKey.rsa.sign(hashAlgo, data, n, e, d, p, q, u, hashed);\n      return { s };\n    }\n    case enums.publicKey.dsa: {\n      const { g, p, q } = publicKeyParams;\n      const { x } = privateKeyParams;\n      return publicKey.dsa.sign(hashAlgo, hashed, g, p, q, x);\n    }\n    case enums.publicKey.elgamal: {\n      throw new Error('Signing with Elgamal is not defined in the OpenPGP standard.');\n    }\n    case enums.publicKey.ecdsa: {\n      const { oid, Q } = publicKeyParams;\n      const { d } = privateKeyParams;\n      return publicKey.elliptic.ecdsa.sign(oid, hashAlgo, data, Q, d, hashed);\n    }\n    case enums.publicKey.eddsaLegacy: {\n      const { oid, Q } = publicKeyParams;\n      const { seed } = privateKeyParams;\n      return publicKey.elliptic.eddsaLegacy.sign(oid, hashAlgo, data, Q, seed, hashed);\n    }\n    case enums.publicKey.ed25519: {\n      const { A } = publicKeyParams;\n      const { seed } = privateKeyParams;\n      return publicKey.elliptic.eddsa.sign(algo, hashAlgo, data, A, seed, hashed);\n    }\n    default:\n      throw new Error('Unknown signature algorithm.');\n  }\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2015-2016 Decentral\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * Encoded symmetric key for ECDH (incl. legacy x25519)\n *\n * @module type/ecdh_symkey\n * @private\n */\n\nimport util from '../util';\n\nclass ECDHSymmetricKey {\n  constructor(data) {\n    if (data) {\n      this.data = data;\n    }\n  }\n\n  /**\n   * Read an ECDHSymmetricKey from an Uint8Array:\n   * - 1 octect for the length `l`\n   * - `l` octects of encoded session key data\n   * @param {Uint8Array} bytes\n   * @returns {Number} Number of read bytes.\n   */\n  read(bytes) {\n    if (bytes.length >= 1) {\n      const length = bytes[0];\n      if (bytes.length >= 1 + length) {\n        this.data = bytes.subarray(1, 1 + length);\n        return 1 + this.data.length;\n      }\n    }\n    throw new Error('Invalid symmetric key');\n  }\n\n  /**\n   * Write an ECDHSymmetricKey as an Uint8Array\n   * @returns  {Uint8Array} Serialised data\n   */\n  write() {\n    return util.concatUint8Array([new Uint8Array([this.data.length]), this.data]);\n  }\n}\n\nexport default ECDHSymmetricKey;\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2015-2016 Decentral\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport { UnsupportedError } from '../packet/packet';\n\n/**\n * Implementation of type KDF parameters\n *\n * {@link https://tools.ietf.org/html/rfc6637#section-7|RFC 6637 7}:\n * A key derivation function (KDF) is necessary to implement the EC\n * encryption.  The Concatenation Key Derivation Function (Approved\n * Alternative 1) [NIST-SP800-56A] with the KDF hash function that is\n * SHA2-256 [FIPS-180-3] or stronger is REQUIRED.\n * @module type/kdf_params\n * @private\n */\n\nclass KDFParams {\n  /**\n   * @param {enums.hash} hash - Hash algorithm\n   * @param {enums.symmetric} cipher - Symmetric algorithm\n   */\n  constructor(data) {\n    if (data) {\n      const { hash, cipher } = data;\n      this.hash = hash;\n      this.cipher = cipher;\n    } else {\n      this.hash = null;\n      this.cipher = null;\n    }\n  }\n\n  /**\n   * Read KDFParams from an Uint8Array\n   * @param {Uint8Array} input - Where to read the KDFParams from\n   * @returns {Number} Number of read bytes.\n   */\n  read(input) {\n    if (input.length < 4 || input[0] !== 3 || input[1] !== 1) {\n      throw new UnsupportedError('Cannot read KDFParams');\n    }\n    this.hash = input[2];\n    this.cipher = input[3];\n    return 4;\n  }\n\n  /**\n   * Write KDFParams to an Uint8Array\n   * @returns  {Uint8Array}  Array with the KDFParams value\n   */\n  write() {\n    return new Uint8Array([3, 1, this.hash, this.cipher]);\n  }\n}\n\nexport default KDFParams;\n","/**\n * Encoded symmetric key for x25519 and x448\n * The payload format varies for v3 and v6 PKESK:\n * the former includes an algorithm byte preceeding the encrypted session key.\n *\n * @module type/x25519x448_symkey\n */\n\nimport util from '../util';\n\nclass ECDHXSymmetricKey {\n  static fromObject({ wrappedKey, algorithm }) {\n    const instance = new ECDHXSymmetricKey();\n    instance.wrappedKey = wrappedKey;\n    instance.algorithm = algorithm;\n    return instance;\n  }\n\n  /**\n   * - 1 octect for the length `l`\n   * - `l` octects of encoded session key data (with optional leading algorithm byte)\n   * @param {Uint8Array} bytes\n   * @returns {Number} Number of read bytes.\n   */\n  read(bytes) {\n    let read = 0;\n    let followLength = bytes[read++];\n    this.algorithm = followLength % 2 ? bytes[read++] : null; // session key size is always even\n    followLength -= followLength % 2;\n    this.wrappedKey = bytes.subarray(read, read + followLength); read += followLength;\n  }\n\n  /**\n   * Write an MontgomerySymmetricKey as an Uint8Array\n   * @returns  {Uint8Array} Serialised data\n   */\n  write() {\n    return util.concatUint8Array([\n      this.algorithm ?\n        new Uint8Array([this.wrappedKey.length + 1, this.algorithm]) :\n        new Uint8Array([this.wrappedKey.length]),\n      this.wrappedKey\n    ]);\n  }\n}\n\nexport default ECDHXSymmetricKey;\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n// The GPG4Browsers crypto interface\n\n/**\n * @fileoverview Provides functions for asymmetric encryption and decryption as\n * well as key generation and parameter handling for all public-key cryptosystems.\n * @module crypto/crypto\n * @private\n */\n\nimport publicKey from './public_key';\nimport mode from './mode';\nimport { getRandomBytes } from './random';\nimport getCipher from './cipher/getCipher';\nimport ECDHSymkey from '../type/ecdh_symkey';\nimport KDFParams from '../type/kdf_params';\nimport enums from '../enums';\nimport util from '../util';\nimport OID from '../type/oid';\nimport { CurveWithOID } from './public_key/elliptic/oid_curves';\nimport { UnsupportedError } from '../packet/packet';\nimport ECDHXSymmetricKey from '../type/ecdh_x_symkey';\n\n/**\n * Encrypts data using specified algorithm and public key parameters.\n * See {@link https://tools.ietf.org/html/rfc4880#section-9.1|RFC 4880 9.1} for public key algorithms.\n * @param {module:enums.publicKey} keyAlgo - Public key algorithm\n * @param {module:enums.symmetric} symmetricAlgo - Cipher algorithm\n * @param {Object} publicParams - Algorithm-specific public key parameters\n * @param {Uint8Array} data - Session key data to be encrypted\n * @param {Uint8Array} fingerprint - Recipient fingerprint\n * @returns {Promise<Object>} Encrypted session key parameters.\n * @async\n */\nexport async function publicKeyEncrypt(keyAlgo, symmetricAlgo, publicParams, data, fingerprint) {\n  switch (keyAlgo) {\n    case enums.publicKey.rsaEncrypt:\n    case enums.publicKey.rsaEncryptSign: {\n      const { n, e } = publicParams;\n      const c = await publicKey.rsa.encrypt(data, n, e);\n      return { c };\n    }\n    case enums.publicKey.elgamal: {\n      const { p, g, y } = publicParams;\n      return publicKey.elgamal.encrypt(data, p, g, y);\n    }\n    case enums.publicKey.ecdh: {\n      const { oid, Q, kdfParams } = publicParams;\n      const { publicKey: V, wrappedKey: C } = await publicKey.elliptic.ecdh.encrypt(\n        oid, kdfParams, data, Q, fingerprint);\n      return { V, C: new ECDHSymkey(C) };\n    }\n    case enums.publicKey.x25519: {\n      if (!util.isAES(symmetricAlgo)) {\n        // see https://gitlab.com/openpgp-wg/rfc4880bis/-/merge_requests/276\n        throw new Error('X25519 keys can only encrypt AES session keys');\n      }\n      const { A } = publicParams;\n      const { ephemeralPublicKey, wrappedKey } = await publicKey.elliptic.ecdhX.encrypt(\n        keyAlgo, data, A);\n      const C = ECDHXSymmetricKey.fromObject({ algorithm: symmetricAlgo, wrappedKey });\n      return { ephemeralPublicKey, C };\n    }\n    default:\n      return [];\n  }\n}\n\n/**\n * Decrypts data using specified algorithm and private key parameters.\n * See {@link https://tools.ietf.org/html/rfc4880#section-5.5.3|RFC 4880 5.5.3}\n * @param {module:enums.publicKey} algo - Public key algorithm\n * @param {Object} publicKeyParams - Algorithm-specific public key parameters\n * @param {Object} privateKeyParams - Algorithm-specific private key parameters\n * @param {Object} sessionKeyParams - Encrypted session key parameters\n * @param {Uint8Array} fingerprint - Recipient fingerprint\n * @param {Uint8Array} [randomPayload] - Data to return on decryption error, instead of throwing\n *                                    (needed for constant-time processing in RSA and ElGamal)\n * @returns {Promise<Uint8Array>} Decrypted data.\n * @throws {Error} on sensitive decryption error, unless `randomPayload` is given\n * @async\n */\nexport async function publicKeyDecrypt(algo, publicKeyParams, privateKeyParams, sessionKeyParams, fingerprint, randomPayload) {\n  switch (algo) {\n    case enums.publicKey.rsaEncryptSign:\n    case enums.publicKey.rsaEncrypt: {\n      const { c } = sessionKeyParams;\n      const { n, e } = publicKeyParams;\n      const { d, p, q, u } = privateKeyParams;\n      return publicKey.rsa.decrypt(c, n, e, d, p, q, u, randomPayload);\n    }\n    case enums.publicKey.elgamal: {\n      const { c1, c2 } = sessionKeyParams;\n      const p = publicKeyParams.p;\n      const x = privateKeyParams.x;\n      return publicKey.elgamal.decrypt(c1, c2, p, x, randomPayload);\n    }\n    case enums.publicKey.ecdh: {\n      const { oid, Q, kdfParams } = publicKeyParams;\n      const { d } = privateKeyParams;\n      const { V, C } = sessionKeyParams;\n      return publicKey.elliptic.ecdh.decrypt(\n        oid, kdfParams, V, C.data, Q, d, fingerprint);\n    }\n    case enums.publicKey.x25519: {\n      const { A } = publicKeyParams;\n      const { k } = privateKeyParams;\n      const { ephemeralPublicKey, C } = sessionKeyParams;\n      if (!util.isAES(C.algorithm)) {\n        throw new Error('AES session key expected');\n      }\n      return publicKey.elliptic.ecdhX.decrypt(\n        algo, ephemeralPublicKey, C.wrappedKey, A, k);\n    }\n    default:\n      throw new Error('Unknown public key encryption algorithm.');\n  }\n}\n\n/**\n * Parse public key material in binary form to get the key parameters\n * @param {module:enums.publicKey} algo - The key algorithm\n * @param {Uint8Array} bytes - The key material to parse\n * @returns {{ read: Number, publicParams: Object }} Number of read bytes plus key parameters referenced by name.\n */\nexport function parsePublicKeyParams(algo, bytes) {\n  let read = 0;\n  switch (algo) {\n    case enums.publicKey.rsaEncrypt:\n    case enums.publicKey.rsaEncryptSign:\n    case enums.publicKey.rsaSign: {\n      const n = util.readMPI(bytes.subarray(read)); read += n.length + 2;\n      const e = util.readMPI(bytes.subarray(read)); read += e.length + 2;\n      return { read, publicParams: { n, e } };\n    }\n    case enums.publicKey.dsa: {\n      const p = util.readMPI(bytes.subarray(read)); read += p.length + 2;\n      const q = util.readMPI(bytes.subarray(read)); read += q.length + 2;\n      const g = util.readMPI(bytes.subarray(read)); read += g.length + 2;\n      const y = util.readMPI(bytes.subarray(read)); read += y.length + 2;\n      return { read, publicParams: { p, q, g, y } };\n    }\n    case enums.publicKey.elgamal: {\n      const p = util.readMPI(bytes.subarray(read)); read += p.length + 2;\n      const g = util.readMPI(bytes.subarray(read)); read += g.length + 2;\n      const y = util.readMPI(bytes.subarray(read)); read += y.length + 2;\n      return { read, publicParams: { p, g, y } };\n    }\n    case enums.publicKey.ecdsa: {\n      const oid = new OID(); read += oid.read(bytes);\n      checkSupportedCurve(oid);\n      const Q = util.readMPI(bytes.subarray(read)); read += Q.length + 2;\n      return { read: read, publicParams: { oid, Q } };\n    }\n    case enums.publicKey.eddsaLegacy: {\n      const oid = new OID(); read += oid.read(bytes);\n      checkSupportedCurve(oid);\n      let Q = util.readMPI(bytes.subarray(read)); read += Q.length + 2;\n      Q = util.leftPad(Q, 33);\n      return { read: read, publicParams: { oid, Q } };\n    }\n    case enums.publicKey.ecdh: {\n      const oid = new OID(); read += oid.read(bytes);\n      checkSupportedCurve(oid);\n      const Q = util.readMPI(bytes.subarray(read)); read += Q.length + 2;\n      const kdfParams = new KDFParams(); read += kdfParams.read(bytes.subarray(read));\n      return { read: read, publicParams: { oid, Q, kdfParams } };\n    }\n    case enums.publicKey.ed25519:\n    case enums.publicKey.x25519: {\n      const A = bytes.subarray(read, read + 32); read += A.length;\n      return { read, publicParams: { A } };\n    }\n    default:\n      throw new UnsupportedError('Unknown public key encryption algorithm.');\n  }\n}\n\n/**\n * Parse private key material in binary form to get the key parameters\n * @param {module:enums.publicKey} algo - The key algorithm\n * @param {Uint8Array} bytes - The key material to parse\n * @param {Object} publicParams - (ECC only) public params, needed to format some private params\n * @returns {{ read: Number, privateParams: Object }} Number of read bytes plus the key parameters referenced by name.\n */\nexport function parsePrivateKeyParams(algo, bytes, publicParams) {\n  let read = 0;\n  switch (algo) {\n    case enums.publicKey.rsaEncrypt:\n    case enums.publicKey.rsaEncryptSign:\n    case enums.publicKey.rsaSign: {\n      const d = util.readMPI(bytes.subarray(read)); read += d.length + 2;\n      const p = util.readMPI(bytes.subarray(read)); read += p.length + 2;\n      const q = util.readMPI(bytes.subarray(read)); read += q.length + 2;\n      const u = util.readMPI(bytes.subarray(read)); read += u.length + 2;\n      return { read, privateParams: { d, p, q, u } };\n    }\n    case enums.publicKey.dsa:\n    case enums.publicKey.elgamal: {\n      const x = util.readMPI(bytes.subarray(read)); read += x.length + 2;\n      return { read, privateParams: { x } };\n    }\n    case enums.publicKey.ecdsa:\n    case enums.publicKey.ecdh: {\n      const curve = new CurveWithOID(publicParams.oid);\n      let d = util.readMPI(bytes.subarray(read)); read += d.length + 2;\n      d = util.leftPad(d, curve.payloadSize);\n      return { read, privateParams: { d } };\n    }\n    case enums.publicKey.eddsaLegacy: {\n      const curve = new CurveWithOID(publicParams.oid);\n      let seed = util.readMPI(bytes.subarray(read)); read += seed.length + 2;\n      seed = util.leftPad(seed, curve.payloadSize);\n      return { read, privateParams: { seed } };\n    }\n    case enums.publicKey.ed25519: {\n      const seed = bytes.subarray(read, read + 32); read += seed.length;\n      return { read, privateParams: { seed } };\n    }\n    case enums.publicKey.x25519: {\n      const k = bytes.subarray(read, read + 32); read += k.length;\n      return { read, privateParams: { k } };\n    }\n    default:\n      throw new UnsupportedError('Unknown public key encryption algorithm.');\n  }\n}\n\n/** Returns the types comprising the encrypted session key of an algorithm\n * @param {module:enums.publicKey} algo - The key algorithm\n * @param {Uint8Array} bytes - The key material to parse\n * @returns {Object} The session key parameters referenced by name.\n */\nexport function parseEncSessionKeyParams(algo, bytes) {\n  let read = 0;\n  switch (algo) {\n    //   Algorithm-Specific Fields for RSA encrypted session keys:\n    //       - MPI of RSA encrypted value m**e mod n.\n    case enums.publicKey.rsaEncrypt:\n    case enums.publicKey.rsaEncryptSign: {\n      const c = util.readMPI(bytes.subarray(read));\n      return { c };\n    }\n\n    //   Algorithm-Specific Fields for Elgamal encrypted session keys:\n    //       - MPI of Elgamal value g**k mod p\n    //       - MPI of Elgamal value m * y**k mod p\n    case enums.publicKey.elgamal: {\n      const c1 = util.readMPI(bytes.subarray(read)); read += c1.length + 2;\n      const c2 = util.readMPI(bytes.subarray(read));\n      return { c1, c2 };\n    }\n    //   Algorithm-Specific Fields for ECDH encrypted session keys:\n    //       - MPI containing the ephemeral key used to establish the shared secret\n    //       - ECDH Symmetric Key\n    case enums.publicKey.ecdh: {\n      const V = util.readMPI(bytes.subarray(read)); read += V.length + 2;\n      const C = new ECDHSymkey(); C.read(bytes.subarray(read));\n      return { V, C };\n    }\n    //   Algorithm-Specific Fields for X25519 encrypted session keys:\n    //       - 32 octets representing an ephemeral X25519 public key.\n    //       - A one-octet size of the following fields.\n    //       - The one-octet algorithm identifier, if it was passed (in the case of a v3 PKESK packet).\n    //       - The encrypted session key.\n    case enums.publicKey.x25519: {\n      const ephemeralPublicKey = bytes.subarray(read, read + 32); read += ephemeralPublicKey.length;\n      const C = new ECDHXSymmetricKey(); C.read(bytes.subarray(read));\n      return { ephemeralPublicKey, C };\n    }\n    default:\n      throw new UnsupportedError('Unknown public key encryption algorithm.');\n  }\n}\n\n/**\n * Convert params to MPI and serializes them in the proper order\n * @param {module:enums.publicKey} algo - The public key algorithm\n * @param {Object} params - The key parameters indexed by name\n * @returns {Uint8Array} The array containing the MPIs.\n */\nexport function serializeParams(algo, params) {\n  // Some algorithms do not rely on MPIs to store the binary params\n  const algosWithNativeRepresentation = new Set([enums.publicKey.ed25519, enums.publicKey.x25519]);\n  const orderedParams = Object.keys(params).map(name => {\n    const param = params[name];\n    if (!util.isUint8Array(param)) return param.write();\n    return algosWithNativeRepresentation.has(algo) ? param : util.uint8ArrayToMPI(param);\n  });\n  return util.concatUint8Array(orderedParams);\n}\n\n/**\n * Generate algorithm-specific key parameters\n * @param {module:enums.publicKey} algo - The public key algorithm\n * @param {Integer} bits - Bit length for RSA keys\n * @param {module:type/oid} oid - Object identifier for ECC keys\n * @returns {Promise<{ publicParams: {Object}, privateParams: {Object} }>} The parameters referenced by name.\n * @async\n */\nexport function generateParams(algo, bits, oid) {\n  switch (algo) {\n    case enums.publicKey.rsaEncrypt:\n    case enums.publicKey.rsaEncryptSign:\n    case enums.publicKey.rsaSign: {\n      return publicKey.rsa.generate(bits, 65537).then(({ n, e, d, p, q, u }) => ({\n        privateParams: { d, p, q, u },\n        publicParams: { n, e }\n      }));\n    }\n    case enums.publicKey.ecdsa:\n      return publicKey.elliptic.generate(oid).then(({ oid, Q, secret }) => ({\n        privateParams: { d: secret },\n        publicParams: { oid: new OID(oid), Q }\n      }));\n    case enums.publicKey.eddsaLegacy:\n      return publicKey.elliptic.generate(oid).then(({ oid, Q, secret }) => ({\n        privateParams: { seed: secret },\n        publicParams: { oid: new OID(oid), Q }\n      }));\n    case enums.publicKey.ecdh:\n      return publicKey.elliptic.generate(oid).then(({ oid, Q, secret, hash, cipher }) => ({\n        privateParams: { d: secret },\n        publicParams: {\n          oid: new OID(oid),\n          Q,\n          kdfParams: new KDFParams({ hash, cipher })\n        }\n      }));\n    case enums.publicKey.ed25519:\n      return publicKey.elliptic.eddsa.generate(algo).then(({ A, seed }) => ({\n        privateParams: { seed },\n        publicParams: { A }\n      }));\n    case enums.publicKey.x25519:\n      return publicKey.elliptic.ecdhX.generate(algo).then(({ A, k }) => ({\n        privateParams: { k },\n        publicParams: { A }\n      }));\n    case enums.publicKey.dsa:\n    case enums.publicKey.elgamal:\n      throw new Error('Unsupported algorithm for key generation.');\n    default:\n      throw new Error('Unknown public key algorithm.');\n  }\n}\n\n/**\n * Validate algorithm-specific key parameters\n * @param {module:enums.publicKey} algo - The public key algorithm\n * @param {Object} publicParams - Algorithm-specific public key parameters\n * @param {Object} privateParams - Algorithm-specific private key parameters\n * @returns {Promise<Boolean>} Whether the parameters are valid.\n * @async\n */\nexport async function validateParams(algo, publicParams, privateParams) {\n  if (!publicParams || !privateParams) {\n    throw new Error('Missing key parameters');\n  }\n  switch (algo) {\n    case enums.publicKey.rsaEncrypt:\n    case enums.publicKey.rsaEncryptSign:\n    case enums.publicKey.rsaSign: {\n      const { n, e } = publicParams;\n      const { d, p, q, u } = privateParams;\n      return publicKey.rsa.validateParams(n, e, d, p, q, u);\n    }\n    case enums.publicKey.dsa: {\n      const { p, q, g, y } = publicParams;\n      const { x } = privateParams;\n      return publicKey.dsa.validateParams(p, q, g, y, x);\n    }\n    case enums.publicKey.elgamal: {\n      const { p, g, y } = publicParams;\n      const { x } = privateParams;\n      return publicKey.elgamal.validateParams(p, g, y, x);\n    }\n    case enums.publicKey.ecdsa:\n    case enums.publicKey.ecdh: {\n      const algoModule = publicKey.elliptic[enums.read(enums.publicKey, algo)];\n      const { oid, Q } = publicParams;\n      const { d } = privateParams;\n      return algoModule.validateParams(oid, Q, d);\n    }\n    case enums.publicKey.eddsaLegacy: {\n      const { Q, oid } = publicParams;\n      const { seed } = privateParams;\n      return publicKey.elliptic.eddsaLegacy.validateParams(oid, Q, seed);\n    }\n    case enums.publicKey.ed25519: {\n      const { A } = publicParams;\n      const { seed } = privateParams;\n      return publicKey.elliptic.eddsa.validateParams(algo, A, seed);\n    }\n    case enums.publicKey.x25519: {\n      const { A } = publicParams;\n      const { k } = privateParams;\n      return publicKey.elliptic.ecdhX.validateParams(algo, A, k);\n    }\n    default:\n      throw new Error('Unknown public key algorithm.');\n  }\n}\n\n/**\n * Generates a random byte prefix for the specified algorithm\n * See {@link https://tools.ietf.org/html/rfc4880#section-9.2|RFC 4880 9.2} for algorithms.\n * @param {module:enums.symmetric} algo - Symmetric encryption algorithm\n * @returns {Promise<Uint8Array>} Random bytes with length equal to the block size of the cipher, plus the last two bytes repeated.\n * @async\n */\nexport async function getPrefixRandom(algo) {\n  const { blockSize } = getCipher(algo);\n  const prefixrandom = await getRandomBytes(blockSize);\n  const repeat = new Uint8Array([prefixrandom[prefixrandom.length - 2], prefixrandom[prefixrandom.length - 1]]);\n  return util.concat([prefixrandom, repeat]);\n}\n\n/**\n * Generating a session key for the specified symmetric algorithm\n * See {@link https://tools.ietf.org/html/rfc4880#section-9.2|RFC 4880 9.2} for algorithms.\n * @param {module:enums.symmetric} algo - Symmetric encryption algorithm\n * @returns {Uint8Array} Random bytes as a string to be used as a key.\n */\nexport function generateSessionKey(algo) {\n  const { keySize } = getCipher(algo);\n  return getRandomBytes(keySize);\n}\n\n/**\n * Get implementation of the given AEAD mode\n * @param {enums.aead} algo\n * @returns {Object}\n * @throws {Error} on invalid algo\n */\nexport function getAEADMode(algo) {\n  const algoName = enums.read(enums.aead, algo);\n  return mode[algoName];\n}\n\nexport { getCipher };\n\n/**\n * Check whether the given curve OID is supported\n * @param {module:type/oid} oid - EC object identifier\n * @throws {UnsupportedError} if curve is not supported\n */\nfunction checkSupportedCurve(oid) {\n  try {\n    oid.getName();\n  } catch (e) {\n    throw new UnsupportedError('Unknown curve OID');\n  }\n}\n\n/**\n * Get preferred hash algo for a given elliptic algo\n * @param {module:enums.publicKey} algo - alrogithm identifier\n * @param {module:type/oid} [oid] - curve OID if needed by algo\n */\nexport function getPreferredCurveHashAlgo(algo, oid) {\n  switch (algo) {\n    case enums.publicKey.ecdsa:\n    case enums.publicKey.eddsaLegacy:\n      return publicKey.elliptic.getPreferredHashAlgo(oid);\n    case enums.publicKey.ed25519:\n      return publicKey.elliptic.eddsa.getPreferredHashAlgo(algo);\n    default:\n      throw new Error('Unknown elliptic signing algo');\n  }\n}\n","/**\n * @fileoverview Provides access to all cryptographic primitives used in OpenPGP.js\n * @see module:crypto/crypto\n * @see module:crypto/signature\n * @see module:crypto/public_key\n * @see module:crypto/cipher\n * @see module:crypto/random\n * @see module:crypto/hash\n * @module crypto\n * @private\n */\n\nimport * as cipher from './cipher';\nimport hash from './hash';\nimport mode from './mode';\nimport publicKey from './public_key';\nimport * as signature from './signature';\nimport * as random from './random';\nimport * as pkcs1 from './pkcs1';\nimport * as pkcs5 from './pkcs5';\nimport * as crypto from './crypto';\nimport * as aesKW from './aes_kw';\n\n// TODO move cfb and gcm to cipher\nconst mod = {\n  /** @see module:crypto/cipher */\n  cipher: cipher,\n  /** @see module:crypto/hash */\n  hash: hash,\n  /** @see module:crypto/mode */\n  mode: mode,\n  /** @see module:crypto/public_key */\n  publicKey: publicKey,\n  /** @see module:crypto/signature */\n  signature: signature,\n  /** @see module:crypto/random */\n  random: random,\n  /** @see module:crypto/pkcs1 */\n  pkcs1: pkcs1,\n  /** @see module:crypto/pkcs5 */\n  pkcs5: pkcs5,\n  /** @see module:crypto/aes_kw */\n  aesKW: aesKW\n};\n\nObject.assign(mod, crypto);\n\nexport default mod;\n","\n\n\nvar TYPED_OK = typeof Uint8Array !== \"undefined\" &&\n  typeof Uint16Array !== \"undefined\" &&\n  typeof Int32Array !== \"undefined\";\n\nfunction _has(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexport function assign(obj /*...args obj, from1, from2, from3, ...*/) {\n    var sources = Array.prototype.slice.call(arguments, 1);\n    while (sources.length) {\n        var source = sources.shift();\n        if (!source) {\n            continue; \n        }\n\n        if (typeof source !== \"object\") {\n            throw new TypeError(source + \"must be non-object\");\n        }\n\n        for (var p in source) {\n            if (_has(source, p)) {\n                obj[p] = source[p];\n            }\n        }\n    }\n\n    return obj;\n    //return Object.assign(...args);\n}\n\n\n// reduce buffer size, avoiding mem copy\nexport function shrinkBuf(buf, size) {\n    if (buf.length === size) {\n        return buf; \n    }\n    if (buf.subarray) {\n        return buf.subarray(0, size); \n    }\n    buf.length = size;\n    return buf;\n}\n\n\nconst fnTyped = {\n    arraySet: function (dest, src, src_offs, len, dest_offs) {\n        if (src.subarray && dest.subarray) {\n            dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n            return;\n        }\n        // Fallback to ordinary array\n        for (let i = 0; i < len; i++) {\n            dest[dest_offs + i] = src[src_offs + i];\n        }\n    },\n    // Join array of chunks to single array.\n    flattenChunks: function (chunks) {\n        let i, l, len, pos, chunk;\n\n        // calculate data length\n        len = 0;\n        for (i = 0, l = chunks.length; i < l; i++) {\n            len += chunks[i].length;\n        }\n\n        // join chunks\n        const result = new Uint8Array(len);\n        pos = 0;\n        for (i = 0, l = chunks.length; i < l; i++) {\n            chunk = chunks[i];\n            result.set(chunk, pos);\n            pos += chunk.length;\n        }\n\n        return result;\n    }\n};\n\nconst fnUntyped = {\n    arraySet: function (dest, src, src_offs, len, dest_offs) {\n        for (let i = 0; i < len; i++) {\n            dest[dest_offs + i] = src[src_offs + i];\n        }\n    },\n    // Join array of chunks to single array.\n    flattenChunks: function (chunks) {\n        return [].concat.apply([], chunks);\n    }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\n\nexport let Buf8 = TYPED_OK ? Uint8Array : Array;\nexport let Buf16 = TYPED_OK ? Uint16Array : Array;\nexport let Buf32 = TYPED_OK ? Int32Array : Array;\nexport let flattenChunks = TYPED_OK ? fnTyped.flattenChunks : fnUntyped.flattenChunks;\nexport let arraySet = TYPED_OK ? fnTyped.arraySet : fnUntyped.arraySet;\nexport function setTyped(on) {\n    if (on) {\n        Buf8 = Uint8Array;\n        Buf16 = Uint16Array;\n        Buf32 = Int32Array;\n        ({ flattenChunks, arraySet } = fnTyped);\n    } else {\n        Buf8 = Array;\n        Buf16 = Array;\n        Buf32 = Array;\n        ({ flattenChunks, arraySet } = fnUntyped);\n    }\n}","\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nexport const Z_NO_FLUSH =         0;\nexport const Z_PARTIAL_FLUSH =    1;\nexport const Z_SYNC_FLUSH =       2;\nexport const Z_FULL_FLUSH =       3;\nexport const Z_FINISH =           4;\nexport const Z_BLOCK =            5;\nexport const Z_TREES =            6;\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nexport const Z_OK =               0;\nexport const Z_STREAM_END =       1;\nexport const Z_NEED_DICT =        2;\nexport const Z_ERRNO =           -1;\nexport const Z_STREAM_ERROR =    -2;\nexport const Z_DATA_ERROR =      -3;\n//export const Z_MEM_ERROR =     -4;\nexport const Z_BUF_ERROR =       -5;\n//export const Z_VERSION_ERROR = -6;\n\n    /* compression levels */\nexport const Z_NO_COMPRESSION =         0;\nexport const Z_BEST_SPEED =             1;\nexport const Z_BEST_COMPRESSION =       9;\nexport const Z_DEFAULT_COMPRESSION =   -1;\n\n\nexport const Z_FILTERED =               1;\nexport const Z_HUFFMAN_ONLY =           2;\nexport const Z_RLE =                    3;\nexport const Z_FIXED =                  4;\nexport const Z_DEFAULT_STRATEGY =       0;\n\n/* Possible values of the data_type field (though see inflate()) */\nexport const Z_BINARY =                 0;\nexport const Z_TEXT =                   1;\n//export const Z_ASCII =                1; // = Z_TEXT (deprecated)\nexport const Z_UNKNOWN =                2;\n\n/* The deflate compression method */\nexport const Z_DEFLATED =               8;\n//export const Z_NULL =                 null // Use -1 or null inline, depending on var type\n","\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nimport * as utils from \"../utils/common.js\";\nimport {\n    Z_FIXED,\n    Z_BINARY,\n    Z_TEXT,\n    Z_UNKNOWN\n} from \"./constants.js\";\n\n/*============================================================================*/\n\n\nfunction zero(buf) {\n    let len = buf.length; while (--len >= 0) {\n        buf[len] = 0; \n    } \n}\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH    = 3;\nconst MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES       = 30;\n/* number of distance codes */\n\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nconst MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nconst extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nconst bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n    this.static_tree  = static_tree;  /* static tree or NULL */\n    this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n    this.extra_base   = extra_base;   /* base index for extra_bits */\n    this.elems        = elems;        /* max number of elements in the tree */\n    this.max_length   = max_length;   /* max bit length for the codes */\n\n    // show if `static_tree` has data or dummy - needed for monomorphic objects\n    this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n    this.dyn_tree = dyn_tree;     /* the dynamic tree */\n    this.max_code = 0;            /* largest code with non zero frequency */\n    this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n    return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n    s.pending_buf[s.pending++] = w & 0xff;\n    s.pending_buf[s.pending++] = w >>> 8 & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n    if (s.bi_valid > Buf_size - length) {\n        s.bi_buf |= value << s.bi_valid & 0xffff;\n        put_short(s, s.bi_buf);\n        s.bi_buf = value >> Buf_size - s.bi_valid;\n        s.bi_valid += length - Buf_size;\n    } else {\n        s.bi_buf |= value << s.bi_valid & 0xffff;\n        s.bi_valid += length;\n    }\n}\n\n\nfunction send_code(s, c, tree) {\n    send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n    let res = 0;\n    do {\n        res |= code & 1;\n        code >>>= 1;\n        res <<= 1;\n    } while (--len > 0);\n    return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n    if (s.bi_valid === 16) {\n        put_short(s, s.bi_buf);\n        s.bi_buf = 0;\n        s.bi_valid = 0;\n\n    } else if (s.bi_valid >= 8) {\n        s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n        s.bi_buf >>= 8;\n        s.bi_valid -= 8;\n    }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n    const tree            = desc.dyn_tree;\n    const max_code        = desc.max_code;\n    const stree           = desc.stat_desc.static_tree;\n    const has_stree       = desc.stat_desc.has_stree;\n    const extra           = desc.stat_desc.extra_bits;\n    const base            = desc.stat_desc.extra_base;\n    const max_length      = desc.stat_desc.max_length;\n    let h;              /* heap index */\n    let n, m;           /* iterate over the tree elements */\n    let bits;           /* bit length */\n    let xbits;          /* extra bits */\n    let f;              /* frequency */\n    let overflow = 0;   /* number of elements with bit length too large */\n\n    for (bits = 0; bits <= MAX_BITS; bits++) {\n        s.bl_count[bits] = 0;\n    }\n\n    /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n    tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n    for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n        n = s.heap[h];\n        bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n        if (bits > max_length) {\n            bits = max_length;\n            overflow++;\n        }\n        tree[n * 2 + 1]/*.Len*/ = bits;\n        /* We overwrite tree[n].Dad which is no longer needed */\n\n        if (n > max_code) {\n            continue; \n        } /* not a leaf node */\n\n        s.bl_count[bits]++;\n        xbits = 0;\n        if (n >= base) {\n            xbits = extra[n - base];\n        }\n        f = tree[n * 2]/*.Freq*/;\n        s.opt_len += f * (bits + xbits);\n        if (has_stree) {\n            s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n        }\n    }\n    if (overflow === 0) {\n        return; \n    }\n\n    // Trace((stderr,\"\\nbit length overflow\\n\"));\n    /* This happens for example on obj2 and pic of the Calgary corpus */\n\n    /* Find the first bit length which could increase: */\n    do {\n        bits = max_length - 1;\n        while (s.bl_count[bits] === 0) {\n            bits--; \n        }\n        s.bl_count[bits]--;      /* move one leaf down the tree */\n        s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n        s.bl_count[max_length]--;\n        /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n        overflow -= 2;\n    } while (overflow > 0);\n\n    /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n    for (bits = max_length; bits !== 0; bits--) {\n        n = s.bl_count[bits];\n        while (n !== 0) {\n            m = s.heap[--h];\n            if (m > max_code) {\n                continue; \n            }\n            if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n                // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n                s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n                tree[m * 2 + 1]/*.Len*/ = bits;\n            }\n            n--;\n        }\n    }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n    const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n    let code = 0;              /* running code value */\n    let bits;                  /* bit index */\n    let n;                     /* code index */\n\n    /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n    for (bits = 1; bits <= MAX_BITS; bits++) {\n        next_code[bits] = code = code + bl_count[bits - 1] << 1;\n    }\n    /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n    //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n    //        \"inconsistent bit counts\");\n    //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n    for (n = 0;  n <= max_code; n++) {\n        const len = tree[n * 2 + 1]/*.Len*/;\n        if (len === 0) {\n            continue; \n        }\n        /* Now reverse the bits */\n        tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n    }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n    let n;        /* iterates over tree elements */\n    let bits;     /* bit counter */\n    let length;   /* length value */\n    let code;     /* code value */\n    let dist;     /* distance index */\n    const bl_count = new Array(MAX_BITS + 1);\n    /* number of codes at each bit length for an optimal tree */\n\n    // do check in _tr_init()\n    //if (static_init_done) return;\n\n    /* For some embedded targets, global variables are not initialized: */\n    /*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n    /* Initialize the mapping length (0..255) -> length code (0..28) */\n    length = 0;\n    for (code = 0; code < LENGTH_CODES - 1; code++) {\n        base_length[code] = length;\n        for (n = 0; n < 1 << extra_lbits[code]; n++) {\n            _length_code[length++] = code;\n        }\n    }\n    //Assert (length == 256, \"tr_static_init: length != 256\");\n    /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n    _length_code[length - 1] = code;\n\n    /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n    dist = 0;\n    for (code = 0; code < 16; code++) {\n        base_dist[code] = dist;\n        for (n = 0; n < 1 << extra_dbits[code]; n++) {\n            _dist_code[dist++] = code;\n        }\n    }\n    //Assert (dist == 256, \"tr_static_init: dist != 256\");\n    dist >>= 7; /* from now on, all distances are divided by 128 */\n    for (; code < D_CODES; code++) {\n        base_dist[code] = dist << 7;\n        for (n = 0; n < 1 << extra_dbits[code] - 7; n++) {\n            _dist_code[256 + dist++] = code;\n        }\n    }\n    //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n    /* Construct the codes of the static literal tree */\n    for (bits = 0; bits <= MAX_BITS; bits++) {\n        bl_count[bits] = 0;\n    }\n\n    n = 0;\n    while (n <= 143) {\n        static_ltree[n * 2 + 1]/*.Len*/ = 8;\n        n++;\n        bl_count[8]++;\n    }\n    while (n <= 255) {\n        static_ltree[n * 2 + 1]/*.Len*/ = 9;\n        n++;\n        bl_count[9]++;\n    }\n    while (n <= 279) {\n        static_ltree[n * 2 + 1]/*.Len*/ = 7;\n        n++;\n        bl_count[7]++;\n    }\n    while (n <= 287) {\n        static_ltree[n * 2 + 1]/*.Len*/ = 8;\n        n++;\n        bl_count[8]++;\n    }\n    /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n    gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n    /* The static distance tree is trivial: */\n    for (n = 0; n < D_CODES; n++) {\n        static_dtree[n * 2 + 1]/*.Len*/ = 5;\n        static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n    }\n\n    // Now data ready and we can init static trees\n    static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n    static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n    static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n    //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n    let n; /* iterates over tree elements */\n\n    /* Initialize the trees. */\n    for (n = 0; n < L_CODES;  n++) {\n        s.dyn_ltree[n * 2]/*.Freq*/ = 0; \n    }\n    for (n = 0; n < D_CODES;  n++) {\n        s.dyn_dtree[n * 2]/*.Freq*/ = 0; \n    }\n    for (n = 0; n < BL_CODES; n++) {\n        s.bl_tree[n * 2]/*.Freq*/ = 0; \n    }\n\n    s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n    s.opt_len = s.static_len = 0;\n    s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s) {\n    if (s.bi_valid > 8) {\n        put_short(s, s.bi_buf);\n    } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n        s.pending_buf[s.pending++] = s.bi_buf;\n    }\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n    bi_windup(s);        /* align on byte boundary */\n\n    if (header) {\n        put_short(s, len);\n        put_short(s, ~len);\n    }\n    //  while (len--) {\n    //    put_byte(s, *buf++);\n    //  }\n    utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n    s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n    const _n2 = n * 2;\n    const _m2 = m * 2;\n    return tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m];\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n    const v = s.heap[k];\n    let j = k << 1;  /* left son of k */\n    while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n        if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n            j++;\n        }\n        /* Exit if v is smaller than both sons */\n        if (smaller(tree, v, s.heap[j], s.depth)) {\n            break; \n        }\n\n        /* Exchange v with the smallest son */\n        s.heap[k] = s.heap[j];\n        k = j;\n\n        /* And continue down the tree, setting j to the left son of k */\n        j <<= 1;\n    }\n    s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n    let dist;           /* distance of matched string */\n    let lc;             /* match length or unmatched char (if dist == 0) */\n    let lx = 0;         /* running index in l_buf */\n    let code;           /* the code to send */\n    let extra;          /* number of extra bits to send */\n\n    if (s.last_lit !== 0) {\n        do {\n            dist = s.pending_buf[s.d_buf + lx * 2] << 8 | s.pending_buf[s.d_buf + lx * 2 + 1];\n            lc = s.pending_buf[s.l_buf + lx];\n            lx++;\n\n            if (dist === 0) {\n                send_code(s, lc, ltree); /* send a literal byte */\n                //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n            } else {\n                /* Here, lc is the match length - MIN_MATCH */\n                code = _length_code[lc];\n                send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n                extra = extra_lbits[code];\n                if (extra !== 0) {\n                    lc -= base_length[code];\n                    send_bits(s, lc, extra);       /* send the extra length bits */\n                }\n                dist--; /* dist is now the match distance - 1 */\n                code = d_code(dist);\n                //Assert (code < D_CODES, \"bad d_code\");\n\n                send_code(s, code, dtree);       /* send the distance code */\n                extra = extra_dbits[code];\n                if (extra !== 0) {\n                    dist -= base_dist[code];\n                    send_bits(s, dist, extra);   /* send the extra distance bits */\n                }\n            } /* literal or match pair ? */\n\n            /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n            //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n            //       \"pendingBuf overflow\");\n\n        } while (lx < s.last_lit);\n    }\n\n    send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n    const tree     = desc.dyn_tree;\n    const stree    = desc.stat_desc.static_tree;\n    const has_stree = desc.stat_desc.has_stree;\n    const elems    = desc.stat_desc.elems;\n    let n, m;          /* iterate over heap elements */\n    let max_code = -1; /* largest code with non zero frequency */\n    let node;          /* new node being created */\n\n    /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n    s.heap_len = 0;\n    s.heap_max = HEAP_SIZE;\n\n    for (n = 0; n < elems; n++) {\n        if (tree[n * 2]/*.Freq*/ !== 0) {\n            s.heap[++s.heap_len] = max_code = n;\n            s.depth[n] = 0;\n\n        } else {\n            tree[n * 2 + 1]/*.Len*/ = 0;\n        }\n    }\n\n    /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n    while (s.heap_len < 2) {\n        node = s.heap[++s.heap_len] = max_code < 2 ? ++max_code : 0;\n        tree[node * 2]/*.Freq*/ = 1;\n        s.depth[node] = 0;\n        s.opt_len--;\n\n        if (has_stree) {\n            s.static_len -= stree[node * 2 + 1]/*.Len*/;\n        }\n    /* node is 0 or 1 so it does not have extra bits */\n    }\n    desc.max_code = max_code;\n\n    /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n    for (n = s.heap_len >> 1/*int /2*/; n >= 1; n--) {\n        pqdownheap(s, tree, n); \n    }\n\n    /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n    node = elems;              /* next internal node of the tree */\n    do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n        n = s.heap[1/*SMALLEST*/];\n        s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n        pqdownheap(s, tree, 1/*SMALLEST*/);\n        /***/\n\n        m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n        s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n        s.heap[--s.heap_max] = m;\n\n        /* Create a new node father of n and m */\n        tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n        s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n        tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n        /* and insert the new node in the heap */\n        s.heap[1/*SMALLEST*/] = node++;\n        pqdownheap(s, tree, 1/*SMALLEST*/);\n\n    } while (s.heap_len >= 2);\n\n    s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n    /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n    gen_bitlen(s, desc);\n\n    /* The field len is now set, we can generate the bit codes */\n    gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n    let n;                     /* iterates over all tree elements */\n    let prevlen = -1;          /* last emitted length */\n    let curlen;                /* length of current code */\n\n    let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n    let count = 0;             /* repeat count of the current code */\n    let max_count = 7;         /* max repeat count */\n    let min_count = 4;         /* min repeat count */\n\n    if (nextlen === 0) {\n        max_count = 138;\n        min_count = 3;\n    }\n    tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n    for (n = 0; n <= max_code; n++) {\n        curlen = nextlen;\n        nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n        if (++count < max_count && curlen === nextlen) {\n            continue;\n\n        } else if (count < min_count) {\n            s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n        } else if (curlen !== 0) {\n\n            if (curlen !== prevlen) {\n                s.bl_tree[curlen * 2]/*.Freq*/++; \n            }\n            s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n        } else if (count <= 10) {\n            s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n        } else {\n            s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n        }\n\n        count = 0;\n        prevlen = curlen;\n\n        if (nextlen === 0) {\n            max_count = 138;\n            min_count = 3;\n\n        } else if (curlen === nextlen) {\n            max_count = 6;\n            min_count = 3;\n\n        } else {\n            max_count = 7;\n            min_count = 4;\n        }\n    }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n    let n;                     /* iterates over all tree elements */\n    let prevlen = -1;          /* last emitted length */\n    let curlen;                /* length of current code */\n\n    let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n    let count = 0;             /* repeat count of the current code */\n    let max_count = 7;         /* max repeat count */\n    let min_count = 4;         /* min repeat count */\n\n    /* tree[max_code+1].Len = -1; */  /* guard already set */\n    if (nextlen === 0) {\n        max_count = 138;\n        min_count = 3;\n    }\n\n    for (n = 0; n <= max_code; n++) {\n        curlen = nextlen;\n        nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n        if (++count < max_count && curlen === nextlen) {\n            continue;\n\n        } else if (count < min_count) {\n            do {\n                send_code(s, curlen, s.bl_tree); \n            } while (--count !== 0);\n\n        } else if (curlen !== 0) {\n            if (curlen !== prevlen) {\n                send_code(s, curlen, s.bl_tree);\n                count--;\n            }\n            //Assert(count >= 3 && count <= 6, \" 3_6?\");\n            send_code(s, REP_3_6, s.bl_tree);\n            send_bits(s, count - 3, 2);\n\n        } else if (count <= 10) {\n            send_code(s, REPZ_3_10, s.bl_tree);\n            send_bits(s, count - 3, 3);\n\n        } else {\n            send_code(s, REPZ_11_138, s.bl_tree);\n            send_bits(s, count - 11, 7);\n        }\n\n        count = 0;\n        prevlen = curlen;\n        if (nextlen === 0) {\n            max_count = 138;\n            min_count = 3;\n\n        } else if (curlen === nextlen) {\n            max_count = 6;\n            min_count = 3;\n\n        } else {\n            max_count = 7;\n            min_count = 4;\n        }\n    }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n    let max_blindex;  /* index of last bit length code of non zero freq */\n\n    /* Determine the bit length frequencies for literal and distance trees */\n    scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n    scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n    /* Build the bit length tree: */\n    build_tree(s, s.bl_desc);\n    /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n    /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n    for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n        if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n            break;\n        }\n    }\n    /* Update opt_len to include the bit length tree and counts */\n    s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n    //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n    //        s->opt_len, s->static_len));\n\n    return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n    let rank;                    /* index in bl_order */\n\n    //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n    //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n    //        \"too many codes\");\n    //Tracev((stderr, \"\\nbl counts: \"));\n    send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n    send_bits(s, dcodes - 1,   5);\n    send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n    for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n        send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n    }\n    //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n    send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n    //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n    send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n    //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n    /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n    let black_mask = 0xf3ffc07f;\n    let n;\n\n    /* Check for non-textual (\"black-listed\") bytes. */\n    for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n        if (black_mask & 1 && s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n            return Z_BINARY;\n        }\n    }\n\n    /* Check for textual (\"white-listed\") bytes. */\n    if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n        return Z_TEXT;\n    }\n    for (n = 32; n < LITERALS; n++) {\n        if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n            return Z_TEXT;\n        }\n    }\n\n    /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n    return Z_BINARY;\n}\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s) {\n\n    if (!static_init_done) {\n        tr_static_init();\n        static_init_done = true;\n    }\n\n    s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n    s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n    s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n    /* Initialize the first block of the first file: */\n    init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n    send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n    copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n    send_bits(s, STATIC_TREES << 1, 3);\n    send_code(s, END_BLOCK, static_ltree);\n    bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n    let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n    let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n    /* Build the Huffman trees unless a stored block is forced */\n    if (s.level > 0) {\n\n        /* Check if the file is binary or text */\n        if (s.strm.data_type === Z_UNKNOWN) {\n            s.strm.data_type = detect_data_type(s);\n        }\n\n        /* Construct the literal and distance trees */\n        build_tree(s, s.l_desc);\n        // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n        //        s->static_len));\n\n        build_tree(s, s.d_desc);\n        // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n        //        s->static_len));\n        /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n        /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n        max_blindex = build_bl_tree(s);\n\n        /* Determine the best encoding. Compute the block lengths in bytes. */\n        opt_lenb = s.opt_len + 3 + 7 >>> 3;\n        static_lenb = s.static_len + 3 + 7 >>> 3;\n\n        // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n        //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n        //        s->last_lit));\n\n        if (static_lenb <= opt_lenb) {\n            opt_lenb = static_lenb; \n        }\n\n    } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n        opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n    }\n\n    if (stored_len + 4 <= opt_lenb && buf !== -1) {\n    /* 4: two words for the lengths */\n\n        /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n        _tr_stored_block(s, buf, stored_len, last);\n\n    } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n        send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n        compress_block(s, static_ltree, static_dtree);\n\n    } else {\n        send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n        send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n        compress_block(s, s.dyn_ltree, s.dyn_dtree);\n    }\n    // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n    /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n    init_block(s);\n\n    if (last) {\n        bi_windup(s);\n    }\n    // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n    //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n    //var out_length, in_length, dcode;\n\n    s.pending_buf[s.d_buf + s.last_lit * 2]     = dist >>> 8 & 0xff;\n    s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n    s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n    s.last_lit++;\n\n    if (dist === 0) {\n    /* lc is the unmatched char */\n        s.dyn_ltree[lc * 2]/*.Freq*/++;\n    } else {\n        s.matches++;\n        /* Here, lc is the match length - MIN_MATCH */\n        dist--;             /* dist = match distance - 1 */\n        //Assert((ush)dist < (ush)MAX_DIST(s) &&\n        //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n        //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n        s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n        s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n    }\n\n    // (!) This block is disabled in zlib defaults,\n    // don't enable it for binary compatibility\n\n    //#ifdef TRUNCATE_BLOCK\n    //  /* Try to guess if it is profitable to stop the current block here */\n    //  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n    //    /* Compute an upper bound for the compressed length */\n    //    out_length = s.last_lit*8;\n    //    in_length = s.strstart - s.block_start;\n    //\n    //    for (dcode = 0; dcode < D_CODES; dcode++) {\n    //      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n    //    }\n    //    out_length >>>= 3;\n    //    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n    //    //       s->last_lit, in_length, out_length,\n    //    //       100L - out_length*100L/in_length));\n    //    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n    //      return true;\n    //    }\n    //  }\n    //#endif\n\n    return s.last_lit === s.lit_bufsize - 1;\n    /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexport {\n    _tr_init,\n    _tr_stored_block,\n    _tr_flush_block,\n    _tr_tally,\n    _tr_align\n};","\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nexport default function adler32(adler, buf, len, pos) {\n    let s1 = adler & 0xffff |0,\n        s2 = adler >>> 16 & 0xffff |0,\n        n = 0;\n\n    while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n        n = len > 2000 ? 2000 : len;\n        len -= n;\n\n        do {\n            s1 = s1 + buf[pos++] |0;\n            s2 = s2 + s1 |0;\n        } while (--n);\n\n        s1 %= 65521;\n        s2 %= 65521;\n    }\n\n    return s1 | s2 << 16 |0;\n}\n","\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n    let c;\n    const table = [];\n\n    for (let n = 0; n < 256; n++) {\n        c = n;\n        for (let k = 0; k < 8; k++) {\n            c = c & 1 ? 0xEDB88320 ^ c >>> 1 : c >>> 1;\n        }\n        table[n] = c;\n    }\n\n    return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = makeTable();\n\n\nexport default function crc32(crc, buf, len, pos) {\n    const t = crcTable,\n        end = pos + len;\n\n    crc ^= -1;\n\n    for (let i = pos; i < end; i++) {\n        crc = crc >>> 8 ^ t[(crc ^ buf[i]) & 0xFF];\n    }\n\n    return crc ^ -1; // >>> 0;\n}","\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nexport default {\n    2:      \"need dictionary\",     /* Z_NEED_DICT       2  */\n    1:      \"stream end\",          /* Z_STREAM_END      1  */\n    0:      \"\",                    /* Z_OK              0  */\n    \"-1\":   \"file error\",          /* Z_ERRNO         (-1) */\n    \"-2\":   \"stream error\",        /* Z_STREAM_ERROR  (-2) */\n    \"-3\":   \"data error\",          /* Z_DATA_ERROR    (-3) */\n    \"-4\":   \"insufficient memory\", /* Z_MEM_ERROR     (-4) */\n    \"-5\":   \"buffer error\",        /* Z_BUF_ERROR     (-5) */\n    \"-6\":   \"incompatible version\" /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nimport * as utils from \"../utils/common.js\";\nimport * as trees from \"./trees.js\";\nimport adler32 from \"./adler32.js\";\nimport crc32 from \"./crc32.js\";\nimport msg from \"./messages.js\";\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nimport {\n  Z_NO_FLUSH,\n  Z_PARTIAL_FLUSH,\n  Z_FULL_FLUSH,\n  Z_FINISH,\n  Z_BLOCK,\n  Z_OK,\n  Z_STREAM_END,\n  Z_STREAM_ERROR,\n  Z_DATA_ERROR,\n  Z_BUF_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_FILTERED,\n  Z_HUFFMAN_ONLY,\n  Z_RLE,\n  Z_FIXED,\n  Z_DEFAULT_STRATEGY,\n  Z_UNKNOWN,\n  Z_DEFLATED\n} from \"./constants.js\";\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES = 30;\n/* number of distance codes */\nconst BL_CODES = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst EXTRA_STATE = 69;\nconst NAME_STATE = 73;\nconst COMMENT_STATE = 91;\nconst HCRC_STATE = 103;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\nconst BS_NEED_MORE = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n  //  put_byte(s, (Byte)(b >> 8));\n  //  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n    s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1 = _win[scan + best_len - 1];\n  let scan_end = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len] !== scan_end ||\n      _win[match + best_len - 1] !== scan_end1 ||\n      _win[match] !== _win[scan] ||\n      _win[++match] !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n    _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n    _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n    _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n      scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1 = _win[scan + best_len - 1];\n      scan_end = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  const _w_size = s.w_size;\n  let p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n      //#if MIN_MATCH != 3\n      //        Call update_hash() MIN_MATCH-3 more times\n      //#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n  //  if (s.high_water < s.window_size) {\n  //    var curr = s.strstart + s.lookahead;\n  //    var init = 0;\n  //\n  //    if (s.high_water < curr) {\n  //      /* Previous high water mark below current data -- zero WIN_INIT\n  //       * bytes or up to end of window, whichever is less.\n  //       */\n  //      init = s.window_size - curr;\n  //      if (init > WIN_INIT)\n  //        init = WIN_INIT;\n  //      zmemzero(s->window + curr, (unsigned)init);\n  //      s->high_water = curr + init;\n  //    }\n  //    else if (s->high_water < (ulg)curr + WIN_INIT) {\n  //      /* High water mark at or above current data, but below current data\n  //       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n  //       * to end of window, whichever is less.\n  //       */\n  //      init = (ulg)curr + WIN_INIT - s->high_water;\n  //      if (init > s->window_size - s->high_water)\n  //        init = s->window_size - s->high_water;\n  //      zmemzero(s->window + s->high_water, (unsigned)init);\n  //      s->high_water += init;\n  //    }\n  //  }\n  //\n  //  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n  //    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  let max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (; ;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n      //      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n      //        s.block_start >= s.w_size)) {\n      //        throw  new Error(\"slide too late\");\n      //      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n    //    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    const max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (; ;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n        //#if MIN_MATCH != 3\n        //                Call UPDATE_HASH() MIN_MATCH-3 more times\n        //#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (; ;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n      s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n        (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (; ;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n        prev === _win[++scan] && prev === _win[++scan] &&\n        prev === _win[++scan] && prev === _win[++scan] &&\n        prev === _win[++scan] && prev === _win[++scan] &&\n          scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  let bflush;             /* set if current block must be flushed */\n\n  for (; ;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nclass Config {\n  constructor(good_length, max_lazy, nice_length, max_chain, func) {\n    this.good_length = good_length;\n    this.max_lazy = max_lazy;\n    this.nice_length = nice_length;\n    this.max_chain = max_chain;\n    this.func = func;\n  }\n};\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\nclass DeflateState {\n  constructor() {\n    this.strm = null;            /* pointer back to this zlib stream */\n    this.status = 0;            /* as the name implies */\n    this.pending_buf = null;      /* output still pending */\n    this.pending_buf_size = 0;  /* size of pending_buf */\n    this.pending_out = 0;       /* next pending byte to output to the stream */\n    this.pending = 0;           /* nb of bytes in the pending buffer */\n    this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n    this.gzhead = null;         /* gzip header information to write */\n    this.gzindex = 0;           /* where in extra, name, or comment */\n    this.method = Z_DEFLATED; /* can only be DEFLATED */\n    this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n    this.w_size = 0;  /* LZ77 window size (32K by default) */\n    this.w_bits = 0;  /* log2(w_size)  (8..16) */\n    this.w_mask = 0;  /* w_size - 1 */\n\n    this.window = null;\n    /* Sliding window. Input bytes are read into the second half of the window,\n     * and move to the first half later to keep a dictionary of at least wSize\n     * bytes. With this organization, matches are limited to a distance of\n     * wSize-MAX_MATCH bytes, but this ensures that IO is always\n     * performed with a length multiple of the block size.\n     */\n\n    this.window_size = 0;\n    /* Actual size of window: 2*wSize, except when the user input buffer\n     * is directly used as sliding window.\n     */\n\n    this.prev = null;\n    /* Link to older string with same hash index. To limit the size of this\n     * array to 64K, this link is maintained only for the last 32K strings.\n     * An index in this array is thus a window index modulo 32K.\n     */\n\n    this.head = null;   /* Heads of the hash chains or NIL. */\n\n    this.ins_h = 0;       /* hash index of string to be inserted */\n    this.hash_size = 0;   /* number of elements in hash table */\n    this.hash_bits = 0;   /* log2(hash_size) */\n    this.hash_mask = 0;   /* hash_size-1 */\n\n    this.hash_shift = 0;\n    /* Number of bits by which ins_h must be shifted at each input\n     * step. It must be such that after MIN_MATCH steps, the oldest\n     * byte no longer takes part in the hash key, that is:\n     *   hash_shift * MIN_MATCH >= hash_bits\n     */\n\n    this.block_start = 0;\n    /* Window position at the beginning of the current output block. Gets\n     * negative when the window is moved backwards.\n     */\n\n    this.match_length = 0;      /* length of best match */\n    this.prev_match = 0;        /* previous match */\n    this.match_available = 0;   /* set if previous match exists */\n    this.strstart = 0;          /* start of string to insert */\n    this.match_start = 0;       /* start of matching string */\n    this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n    this.prev_length = 0;\n    /* Length of the best match at previous step. Matches not greater than this\n     * are discarded. This is used in the lazy match evaluation.\n     */\n\n    this.max_chain_length = 0;\n    /* To speed up deflation, hash chains are never searched beyond this\n     * length.  A higher limit improves compression ratio but degrades the\n     * speed.\n     */\n\n    this.max_lazy_match = 0;\n    /* Attempt to find a better match only when the current match is strictly\n     * smaller than this value. This mechanism is used only for compression\n     * levels >= 4.\n     */\n    // That's alias to max_lazy_match, don't use directly\n    //this.max_insert_length = 0;\n    /* Insert new strings in the hash table only if the match length is not\n     * greater than this length. This saves time but degrades compression.\n     * max_insert_length is used only for compression levels <= 3.\n     */\n\n    this.level = 0;     /* compression level (1..9) */\n    this.strategy = 0;  /* favor or force Huffman coding*/\n\n    this.good_match = 0;\n    /* Use a faster search when the previous match is longer than this */\n\n    this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n                /* used by trees.c: */\n\n    /* Didn't use ct_data typedef below to suppress compiler warning */\n\n    // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n    // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n    // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n    // Use flat array of DOUBLE size, with interleaved fata,\n    // because JS does not support effective\n    this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n    this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n    this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n    zero(this.dyn_ltree);\n    zero(this.dyn_dtree);\n    zero(this.bl_tree);\n\n    this.l_desc   = null;         /* desc. for literal tree */\n    this.d_desc   = null;         /* desc. for distance tree */\n    this.bl_desc  = null;         /* desc. for bit length tree */\n\n    //ush bl_count[MAX_BITS+1];\n    this.bl_count = new utils.Buf16(MAX_BITS + 1);\n    /* number of codes at each bit length for an optimal tree */\n\n    //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n    this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n    zero(this.heap);\n\n    this.heap_len = 0;               /* number of elements in the heap */\n    this.heap_max = 0;               /* element of largest frequency */\n    /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n     * The same heap array is used to build all trees.\n     */\n\n    this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n    zero(this.depth);\n    /* Depth of each subtree used as tie breaker for trees of equal frequency\n     */\n\n    this.l_buf = 0;          /* buffer index for literals or lengths */\n\n    this.lit_bufsize = 0;\n    /* Size of match buffer for literals/lengths.  There are 4 reasons for\n     * limiting lit_bufsize to 64K:\n     *   - frequencies can be kept in 16 bit counters\n     *   - if compression is not successful for the first block, all input\n     *     data is still in the window so we can still emit a stored block even\n     *     when input comes from standard input.  (This can also be done for\n     *     all blocks if lit_bufsize is not greater than 32K.)\n     *   - if compression is not successful for a file smaller than 64K, we can\n     *     even emit a stored file instead of a stored block (saving 5 bytes).\n     *     This is applicable only for zip (not gzip or zlib).\n     *   - creating new Huffman trees less frequently may not provide fast\n     *     adaptation to changes in the input data statistics. (Take for\n     *     example a binary file with poorly compressible code followed by\n     *     a highly compressible string table.) Smaller buffer sizes give\n     *     fast adaptation but have of course the overhead of transmitting\n     *     trees more frequently.\n     *   - I can't count above 4\n     */\n\n    this.last_lit = 0;      /* running index in l_buf */\n\n    this.d_buf = 0;\n    /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n     * the same number of elements. To use different lengths, an extra flag\n     * array would be necessary.\n     */\n\n    this.opt_len = 0;       /* bit length of current block with optimal trees */\n    this.static_len = 0;    /* bit length of current block with static trees */\n    this.matches = 0;       /* number of string matches in current block */\n    this.insert = 0;        /* bytes at end of window left to insert */\n\n\n    this.bi_buf = 0;\n    /* Output buffer. bits are inserted starting at the bottom (least\n     * significant bits).\n     */\n    this.bi_valid = 0;\n    /* Number of valid bits in bi_buf.  All bits above the last valid bit\n     * are always zero.\n     */\n\n    // Used for window memory init. We safely ignore it for JS. That makes\n    // sense only for pointers and memory check tools.\n    //this.high_water = 0;\n    /* High water mark offset in window for initialized bytes -- bytes above\n     * this are set to zero in order to avoid memory check warnings when\n     * longest match routines access bytes past the input.  This is then\n     * updated to the new high water mark.\n     */\n  }\n}\n\nfunction deflateResetKeep(strm) {\n  let s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n    :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  let old_flush, s;\n  let beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n    (!strm.input && strm.avail_in !== 0) ||\n    (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n          (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n            4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n          (s.gzhead.hcrc ? 2 : 0) +\n          (!s.gzhead.extra ? 0 : 4) +\n          (!s.gzhead.name ? 0 : 8) +\n          (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n          (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n            4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      let level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n  //#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n  //#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  let status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  let dictLength = dictionary.length;\n\n  let s;\n  let str, n;\n  let wrap;\n  let avail;\n  let next;\n  let input;\n  let tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\nconst deflateInfo = 'pako deflate (from Nodeca project)';\nexport {\n  deflateInit,\n  deflateInit2,\n  deflateReset,\n  deflateResetKeep,\n  deflateSetHeader,\n  deflate,\n  deflateEnd,\n  deflateSetDictionary,\n  deflateInfo\n};\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","// String encode/decode helpers\n\n\n\nimport * as utils from \"./common.js\";\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_OK = true;\nlet STR_APPLY_UIA_OK = true;\n\ntry {\n    String.fromCharCode.apply(null, [ 0 ]); \n} catch (__) {\n    STR_APPLY_OK = false; \n}\ntry {\n    String.fromCharCode.apply(null, new Uint8Array(1)); \n} catch (__) {\n    STR_APPLY_UIA_OK = false; \n}\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new utils.Buf8(256);\nfor (let q = 0; q < 256; q++) {\n    _utf8len[q] = q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1;\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexport function string2buf (str) {\n    let c, c2, m_pos, i, buf_len = 0;\n    const str_len = str.length;\n\n    // count binary size\n    for (m_pos = 0; m_pos < str_len; m_pos++) {\n        c = str.charCodeAt(m_pos);\n        if ((c & 0xfc00) === 0xd800 && m_pos + 1 < str_len) {\n            c2 = str.charCodeAt(m_pos + 1);\n            if ((c2 & 0xfc00) === 0xdc00) {\n                c = 0x10000 + (c - 0xd800 << 10) + (c2 - 0xdc00);\n                m_pos++;\n            }\n        }\n        buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n    }\n\n    // allocate buffer\n    const buf = new utils.Buf8(buf_len);\n\n    // convert\n    for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n        c = str.charCodeAt(m_pos);\n        if ((c & 0xfc00) === 0xd800 && m_pos + 1 < str_len) {\n            c2 = str.charCodeAt(m_pos + 1);\n            if ((c2 & 0xfc00) === 0xdc00) {\n                c = 0x10000 + (c - 0xd800 << 10) + (c2 - 0xdc00);\n                m_pos++;\n            }\n        }\n        if (c < 0x80) {\n            /* one byte */\n            buf[i++] = c;\n        } else if (c < 0x800) {\n            /* two bytes */\n            buf[i++] = 0xC0 | c >>> 6;\n            buf[i++] = 0x80 | c & 0x3f;\n        } else if (c < 0x10000) {\n            /* three bytes */\n            buf[i++] = 0xE0 | c >>> 12;\n            buf[i++] = 0x80 | c >>> 6 & 0x3f;\n            buf[i++] = 0x80 | c & 0x3f;\n        } else {\n            /* four bytes */\n            buf[i++] = 0xf0 | c >>> 18;\n            buf[i++] = 0x80 | c >>> 12 & 0x3f;\n            buf[i++] = 0x80 | c >>> 6 & 0x3f;\n            buf[i++] = 0x80 | c & 0x3f;\n        }\n    }\n\n    return buf;\n}\n\n// Helper (used in 2 places)\nfunction _buf2binstring(buf, len) {\n    // On Chrome, the arguments in a function call that are allowed is `65534`.\n    // If the length of the buffer is smaller than that, we can use this optimization,\n    // otherwise we will take a slower path.\n    if (len < 65534) {\n        if (buf.subarray && STR_APPLY_UIA_OK || !buf.subarray && STR_APPLY_OK) {\n            return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n        }\n    }\n\n    let result = \"\";\n    for (let i = 0; i < len; i++) {\n        result += String.fromCharCode(buf[i]);\n    }\n    return result;\n}\n\n\n// Convert byte array to binary string\nexport function buf2binstring (buf) {\n    return _buf2binstring(buf, buf.length);\n}\n\n\n// Convert binary string (typed, when possible)\nexport function binstring2buf (str) {\n    const buf = new utils.Buf8(str.length);\n    for (let i = 0, len = buf.length; i < len; i++) {\n        buf[i] = str.charCodeAt(i);\n    }\n    return buf;\n}\n\n\n// convert array to string\nexport function buf2string (buf, max) {\n    let i, out, c, c_len;\n    const len = max || buf.length;\n\n    // Reserve max possible length (2 words per char)\n    // NB: by unknown reasons, Array is significantly faster for\n    //     String.fromCharCode.apply than Uint16Array.\n    // var utf16buf = new Array(len * 2);\n    // try Uint16Array\n    const utf16buf = new Uint16Array(len * 2);\n\n    for (out = 0, i = 0; i < len;) {\n        c = buf[i++];\n        // quick process ascii\n        if (c < 0x80) {\n            utf16buf[out++] = c; continue; \n        }\n\n        c_len = _utf8len[c];\n        // skip 5 & 6 byte codes\n        if (c_len > 4) {\n            utf16buf[out++] = 0xfffd; i += c_len - 1; continue; \n        }\n\n        // apply mask on first byte\n        c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n        // join the rest\n        while (c_len > 1 && i < len) {\n            c = c << 6 | buf[i++] & 0x3f;\n            c_len--;\n        }\n\n        // terminated by end of string?\n        if (c_len > 1) {\n            utf16buf[out++] = 0xfffd; continue; \n        }\n\n        if (c < 0x10000) {\n            utf16buf[out++] = c;\n        } else {\n            c -= 0x10000;\n            utf16buf[out++] = 0xd800 | c >> 10 & 0x3ff;\n            utf16buf[out++] = 0xdc00 | c & 0x3ff;\n        }\n    }\n\n    return _buf2binstring(utf16buf, out);\n}\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexport function utf8border (buf, max) {\n    let pos;\n\n    max = max || buf.length;\n    if (max > buf.length) {\n        max = buf.length; \n    }\n\n    // go back from last position, until start of sequence found\n    pos = max - 1;\n    while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) {\n        pos--; \n    }\n\n    // Very small and broken sequence,\n    // return max, because we should return something anyway.\n    if (pos < 0) {\n        return max; \n    }\n\n    // If we came to start of buffer - that means buffer is too small,\n    // return max too.\n    if (pos === 0) {\n        return max; \n    }\n\n    return pos + _utf8len[buf[pos]] > max ? pos : max;\n}\n","\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nexport default class ZStream {\n  constructor() {\n    /* next input byte */\n    this.input = null; // JS specific, because we have no pointers\n    this.next_in = 0;\n    /* number of bytes available at input */\n    this.avail_in = 0;\n    /* total number of input bytes read so far */\n    this.total_in = 0;\n    /* next output byte should be put there */\n    this.output = null; // JS specific, because we have no pointers\n    this.next_out = 0;\n    /* remaining free space at output */\n    this.avail_out = 0;\n    /* total number of bytes output so far */\n    this.total_out = 0;\n    /* last error message, NULL if no error */\n    this.msg = ''/*Z_NULL*/;\n    /* not visible by applications */\n    this.state = null;\n    /* best guess about the data type: binary or text */\n    this.data_type = 2/*Z_UNKNOWN*/;\n    /* adler32 value of the uncompressed data */\n    this.adler = 0;\n  }\n}","'use strict';\n\nimport * as zlib_deflate from \"./zlib/deflate.js\";\nimport * as utils from \"./utils/common.js\";\nimport * as strings from \"./utils/strings.js\";\nimport msg from \"./zlib/messages.js\";\nimport ZStream from \"./zlib/zstream.js\";\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\nimport { Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_SYNC_FLUSH,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED } from \"./zlib/constants.js\"\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\n\nclass Deflate {\n  constructor(options) {\n    this.options = {\n      level: Z_DEFAULT_COMPRESSION,\n      method: Z_DEFLATED,\n      chunkSize: 16384,\n      windowBits: 15,\n      memLevel: 8,\n      strategy: Z_DEFAULT_STRATEGY,\n      ...(options || {})\n    };\n\n    const opt = this.options;\n\n    if (opt.raw && (opt.windowBits > 0)) {\n      opt.windowBits = -opt.windowBits;\n    }\n\n    else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n      opt.windowBits += 16;\n    }\n\n    this.err    = 0;      // error code, if happens (0 = Z_OK)\n    this.msg    = '';     // error message\n    this.ended  = false;  // used to avoid multiple onEnd() calls\n    this.chunks = [];     // chunks of compressed data\n\n    this.strm = new ZStream();\n    this.strm.avail_out = 0;\n\n    var status = zlib_deflate.deflateInit2(\n      this.strm,\n      opt.level,\n      opt.method,\n      opt.windowBits,\n      opt.memLevel,\n      opt.strategy\n    );\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    if (opt.header) {\n      zlib_deflate.deflateSetHeader(this.strm, opt.header);\n    }\n\n    if (opt.dictionary) {\n      let dict;\n      // Convert data if needed\n      if (typeof opt.dictionary === 'string') {\n        // If we need to compress text, change encoding to utf8.\n        dict = strings.string2buf(opt.dictionary);\n      } else if (opt.dictionary instanceof ArrayBuffer) {\n        dict = new Uint8Array(opt.dictionary);\n      } else {\n        dict = opt.dictionary;\n      }\n\n      status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n\n      this._dict_set = true;\n    }\n  }\n\n  /**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\n  push(data, mode) {\n    const { strm, options: { chunkSize } } = this;\n    var status, _mode;\n\n    if (this.ended) { return false; }\n\n    _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n    // Convert data if needed\n    if (typeof data === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      strm.input = strings.string2buf(data);\n    } else if (data instanceof ArrayBuffer) {\n      strm.input = new Uint8Array(data);\n    } else {\n      strm.input = data;\n    }\n\n    strm.next_in = 0;\n    strm.avail_in = strm.input.length;\n\n    do {\n      if (strm.avail_out === 0) {\n        strm.output = new utils.Buf8(chunkSize);\n        strm.next_out = 0;\n        strm.avail_out = chunkSize;\n      }\n      status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n      if (status !== Z_STREAM_END && status !== Z_OK) {\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n      }\n      if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n    // Finalize on the last chunk.\n    if (_mode === Z_FINISH) {\n      status = zlib_deflate.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK;\n    }\n\n    // callback interim results if Z_SYNC_FLUSH.\n    if (_mode === Z_SYNC_FLUSH) {\n      this.onEnd(Z_OK);\n      strm.avail_out = 0;\n      return true;\n    }\n\n    return true;\n  };\n  /**\n   * Deflate#onData(chunk) -> Void\n   * - chunk (Uint8Array|Array|String): output data. Type of array depends\n   *   on js engine support. When string output requested, each chunk\n   *   will be string.\n   *\n   * By default, stores data blocks in `chunks[]` property and glue\n   * those in `onEnd`. Override this handler, if you need another behaviour.\n   **/\n  onData(chunk) {\n    this.chunks.push(chunk);\n  };\n\n  /**\n   * Deflate#onEnd(status) -> Void\n   * - status (Number): deflate status. 0 (Z_OK) on success,\n   *   other if not.\n   *\n   * Called once after you tell deflate that the input stream is\n   * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n   * or if an error happened. By default - join collected chunks,\n   * free memory and fill `results` / `err` properties.\n   **/\n  onEnd(status) {\n    // On success - join\n    if (status === Z_OK) {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n    this.chunks = [];\n    this.err = status;\n    this.msg = this.strm.msg;\n  };\n}\n\n\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  const deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw new Error(deflator.msg || msg[deflator.err]); }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\nexport { Deflate, deflate, deflateRaw, gzip };\n","\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 30;       /* got a data error -- remain here until reset */\nconst TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nexport default function inflate_fast(strm, start) {\n    let _in;                    /* local strm.input */\n    let _out;                   /* local strm.output */\n    // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n    let hold;                   /* local strm.hold */\n    let bits;                   /* local strm.bits */\n    let here;                   /* retrieved table entry */\n    let op;                     /* code bits, operation, extra bits, or */\n    /*  window position, window bytes to copy */\n    let len;                    /* match length, unused bytes */\n    let dist;                   /* match distance */\n    let from;                   /* where to copy match from */\n    let from_source;\n\n\n\n    /* copy state to local variables */\n    const state = strm.state;\n    //here = state.here;\n    _in = strm.next_in;\n    const input = strm.input;\n    const last = _in + (strm.avail_in - 5);\n    _out = strm.next_out;\n    const output = strm.output;\n    const beg = _out - (start - strm.avail_out);\n    const end = _out + (strm.avail_out - 257);\n    //#ifdef INFLATE_STRICT\n    const dmax = state.dmax;\n    //#endif\n    const wsize = state.wsize;\n    const whave = state.whave;\n    const wnext = state.wnext;\n    const s_window = state.window;\n    hold = state.hold;\n    bits = state.bits;\n    const lcode = state.lencode;\n    const dcode = state.distcode;\n    const lmask = (1 << state.lenbits) - 1;\n    const dmask = (1 << state.distbits) - 1;\n\n\n    /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n    top:\n    do {\n        if (bits < 15) {\n            hold += input[_in++] << bits;\n            bits += 8;\n            hold += input[_in++] << bits;\n            bits += 8;\n        }\n\n        here = lcode[hold & lmask];\n\n        dolen:\n        for (;;) { // Goto emulation\n            op = here >>> 24/*here.bits*/;\n            hold >>>= op;\n            bits -= op;\n            op = here >>> 16 & 0xff/*here.op*/;\n            if (op === 0) {                          /* literal */\n                //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n                //        \"inflate:         literal '%c'\\n\" :\n                //        \"inflate:         literal 0x%02x\\n\", here.val));\n                output[_out++] = here & 0xffff/*here.val*/;\n            } else if (op & 16) {                     /* length base */\n                len = here & 0xffff/*here.val*/;\n                op &= 15;                           /* number of extra bits */\n                if (op) {\n                    if (bits < op) {\n                        hold += input[_in++] << bits;\n                        bits += 8;\n                    }\n                    len += hold & (1 << op) - 1;\n                    hold >>>= op;\n                    bits -= op;\n                }\n                //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n                if (bits < 15) {\n                    hold += input[_in++] << bits;\n                    bits += 8;\n                    hold += input[_in++] << bits;\n                    bits += 8;\n                }\n                here = dcode[hold & dmask];\n\n                dodist:\n                for (;;) { // goto emulation\n                    op = here >>> 24/*here.bits*/;\n                    hold >>>= op;\n                    bits -= op;\n                    op = here >>> 16 & 0xff/*here.op*/;\n\n                    if (op & 16) {                      /* distance base */\n                        dist = here & 0xffff/*here.val*/;\n                        op &= 15;                       /* number of extra bits */\n                        if (bits < op) {\n                            hold += input[_in++] << bits;\n                            bits += 8;\n                            if (bits < op) {\n                                hold += input[_in++] << bits;\n                                bits += 8;\n                            }\n                        }\n                        dist += hold & (1 << op) - 1;\n                        //#ifdef INFLATE_STRICT\n                        if (dist > dmax) {\n                            strm.msg = \"invalid distance too far back\";\n                            state.mode = BAD;\n                            break top;\n                        }\n                        //#endif\n                        hold >>>= op;\n                        bits -= op;\n                        //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n                        op = _out - beg;                /* max distance in output */\n                        if (dist > op) {                /* see if copy from window */\n                            op = dist - op;               /* distance back in window */\n                            if (op > whave) {\n                                if (state.sane) {\n                                    strm.msg = \"invalid distance too far back\";\n                                    state.mode = BAD;\n                                    break top;\n                                }\n\n                                // (!) This block is disabled in zlib defaults,\n                                // don't enable it for binary compatibility\n                                //#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n                                //                if (len <= op - whave) {\n                                //                  do {\n                                //                    output[_out++] = 0;\n                                //                  } while (--len);\n                                //                  continue top;\n                                //                }\n                                //                len -= op - whave;\n                                //                do {\n                                //                  output[_out++] = 0;\n                                //                } while (--op > whave);\n                                //                if (op === 0) {\n                                //                  from = _out - dist;\n                                //                  do {\n                                //                    output[_out++] = output[from++];\n                                //                  } while (--len);\n                                //                  continue top;\n                                //                }\n                                //#endif\n                            }\n                            from = 0; // window index\n                            from_source = s_window;\n                            if (wnext === 0) {           /* very common case */\n                                from += wsize - op;\n                                if (op < len) {         /* some from window */\n                                    len -= op;\n                                    do {\n                                        output[_out++] = s_window[from++];\n                                    } while (--op);\n                                    from = _out - dist;  /* rest from output */\n                                    from_source = output;\n                                }\n                            } else if (wnext < op) {      /* wrap around window */\n                                from += wsize + wnext - op;\n                                op -= wnext;\n                                if (op < len) {         /* some from end of window */\n                                    len -= op;\n                                    do {\n                                        output[_out++] = s_window[from++];\n                                    } while (--op);\n                                    from = 0;\n                                    if (wnext < len) {  /* some from start of window */\n                                        op = wnext;\n                                        len -= op;\n                                        do {\n                                            output[_out++] = s_window[from++];\n                                        } while (--op);\n                                        from = _out - dist;      /* rest from output */\n                                        from_source = output;\n                                    }\n                                }\n                            } else {                      /* contiguous in window */\n                                from += wnext - op;\n                                if (op < len) {         /* some from window */\n                                    len -= op;\n                                    do {\n                                        output[_out++] = s_window[from++];\n                                    } while (--op);\n                                    from = _out - dist;  /* rest from output */\n                                    from_source = output;\n                                }\n                            }\n                            while (len > 2) {\n                                output[_out++] = from_source[from++];\n                                output[_out++] = from_source[from++];\n                                output[_out++] = from_source[from++];\n                                len -= 3;\n                            }\n                            if (len) {\n                                output[_out++] = from_source[from++];\n                                if (len > 1) {\n                                    output[_out++] = from_source[from++];\n                                }\n                            }\n                        } else {\n                            from = _out - dist;          /* copy direct from output */\n                            do {                        /* minimum length is three */\n                                output[_out++] = output[from++];\n                                output[_out++] = output[from++];\n                                output[_out++] = output[from++];\n                                len -= 3;\n                            } while (len > 2);\n                            if (len) {\n                                output[_out++] = output[from++];\n                                if (len > 1) {\n                                    output[_out++] = output[from++];\n                                }\n                            }\n                        }\n                    } else if ((op & 64) === 0) {          /* 2nd level distance code */\n                        here = dcode[(here & 0xffff)/*here.val*/ + (hold & (1 << op) - 1)];\n                        continue dodist;\n                    } else {\n                        strm.msg = \"invalid distance code\";\n                        state.mode = BAD;\n                        break top;\n                    }\n\n                    break; // need to emulate goto via \"continue\"\n                }\n            } else if ((op & 64) === 0) {              /* 2nd level length code */\n                here = lcode[(here & 0xffff)/*here.val*/ + (hold & (1 << op) - 1)];\n                continue dolen;\n            } else if (op & 32) {                     /* end-of-block */\n                //Tracevv((stderr, \"inflate:         end of block\\n\"));\n                state.mode = TYPE;\n                break top;\n            } else {\n                strm.msg = \"invalid literal/length code\";\n                state.mode = BAD;\n                break top;\n            }\n\n            break; // need to emulate goto via \"continue\"\n        }\n    } while (_in < last && _out < end);\n\n    /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n    len = bits >> 3;\n    _in -= len;\n    bits -= len << 3;\n    hold &= (1 << bits) - 1;\n\n    /* update state and return */\n    strm.next_in = _in;\n    strm.next_out = _out;\n    strm.avail_in = _in < last ? 5 + (last - _in) : 5 - (_in - last);\n    strm.avail_out = _out < end ? 257 + (end - _out) : 257 - (_out - end);\n    state.hold = hold;\n    state.bits = bits;\n    return;\n}\n","\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nimport * as utils from \"../utils/common.js\";\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = [ /* Length codes 257..285 base */\n    3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n    35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nconst lext = [ /* Length codes 257..285 extra */\n    16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n    19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nconst dbase = [ /* Distance codes 0..29 base */\n    1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n    257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n    8193, 12289, 16385, 24577, 0, 0\n];\n\nconst dext = [ /* Distance codes 0..29 extra */\n    16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n    23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n    28, 28, 29, 29, 64, 64\n];\n\nexport default function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts) {\n    const bits = opts.bits;\n    //here = opts.here; /* table entry for duplication */\n\n    let len = 0;               /* a code's length in bits */\n    let sym = 0;               /* index of code symbols */\n    let min = 0, max = 0;          /* minimum and maximum code lengths */\n    let root = 0;              /* number of index bits for root table */\n    let curr = 0;              /* number of index bits for current table */\n    let drop = 0;              /* code bits to drop for sub-table */\n    let left = 0;                   /* number of prefix codes available */\n    let used = 0;              /* code entries in table used */\n    let huff = 0;              /* Huffman code */\n    let incr;              /* for incrementing code, index */\n    let fill;              /* index for replicating entries */\n    let low;               /* low bits for current root entry */\n    let next;             /* next available space in table */\n    let base = null;     /* base value table to use */\n    let base_index = 0;\n    //  var shoextra;    /* extra bits table to use */\n    let end;                    /* use base and extra for symbol > end */\n    const count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n    const offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n    let extra = null;\n    let extra_index = 0;\n\n    let here_bits, here_op, here_val;\n\n    /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n    /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n    for (len = 0; len <= MAXBITS; len++) {\n        count[len] = 0;\n    }\n    for (sym = 0; sym < codes; sym++) {\n        count[lens[lens_index + sym]]++;\n    }\n\n    /* bound code lengths, force root to be within code lengths */\n    root = bits;\n    for (max = MAXBITS; max >= 1; max--) {\n        if (count[max] !== 0) {\n            break; \n        }\n    }\n    if (root > max) {\n        root = max;\n    }\n    if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n        table[table_index++] = 1 << 24 | 64 << 16 | 0;\n\n\n        //table.op[opts.table_index] = 64;\n        //table.bits[opts.table_index] = 1;\n        //table.val[opts.table_index++] = 0;\n        table[table_index++] = 1 << 24 | 64 << 16 | 0;\n\n        opts.bits = 1;\n        return 0;     /* no symbols, but wait for decoding to report error */\n    }\n    for (min = 1; min < max; min++) {\n        if (count[min] !== 0) {\n            break; \n        }\n    }\n    if (root < min) {\n        root = min;\n    }\n\n    /* check for an over-subscribed or incomplete set of lengths */\n    left = 1;\n    for (len = 1; len <= MAXBITS; len++) {\n        left <<= 1;\n        left -= count[len];\n        if (left < 0) {\n            return -1;\n        }        /* over-subscribed */\n    }\n    if (left > 0 && (type === CODES || max !== 1)) {\n        return -1;                      /* incomplete set */\n    }\n\n    /* generate offsets into symbol table for each length for sorting */\n    offs[1] = 0;\n    for (len = 1; len < MAXBITS; len++) {\n        offs[len + 1] = offs[len] + count[len];\n    }\n\n    /* sort symbols by length, by symbol order within each length */\n    for (sym = 0; sym < codes; sym++) {\n        if (lens[lens_index + sym] !== 0) {\n            work[offs[lens[lens_index + sym]]++] = sym;\n        }\n    }\n\n    /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n    /* set up for code type */\n    // poor man optimization - use if-else instead of switch,\n    // to avoid deopts in old v8\n    if (type === CODES) {\n        base = extra = work;    /* dummy value--not used */\n        end = 19;\n\n    } else if (type === LENS) {\n        base = lbase;\n        base_index -= 257;\n        extra = lext;\n        extra_index -= 257;\n        end = 256;\n\n    } else {                    /* DISTS */\n        base = dbase;\n        extra = dext;\n        end = -1;\n    }\n\n    /* initialize opts for loop */\n    huff = 0;                   /* starting code */\n    sym = 0;                    /* starting code symbol */\n    len = min;                  /* starting code length */\n    next = table_index;              /* current table to fill in */\n    curr = root;                /* current table index bits */\n    drop = 0;                   /* current bits to drop from code for index */\n    low = -1;                   /* trigger new sub-table when len > root */\n    used = 1 << root;          /* use root table entries */\n    const mask = used - 1;            /* mask for comparing low */\n\n    /* check available table space */\n    if (type === LENS && used > ENOUGH_LENS ||\n    type === DISTS && used > ENOUGH_DISTS) {\n        return 1;\n    }\n\n    /* process all codes and make table entries */\n    for (;;) {\n    /* create table entry */\n        here_bits = len - drop;\n        if (work[sym] < end) {\n            here_op = 0;\n            here_val = work[sym];\n        } else if (work[sym] > end) {\n            here_op = extra[extra_index + work[sym]];\n            here_val = base[base_index + work[sym]];\n        } else {\n            here_op = 32 + 64;         /* end of block */\n            here_val = 0;\n        }\n\n        /* replicate for those indices with low len bits equal to huff */\n        incr = 1 << len - drop;\n        fill = 1 << curr;\n        min = fill;                 /* save offset to next table */\n        do {\n            fill -= incr;\n            table[next + (huff >> drop) + fill] = here_bits << 24 | here_op << 16 | here_val |0;\n        } while (fill !== 0);\n\n        /* backwards increment the len-bit code huff */\n        incr = 1 << len - 1;\n        while (huff & incr) {\n            incr >>= 1;\n        }\n        if (incr !== 0) {\n            huff &= incr - 1;\n            huff += incr;\n        } else {\n            huff = 0;\n        }\n\n        /* go to next symbol, update count, len */\n        sym++;\n        if (--count[len] === 0) {\n            if (len === max) {\n                break; \n            }\n            len = lens[lens_index + work[sym]];\n        }\n\n        /* create new sub-table if needed */\n        if (len > root && (huff & mask) !== low) {\n            /* if first time, transition to sub-tables */\n            if (drop === 0) {\n                drop = root;\n            }\n\n            /* increment past last table */\n            next += min;            /* here min is 1 << curr */\n\n            /* determine length of next table */\n            curr = len - drop;\n            left = 1 << curr;\n            while (curr + drop < max) {\n                left -= count[curr + drop];\n                if (left <= 0) {\n                    break; \n                }\n                curr++;\n                left <<= 1;\n            }\n\n            /* check for enough space */\n            used += 1 << curr;\n            if (type === LENS && used > ENOUGH_LENS ||\n        type === DISTS && used > ENOUGH_DISTS) {\n                return 1;\n            }\n\n            /* point entry in root table to sub-table */\n            low = huff & mask;\n            /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n            table[low] = root << 24 | curr << 16 | next - table_index |0;\n        }\n    }\n\n    /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n    if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n        table[next + huff] = len - drop << 24 | 64 << 16 |0;\n    }\n\n    /* set return parameters */\n    //opts.table_index += used;\n    opts.bits = root;\n    return 0;\n}\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nimport * as utils from \"../utils/common.js\";\nimport adler32 from \"./adler32.js\";\nimport crc32 from \"./crc32.js\";\nimport inflate_fast from \"./inffast.js\";\nimport inflate_table from \"./inftrees.js\";\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nimport {\n  Z_FINISH,\n  Z_BLOCK,\n  Z_TREES,\n  Z_OK,\n  Z_STREAM_END,\n  Z_NEED_DICT,\n  Z_STREAM_ERROR,\n  Z_DATA_ERROR,\n  Z_BUF_ERROR,\n  Z_DEFLATED\n} from \"./constants.js\";\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 1;       /* i: waiting for magic header */\nconst    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 3;       /* i: waiting for modification time (gzip) */\nconst    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 7;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 9;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 10;    /* i: waiting for dictionary check value */\nconst    DICT = 11;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 14;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 18;   /* i: waiting for code length code lengths */\nconst        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nconst            LEN = 21;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 22;    /* i: waiting for length extra bits */\nconst            DIST = 23;      /* i: waiting for distance code */\nconst            DISTEXT = 24;   /* i: waiting for distance extra bits */\nconst            MATCH = 25;     /* o: waiting for output space to copy string */\nconst            LIT = 26;       /* o: waiting for output space to write literal */\nconst    CHECK = 27;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 29;      /* finished check, done -- remain here until reset */\nconst    BAD = 30;       /* got a data error -- remain here until reset */\n//const    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nclass InflateState {\n  constructor() {\n    this.mode = 0;             /* current inflate mode */\n    this.last = false;          /* true if processing last block */\n    this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n    this.havedict = false;      /* true if dictionary provided */\n    this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n    this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n    this.check = 0;             /* protected copy of check value */\n    this.total = 0;             /* protected copy of output count */\n    // TODO: may be {}\n    this.head = null;           /* where to save gzip header information */\n\n    /* sliding window */\n    this.wbits = 0;             /* log base 2 of requested window size */\n    this.wsize = 0;             /* window size or zero if not using window */\n    this.whave = 0;             /* valid bytes in the window */\n    this.wnext = 0;             /* window write index */\n    this.window = null;         /* allocated sliding window, if needed */\n\n    /* bit accumulator */\n    this.hold = 0;              /* input bit accumulator */\n    this.bits = 0;              /* number of bits in \"in\" */\n\n    /* for string and stored block copying */\n    this.length = 0;            /* literal or length of data to copy */\n    this.offset = 0;            /* distance back to copy string from */\n\n    /* for table and code decoding */\n    this.extra = 0;             /* extra bits needed */\n\n    /* fixed and dynamic code tables */\n    this.lencode = null;          /* starting table for length/literal codes */\n    this.distcode = null;         /* starting table for distance codes */\n    this.lenbits = 0;           /* index bits for lencode */\n    this.distbits = 0;          /* index bits for distcode */\n\n    /* dynamic table building */\n    this.ncode = 0;             /* number of code length code lengths */\n    this.nlen = 0;              /* number of length code lengths */\n    this.ndist = 0;             /* number of distance code lengths */\n    this.have = 0;              /* number of code lengths in lens[] */\n    this.next = null;              /* next available space in codes[] */\n\n    this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n    this.work = new utils.Buf16(288); /* work area for code table building */\n\n    /*\n     because we don't have pointers in js, we use lencode and distcode directly\n     as buffers so we don't need codes\n    */\n    //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n    this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n    this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n    this.sane = 0;                   /* if false, allow invalid distance too far */\n    this.back = 0;                   /* bits back of last unprocessed length/lit */\n    this.was = 0;                    /* initial length of match */\n  }\n}\n\nfunction inflateResetKeep(strm) {\n  let state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  let state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  let wrap;\n  let state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  let ret;\n  let state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    let sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  let hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary var for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      // case MEM:\n      //   return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      // state.mode = MEM;\n      // return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  const state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  let state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  // if (ret) {\n  //   state.mode = MEM;\n  //   return Z_MEM_ERROR;\n  // }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nconst inflateInfo = 'pako inflate (from Nodeca project)';\n\nexport {\n  inflateReset,\n  inflateReset2,\n  inflateResetKeep,\n  inflateInit,\n  inflateInit2,\n  inflate,\n  inflateEnd,\n  inflateGetHeader,\n  inflateSetDictionary,\n  inflateInfo\n};\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nexport default class GZheader {\n  constructor() {\n    /* true if compressed data believed to be text */\n    this.text       = 0;\n    /* modification time */\n    this.time       = 0;\n    /* extra flags (not used when writing a gzip file) */\n    this.xflags     = 0;\n    /* operating system */\n    this.os         = 0;\n    /* pointer to extra field or Z_NULL if none */\n    this.extra      = null;\n    /* extra field length (valid if extra != Z_NULL) */\n    this.extra_len  = 0; // Actually, we don't need it in JS,\n                        // but leave for few code modifications\n\n    //\n    // Setup limits is not necessary because in js we should not preallocate memory\n    // for inflate use constant limit in 65536 bytes\n    //\n\n    /* space at extra (only when reading header) */\n    // this.extra_max  = 0;\n    /* pointer to zero-terminated file name or Z_NULL */\n    this.name       = '';\n    /* space at name (only when reading header) */\n    // this.name_max   = 0;\n    /* pointer to zero-terminated comment or Z_NULL */\n    this.comment    = '';\n    /* space at comment (only when reading header) */\n    // this.comm_max   = 0;\n    /* true if there was or will be a header crc */\n    this.hcrc       = 0;\n    /* true when done reading gzip header (not used when writing a gzip file) */\n    this.done       = false;\n  }\n}","'use strict';\n\nimport * as zlib_inflate from \"./zlib/inflate.js\";\nimport * as utils from \"./utils/common.js\";\nimport * as strings from \"./utils/strings.js\";\nimport * as c from \"./zlib/constants.js\";\nimport msg from \"./zlib/messages.js\";\nimport ZStream from \"./zlib/zstream.js\";\nimport GZheader from \"./zlib/gzheader.js\";\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nclass Inflate {\n  constructor(options) {\n    this.options = {\n      chunkSize: 16384,\n      windowBits: 0,\n      ...(options || {})\n    };\n\n    const opt = this.options;\n\n    // Force window size for `raw` data, if not set directly,\n    // because we have no header for autodetect.\n    if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n      opt.windowBits = -opt.windowBits;\n      if (opt.windowBits === 0) { opt.windowBits = -15; }\n    }\n\n    // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n    if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n      opt.windowBits += 32;\n    }\n\n    // Gzip header has no info about windows size, we can do autodetect only\n    // for deflate. So, if window size not set, force it to max when gzip possible\n    if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n      // bit 3 (16) -> gzipped data\n      // bit 4 (32) -> autodetect gzip/deflate\n      if ((opt.windowBits & 15) === 0) {\n        opt.windowBits |= 15;\n      }\n    }\n\n    this.err    = 0;      // error code, if happens (0 = Z_OK)\n    this.msg    = '';     // error message\n    this.ended  = false;  // used to avoid multiple onEnd() calls\n    this.chunks = [];     // chunks of compressed data\n\n    this.strm   = new ZStream();\n    this.strm.avail_out = 0;\n\n    let status = zlib_inflate.inflateInit2(\n      this.strm,\n      opt.windowBits\n    );\n\n    if (status !== c.Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this.header = new GZheader();\n\n    zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n    // Setup dictionary\n    if (opt.dictionary) {\n      // Convert data if needed\n      if (typeof opt.dictionary === 'string') {\n        opt.dictionary = strings.string2buf(opt.dictionary);\n      } else if (opt.dictionary instanceof ArrayBuffer) {\n        opt.dictionary = new Uint8Array(opt.dictionary);\n      }\n      if (opt.raw) { //In raw mode we need to set the dictionary early\n        status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n        if (status !== c.Z_OK) {\n          throw new Error(msg[status]);\n        }\n      }\n    }\n  }\n  /**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\n  push(data, mode) {\n    const { strm, options: { chunkSize, dictionary } } = this;\n    let status, _mode;\n    let next_out_utf8, tail, utf8str;\n\n    // Flag to properly process Z_BUF_ERROR on testing inflate call\n    // when we check that all output data was flushed.\n    let allowBufError = false;\n\n    if (this.ended) { return false; }\n    _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n    // Convert data if needed\n    if (typeof data === 'string') {\n      // Only binary strings can be decompressed on practice\n      strm.input = strings.binstring2buf(data);\n    } else if (data instanceof ArrayBuffer) {\n      strm.input = new Uint8Array(data);\n    } else {\n      strm.input = data;\n    }\n\n    strm.next_in = 0;\n    strm.avail_in = strm.input.length;\n\n    do {\n      if (strm.avail_out === 0) {\n        strm.output = new utils.Buf8(chunkSize);\n        strm.next_out = 0;\n        strm.avail_out = chunkSize;\n      }\n\n      status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n      if (status === c.Z_NEED_DICT && dictionary) {\n        status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n      }\n\n      if (status === c.Z_BUF_ERROR && allowBufError === true) {\n        status = c.Z_OK;\n        allowBufError = false;\n      }\n\n      if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n      }\n\n      if (strm.next_out) {\n        if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n\n      // When no more input data, we should check that internal inflate buffers\n      // are flushed. The only way to do it when avail_out = 0 - run one more\n      // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n      // Here we set flag to process this error properly.\n      //\n      // NOTE. Deflate does not return error in this case and does not needs such\n      // logic.\n      if (strm.avail_in === 0 && strm.avail_out === 0) {\n        allowBufError = true;\n      }\n\n    } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n    if (status === c.Z_STREAM_END) {\n      _mode = c.Z_FINISH;\n    }\n\n    // Finalize on the last chunk.\n    if (_mode === c.Z_FINISH) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === c.Z_OK;\n    }\n\n    // callback interim results if Z_SYNC_FLUSH.\n    if (_mode === c.Z_SYNC_FLUSH) {\n      this.onEnd(c.Z_OK);\n      strm.avail_out = 0;\n      return true;\n    }\n\n    return true;\n  };\n\n  /**\n   * Inflate#onData(chunk) -> Void\n   * - chunk (Uint8Array|Array|String): output data. Type of array depends\n   *   on js engine support. When string output requested, each chunk\n   *   will be string.\n   *\n   * By default, stores data blocks in `chunks[]` property and glue\n   * those in `onEnd`. Override this handler, if you need another behaviour.\n   **/\n  onData(chunk) {\n    this.chunks.push(chunk);\n  };\n\n\n\n  /**\n   * Inflate#onEnd(status) -> Void\n   * - status (Number): inflate status. 0 (Z_OK) on success,\n   *   other if not.\n   *\n   * Called either after you tell inflate that the input stream is\n   * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n   * or if an error happened. By default - join collected chunks,\n   * free memory and fill `results` / `err` properties.\n   **/\n  onEnd(status) {\n    // On success - join\n    if (status === c.Z_OK) {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n    this.chunks = [];\n    this.err = status;\n    this.msg = this.strm.msg;\n  };\n}\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw new Error(inflator.msg || msg[inflator.err]); }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\nexport { Inflate, inflate, inflateRaw, inflate as ungzip };\n","/*\nnode-bzip - a pure-javascript Node.JS module for decoding bzip2 data\n\nCopyright (C) 2012 Eli Skeggs\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, see\nhttp://www.gnu.org/licenses/lgpl-2.1.html\n\nAdapted from bzip2.js, copyright 2011 antimatter15 (antimatter15@gmail.com).\n\nBased on micro-bunzip by Rob Landley (rob@landley.net).\n\nBased on bzip2 decompression code by Julian R Seward (jseward@acm.org),\nwhich also acknowledges contributions by Mike Burrows, David Wheeler,\nPeter Fenwick, Alistair Moffat, Radford Neal, Ian H. Witten,\nRobert Sedgewick, and Jon L. Bentley.\n*/\n\nvar BITMASK = [0x00, 0x01, 0x03, 0x07, 0x0F, 0x1F, 0x3F, 0x7F, 0xFF];\n\n// offset in bytes\nvar BitReader = function(stream) {\n  this.stream = stream;\n  this.bitOffset = 0;\n  this.curByte = 0;\n  this.hasByte = false;\n};\n\nBitReader.prototype._ensureByte = function() {\n  if (!this.hasByte) {\n    this.curByte = this.stream.readByte();\n    this.hasByte = true;\n  }\n};\n\n// reads bits from the buffer\nBitReader.prototype.read = function(bits) {\n  var result = 0;\n  while (bits > 0) {\n    this._ensureByte();\n    var remaining = 8 - this.bitOffset;\n    // if we're in a byte\n    if (bits >= remaining) {\n      result <<= remaining;\n      result |= BITMASK[remaining] & this.curByte;\n      this.hasByte = false;\n      this.bitOffset = 0;\n      bits -= remaining;\n    } else {\n      result <<= bits;\n      var shift = remaining - bits;\n      result |= (this.curByte & (BITMASK[bits] << shift)) >> shift;\n      this.bitOffset += bits;\n      bits = 0;\n    }\n  }\n  return result;\n};\n\n// seek to an arbitrary point in the buffer (expressed in bits)\nBitReader.prototype.seek = function(pos) {\n  var n_bit = pos % 8;\n  var n_byte = (pos - n_bit) / 8;\n  this.bitOffset = n_bit;\n  this.stream.seek(n_byte);\n  this.hasByte = false;\n};\n\n// reads 6 bytes worth of data using the read method\nBitReader.prototype.pi = function() {\n  var buf = new Uint8Array(6), i;\n  for (i = 0; i < buf.length; i++) {\n    buf[i] = this.read(8);\n  }\n  return bufToHex(buf);\n};\n\nfunction bufToHex(buf) {\n  return Array.prototype.map.call(buf, x => ('00' + x.toString(16)).slice(-2)).join('');\n}\n\nmodule.exports = BitReader;\n","/* very simple input/output stream interface */\nvar Stream = function() {\n};\n\n// input streams //////////////\n/** Returns the next byte, or -1 for EOF. */\nStream.prototype.readByte = function() {\n  throw new Error(\"abstract method readByte() not implemented\");\n};\n/** Attempts to fill the buffer; returns number of bytes read, or\n *  -1 for EOF. */\nStream.prototype.read = function(buffer, bufOffset, length) {\n  var bytesRead = 0;\n  while (bytesRead < length) {\n    var c = this.readByte();\n    if (c < 0) { // EOF\n      return (bytesRead===0) ? -1 : bytesRead;\n    }\n    buffer[bufOffset++] = c;\n    bytesRead++;\n  }\n  return bytesRead;\n};\nStream.prototype.seek = function(new_pos) {\n  throw new Error(\"abstract method seek() not implemented\");\n};\n\n// output streams ///////////\nStream.prototype.writeByte = function(_byte) {\n  throw new Error(\"abstract method readByte() not implemented\");\n};\nStream.prototype.write = function(buffer, bufOffset, length) {\n  var i;\n  for (i=0; i<length; i++) {\n    this.writeByte(buffer[bufOffset++]);\n  }\n  return length;\n};\nStream.prototype.flush = function() {\n};\n\nmodule.exports = Stream;\n","/* CRC32, used in Bzip2 implementation.\n * This is a port of CRC32.java from the jbzip2 implementation at\n *   https://code.google.com/p/jbzip2\n * which is:\n *   Copyright (c) 2011 Matthew Francis\n *\n *   Permission is hereby granted, free of charge, to any person\n *   obtaining a copy of this software and associated documentation\n *   files (the \"Software\"), to deal in the Software without\n *   restriction, including without limitation the rights to use,\n *   copy, modify, merge, publish, distribute, sublicense, and/or sell\n *   copies of the Software, and to permit persons to whom the\n *   Software is furnished to do so, subject to the following\n *   conditions:\n *\n *   The above copyright notice and this permission notice shall be\n *   included in all copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n *   EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n *   OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n *   NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n *   HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n *   WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n *   OTHER DEALINGS IN THE SOFTWARE.\n * This JavaScript implementation is:\n *   Copyright (c) 2013 C. Scott Ananian\n * with the same licensing terms as Matthew Francis' original implementation.\n */\nmodule.exports = (function() {\n\n  /**\n   * A static CRC lookup table\n   */\n  var crc32Lookup = new Uint32Array([\n    0x00000000, 0x04c11db7, 0x09823b6e, 0x0d4326d9, 0x130476dc, 0x17c56b6b, 0x1a864db2, 0x1e475005,\n    0x2608edb8, 0x22c9f00f, 0x2f8ad6d6, 0x2b4bcb61, 0x350c9b64, 0x31cd86d3, 0x3c8ea00a, 0x384fbdbd,\n    0x4c11db70, 0x48d0c6c7, 0x4593e01e, 0x4152fda9, 0x5f15adac, 0x5bd4b01b, 0x569796c2, 0x52568b75,\n    0x6a1936c8, 0x6ed82b7f, 0x639b0da6, 0x675a1011, 0x791d4014, 0x7ddc5da3, 0x709f7b7a, 0x745e66cd,\n    0x9823b6e0, 0x9ce2ab57, 0x91a18d8e, 0x95609039, 0x8b27c03c, 0x8fe6dd8b, 0x82a5fb52, 0x8664e6e5,\n    0xbe2b5b58, 0xbaea46ef, 0xb7a96036, 0xb3687d81, 0xad2f2d84, 0xa9ee3033, 0xa4ad16ea, 0xa06c0b5d,\n    0xd4326d90, 0xd0f37027, 0xddb056fe, 0xd9714b49, 0xc7361b4c, 0xc3f706fb, 0xceb42022, 0xca753d95,\n    0xf23a8028, 0xf6fb9d9f, 0xfbb8bb46, 0xff79a6f1, 0xe13ef6f4, 0xe5ffeb43, 0xe8bccd9a, 0xec7dd02d,\n    0x34867077, 0x30476dc0, 0x3d044b19, 0x39c556ae, 0x278206ab, 0x23431b1c, 0x2e003dc5, 0x2ac12072,\n    0x128e9dcf, 0x164f8078, 0x1b0ca6a1, 0x1fcdbb16, 0x018aeb13, 0x054bf6a4, 0x0808d07d, 0x0cc9cdca,\n    0x7897ab07, 0x7c56b6b0, 0x71159069, 0x75d48dde, 0x6b93dddb, 0x6f52c06c, 0x6211e6b5, 0x66d0fb02,\n    0x5e9f46bf, 0x5a5e5b08, 0x571d7dd1, 0x53dc6066, 0x4d9b3063, 0x495a2dd4, 0x44190b0d, 0x40d816ba,\n    0xaca5c697, 0xa864db20, 0xa527fdf9, 0xa1e6e04e, 0xbfa1b04b, 0xbb60adfc, 0xb6238b25, 0xb2e29692,\n    0x8aad2b2f, 0x8e6c3698, 0x832f1041, 0x87ee0df6, 0x99a95df3, 0x9d684044, 0x902b669d, 0x94ea7b2a,\n    0xe0b41de7, 0xe4750050, 0xe9362689, 0xedf73b3e, 0xf3b06b3b, 0xf771768c, 0xfa325055, 0xfef34de2,\n    0xc6bcf05f, 0xc27dede8, 0xcf3ecb31, 0xcbffd686, 0xd5b88683, 0xd1799b34, 0xdc3abded, 0xd8fba05a,\n    0x690ce0ee, 0x6dcdfd59, 0x608edb80, 0x644fc637, 0x7a089632, 0x7ec98b85, 0x738aad5c, 0x774bb0eb,\n    0x4f040d56, 0x4bc510e1, 0x46863638, 0x42472b8f, 0x5c007b8a, 0x58c1663d, 0x558240e4, 0x51435d53,\n    0x251d3b9e, 0x21dc2629, 0x2c9f00f0, 0x285e1d47, 0x36194d42, 0x32d850f5, 0x3f9b762c, 0x3b5a6b9b,\n    0x0315d626, 0x07d4cb91, 0x0a97ed48, 0x0e56f0ff, 0x1011a0fa, 0x14d0bd4d, 0x19939b94, 0x1d528623,\n    0xf12f560e, 0xf5ee4bb9, 0xf8ad6d60, 0xfc6c70d7, 0xe22b20d2, 0xe6ea3d65, 0xeba91bbc, 0xef68060b,\n    0xd727bbb6, 0xd3e6a601, 0xdea580d8, 0xda649d6f, 0xc423cd6a, 0xc0e2d0dd, 0xcda1f604, 0xc960ebb3,\n    0xbd3e8d7e, 0xb9ff90c9, 0xb4bcb610, 0xb07daba7, 0xae3afba2, 0xaafbe615, 0xa7b8c0cc, 0xa379dd7b,\n    0x9b3660c6, 0x9ff77d71, 0x92b45ba8, 0x9675461f, 0x8832161a, 0x8cf30bad, 0x81b02d74, 0x857130c3,\n    0x5d8a9099, 0x594b8d2e, 0x5408abf7, 0x50c9b640, 0x4e8ee645, 0x4a4ffbf2, 0x470cdd2b, 0x43cdc09c,\n    0x7b827d21, 0x7f436096, 0x7200464f, 0x76c15bf8, 0x68860bfd, 0x6c47164a, 0x61043093, 0x65c52d24,\n    0x119b4be9, 0x155a565e, 0x18197087, 0x1cd86d30, 0x029f3d35, 0x065e2082, 0x0b1d065b, 0x0fdc1bec,\n    0x3793a651, 0x3352bbe6, 0x3e119d3f, 0x3ad08088, 0x2497d08d, 0x2056cd3a, 0x2d15ebe3, 0x29d4f654,\n    0xc5a92679, 0xc1683bce, 0xcc2b1d17, 0xc8ea00a0, 0xd6ad50a5, 0xd26c4d12, 0xdf2f6bcb, 0xdbee767c,\n    0xe3a1cbc1, 0xe760d676, 0xea23f0af, 0xeee2ed18, 0xf0a5bd1d, 0xf464a0aa, 0xf9278673, 0xfde69bc4,\n    0x89b8fd09, 0x8d79e0be, 0x803ac667, 0x84fbdbd0, 0x9abc8bd5, 0x9e7d9662, 0x933eb0bb, 0x97ffad0c,\n    0xafb010b1, 0xab710d06, 0xa6322bdf, 0xa2f33668, 0xbcb4666d, 0xb8757bda, 0xb5365d03, 0xb1f740b4\n  ]);\n\n  var CRC32 = function() {\n    /**\n     * The current CRC\n     */\n    var crc = 0xffffffff;\n\n    /**\n     * @return The current CRC\n     */\n    this.getCRC = function() {\n      return (~crc) >>> 0; // return an unsigned value\n    };\n\n    /**\n     * Update the CRC with a single byte\n     * @param value The value to update the CRC with\n     */\n    this.updateCRC = function(value) {\n      crc = (crc << 8) ^ crc32Lookup[((crc >>> 24) ^ value) & 0xff];\n    };\n\n    /**\n     * Update the CRC with a sequence of identical bytes\n     * @param value The value to update the CRC with\n     * @param count The number of bytes\n     */\n    this.updateCRCRun = function(value, count) {\n      while (count-- > 0) {\n        crc = (crc << 8) ^ crc32Lookup[((crc >>> 24) ^ value) & 0xff];\n      }\n    };\n  };\n  return CRC32;\n})();\n","/*\nseek-bzip - a pure-javascript module for seeking within bzip2 data\n\nCopyright (C) 2013 C. Scott Ananian\nCopyright (C) 2012 Eli Skeggs\nCopyright (C) 2011 Kevin Kwok\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, see\nhttp://www.gnu.org/licenses/lgpl-2.1.html\n\nAdapted from node-bzip, copyright 2012 Eli Skeggs.\nAdapted from bzip2.js, copyright 2011 Kevin Kwok (antimatter15@gmail.com).\n\nBased on micro-bunzip by Rob Landley (rob@landley.net).\n\nBased on bzip2 decompression code by Julian R Seward (jseward@acm.org),\nwhich also acknowledges contributions by Mike Burrows, David Wheeler,\nPeter Fenwick, Alistair Moffat, Radford Neal, Ian H. Witten,\nRobert Sedgewick, and Jon L. Bentley.\n*/\n\nvar BitReader = require('./bitreader');\nvar Stream = require('./stream');\nvar CRC32 = require('./crc32');\n\nvar MAX_HUFCODE_BITS = 20;\nvar MAX_SYMBOLS = 258;\nvar SYMBOL_RUNA = 0;\nvar SYMBOL_RUNB = 1;\nvar MIN_GROUPS = 2;\nvar MAX_GROUPS = 6;\nvar GROUP_SIZE = 50;\n\nvar WHOLEPI = \"314159265359\";\nvar SQRTPI = \"177245385090\";\n\nvar mtf = function(array, index) {\n  var src = array[index], i;\n  for (i = index; i > 0; i--) {\n    array[i] = array[i-1];\n  }\n  array[0] = src;\n  return src;\n};\n\nvar Err = {\n  OK: 0,\n  LAST_BLOCK: -1,\n  NOT_BZIP_DATA: -2,\n  UNEXPECTED_INPUT_EOF: -3,\n  UNEXPECTED_OUTPUT_EOF: -4,\n  DATA_ERROR: -5,\n  OUT_OF_MEMORY: -6,\n  OBSOLETE_INPUT: -7,\n  END_OF_BLOCK: -8\n};\nvar ErrorMessages = {};\nErrorMessages[Err.LAST_BLOCK] =            \"Bad file checksum\";\nErrorMessages[Err.NOT_BZIP_DATA] =         \"Not bzip data\";\nErrorMessages[Err.UNEXPECTED_INPUT_EOF] =  \"Unexpected input EOF\";\nErrorMessages[Err.UNEXPECTED_OUTPUT_EOF] = \"Unexpected output EOF\";\nErrorMessages[Err.DATA_ERROR] =            \"Data error\";\nErrorMessages[Err.OUT_OF_MEMORY] =         \"Out of memory\";\nErrorMessages[Err.OBSOLETE_INPUT] = \"Obsolete (pre 0.9.5) bzip format not supported.\";\n\nvar _throw = function(status, optDetail) {\n  var msg = ErrorMessages[status] || 'unknown error';\n  if (optDetail) { msg += ': '+optDetail; }\n  var e = new TypeError(msg);\n  e.errorCode = status;\n  throw e;\n};\n\nvar Bunzip = function(inputStream, outputStream) {\n  this.writePos = this.writeCurrent = this.writeCount = 0;\n\n  this._start_bunzip(inputStream, outputStream);\n};\nBunzip.prototype._init_block = function() {\n  var moreBlocks = this._get_next_block();\n  if ( !moreBlocks ) {\n    this.writeCount = -1;\n    return false; /* no more blocks */\n  }\n  this.blockCRC = new CRC32();\n  return true;\n};\n/* XXX micro-bunzip uses (inputStream, inputBuffer, len) as arguments */\nBunzip.prototype._start_bunzip = function(inputStream, outputStream) {\n  /* Ensure that file starts with \"BZh['1'-'9'].\" */\n  var buf = new Uint8Array(4);\n  if (inputStream.read(buf, 0, 4) !== 4 ||\n      String.fromCharCode(buf[0], buf[1], buf[2]) !== 'BZh')\n    _throw(Err.NOT_BZIP_DATA, 'bad magic');\n\n  var level = buf[3] - 0x30;\n  if (level < 1 || level > 9)\n    _throw(Err.NOT_BZIP_DATA, 'level out of range');\n\n  this.reader = new BitReader(inputStream);\n\n  /* Fourth byte (ascii '1'-'9'), indicates block size in units of 100k of\n     uncompressed data.  Allocate intermediate buffer for block. */\n  this.dbufSize = 100000 * level;\n  this.nextoutput = 0;\n  this.outputStream = outputStream;\n  this.streamCRC = 0;\n};\nBunzip.prototype._get_next_block = function() {\n  var i, j, k;\n  var reader = this.reader;\n  // this is get_next_block() function from micro-bunzip:\n  /* Read in header signature and CRC, then validate signature.\n     (last block signature means CRC is for whole file, return now) */\n  var h = reader.pi();\n  if (h === SQRTPI) { // last block\n    return false; /* no more blocks */\n  }\n  if (h !== WHOLEPI)\n    _throw(Err.NOT_BZIP_DATA);\n  this.targetBlockCRC = reader.read(32) >>> 0; // (convert to unsigned)\n  this.streamCRC = (this.targetBlockCRC ^\n                    ((this.streamCRC << 1) | (this.streamCRC>>>31))) >>> 0;\n  /* We can add support for blockRandomised if anybody complains.  There was\n     some code for this in busybox 1.0.0-pre3, but nobody ever noticed that\n     it didn't actually work. */\n  if (reader.read(1))\n    _throw(Err.OBSOLETE_INPUT);\n  var origPointer = reader.read(24);\n  if (origPointer > this.dbufSize)\n    _throw(Err.DATA_ERROR, 'initial position out of bounds');\n  /* mapping table: if some byte values are never used (encoding things\n     like ascii text), the compression code removes the gaps to have fewer\n     symbols to deal with, and writes a sparse bitfield indicating which\n     values were present.  We make a translation table to convert the symbols\n     back to the corresponding bytes. */\n  var t = reader.read(16);\n  var symToByte = new Uint8Array(256), symTotal = 0;\n  for (i = 0; i < 16; i++) {\n    if (t & (1 << (0xF - i))) {\n      var o = i * 16;\n      k = reader.read(16);\n      for (j = 0; j < 16; j++)\n        if (k & (1 << (0xF - j)))\n          symToByte[symTotal++] = o + j;\n    }\n  }\n\n  /* How many different huffman coding groups does this block use? */\n  var groupCount = reader.read(3);\n  if (groupCount < MIN_GROUPS || groupCount > MAX_GROUPS)\n    _throw(Err.DATA_ERROR);\n  /* nSelectors: Every GROUP_SIZE many symbols we select a new huffman coding\n     group.  Read in the group selector list, which is stored as MTF encoded\n     bit runs.  (MTF=Move To Front, as each value is used it's moved to the\n     start of the list.) */\n  var nSelectors = reader.read(15);\n  if (nSelectors === 0)\n    _throw(Err.DATA_ERROR);\n\n  var mtfSymbol = new Uint8Array(256);\n  for (i = 0; i < groupCount; i++)\n    mtfSymbol[i] = i;\n\n  var selectors = new Uint8Array(nSelectors); // was 32768...\n\n  for (i = 0; i < nSelectors; i++) {\n    /* Get next value */\n    for (j = 0; reader.read(1); j++)\n      if (j >= groupCount) _throw(Err.DATA_ERROR);\n    /* Decode MTF to get the next selector */\n    selectors[i] = mtf(mtfSymbol, j);\n  }\n\n  /* Read the huffman coding tables for each group, which code for symTotal\n     literal symbols, plus two run symbols (RUNA, RUNB) */\n  var symCount = symTotal + 2;\n  var groups = [], hufGroup;\n  for (j = 0; j < groupCount; j++) {\n    var length = new Uint8Array(symCount), temp = new Uint16Array(MAX_HUFCODE_BITS + 1);\n    /* Read huffman code lengths for each symbol.  They're stored in\n       a way similar to mtf; record a starting value for the first symbol,\n       and an offset from the previous value for everys symbol after that. */\n    t = reader.read(5); // lengths\n    for (i = 0; i < symCount; i++) {\n      for (;;) {\n        if (t < 1 || t > MAX_HUFCODE_BITS) _throw(Err.DATA_ERROR);\n        /* If first bit is 0, stop.  Else second bit indicates whether\n           to increment or decrement the value. */\n        if(!reader.read(1))\n          break;\n        if(!reader.read(1))\n          t++;\n        else\n          t--;\n      }\n      length[i] = t;\n    }\n\n    /* Find largest and smallest lengths in this group */\n    var minLen,  maxLen;\n    minLen = maxLen = length[0];\n    for (i = 1; i < symCount; i++) {\n      if (length[i] > maxLen)\n        maxLen = length[i];\n      else if (length[i] < minLen)\n        minLen = length[i];\n    }\n\n    /* Calculate permute[], base[], and limit[] tables from length[].\n     *\n     * permute[] is the lookup table for converting huffman coded symbols\n     * into decoded symbols.  base[] is the amount to subtract from the\n     * value of a huffman symbol of a given length when using permute[].\n     *\n     * limit[] indicates the largest numerical value a symbol with a given\n     * number of bits can have.  This is how the huffman codes can vary in\n     * length: each code with a value>limit[length] needs another bit.\n     */\n    hufGroup = {};\n    groups.push(hufGroup);\n    hufGroup.permute = new Uint16Array(MAX_SYMBOLS);\n    hufGroup.limit = new Uint32Array(MAX_HUFCODE_BITS + 2);\n    hufGroup.base = new Uint32Array(MAX_HUFCODE_BITS + 1);\n    hufGroup.minLen = minLen;\n    hufGroup.maxLen = maxLen;\n    /* Calculate permute[].  Concurently, initialize temp[] and limit[]. */\n    var pp = 0;\n    for (i = minLen; i <= maxLen; i++) {\n      temp[i] = hufGroup.limit[i] = 0;\n      for (t = 0; t < symCount; t++)\n        if (length[t] === i)\n          hufGroup.permute[pp++] = t;\n    }\n    /* Count symbols coded for at each bit length */\n    for (i = 0; i < symCount; i++)\n      temp[length[i]]++;\n    /* Calculate limit[] (the largest symbol-coding value at each bit\n     * length, which is (previous limit<<1)+symbols at this level), and\n     * base[] (number of symbols to ignore at each bit length, which is\n     * limit minus the cumulative count of symbols coded for already). */\n    pp = t = 0;\n    for (i = minLen; i < maxLen; i++) {\n      pp += temp[i];\n      /* We read the largest possible symbol size and then unget bits\n         after determining how many we need, and those extra bits could\n         be set to anything.  (They're noise from future symbols.)  At\n         each level we're really only interested in the first few bits,\n         so here we set all the trailing to-be-ignored bits to 1 so they\n         don't affect the value>limit[length] comparison. */\n      hufGroup.limit[i] = pp - 1;\n      pp <<= 1;\n      t += temp[i];\n      hufGroup.base[i + 1] = pp - t;\n    }\n    hufGroup.limit[maxLen + 1] = Number.MAX_VALUE; /* Sentinal value for reading next sym. */\n    hufGroup.limit[maxLen] = pp + temp[maxLen] - 1;\n    hufGroup.base[minLen] = 0;\n  }\n  /* We've finished reading and digesting the block header.  Now read this\n     block's huffman coded symbols from the file and undo the huffman coding\n     and run length encoding, saving the result into dbuf[dbufCount++]=uc */\n\n  /* Initialize symbol occurrence counters and symbol Move To Front table */\n  var byteCount = new Uint32Array(256);\n  for (i = 0; i < 256; i++)\n    mtfSymbol[i] = i;\n  /* Loop through compressed symbols. */\n  var runPos = 0, dbufCount = 0, selector = 0, uc;\n  var dbuf = this.dbuf = new Uint32Array(this.dbufSize);\n  symCount = 0;\n  for (;;) {\n    /* Determine which huffman coding group to use. */\n    if (!(symCount--)) {\n      symCount = GROUP_SIZE - 1;\n      if (selector >= nSelectors) { _throw(Err.DATA_ERROR); }\n      hufGroup = groups[selectors[selector++]];\n    }\n    /* Read next huffman-coded symbol. */\n    i = hufGroup.minLen;\n    j = reader.read(i);\n    for (;;i++) {\n      if (i > hufGroup.maxLen) { _throw(Err.DATA_ERROR); }\n      if (j <= hufGroup.limit[i])\n        break;\n      j = (j << 1) | reader.read(1);\n    }\n    /* Huffman decode value to get nextSym (with bounds checking) */\n    j -= hufGroup.base[i];\n    if (j < 0 || j >= MAX_SYMBOLS) { _throw(Err.DATA_ERROR); }\n    var nextSym = hufGroup.permute[j];\n    /* We have now decoded the symbol, which indicates either a new literal\n       byte, or a repeated run of the most recent literal byte.  First,\n       check if nextSym indicates a repeated run, and if so loop collecting\n       how many times to repeat the last literal. */\n    if (nextSym === SYMBOL_RUNA || nextSym === SYMBOL_RUNB) {\n      /* If this is the start of a new run, zero out counter */\n      if (!runPos){\n        runPos = 1;\n        t = 0;\n      }\n      /* Neat trick that saves 1 symbol: instead of or-ing 0 or 1 at\n         each bit position, add 1 or 2 instead.  For example,\n         1011 is 1<<0 + 1<<1 + 2<<2.  1010 is 2<<0 + 2<<1 + 1<<2.\n         You can make any bit pattern that way using 1 less symbol than\n         the basic or 0/1 method (except all bits 0, which would use no\n         symbols, but a run of length 0 doesn't mean anything in this\n         context).  Thus space is saved. */\n      if (nextSym === SYMBOL_RUNA)\n        t += runPos;\n      else\n        t += 2 * runPos;\n      runPos <<= 1;\n      continue;\n    }\n    /* When we hit the first non-run symbol after a run, we now know\n       how many times to repeat the last literal, so append that many\n       copies to our buffer of decoded symbols (dbuf) now.  (The last\n       literal used is the one at the head of the mtfSymbol array.) */\n    if (runPos){\n      runPos = 0;\n      if (dbufCount + t > this.dbufSize) { _throw(Err.DATA_ERROR); }\n      uc = symToByte[mtfSymbol[0]];\n      byteCount[uc] += t;\n      while (t--)\n        dbuf[dbufCount++] = uc;\n    }\n    /* Is this the terminating symbol? */\n    if (nextSym > symTotal)\n      break;\n    /* At this point, nextSym indicates a new literal character.  Subtract\n       one to get the position in the MTF array at which this literal is\n       currently to be found.  (Note that the result can't be -1 or 0,\n       because 0 and 1 are RUNA and RUNB.  But another instance of the\n       first symbol in the mtf array, position 0, would have been handled\n       as part of a run above.  Therefore 1 unused mtf position minus\n       2 non-literal nextSym values equals -1.) */\n    if (dbufCount >= this.dbufSize) { _throw(Err.DATA_ERROR); }\n    i = nextSym - 1;\n    uc = mtf(mtfSymbol, i);\n    uc = symToByte[uc];\n    /* We have our literal byte.  Save it into dbuf. */\n    byteCount[uc]++;\n    dbuf[dbufCount++] = uc;\n  }\n  /* At this point, we've read all the huffman-coded symbols (and repeated\n     runs) for this block from the input stream, and decoded them into the\n     intermediate buffer.  There are dbufCount many decoded bytes in dbuf[].\n     Now undo the Burrows-Wheeler transform on dbuf.\n     See http://dogma.net/markn/articles/bwt/bwt.htm\n  */\n  if (origPointer < 0 || origPointer >= dbufCount) { _throw(Err.DATA_ERROR); }\n  /* Turn byteCount into cumulative occurrence counts of 0 to n-1. */\n  j = 0;\n  for (i = 0; i < 256; i++) {\n    k = j + byteCount[i];\n    byteCount[i] = j;\n    j = k;\n  }\n  /* Figure out what order dbuf would be in if we sorted it. */\n  for (i = 0; i < dbufCount; i++) {\n    uc = dbuf[i] & 0xff;\n    dbuf[byteCount[uc]] |= (i << 8);\n    byteCount[uc]++;\n  }\n  /* Decode first byte by hand to initialize \"previous\" byte.  Note that it\n     doesn't get output, and if the first three characters are identical\n     it doesn't qualify as a run (hence writeRunCountdown=5). */\n  var pos = 0, current = 0, run = 0;\n  if (dbufCount) {\n    pos = dbuf[origPointer];\n    current = (pos & 0xff);\n    pos >>= 8;\n    run = -1;\n  }\n  this.writePos = pos;\n  this.writeCurrent = current;\n  this.writeCount = dbufCount;\n  this.writeRun = run;\n\n  return true; /* more blocks to come */\n};\n/* Undo burrows-wheeler transform on intermediate buffer to produce output.\n   If start_bunzip was initialized with out_fd=-1, then up to len bytes of\n   data are written to outbuf.  Return value is number of bytes written or\n   error (all errors are negative numbers).  If out_fd!=-1, outbuf and len\n   are ignored, data is written to out_fd and return is RETVAL_OK or error.\n*/\nBunzip.prototype._read_bunzip = function(outputBuffer, len) {\n    var copies, previous, outbyte;\n    /* james@jamestaylor.org: writeCount goes to -1 when the buffer is fully\n       decoded, which results in this returning RETVAL_LAST_BLOCK, also\n       equal to -1... Confusing, I'm returning 0 here to indicate no\n       bytes written into the buffer */\n  if (this.writeCount < 0) { return 0; }\n\n  var gotcount = 0;\n  var dbuf = this.dbuf, pos = this.writePos, current = this.writeCurrent;\n  var dbufCount = this.writeCount, outputsize = this.outputsize;\n  var run = this.writeRun;\n\n  while (dbufCount) {\n    dbufCount--;\n    previous = current;\n    pos = dbuf[pos];\n    current = pos & 0xff;\n    pos >>= 8;\n    if (run++ === 3){\n      copies = current;\n      outbyte = previous;\n      current = -1;\n    } else {\n      copies = 1;\n      outbyte = current;\n    }\n    this.blockCRC.updateCRCRun(outbyte, copies);\n    while (copies--) {\n      this.outputStream.writeByte(outbyte);\n      this.nextoutput++;\n    }\n    if (current != previous)\n      run = 0;\n  }\n  this.writeCount = dbufCount;\n  // check CRC\n  if (this.blockCRC.getCRC() !== this.targetBlockCRC) {\n    _throw(Err.DATA_ERROR, \"Bad block CRC \"+\n           \"(got \"+this.blockCRC.getCRC().toString(16)+\n           \" expected \"+this.targetBlockCRC.toString(16)+\")\");\n  }\n  return this.nextoutput;\n};\n\nvar coerceInputStream = function(input) {\n  if ('readByte' in input) { return input; }\n  var inputStream = new Stream();\n  inputStream.pos = 0;\n  inputStream.readByte = function() { return input[this.pos++]; };\n  inputStream.seek = function(pos) { this.pos = pos; };\n  inputStream.eof = function() { return this.pos >= input.length; };\n  return inputStream;\n};\nvar coerceOutputStream = function(output) {\n  var outputStream = new Stream();\n  var resizeOk = true;\n  if (output) {\n    if (typeof(output)==='number') {\n      outputStream.buffer = new Uint8Array(output);\n      resizeOk = false;\n    } else if ('writeByte' in output) {\n      return output;\n    } else {\n      outputStream.buffer = output;\n      resizeOk = false;\n    }\n  } else {\n    outputStream.buffer = new Uint8Array(16384);\n  }\n  outputStream.pos = 0;\n  outputStream.writeByte = function(_byte) {\n    if (resizeOk && this.pos >= this.buffer.length) {\n      var newBuffer = new Uint8Array(this.buffer.length*2);\n      newBuffer.set(this.buffer);\n      this.buffer = newBuffer;\n    }\n    this.buffer[this.pos++] = _byte;\n  };\n  outputStream.getBuffer = function() {\n    // trim buffer\n    if (this.pos !== this.buffer.length) {\n      if (!resizeOk)\n        throw new TypeError('outputsize does not match decoded input');\n      var newBuffer = new Uint8Array(this.pos);\n      newBuffer.set(this.buffer.subarray(0, this.pos));\n      this.buffer = newBuffer;\n    }\n    return this.buffer;\n  };\n  outputStream._coerced = true;\n  return outputStream;\n};\n\n/* Static helper functions */\n// 'input' can be a stream or a buffer\n// 'output' can be a stream or a buffer or a number (buffer size)\nconst decode = function(input, output, multistream) {\n  // make a stream from a buffer, if necessary\n  var inputStream = coerceInputStream(input);\n  var outputStream = coerceOutputStream(output);\n\n  var bz = new Bunzip(inputStream, outputStream);\n  while (true) {\n    if ('eof' in inputStream && inputStream.eof()) break;\n    if (bz._init_block()) {\n      bz._read_bunzip();\n    } else {\n      var targetStreamCRC = bz.reader.read(32) >>> 0; // (convert to unsigned)\n      if (targetStreamCRC !== bz.streamCRC) {\n        _throw(Err.DATA_ERROR, \"Bad stream CRC \"+\n               \"(got \"+bz.streamCRC.toString(16)+\n               \" expected \"+targetStreamCRC.toString(16)+\")\");\n      }\n      if (multistream &&\n          'eof' in inputStream &&\n          !inputStream.eof()) {\n        // note that start_bunzip will also resync the bit reader to next byte\n        bz._start_bunzip(inputStream, outputStream);\n      } else break;\n    }\n  }\n  if ('getBuffer' in outputStream)\n    return outputStream.getBuffer();\n};\nconst decodeBlock = function(input, pos, output) {\n  // make a stream from a buffer, if necessary\n  var inputStream = coerceInputStream(input);\n  var outputStream = coerceOutputStream(output);\n  var bz = new Bunzip(inputStream, outputStream);\n  bz.reader.seek(pos);\n  /* Fill the decode buffer for the block */\n  var moreBlocks = bz._get_next_block();\n  if (moreBlocks) {\n    /* Init the CRC for writing */\n    bz.blockCRC = new CRC32();\n\n    /* Zero this so the current byte from before the seek is not written */\n    bz.writeCopies = 0;\n\n    /* Decompress the block and write to stdout */\n    bz._read_bunzip();\n    // XXX keep writing?\n  }\n  if ('getBuffer' in outputStream)\n    return outputStream.getBuffer();\n};\n/* Reads bzip2 file from stream or buffer `input`, and invoke\n * `callback(position, size)` once for each bzip2 block,\n * where position gives the starting position (in *bits*)\n * and size gives uncompressed size of the block (in *bytes*). */\nconst table = function(input, callback, multistream) {\n  // make a stream from a buffer, if necessary\n  var inputStream = new Stream();\n  inputStream.delegate = coerceInputStream(input);\n  inputStream.pos = 0;\n  inputStream.readByte = function() {\n    this.pos++;\n    return this.delegate.readByte();\n  };\n  if (inputStream.delegate.eof) {\n    inputStream.eof = inputStream.delegate.eof.bind(inputStream.delegate);\n  }\n  var outputStream = new Stream();\n  outputStream.pos = 0;\n  outputStream.writeByte = function() { this.pos++; };\n\n  var bz = new Bunzip(inputStream, outputStream);\n  var blockSize = bz.dbufSize;\n  while (true) {\n    if ('eof' in inputStream && inputStream.eof()) break;\n\n    var position = inputStream.pos*8 + bz.reader.bitOffset;\n    if (bz.reader.hasByte) { position -= 8; }\n\n    if (bz._init_block()) {\n      var start = outputStream.pos;\n      bz._read_bunzip();\n      callback(position, outputStream.pos - start);\n    } else {\n      var crc = bz.reader.read(32); // (but we ignore the crc)\n      if (multistream &&\n          'eof' in inputStream &&\n          !inputStream.eof()) {\n        // note that start_bunzip will also resync the bit reader to next byte\n        bz._start_bunzip(inputStream, outputStream);\n        console.assert(bz.dbufSize === blockSize,\n                       \"shouldn't change block size within multistream file\");\n      } else break;\n    }\n  }\n};\n\nmodule.exports = {\n  Bunzip,\n  Stream,\n  Err,\n  decode,\n  decodeBlock,\n  table\n};\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport * as stream from '@openpgp/web-stream-tools';\nimport { readSimpleLength, UnsupportedError, writeSimpleLength } from './packet';\nimport KeyID from '../type/keyid';\nimport crypto from '../crypto';\nimport enums from '../enums';\nimport util from '../util';\nimport defaultConfig from '../config';\n\n// Symbol to store cryptographic validity of the signature, to avoid recomputing multiple times on verification.\nconst verified = Symbol('verified');\n\n// GPG puts the Issuer and Signature subpackets in the unhashed area.\n// Tampering with those invalidates the signature, so we still trust them and parse them.\n// All other unhashed subpackets are ignored.\nconst allowedUnhashedSubpackets = new Set([\n  enums.signatureSubpacket.issuer,\n  enums.signatureSubpacket.issuerFingerprint,\n  enums.signatureSubpacket.embeddedSignature\n]);\n\n/**\n * Implementation of the Signature Packet (Tag 2)\n *\n * {@link https://tools.ietf.org/html/rfc4880#section-5.2|RFC4480 5.2}:\n * A Signature packet describes a binding between some public key and\n * some data.  The most common signatures are a signature of a file or a\n * block of text, and a signature that is a certification of a User ID.\n */\nclass SignaturePacket {\n  static get tag() {\n    return enums.packet.signature;\n  }\n\n  constructor() {\n    this.version = null;\n    /** @type {enums.signature} */\n    this.signatureType = null;\n    /** @type {enums.hash} */\n    this.hashAlgorithm = null;\n    /** @type {enums.publicKey} */\n    this.publicKeyAlgorithm = null;\n\n    this.signatureData = null;\n    this.unhashedSubpackets = [];\n    this.signedHashValue = null;\n\n    this.created = null;\n    this.signatureExpirationTime = null;\n    this.signatureNeverExpires = true;\n    this.exportable = null;\n    this.trustLevel = null;\n    this.trustAmount = null;\n    this.regularExpression = null;\n    this.revocable = null;\n    this.keyExpirationTime = null;\n    this.keyNeverExpires = null;\n    this.preferredSymmetricAlgorithms = null;\n    this.revocationKeyClass = null;\n    this.revocationKeyAlgorithm = null;\n    this.revocationKeyFingerprint = null;\n    this.issuerKeyID = new KeyID();\n    this.rawNotations = [];\n    this.notations = {};\n    this.preferredHashAlgorithms = null;\n    this.preferredCompressionAlgorithms = null;\n    this.keyServerPreferences = null;\n    this.preferredKeyServer = null;\n    this.isPrimaryUserID = null;\n    this.policyURI = null;\n    this.keyFlags = null;\n    this.signersUserID = null;\n    this.reasonForRevocationFlag = null;\n    this.reasonForRevocationString = null;\n    this.features = null;\n    this.signatureTargetPublicKeyAlgorithm = null;\n    this.signatureTargetHashAlgorithm = null;\n    this.signatureTargetHash = null;\n    this.embeddedSignature = null;\n    this.issuerKeyVersion = null;\n    this.issuerFingerprint = null;\n    this.preferredAEADAlgorithms = null;\n\n    this.revoked = null;\n    this[verified] = null;\n  }\n\n  /**\n   * parsing function for a signature packet (tag 2).\n   * @param {String} bytes - Payload of a tag 2 packet\n   * @returns {SignaturePacket} Object representation.\n   */\n  read(bytes) {\n    let i = 0;\n    this.version = bytes[i++];\n\n    if (this.version !== 4 && this.version !== 5) {\n      throw new UnsupportedError(`Version ${this.version} of the signature packet is unsupported.`);\n    }\n\n    this.signatureType = bytes[i++];\n    this.publicKeyAlgorithm = bytes[i++];\n    this.hashAlgorithm = bytes[i++];\n\n    // hashed subpackets\n    i += this.readSubPackets(bytes.subarray(i, bytes.length), true);\n    if (!this.created) {\n      throw new Error('Missing signature creation time subpacket.');\n    }\n\n    // A V4 signature hashes the packet body\n    // starting from its first field, the version number, through the end\n    // of the hashed subpacket data.  Thus, the fields hashed are the\n    // signature version, the signature type, the public-key algorithm, the\n    // hash algorithm, the hashed subpacket length, and the hashed\n    // subpacket body.\n    this.signatureData = bytes.subarray(0, i);\n\n    // unhashed subpackets\n    i += this.readSubPackets(bytes.subarray(i, bytes.length), false);\n\n    // Two-octet field holding left 16 bits of signed hash value.\n    this.signedHashValue = bytes.subarray(i, i + 2);\n    i += 2;\n\n    this.params = crypto.signature.parseSignatureParams(this.publicKeyAlgorithm, bytes.subarray(i, bytes.length));\n  }\n\n  /**\n   * @returns {Uint8Array | ReadableStream<Uint8Array>}\n   */\n  writeParams() {\n    if (this.params instanceof Promise) {\n      return stream.fromAsync(\n        async () => crypto.serializeParams(this.publicKeyAlgorithm, await this.params)\n      );\n    }\n    return crypto.serializeParams(this.publicKeyAlgorithm, this.params);\n  }\n\n  write() {\n    const arr = [];\n    arr.push(this.signatureData);\n    arr.push(this.writeUnhashedSubPackets());\n    arr.push(this.signedHashValue);\n    arr.push(this.writeParams());\n    return util.concat(arr);\n  }\n\n  /**\n   * Signs provided data. This needs to be done prior to serialization.\n   * @param {SecretKeyPacket} key - Private key used to sign the message.\n   * @param {Object} data - Contains packets to be signed.\n   * @param {Date} [date] - The signature creation time.\n   * @param {Boolean} [detached] - Whether to create a detached signature\n   * @throws {Error} if signing failed\n   * @async\n   */\n  async sign(key, data, date = new Date(), detached = false) {\n    if (key.version === 5) {\n      this.version = 5;\n    } else {\n      this.version = 4;\n    }\n    const arr = [new Uint8Array([this.version, this.signatureType, this.publicKeyAlgorithm, this.hashAlgorithm])];\n\n    this.created = util.normalizeDate(date);\n    this.issuerKeyVersion = key.version;\n    this.issuerFingerprint = key.getFingerprintBytes();\n    this.issuerKeyID = key.getKeyID();\n\n    // Add hashed subpackets\n    arr.push(this.writeHashedSubPackets());\n\n    // Remove unhashed subpackets, in case some allowed unhashed\n    // subpackets existed, in order not to duplicate them (in both\n    // the hashed and unhashed subpackets) when re-signing.\n    this.unhashedSubpackets = [];\n\n    this.signatureData = util.concat(arr);\n\n    const toHash = this.toHash(this.signatureType, data, detached);\n    const hash = await this.hash(this.signatureType, data, toHash, detached);\n\n    this.signedHashValue = stream.slice(stream.clone(hash), 0, 2);\n    const signed = async () => crypto.signature.sign(\n      this.publicKeyAlgorithm, this.hashAlgorithm, key.publicParams, key.privateParams, toHash, await stream.readToEnd(hash)\n    );\n    if (util.isStream(hash)) {\n      this.params = signed();\n    } else {\n      this.params = await signed();\n\n      // Store the fact that this signature is valid, e.g. for when we call `await\n      // getLatestValidSignature(this.revocationSignatures, key, data)` later.\n      // Note that this only holds up if the key and data passed to verify are the\n      // same as the ones passed to sign.\n      this[verified] = true;\n    }\n  }\n\n  /**\n   * Creates Uint8Array of bytes of all subpacket data except Issuer and Embedded Signature subpackets\n   * @returns {Uint8Array} Subpacket data.\n   */\n  writeHashedSubPackets() {\n    const sub = enums.signatureSubpacket;\n    const arr = [];\n    let bytes;\n    if (this.created === null) {\n      throw new Error('Missing signature creation time');\n    }\n    arr.push(writeSubPacket(sub.signatureCreationTime, true, util.writeDate(this.created)));\n    if (this.signatureExpirationTime !== null) {\n      arr.push(writeSubPacket(sub.signatureExpirationTime, true, util.writeNumber(this.signatureExpirationTime, 4)));\n    }\n    if (this.exportable !== null) {\n      arr.push(writeSubPacket(sub.exportableCertification, true, new Uint8Array([this.exportable ? 1 : 0])));\n    }\n    if (this.trustLevel !== null) {\n      bytes = new Uint8Array([this.trustLevel, this.trustAmount]);\n      arr.push(writeSubPacket(sub.trustSignature, true, bytes));\n    }\n    if (this.regularExpression !== null) {\n      arr.push(writeSubPacket(sub.regularExpression, true, this.regularExpression));\n    }\n    if (this.revocable !== null) {\n      arr.push(writeSubPacket(sub.revocable, true, new Uint8Array([this.revocable ? 1 : 0])));\n    }\n    if (this.keyExpirationTime !== null) {\n      arr.push(writeSubPacket(sub.keyExpirationTime, true, util.writeNumber(this.keyExpirationTime, 4)));\n    }\n    if (this.preferredSymmetricAlgorithms !== null) {\n      bytes = util.stringToUint8Array(util.uint8ArrayToString(this.preferredSymmetricAlgorithms));\n      arr.push(writeSubPacket(sub.preferredSymmetricAlgorithms, false, bytes));\n    }\n    if (this.revocationKeyClass !== null) {\n      bytes = new Uint8Array([this.revocationKeyClass, this.revocationKeyAlgorithm]);\n      bytes = util.concat([bytes, this.revocationKeyFingerprint]);\n      arr.push(writeSubPacket(sub.revocationKey, false, bytes));\n    }\n    if (!this.issuerKeyID.isNull() && this.issuerKeyVersion !== 5) {\n      // If the version of [the] key is greater than 4, this subpacket\n      // MUST NOT be included in the signature.\n      arr.push(writeSubPacket(sub.issuer, true, this.issuerKeyID.write()));\n    }\n    this.rawNotations.forEach(({ name, value, humanReadable, critical }) => {\n      bytes = [new Uint8Array([humanReadable ? 0x80 : 0, 0, 0, 0])];\n      const encodedName = util.encodeUTF8(name);\n      // 2 octets of name length\n      bytes.push(util.writeNumber(encodedName.length, 2));\n      // 2 octets of value length\n      bytes.push(util.writeNumber(value.length, 2));\n      bytes.push(encodedName);\n      bytes.push(value);\n      bytes = util.concat(bytes);\n      arr.push(writeSubPacket(sub.notationData, critical, bytes));\n    });\n    if (this.preferredHashAlgorithms !== null) {\n      bytes = util.stringToUint8Array(util.uint8ArrayToString(this.preferredHashAlgorithms));\n      arr.push(writeSubPacket(sub.preferredHashAlgorithms, false, bytes));\n    }\n    if (this.preferredCompressionAlgorithms !== null) {\n      bytes = util.stringToUint8Array(util.uint8ArrayToString(this.preferredCompressionAlgorithms));\n      arr.push(writeSubPacket(sub.preferredCompressionAlgorithms, false, bytes));\n    }\n    if (this.keyServerPreferences !== null) {\n      bytes = util.stringToUint8Array(util.uint8ArrayToString(this.keyServerPreferences));\n      arr.push(writeSubPacket(sub.keyServerPreferences, false, bytes));\n    }\n    if (this.preferredKeyServer !== null) {\n      arr.push(writeSubPacket(sub.preferredKeyServer, false, util.encodeUTF8(this.preferredKeyServer)));\n    }\n    if (this.isPrimaryUserID !== null) {\n      arr.push(writeSubPacket(sub.primaryUserID, false, new Uint8Array([this.isPrimaryUserID ? 1 : 0])));\n    }\n    if (this.policyURI !== null) {\n      arr.push(writeSubPacket(sub.policyURI, false, util.encodeUTF8(this.policyURI)));\n    }\n    if (this.keyFlags !== null) {\n      bytes = util.stringToUint8Array(util.uint8ArrayToString(this.keyFlags));\n      arr.push(writeSubPacket(sub.keyFlags, true, bytes));\n    }\n    if (this.signersUserID !== null) {\n      arr.push(writeSubPacket(sub.signersUserID, false, util.encodeUTF8(this.signersUserID)));\n    }\n    if (this.reasonForRevocationFlag !== null) {\n      bytes = util.stringToUint8Array(String.fromCharCode(this.reasonForRevocationFlag) + this.reasonForRevocationString);\n      arr.push(writeSubPacket(sub.reasonForRevocation, true, bytes));\n    }\n    if (this.features !== null) {\n      bytes = util.stringToUint8Array(util.uint8ArrayToString(this.features));\n      arr.push(writeSubPacket(sub.features, false, bytes));\n    }\n    if (this.signatureTargetPublicKeyAlgorithm !== null) {\n      bytes = [new Uint8Array([this.signatureTargetPublicKeyAlgorithm, this.signatureTargetHashAlgorithm])];\n      bytes.push(util.stringToUint8Array(this.signatureTargetHash));\n      bytes = util.concat(bytes);\n      arr.push(writeSubPacket(sub.signatureTarget, true, bytes));\n    }\n    if (this.embeddedSignature !== null) {\n      arr.push(writeSubPacket(sub.embeddedSignature, true, this.embeddedSignature.write()));\n    }\n    if (this.issuerFingerprint !== null) {\n      bytes = [new Uint8Array([this.issuerKeyVersion]), this.issuerFingerprint];\n      bytes = util.concat(bytes);\n      arr.push(writeSubPacket(sub.issuerFingerprint, this.version === 5, bytes));\n    }\n    if (this.preferredAEADAlgorithms !== null) {\n      bytes = util.stringToUint8Array(util.uint8ArrayToString(this.preferredAEADAlgorithms));\n      arr.push(writeSubPacket(sub.preferredAEADAlgorithms, false, bytes));\n    }\n\n    const result = util.concat(arr);\n    const length = util.writeNumber(result.length, 2);\n\n    return util.concat([length, result]);\n  }\n\n  /**\n   * Creates an Uint8Array containing the unhashed subpackets\n   * @returns {Uint8Array} Subpacket data.\n   */\n  writeUnhashedSubPackets() {\n    const arr = [];\n    this.unhashedSubpackets.forEach(data => {\n      arr.push(writeSimpleLength(data.length));\n      arr.push(data);\n    });\n\n    const result = util.concat(arr);\n    const length = util.writeNumber(result.length, 2);\n\n    return util.concat([length, result]);\n  }\n\n  // V4 signature sub packets\n  readSubPacket(bytes, hashed = true) {\n    let mypos = 0;\n\n    // The leftmost bit denotes a \"critical\" packet\n    const critical = !!(bytes[mypos] & 0x80);\n    const type = bytes[mypos] & 0x7F;\n\n    if (!hashed) {\n      this.unhashedSubpackets.push(bytes.subarray(mypos, bytes.length));\n      if (!allowedUnhashedSubpackets.has(type)) {\n        return;\n      }\n    }\n\n    mypos++;\n\n    // subpacket type\n    switch (type) {\n      case enums.signatureSubpacket.signatureCreationTime:\n        // Signature Creation Time\n        this.created = util.readDate(bytes.subarray(mypos, bytes.length));\n        break;\n      case enums.signatureSubpacket.signatureExpirationTime: {\n        // Signature Expiration Time in seconds\n        const seconds = util.readNumber(bytes.subarray(mypos, bytes.length));\n\n        this.signatureNeverExpires = seconds === 0;\n        this.signatureExpirationTime = seconds;\n\n        break;\n      }\n      case enums.signatureSubpacket.exportableCertification:\n        // Exportable Certification\n        this.exportable = bytes[mypos++] === 1;\n        break;\n      case enums.signatureSubpacket.trustSignature:\n        // Trust Signature\n        this.trustLevel = bytes[mypos++];\n        this.trustAmount = bytes[mypos++];\n        break;\n      case enums.signatureSubpacket.regularExpression:\n        // Regular Expression\n        this.regularExpression = bytes[mypos];\n        break;\n      case enums.signatureSubpacket.revocable:\n        // Revocable\n        this.revocable = bytes[mypos++] === 1;\n        break;\n      case enums.signatureSubpacket.keyExpirationTime: {\n        // Key Expiration Time in seconds\n        const seconds = util.readNumber(bytes.subarray(mypos, bytes.length));\n\n        this.keyExpirationTime = seconds;\n        this.keyNeverExpires = seconds === 0;\n\n        break;\n      }\n      case enums.signatureSubpacket.preferredSymmetricAlgorithms:\n        // Preferred Symmetric Algorithms\n        this.preferredSymmetricAlgorithms = [...bytes.subarray(mypos, bytes.length)];\n        break;\n      case enums.signatureSubpacket.revocationKey:\n        // Revocation Key\n        // (1 octet of class, 1 octet of public-key algorithm ID, 20\n        // octets of\n        // fingerprint)\n        this.revocationKeyClass = bytes[mypos++];\n        this.revocationKeyAlgorithm = bytes[mypos++];\n        this.revocationKeyFingerprint = bytes.subarray(mypos, mypos + 20);\n        break;\n\n      case enums.signatureSubpacket.issuer:\n        // Issuer\n        this.issuerKeyID.read(bytes.subarray(mypos, bytes.length));\n        break;\n\n      case enums.signatureSubpacket.notationData: {\n        // Notation Data\n        const humanReadable = !!(bytes[mypos] & 0x80);\n\n        // We extract key/value tuple from the byte stream.\n        mypos += 4;\n        const m = util.readNumber(bytes.subarray(mypos, mypos + 2));\n        mypos += 2;\n        const n = util.readNumber(bytes.subarray(mypos, mypos + 2));\n        mypos += 2;\n\n        const name = util.decodeUTF8(bytes.subarray(mypos, mypos + m));\n        const value = bytes.subarray(mypos + m, mypos + m + n);\n\n        this.rawNotations.push({ name, humanReadable, value, critical });\n\n        if (humanReadable) {\n          this.notations[name] = util.decodeUTF8(value);\n        }\n        break;\n      }\n      case enums.signatureSubpacket.preferredHashAlgorithms:\n        // Preferred Hash Algorithms\n        this.preferredHashAlgorithms = [...bytes.subarray(mypos, bytes.length)];\n        break;\n      case enums.signatureSubpacket.preferredCompressionAlgorithms:\n        // Preferred Compression Algorithms\n        this.preferredCompressionAlgorithms = [...bytes.subarray(mypos, bytes.length)];\n        break;\n      case enums.signatureSubpacket.keyServerPreferences:\n        // Key Server Preferences\n        this.keyServerPreferences = [...bytes.subarray(mypos, bytes.length)];\n        break;\n      case enums.signatureSubpacket.preferredKeyServer:\n        // Preferred Key Server\n        this.preferredKeyServer = util.decodeUTF8(bytes.subarray(mypos, bytes.length));\n        break;\n      case enums.signatureSubpacket.primaryUserID:\n        // Primary User ID\n        this.isPrimaryUserID = bytes[mypos++] !== 0;\n        break;\n      case enums.signatureSubpacket.policyURI:\n        // Policy URI\n        this.policyURI = util.decodeUTF8(bytes.subarray(mypos, bytes.length));\n        break;\n      case enums.signatureSubpacket.keyFlags:\n        // Key Flags\n        this.keyFlags = [...bytes.subarray(mypos, bytes.length)];\n        break;\n      case enums.signatureSubpacket.signersUserID:\n        // Signer's User ID\n        this.signersUserID = util.decodeUTF8(bytes.subarray(mypos, bytes.length));\n        break;\n      case enums.signatureSubpacket.reasonForRevocation:\n        // Reason for Revocation\n        this.reasonForRevocationFlag = bytes[mypos++];\n        this.reasonForRevocationString = util.decodeUTF8(bytes.subarray(mypos, bytes.length));\n        break;\n      case enums.signatureSubpacket.features:\n        // Features\n        this.features = [...bytes.subarray(mypos, bytes.length)];\n        break;\n      case enums.signatureSubpacket.signatureTarget: {\n        // Signature Target\n        // (1 octet public-key algorithm, 1 octet hash algorithm, N octets hash)\n        this.signatureTargetPublicKeyAlgorithm = bytes[mypos++];\n        this.signatureTargetHashAlgorithm = bytes[mypos++];\n\n        const len = crypto.getHashByteLength(this.signatureTargetHashAlgorithm);\n\n        this.signatureTargetHash = util.uint8ArrayToString(bytes.subarray(mypos, mypos + len));\n        break;\n      }\n      case enums.signatureSubpacket.embeddedSignature:\n        // Embedded Signature\n        this.embeddedSignature = new SignaturePacket();\n        this.embeddedSignature.read(bytes.subarray(mypos, bytes.length));\n        break;\n      case enums.signatureSubpacket.issuerFingerprint:\n        // Issuer Fingerprint\n        this.issuerKeyVersion = bytes[mypos++];\n        this.issuerFingerprint = bytes.subarray(mypos, bytes.length);\n        if (this.issuerKeyVersion === 5) {\n          this.issuerKeyID.read(this.issuerFingerprint);\n        } else {\n          this.issuerKeyID.read(this.issuerFingerprint.subarray(-8));\n        }\n        break;\n      case enums.signatureSubpacket.preferredAEADAlgorithms:\n        // Preferred AEAD Algorithms\n        this.preferredAEADAlgorithms = [...bytes.subarray(mypos, bytes.length)];\n        break;\n      default: {\n        const err = new Error(`Unknown signature subpacket type ${type}`);\n        if (critical) {\n          throw err;\n        } else {\n          util.printDebug(err);\n        }\n      }\n    }\n  }\n\n  readSubPackets(bytes, trusted = true, config) {\n    // Two-octet scalar octet count for following subpacket data.\n    const subpacketLength = util.readNumber(bytes.subarray(0, 2));\n\n    let i = 2;\n\n    // subpacket data set (zero or more subpackets)\n    while (i < 2 + subpacketLength) {\n      const len = readSimpleLength(bytes.subarray(i, bytes.length));\n      i += len.offset;\n\n      this.readSubPacket(bytes.subarray(i, i + len.len), trusted, config);\n\n      i += len.len;\n    }\n\n    return i;\n  }\n\n  // Produces data to produce signature on\n  toSign(type, data) {\n    const t = enums.signature;\n\n    switch (type) {\n      case t.binary:\n        if (data.text !== null) {\n          return util.encodeUTF8(data.getText(true));\n        }\n        return data.getBytes(true);\n\n      case t.text: {\n        const bytes = data.getBytes(true);\n        // normalize EOL to \\r\\n\n        return util.canonicalizeEOL(bytes);\n      }\n      case t.standalone:\n        return new Uint8Array(0);\n\n      case t.certGeneric:\n      case t.certPersona:\n      case t.certCasual:\n      case t.certPositive:\n      case t.certRevocation: {\n        let packet;\n        let tag;\n\n        if (data.userID) {\n          tag = 0xB4;\n          packet = data.userID;\n        } else if (data.userAttribute) {\n          tag = 0xD1;\n          packet = data.userAttribute;\n        } else {\n          throw new Error('Either a userID or userAttribute packet needs to be ' +\n            'supplied for certification.');\n        }\n\n        const bytes = packet.write();\n\n        return util.concat([this.toSign(t.key, data),\n          new Uint8Array([tag]),\n          util.writeNumber(bytes.length, 4),\n          bytes]);\n      }\n      case t.subkeyBinding:\n      case t.subkeyRevocation:\n      case t.keyBinding:\n        return util.concat([this.toSign(t.key, data), this.toSign(t.key, {\n          key: data.bind\n        })]);\n\n      case t.key:\n        if (data.key === undefined) {\n          throw new Error('Key packet is required for this signature.');\n        }\n        return data.key.writeForHash(this.version);\n\n      case t.keyRevocation:\n        return this.toSign(t.key, data);\n      case t.timestamp:\n        return new Uint8Array(0);\n      case t.thirdParty:\n        throw new Error('Not implemented');\n      default:\n        throw new Error('Unknown signature type.');\n    }\n  }\n\n  calculateTrailer(data, detached) {\n    let length = 0;\n    return stream.transform(stream.clone(this.signatureData), value => {\n      length += value.length;\n    }, () => {\n      const arr = [];\n      if (this.version === 5 && (this.signatureType === enums.signature.binary || this.signatureType === enums.signature.text)) {\n        if (detached) {\n          arr.push(new Uint8Array(6));\n        } else {\n          arr.push(data.writeHeader());\n        }\n      }\n      arr.push(new Uint8Array([this.version, 0xFF]));\n      if (this.version === 5) {\n        arr.push(new Uint8Array(4));\n      }\n      arr.push(util.writeNumber(length, 4));\n      // For v5, this should really be writeNumber(length, 8) rather than the\n      // hardcoded 4 zero bytes above\n      return util.concat(arr);\n    });\n  }\n\n  toHash(signatureType, data, detached = false) {\n    const bytes = this.toSign(signatureType, data);\n\n    return util.concat([bytes, this.signatureData, this.calculateTrailer(data, detached)]);\n  }\n\n  async hash(signatureType, data, toHash, detached = false) {\n    if (!toHash) toHash = this.toHash(signatureType, data, detached);\n    return crypto.hash.digest(this.hashAlgorithm, toHash);\n  }\n\n  /**\n   * verifies the signature packet. Note: not all signature types are implemented\n   * @param {PublicSubkeyPacket|PublicKeyPacket|\n   *         SecretSubkeyPacket|SecretKeyPacket} key - the public key to verify the signature\n   * @param {module:enums.signature} signatureType - Expected signature type\n   * @param {Uint8Array|Object} data - Data which on the signature applies\n   * @param {Date} [date] - Use the given date instead of the current time to check for signature validity and expiration\n   * @param {Boolean} [detached] - Whether to verify a detached signature\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @throws {Error} if signature validation failed\n   * @async\n   */\n  async verify(key, signatureType, data, date = new Date(), detached = false, config = defaultConfig) {\n    if (!this.issuerKeyID.equals(key.getKeyID())) {\n      throw new Error('Signature was not issued by the given public key');\n    }\n    if (this.publicKeyAlgorithm !== key.algorithm) {\n      throw new Error('Public key algorithm used to sign signature does not match issuer key algorithm.');\n    }\n\n    const isMessageSignature = signatureType === enums.signature.binary || signatureType === enums.signature.text;\n    // Cryptographic validity is cached after one successful verification.\n    // However, for message signatures, we always re-verify, since the passed `data` can change\n    const skipVerify = this[verified] && !isMessageSignature;\n    if (!skipVerify) {\n      let toHash;\n      let hash;\n      if (this.hashed) {\n        hash = await this.hashed;\n      } else {\n        toHash = this.toHash(signatureType, data, detached);\n        hash = await this.hash(signatureType, data, toHash);\n      }\n      hash = await stream.readToEnd(hash);\n      if (this.signedHashValue[0] !== hash[0] ||\n          this.signedHashValue[1] !== hash[1]) {\n        throw new Error('Signed digest did not match');\n      }\n\n      this.params = await this.params;\n\n      this[verified] = await crypto.signature.verify(\n        this.publicKeyAlgorithm, this.hashAlgorithm, this.params, key.publicParams,\n        toHash, hash\n      );\n\n      if (!this[verified]) {\n        throw new Error('Signature verification failed');\n      }\n    }\n\n    const normDate = util.normalizeDate(date);\n    if (normDate && this.created > normDate) {\n      throw new Error('Signature creation time is in the future');\n    }\n    if (normDate && normDate >= this.getExpirationTime()) {\n      throw new Error('Signature is expired');\n    }\n    if (config.rejectHashAlgorithms.has(this.hashAlgorithm)) {\n      throw new Error('Insecure hash algorithm: ' + enums.read(enums.hash, this.hashAlgorithm).toUpperCase());\n    }\n    if (config.rejectMessageHashAlgorithms.has(this.hashAlgorithm) &&\n      [enums.signature.binary, enums.signature.text].includes(this.signatureType)) {\n      throw new Error('Insecure message hash algorithm: ' + enums.read(enums.hash, this.hashAlgorithm).toUpperCase());\n    }\n    this.rawNotations.forEach(({ name, critical }) => {\n      if (critical && (config.knownNotations.indexOf(name) < 0)) {\n        throw new Error(`Unknown critical notation: ${name}`);\n      }\n    });\n    if (this.revocationKeyClass !== null) {\n      throw new Error('This key is intended to be revoked with an authorized key, which OpenPGP.js does not support.');\n    }\n  }\n\n  /**\n   * Verifies signature expiration date\n   * @param {Date} [date] - Use the given date for verification instead of the current time\n   * @returns {Boolean} True if expired.\n   */\n  isExpired(date = new Date()) {\n    const normDate = util.normalizeDate(date);\n    if (normDate !== null) {\n      return !(this.created <= normDate && normDate < this.getExpirationTime());\n    }\n    return false;\n  }\n\n  /**\n   * Returns the expiration time of the signature or Infinity if signature does not expire\n   * @returns {Date | Infinity} Expiration time.\n   */\n  getExpirationTime() {\n    return this.signatureNeverExpires ? Infinity : new Date(this.created.getTime() + this.signatureExpirationTime * 1000);\n  }\n}\n\nexport default SignaturePacket;\n\n/**\n * Creates a Uint8Array representation of a sub signature packet\n * @see {@link https://tools.ietf.org/html/rfc4880#section-5.2.3.1|RFC4880 5.2.3.1}\n * @see {@link https://tools.ietf.org/html/rfc4880#section-5.2.3.2|RFC4880 5.2.3.2}\n * @param {Integer} type - Subpacket signature type.\n * @param {Boolean} critical - Whether the subpacket should be critical.\n * @param {String} data - Data to be included\n * @returns {Uint8Array} The signature subpacket.\n * @private\n */\nfunction writeSubPacket(type, critical, data) {\n  const arr = [];\n  arr.push(writeSimpleLength(data.length + 1));\n  arr.push(new Uint8Array([(critical ? 0x80 : 0) | type]));\n  arr.push(data);\n  return util.concat(arr);\n}\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport * as stream from '@openpgp/web-stream-tools';\nimport SignaturePacket from './signature';\nimport KeyID from '../type/keyid';\nimport enums from '../enums';\nimport util from '../util';\nimport { UnsupportedError } from './packet';\n\nconst VERSION = 3;\n\n/**\n * Implementation of the One-Pass Signature Packets (Tag 4)\n *\n * {@link https://tools.ietf.org/html/rfc4880#section-5.4|RFC4880 5.4}:\n * The One-Pass Signature packet precedes the signed data and contains\n * enough information to allow the receiver to begin calculating any\n * hashes needed to verify the signature.  It allows the Signature\n * packet to be placed at the end of the message, so that the signer\n * can compute the entire signed message in one pass.\n */\nclass OnePassSignaturePacket {\n  static get tag() {\n    return enums.packet.onePassSignature;\n  }\n\n  constructor() {\n    /** A one-octet version number.  The current version is 3. */\n    this.version = null;\n    /**\n     * A one-octet signature type.\n     * Signature types are described in\n     * {@link https://tools.ietf.org/html/rfc4880#section-5.2.1|RFC4880 Section 5.2.1}.\n     * @type {enums.signature}\n\n     */\n    this.signatureType = null;\n    /**\n     * A one-octet number describing the hash algorithm used.\n     * @see {@link https://tools.ietf.org/html/rfc4880#section-9.4|RFC4880 9.4}\n     * @type {enums.hash}\n     */\n    this.hashAlgorithm = null;\n    /**\n     * A one-octet number describing the public-key algorithm used.\n     * @see {@link https://tools.ietf.org/html/rfc4880#section-9.1|RFC4880 9.1}\n     * @type {enums.publicKey}\n     */\n    this.publicKeyAlgorithm = null;\n    /** An eight-octet number holding the Key ID of the signing key. */\n    this.issuerKeyID = null;\n    /**\n     * A one-octet number holding a flag showing whether the signature is nested.\n     * A zero value indicates that the next packet is another One-Pass Signature packet\n     * that describes another signature to be applied to the same message data.\n     */\n    this.flags = null;\n  }\n\n  /**\n   * parsing function for a one-pass signature packet (tag 4).\n   * @param {Uint8Array} bytes - Payload of a tag 4 packet\n   * @returns {OnePassSignaturePacket} Object representation.\n   */\n  read(bytes) {\n    let mypos = 0;\n    // A one-octet version number.  The current version is 3.\n    this.version = bytes[mypos++];\n    if (this.version !== VERSION) {\n      throw new UnsupportedError(`Version ${this.version} of the one-pass signature packet is unsupported.`);\n    }\n\n    // A one-octet signature type.  Signature types are described in\n    //   Section 5.2.1.\n    this.signatureType = bytes[mypos++];\n\n    // A one-octet number describing the hash algorithm used.\n    this.hashAlgorithm = bytes[mypos++];\n\n    // A one-octet number describing the public-key algorithm used.\n    this.publicKeyAlgorithm = bytes[mypos++];\n\n    // An eight-octet number holding the Key ID of the signing key.\n    this.issuerKeyID = new KeyID();\n    this.issuerKeyID.read(bytes.subarray(mypos, mypos + 8));\n    mypos += 8;\n\n    // A one-octet number holding a flag showing whether the signature\n    //   is nested.  A zero value indicates that the next packet is\n    //   another One-Pass Signature packet that describes another\n    //   signature to be applied to the same message data.\n    this.flags = bytes[mypos++];\n    return this;\n  }\n\n  /**\n   * creates a string representation of a one-pass signature packet\n   * @returns {Uint8Array} A Uint8Array representation of a one-pass signature packet.\n   */\n  write() {\n    const start = new Uint8Array([VERSION, this.signatureType, this.hashAlgorithm, this.publicKeyAlgorithm]);\n\n    const end = new Uint8Array([this.flags]);\n\n    return util.concatUint8Array([start, this.issuerKeyID.write(), end]);\n  }\n\n  calculateTrailer(...args) {\n    return stream.fromAsync(async () => SignaturePacket.prototype.calculateTrailer.apply(await this.correspondingSig, args));\n  }\n\n  async verify() {\n    const correspondingSig = await this.correspondingSig;\n    if (!correspondingSig || correspondingSig.constructor.tag !== enums.packet.signature) {\n      throw new Error('Corresponding signature packet missing');\n    }\n    if (\n      correspondingSig.signatureType !== this.signatureType ||\n      correspondingSig.hashAlgorithm !== this.hashAlgorithm ||\n      correspondingSig.publicKeyAlgorithm !== this.publicKeyAlgorithm ||\n      !correspondingSig.issuerKeyID.equals(this.issuerKeyID)\n    ) {\n      throw new Error('Corresponding signature packet does not match one-pass signature packet');\n    }\n    correspondingSig.hashed = this.hashed;\n    return correspondingSig.verify.apply(correspondingSig, arguments);\n  }\n}\n\nOnePassSignaturePacket.prototype.hash = SignaturePacket.prototype.hash;\nOnePassSignaturePacket.prototype.toHash = SignaturePacket.prototype.toHash;\nOnePassSignaturePacket.prototype.toSign = SignaturePacket.prototype.toSign;\n\nexport default OnePassSignaturePacket;\n","import * as stream from '@openpgp/web-stream-tools';\nimport {\n  readPackets, supportsStreaming,\n  writeTag, writeHeader,\n  writePartialLength, writeSimpleLength,\n  UnparseablePacket,\n  UnsupportedError\n} from './packet';\nimport util from '../util';\nimport enums from '../enums';\nimport defaultConfig from '../config';\n\n/**\n * Instantiate a new packet given its tag\n * @function newPacketFromTag\n * @param {module:enums.packet} tag - Property value from {@link module:enums.packet}\n * @param {Object} allowedPackets - mapping where keys are allowed packet tags, pointing to their Packet class\n * @returns {Object} New packet object with type based on tag\n * @throws {Error|UnsupportedError} for disallowed or unknown packets\n */\nexport function newPacketFromTag(tag, allowedPackets) {\n  if (!allowedPackets[tag]) {\n    // distinguish between disallowed packets and unknown ones\n    let packetType;\n    try {\n      packetType = enums.read(enums.packet, tag);\n    } catch (e) {\n      throw new UnsupportedError(`Unknown packet type with tag: ${tag}`);\n    }\n    throw new Error(`Packet not allowed in this context: ${packetType}`);\n  }\n  return new allowedPackets[tag]();\n}\n\n/**\n * This class represents a list of openpgp packets.\n * Take care when iterating over it - the packets themselves\n * are stored as numerical indices.\n * @extends Array\n */\nclass PacketList extends Array {\n  /**\n   * Parses the given binary data and returns a list of packets.\n   * Equivalent to calling `read` on an empty PacketList instance.\n   * @param {Uint8Array | ReadableStream<Uint8Array>} bytes - binary data to parse\n   * @param {Object} allowedPackets - mapping where keys are allowed packet tags, pointing to their Packet class\n   * @param {Object} [config] - full configuration, defaults to openpgp.config\n   * @returns {PacketList} parsed list of packets\n   * @throws on parsing errors\n   * @async\n   */\n  static async fromBinary(bytes, allowedPackets, config = defaultConfig) {\n    const packets = new PacketList();\n    await packets.read(bytes, allowedPackets, config);\n    return packets;\n  }\n\n  /**\n   * Reads a stream of binary data and interprets it as a list of packets.\n   * @param {Uint8Array | ReadableStream<Uint8Array>} bytes - binary data to parse\n   * @param {Object} allowedPackets - mapping where keys are allowed packet tags, pointing to their Packet class\n   * @param {Object} [config] - full configuration, defaults to openpgp.config\n   * @throws on parsing errors\n   * @async\n   */\n  async read(bytes, allowedPackets, config = defaultConfig) {\n    if (config.additionalAllowedPackets.length) {\n      allowedPackets = { ...allowedPackets, ...util.constructAllowedPackets(config.additionalAllowedPackets) };\n    }\n    this.stream = stream.transformPair(bytes, async (readable, writable) => {\n      const writer = stream.getWriter(writable);\n      try {\n        while (true) {\n          await writer.ready;\n          const done = await readPackets(readable, async parsed => {\n            try {\n              if (parsed.tag === enums.packet.marker || parsed.tag === enums.packet.trust) {\n                // According to the spec, these packet types should be ignored and not cause parsing errors, even if not esplicitly allowed:\n                // - Marker packets MUST be ignored when received: https://github.com/openpgpjs/openpgpjs/issues/1145\n                // - Trust packets SHOULD be ignored outside of keyrings (unsupported): https://datatracker.ietf.org/doc/html/rfc4880#section-5.10\n                return;\n              }\n              const packet = newPacketFromTag(parsed.tag, allowedPackets);\n              packet.packets = new PacketList();\n              packet.fromStream = util.isStream(parsed.packet);\n              await packet.read(parsed.packet, config);\n              await writer.write(packet);\n            } catch (e) {\n              const throwUnsupportedError = !config.ignoreUnsupportedPackets && e instanceof UnsupportedError;\n              const throwMalformedError = !config.ignoreMalformedPackets && !(e instanceof UnsupportedError);\n              if (throwUnsupportedError || throwMalformedError || supportsStreaming(parsed.tag)) {\n                // The packets that support streaming are the ones that contain message data.\n                // Those are also the ones we want to be more strict about and throw on parse errors\n                // (since we likely cannot process the message without these packets anyway).\n                await writer.abort(e);\n              } else {\n                const unparsedPacket = new UnparseablePacket(parsed.tag, parsed.packet);\n                await writer.write(unparsedPacket);\n              }\n              util.printDebugError(e);\n            }\n          });\n          if (done) {\n            await writer.ready;\n            await writer.close();\n            return;\n          }\n        }\n      } catch (e) {\n        await writer.abort(e);\n      }\n    });\n\n    // Wait until first few packets have been read\n    const reader = stream.getReader(this.stream);\n    while (true) {\n      const { done, value } = await reader.read();\n      if (!done) {\n        this.push(value);\n      } else {\n        this.stream = null;\n      }\n      if (done || supportsStreaming(value.constructor.tag)) {\n        break;\n      }\n    }\n    reader.releaseLock();\n  }\n\n  /**\n   * Creates a binary representation of openpgp objects contained within the\n   * class instance.\n   * @returns {Uint8Array} A Uint8Array containing valid openpgp packets.\n   */\n  write() {\n    const arr = [];\n\n    for (let i = 0; i < this.length; i++) {\n      const tag = this[i] instanceof UnparseablePacket ? this[i].tag : this[i].constructor.tag;\n      const packetbytes = this[i].write();\n      if (util.isStream(packetbytes) && supportsStreaming(this[i].constructor.tag)) {\n        let buffer = [];\n        let bufferLength = 0;\n        const minLength = 512;\n        arr.push(writeTag(tag));\n        arr.push(stream.transform(packetbytes, value => {\n          buffer.push(value);\n          bufferLength += value.length;\n          if (bufferLength >= minLength) {\n            const powerOf2 = Math.min(Math.log(bufferLength) / Math.LN2 | 0, 30);\n            const chunkSize = 2 ** powerOf2;\n            const bufferConcat = util.concat([writePartialLength(powerOf2)].concat(buffer));\n            buffer = [bufferConcat.subarray(1 + chunkSize)];\n            bufferLength = buffer[0].length;\n            return bufferConcat.subarray(0, 1 + chunkSize);\n          }\n        }, () => util.concat([writeSimpleLength(bufferLength)].concat(buffer))));\n      } else {\n        if (util.isStream(packetbytes)) {\n          let length = 0;\n          arr.push(stream.transform(stream.clone(packetbytes), value => {\n            length += value.length;\n          }, () => writeHeader(tag, length)));\n        } else {\n          arr.push(writeHeader(tag, packetbytes.length));\n        }\n        arr.push(packetbytes);\n      }\n    }\n\n    return util.concat(arr);\n  }\n\n  /**\n   * Creates a new PacketList with all packets matching the given tag(s)\n   * @param {...module:enums.packet} tags - packet tags to look for\n   * @returns {PacketList}\n   */\n  filterByTag(...tags) {\n    const filtered = new PacketList();\n\n    const handle = tag => packetType => tag === packetType;\n\n    for (let i = 0; i < this.length; i++) {\n      if (tags.some(handle(this[i].constructor.tag))) {\n        filtered.push(this[i]);\n      }\n    }\n\n    return filtered;\n  }\n\n  /**\n   * Traverses packet list and returns first packet with matching tag\n   * @param {module:enums.packet} tag - The packet tag\n   * @returns {Packet|undefined}\n   */\n  findPacket(tag) {\n    return this.find(packet => packet.constructor.tag === tag);\n  }\n\n  /**\n   * Find indices of packets with the given tag(s)\n   * @param {...module:enums.packet} tags - packet tags to look for\n   * @returns {Integer[]} packet indices\n   */\n  indexOfTag(...tags) {\n    const tagIndex = [];\n    const that = this;\n\n    const handle = tag => packetType => tag === packetType;\n\n    for (let i = 0; i < this.length; i++) {\n      if (tags.some(handle(that[i].constructor.tag))) {\n        tagIndex.push(i);\n      }\n    }\n    return tagIndex;\n  }\n}\n\nexport default PacketList;\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport { Deflate } from '@openpgp/pako/lib/deflate';\nimport { Inflate } from '@openpgp/pako/lib/inflate';\nimport { Z_SYNC_FLUSH, Z_FINISH } from '@openpgp/pako/lib/zlib/constants';\nimport { decode as BunzipDecode } from '@openpgp/seek-bzip';\nimport * as stream from '@openpgp/web-stream-tools';\nimport enums from '../enums';\nimport util from '../util';\nimport defaultConfig from '../config';\n\nimport LiteralDataPacket from './literal_data';\nimport OnePassSignaturePacket from './one_pass_signature';\nimport SignaturePacket from './signature';\nimport PacketList from './packetlist';\n\n// A Compressed Data packet can contain the following packet types\nconst allowedPackets = /*#__PURE__*/ util.constructAllowedPackets([\n  LiteralDataPacket,\n  OnePassSignaturePacket,\n  SignaturePacket\n]);\n\n/**\n * Implementation of the Compressed Data Packet (Tag 8)\n *\n * {@link https://tools.ietf.org/html/rfc4880#section-5.6|RFC4880 5.6}:\n * The Compressed Data packet contains compressed data.  Typically,\n * this packet is found as the contents of an encrypted packet, or following\n * a Signature or One-Pass Signature packet, and contains a literal data packet.\n */\nclass CompressedDataPacket {\n  static get tag() {\n    return enums.packet.compressedData;\n  }\n\n  /**\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   */\n  constructor(config = defaultConfig) {\n    /**\n     * List of packets\n     * @type {PacketList}\n     */\n    this.packets = null;\n    /**\n     * Compression algorithm\n     * @type {enums.compression}\n     */\n    this.algorithm = config.preferredCompressionAlgorithm;\n\n    /**\n     * Compressed packet data\n     * @type {Uint8Array | ReadableStream<Uint8Array>}\n     */\n    this.compressed = null;\n\n    /**\n     * zip/zlib compression level, between 1 and 9\n     */\n    this.deflateLevel = config.deflateLevel;\n  }\n\n  /**\n   * Parsing function for the packet.\n   * @param {Uint8Array | ReadableStream<Uint8Array>} bytes - Payload of a tag 8 packet\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   */\n  async read(bytes, config = defaultConfig) {\n    await stream.parse(bytes, async reader => {\n\n      // One octet that gives the algorithm used to compress the packet.\n      this.algorithm = await reader.readByte();\n\n      // Compressed data, which makes up the remainder of the packet.\n      this.compressed = reader.remainder();\n\n      await this.decompress(config);\n    });\n  }\n\n\n  /**\n   * Return the compressed packet.\n   * @returns {Uint8Array | ReadableStream<Uint8Array>} Binary compressed packet.\n   */\n  write() {\n    if (this.compressed === null) {\n      this.compress();\n    }\n\n    return util.concat([new Uint8Array([this.algorithm]), this.compressed]);\n  }\n\n\n  /**\n   * Decompression method for decompressing the compressed data\n   * read by read_packet\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   */\n  async decompress(config = defaultConfig) {\n    const compressionName = enums.read(enums.compression, this.algorithm);\n    const decompressionFn = decompress_fns[compressionName];\n    if (!decompressionFn) {\n      throw new Error(`${compressionName} decompression not supported`);\n    }\n\n    this.packets = await PacketList.fromBinary(decompressionFn(this.compressed), allowedPackets, config);\n  }\n\n  /**\n   * Compress the packet data (member decompressedData)\n   */\n  compress() {\n    const compressionName = enums.read(enums.compression, this.algorithm);\n    const compressionFn = compress_fns[compressionName];\n    if (!compressionFn) {\n      throw new Error(`${compressionName} compression not supported`);\n    }\n\n    this.compressed = compressionFn(this.packets.write(), this.deflateLevel);\n  }\n}\n\nexport default CompressedDataPacket;\n\n//////////////////////////\n//                      //\n//   Helper functions   //\n//                      //\n//////////////////////////\n\n\nconst nodeZlib = util.getNodeZlib();\n\nfunction uncompressed(data) {\n  return data;\n}\n\nfunction node_zlib(func, create, options = {}) {\n  return function (data) {\n    if (!util.isStream(data) || stream.isArrayStream(data)) {\n      return stream.fromAsync(() => stream.readToEnd(data).then(data => {\n        return new Promise((resolve, reject) => {\n          func(data, options, (err, result) => {\n            if (err) return reject(err);\n            resolve(result);\n          });\n        });\n      }));\n    }\n    return stream.nodeToWeb(stream.webToNode(data).pipe(create(options)));\n  };\n}\n\nfunction pako_zlib(constructor, options = {}) {\n  return function(data) {\n    const obj = new constructor(options);\n    return stream.transform(data, value => {\n      if (value.length) {\n        obj.push(value, Z_SYNC_FLUSH);\n        return obj.result;\n      }\n    }, () => {\n      if (constructor === Deflate) {\n        obj.push([], Z_FINISH);\n        return obj.result;\n      }\n    });\n  };\n}\n\nfunction bzip2(func) {\n  return function(data) {\n    return stream.fromAsync(async () => func(await stream.readToEnd(data)));\n  };\n}\n\nconst compress_fns = nodeZlib ? {\n  zip: /*#__PURE__*/ (compressed, level) => node_zlib(nodeZlib.deflateRaw, nodeZlib.createDeflateRaw, { level })(compressed),\n  zlib: /*#__PURE__*/ (compressed, level) => node_zlib(nodeZlib.deflate, nodeZlib.createDeflate, { level })(compressed)\n} : {\n  zip: /*#__PURE__*/ (compressed, level) => pako_zlib(Deflate, { raw: true, level })(compressed),\n  zlib: /*#__PURE__*/ (compressed, level) => pako_zlib(Deflate, { level })(compressed)\n};\n\nconst decompress_fns = nodeZlib ? {\n  uncompressed: uncompressed,\n  zip: /*#__PURE__*/ node_zlib(nodeZlib.inflateRaw, nodeZlib.createInflateRaw),\n  zlib: /*#__PURE__*/ node_zlib(nodeZlib.inflate, nodeZlib.createInflate),\n  bzip2: /*#__PURE__*/ bzip2(BunzipDecode)\n} : {\n  uncompressed: uncompressed,\n  zip: /*#__PURE__*/ pako_zlib(Inflate, { raw: true }),\n  zlib: /*#__PURE__*/ pako_zlib(Inflate),\n  bzip2: /*#__PURE__*/ bzip2(BunzipDecode)\n};\n\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n/**\n * Implementation of the String-to-key specifier\n *\n * {@link https://tools.ietf.org/html/rfc4880#section-3.7|RFC4880 3.7}:\n * String-to-key (S2K) specifiers are used to convert passphrase strings\n * into symmetric-key encryption/decryption keys.  They are used in two\n * places, currently: to encrypt the secret part of private keys in the\n * private keyring, and to convert passphrases to encryption keys for\n * symmetrically encrypted messages.\n * @module type/s2k\n * @private\n */\n\nimport defaultConfig from '../config';\nimport crypto from '../crypto';\nimport enums from '../enums';\nimport { UnsupportedError } from '../packet/packet';\nimport util from '../util';\n\nclass S2K {\n  /**\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   */\n  constructor(config = defaultConfig) {\n    /**\n     * Hash function identifier, or 0 for gnu-dummy keys\n     * @type {module:enums.hash | 0}\n     */\n    this.algorithm = enums.hash.sha256;\n    /**\n     * enums.s2k identifier or 'gnu-dummy'\n     * @type {String}\n     */\n    this.type = 'iterated';\n    /** @type {Integer} */\n    this.c = config.s2kIterationCountByte;\n    /** Eight bytes of salt in a binary string.\n     * @type {Uint8Array}\n     */\n    this.salt = null;\n  }\n\n  getCount() {\n    // Exponent bias, defined in RFC4880\n    const expbias = 6;\n\n    return (16 + (this.c & 15)) << ((this.c >> 4) + expbias);\n  }\n\n  /**\n   * Parsing function for a string-to-key specifier ({@link https://tools.ietf.org/html/rfc4880#section-3.7|RFC 4880 3.7}).\n   * @param {Uint8Array} bytes - Payload of string-to-key specifier\n   * @returns {Integer} Actual length of the object.\n   */\n  read(bytes) {\n    let i = 0;\n    try {\n      this.type = enums.read(enums.s2k, bytes[i++]);\n    } catch (err) {\n      throw new UnsupportedError('Unknown S2K type.');\n    }\n    this.algorithm = bytes[i++];\n\n    switch (this.type) {\n      case 'simple':\n        break;\n\n      case 'salted':\n        this.salt = bytes.subarray(i, i + 8);\n        i += 8;\n        break;\n\n      case 'iterated':\n        this.salt = bytes.subarray(i, i + 8);\n        i += 8;\n\n        // Octet 10: count, a one-octet, coded value\n        this.c = bytes[i++];\n        break;\n\n      case 'gnu':\n        if (util.uint8ArrayToString(bytes.subarray(i, i + 3)) === 'GNU') {\n          i += 3; // GNU\n          const gnuExtType = 1000 + bytes[i++];\n          if (gnuExtType === 1001) {\n            this.type = 'gnu-dummy';\n            // GnuPG extension mode 1001 -- don't write secret key at all\n          } else {\n            throw new UnsupportedError('Unknown s2k gnu protection mode.');\n          }\n        } else {\n          throw new UnsupportedError('Unknown s2k type.');\n        }\n        break;\n\n      default:\n        throw new UnsupportedError('Unknown s2k type.'); // unreachable\n    }\n\n    return i;\n  }\n\n  /**\n   * Serializes s2k information\n   * @returns {Uint8Array} Binary representation of s2k.\n   */\n  write() {\n    if (this.type === 'gnu-dummy') {\n      return new Uint8Array([101, 0, ...util.stringToUint8Array('GNU'), 1]);\n    }\n    const arr = [new Uint8Array([enums.write(enums.s2k, this.type), this.algorithm])];\n\n    switch (this.type) {\n      case 'simple':\n        break;\n      case 'salted':\n        arr.push(this.salt);\n        break;\n      case 'iterated':\n        arr.push(this.salt);\n        arr.push(new Uint8Array([this.c]));\n        break;\n      case 'gnu':\n        throw new Error('GNU s2k type not supported.');\n      default:\n        throw new Error('Unknown s2k type.');\n    }\n\n    return util.concatUint8Array(arr);\n  }\n\n  /**\n   * Produces a key using the specified passphrase and the defined\n   * hashAlgorithm\n   * @param {String} passphrase - Passphrase containing user input\n   * @returns {Promise<Uint8Array>} Produced key with a length corresponding to.\n   * hashAlgorithm hash length\n   * @async\n   */\n  async produceKey(passphrase, numBytes) {\n    passphrase = util.encodeUTF8(passphrase);\n\n    const arr = [];\n    let rlength = 0;\n\n    let prefixlen = 0;\n    while (rlength < numBytes) {\n      let toHash;\n      switch (this.type) {\n        case 'simple':\n          toHash = util.concatUint8Array([new Uint8Array(prefixlen), passphrase]);\n          break;\n        case 'salted':\n          toHash = util.concatUint8Array([new Uint8Array(prefixlen), this.salt, passphrase]);\n          break;\n        case 'iterated': {\n          const data = util.concatUint8Array([this.salt, passphrase]);\n          let datalen = data.length;\n          const count = Math.max(this.getCount(), datalen);\n          toHash = new Uint8Array(prefixlen + count);\n          toHash.set(data, prefixlen);\n          for (let pos = prefixlen + datalen; pos < count; pos += datalen, datalen *= 2) {\n            toHash.copyWithin(pos, prefixlen, pos);\n          }\n          break;\n        }\n        case 'gnu':\n          throw new Error('GNU s2k type not supported.');\n        default:\n          throw new Error('Unknown s2k type.');\n      }\n      const result = await crypto.hash.digest(this.algorithm, toHash);\n      arr.push(result);\n      rlength += result.length;\n      prefixlen++;\n    }\n\n    return util.concatUint8Array(arr).subarray(0, numBytes);\n  }\n}\n\nexport default S2K;\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport KeyID from '../type/keyid';\nimport defaultConfig from '../config';\nimport crypto from '../crypto';\nimport enums from '../enums';\nimport util from '../util';\nimport { UnsupportedError } from './packet';\n\n/**\n * Implementation of the Key Material Packet (Tag 5,6,7,14)\n *\n * {@link https://tools.ietf.org/html/rfc4880#section-5.5|RFC4480 5.5}:\n * A key material packet contains all the information about a public or\n * private key.  There are four variants of this packet type, and two\n * major versions.\n *\n * A Public-Key packet starts a series of packets that forms an OpenPGP\n * key (sometimes called an OpenPGP certificate).\n */\nclass PublicKeyPacket {\n  static get tag() {\n    return enums.packet.publicKey;\n  }\n\n  /**\n   * @param {Date} [date] - Creation date\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   */\n  constructor(date = new Date(), config = defaultConfig) {\n    /**\n     * Packet version\n     * @type {Integer}\n     */\n    this.version = config.v5Keys ? 5 : 4;\n    /**\n     * Key creation date.\n     * @type {Date}\n     */\n    this.created = util.normalizeDate(date);\n    /**\n     * Public key algorithm.\n     * @type {enums.publicKey}\n     */\n    this.algorithm = null;\n    /**\n     * Algorithm specific public params\n     * @type {Object}\n     */\n    this.publicParams = null;\n    /**\n     * Time until expiration in days (V3 only)\n     * @type {Integer}\n     */\n    this.expirationTimeV3 = 0;\n    /**\n     * Fingerprint bytes\n     * @type {Uint8Array}\n     */\n    this.fingerprint = null;\n    /**\n     * KeyID\n     * @type {module:type/keyid~KeyID}\n     */\n    this.keyID = null;\n  }\n\n  /**\n   * Create a PublicKeyPacket from a SecretKeyPacket\n   * @param {SecretKeyPacket} secretKeyPacket - key packet to convert\n   * @returns {PublicKeyPacket} public key packet\n   * @static\n   */\n  static fromSecretKeyPacket(secretKeyPacket) {\n    const keyPacket = new PublicKeyPacket();\n    const { version, created, algorithm, publicParams, keyID, fingerprint } = secretKeyPacket;\n    keyPacket.version = version;\n    keyPacket.created = created;\n    keyPacket.algorithm = algorithm;\n    keyPacket.publicParams = publicParams;\n    keyPacket.keyID = keyID;\n    keyPacket.fingerprint = fingerprint;\n    return keyPacket;\n  }\n\n  /**\n   * Internal Parser for public keys as specified in {@link https://tools.ietf.org/html/rfc4880#section-5.5.2|RFC 4880 section 5.5.2 Public-Key Packet Formats}\n   * @param {Uint8Array} bytes - Input array to read the packet from\n   * @returns {Object} This object with attributes set by the parser\n   * @async\n   */\n  async read(bytes) {\n    let pos = 0;\n    // A one-octet version number (3, 4 or 5).\n    this.version = bytes[pos++];\n\n    if (this.version === 4 || this.version === 5) {\n      // - A four-octet number denoting the time that the key was created.\n      this.created = util.readDate(bytes.subarray(pos, pos + 4));\n      pos += 4;\n\n      // - A one-octet number denoting the public-key algorithm of this key.\n      this.algorithm = bytes[pos++];\n\n      if (this.version === 5) {\n        // - A four-octet scalar octet count for the following key material.\n        pos += 4;\n      }\n\n      // - A series of values comprising the key material.\n      const { read, publicParams } = crypto.parsePublicKeyParams(this.algorithm, bytes.subarray(pos));\n      this.publicParams = publicParams;\n      pos += read;\n\n      // we set the fingerprint and keyID already to make it possible to put together the key packets directly in the Key constructor\n      await this.computeFingerprintAndKeyID();\n      return pos;\n    }\n    throw new UnsupportedError(`Version ${this.version} of the key packet is unsupported.`);\n  }\n\n  /**\n   * Creates an OpenPGP public key packet for the given key.\n   * @returns {Uint8Array} Bytes encoding the public key OpenPGP packet.\n   */\n  write() {\n    const arr = [];\n    // Version\n    arr.push(new Uint8Array([this.version]));\n    arr.push(util.writeDate(this.created));\n    // A one-octet number denoting the public-key algorithm of this key\n    arr.push(new Uint8Array([this.algorithm]));\n\n    const params = crypto.serializeParams(this.algorithm, this.publicParams);\n    if (this.version === 5) {\n      // A four-octet scalar octet count for the following key material\n      arr.push(util.writeNumber(params.length, 4));\n    }\n    // Algorithm-specific params\n    arr.push(params);\n    return util.concatUint8Array(arr);\n  }\n\n  /**\n   * Write packet in order to be hashed; either for a signature or a fingerprint\n   * @param {Integer} version - target version of signature or key\n   */\n  writeForHash(version) {\n    const bytes = this.writePublicKey();\n\n    if (version === 5) {\n      return util.concatUint8Array([new Uint8Array([0x9A]), util.writeNumber(bytes.length, 4), bytes]);\n    }\n    return util.concatUint8Array([new Uint8Array([0x99]), util.writeNumber(bytes.length, 2), bytes]);\n  }\n\n  /**\n   * Check whether secret-key data is available in decrypted form. Returns null for public keys.\n   * @returns {Boolean|null}\n   */\n  isDecrypted() {\n    return null;\n  }\n\n  /**\n   * Returns the creation time of the key\n   * @returns {Date}\n   */\n  getCreationTime() {\n    return this.created;\n  }\n\n  /**\n   * Return the key ID of the key\n   * @returns {module:type/keyid~KeyID} The 8-byte key ID\n   */\n  getKeyID() {\n    return this.keyID;\n  }\n\n  /**\n   * Computes and set the key ID and fingerprint of the key\n   * @async\n   */\n  async computeFingerprintAndKeyID() {\n    await this.computeFingerprint();\n    this.keyID = new KeyID();\n\n    if (this.version === 5) {\n      this.keyID.read(this.fingerprint.subarray(0, 8));\n    } else if (this.version === 4) {\n      this.keyID.read(this.fingerprint.subarray(12, 20));\n    } else {\n      throw new Error('Unsupported key version');\n    }\n  }\n\n  /**\n   * Computes and set the fingerprint of the key\n   */\n  async computeFingerprint() {\n    const toHash = this.writeForHash(this.version);\n\n    if (this.version === 5) {\n      this.fingerprint = await crypto.hash.sha256(toHash);\n    } else if (this.version === 4) {\n      this.fingerprint = await crypto.hash.sha1(toHash);\n    } else {\n      throw new Error('Unsupported key version');\n    }\n  }\n\n  /**\n   * Returns the fingerprint of the key, as an array of bytes\n   * @returns {Uint8Array} A Uint8Array containing the fingerprint\n   */\n  getFingerprintBytes() {\n    return this.fingerprint;\n  }\n\n  /**\n   * Calculates and returns the fingerprint of the key, as a string\n   * @returns {String} A string containing the fingerprint in lowercase hex\n   */\n  getFingerprint() {\n    return util.uint8ArrayToHex(this.getFingerprintBytes());\n  }\n\n  /**\n   * Calculates whether two keys have the same fingerprint without actually calculating the fingerprint\n   * @returns {Boolean} Whether the two keys have the same version and public key data.\n   */\n  hasSameFingerprintAs(other) {\n    return this.version === other.version && util.equalsUint8Array(this.writePublicKey(), other.writePublicKey());\n  }\n\n  /**\n   * Returns algorithm information\n   * @returns {Object} An object of the form {algorithm: String, bits:int, curve:String}.\n   */\n  getAlgorithmInfo() {\n    const result = {};\n    result.algorithm = enums.read(enums.publicKey, this.algorithm);\n    // RSA, DSA or ElGamal public modulo\n    const modulo = this.publicParams.n || this.publicParams.p;\n    if (modulo) {\n      result.bits = util.uint8ArrayBitLength(modulo);\n    } else if (this.publicParams.oid) {\n      result.curve = this.publicParams.oid.getName();\n    }\n    return result;\n  }\n}\n\n/**\n * Alias of read()\n * @see PublicKeyPacket#read\n */\nPublicKeyPacket.prototype.readPublicKey = PublicKeyPacket.prototype.read;\n\n/**\n * Alias of write()\n * @see PublicKeyPacket#write\n */\nPublicKeyPacket.prototype.writePublicKey = PublicKeyPacket.prototype.write;\n\nexport default PublicKeyPacket;\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport PublicKeyPacket from './public_key';\nimport enums from '../enums';\n\n/**\n * A Public-Subkey packet (tag 14) has exactly the same format as a\n * Public-Key packet, but denotes a subkey.  One or more subkeys may be\n * associated with a top-level key.  By convention, the top-level key\n * provides signature services, and the subkeys provide encryption\n * services.\n * @extends PublicKeyPacket\n */\nclass PublicSubkeyPacket extends PublicKeyPacket {\n  static get tag() {\n    return enums.packet.publicSubkey;\n  }\n\n  /**\n   * @param {Date} [date] - Creation date\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   */\n  // eslint-disable-next-line no-useless-constructor\n  constructor(date, config) {\n    super(date, config);\n  }\n\n  /**\n   * Create a PublicSubkeyPacket from a SecretSubkeyPacket\n   * @param {SecretSubkeyPacket} secretSubkeyPacket - subkey packet to convert\n   * @returns {SecretSubkeyPacket} public key packet\n   * @static\n   */\n  static fromSecretSubkeyPacket(secretSubkeyPacket) {\n    const keyPacket = new PublicSubkeyPacket();\n    const { version, created, algorithm, publicParams, keyID, fingerprint } = secretSubkeyPacket;\n    keyPacket.version = version;\n    keyPacket.created = created;\n    keyPacket.algorithm = algorithm;\n    keyPacket.publicParams = publicParams;\n    keyPacket.keyID = keyID;\n    keyPacket.fingerprint = fingerprint;\n    return keyPacket;\n  }\n}\n\nexport default PublicSubkeyPacket;\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport PublicKeyPacket from './public_key';\nimport S2K from '../type/s2k';\nimport crypto from '../crypto';\nimport enums from '../enums';\nimport util from '../util';\nimport defaultConfig from '../config';\nimport { UnsupportedError } from './packet';\n\n/**\n * A Secret-Key packet contains all the information that is found in a\n * Public-Key packet, including the public-key material, but also\n * includes the secret-key material after all the public-key fields.\n * @extends PublicKeyPacket\n */\nclass SecretKeyPacket extends PublicKeyPacket {\n  static get tag() {\n    return enums.packet.secretKey;\n  }\n\n  /**\n   * @param {Date} [date] - Creation date\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   */\n  constructor(date = new Date(), config = defaultConfig) {\n    super(date, config);\n    /**\n     * Secret-key data\n     */\n    this.keyMaterial = null;\n    /**\n     * Indicates whether secret-key data is encrypted. `this.isEncrypted === false` means data is available in decrypted form.\n     */\n    this.isEncrypted = null;\n    /**\n     * S2K usage\n     * @type {enums.symmetric}\n     */\n    this.s2kUsage = 0;\n    /**\n     * S2K object\n     * @type {type/s2k}\n     */\n    this.s2k = null;\n    /**\n     * Symmetric algorithm to encrypt the key with\n     * @type {enums.symmetric}\n     */\n    this.symmetric = null;\n    /**\n     * AEAD algorithm to encrypt the key with (if AEAD protection is enabled)\n     * @type {enums.aead}\n     */\n    this.aead = null;\n    /**\n     * Decrypted private parameters, referenced by name\n     * @type {Object}\n     */\n    this.privateParams = null;\n  }\n\n  // 5.5.3.  Secret-Key Packet Formats\n\n  /**\n   * Internal parser for private keys as specified in\n   * {@link https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-04#section-5.5.3|RFC4880bis-04 section 5.5.3}\n   * @param {Uint8Array} bytes - Input string to read the packet from\n   * @async\n   */\n  async read(bytes) {\n    // - A Public-Key or Public-Subkey packet, as described above.\n    let i = await this.readPublicKey(bytes);\n    const startOfSecretKeyData = i;\n\n    // - One octet indicating string-to-key usage conventions.  Zero\n    //   indicates that the secret-key data is not encrypted.  255 or 254\n    //   indicates that a string-to-key specifier is being given.  Any\n    //   other value is a symmetric-key encryption algorithm identifier.\n    this.s2kUsage = bytes[i++];\n\n    // - Only for a version 5 packet, a one-octet scalar octet count of\n    //   the next 4 optional fields.\n    if (this.version === 5) {\n      i++;\n    }\n\n    try {\n      // - [Optional] If string-to-key usage octet was 255, 254, or 253, a\n      //   one-octet symmetric encryption algorithm.\n      if (this.s2kUsage === 255 || this.s2kUsage === 254 || this.s2kUsage === 253) {\n        this.symmetric = bytes[i++];\n\n        // - [Optional] If string-to-key usage octet was 253, a one-octet\n        //   AEAD algorithm.\n        if (this.s2kUsage === 253) {\n          this.aead = bytes[i++];\n        }\n\n        // - [Optional] If string-to-key usage octet was 255, 254, or 253, a\n        //   string-to-key specifier.  The length of the string-to-key\n        //   specifier is implied by its type, as described above.\n        this.s2k = new S2K();\n        i += this.s2k.read(bytes.subarray(i, bytes.length));\n\n        if (this.s2k.type === 'gnu-dummy') {\n          return;\n        }\n      } else if (this.s2kUsage) {\n        this.symmetric = this.s2kUsage;\n      }\n\n      // - [Optional] If secret data is encrypted (string-to-key usage octet\n      //   not zero), an Initial Vector (IV) of the same length as the\n      //   cipher's block size.\n      if (this.s2kUsage) {\n        this.iv = bytes.subarray(\n          i,\n          i + crypto.getCipher(this.symmetric).blockSize\n        );\n\n        i += this.iv.length;\n      }\n    } catch (e) {\n      // if the s2k is unsupported, we still want to support encrypting and verifying with the given key\n      if (!this.s2kUsage) throw e; // always throw for decrypted keys\n      this.unparseableKeyMaterial = bytes.subarray(startOfSecretKeyData);\n      this.isEncrypted = true;\n    }\n\n    // - Only for a version 5 packet, a four-octet scalar octet count for\n    //   the following key material.\n    if (this.version === 5) {\n      i += 4;\n    }\n\n    // - Plain or encrypted multiprecision integers comprising the secret\n    //   key data.  These algorithm-specific fields are as described\n    //   below.\n    this.keyMaterial = bytes.subarray(i);\n    this.isEncrypted = !!this.s2kUsage;\n\n    if (!this.isEncrypted) {\n      const cleartext = this.keyMaterial.subarray(0, -2);\n      if (!util.equalsUint8Array(util.writeChecksum(cleartext), this.keyMaterial.subarray(-2))) {\n        throw new Error('Key checksum mismatch');\n      }\n      try {\n        const { privateParams } = crypto.parsePrivateKeyParams(this.algorithm, cleartext, this.publicParams);\n        this.privateParams = privateParams;\n      } catch (err) {\n        if (err instanceof UnsupportedError) throw err;\n        // avoid throwing potentially sensitive errors\n        throw new Error('Error reading MPIs');\n      }\n    }\n  }\n\n  /**\n   * Creates an OpenPGP key packet for the given key.\n   * @returns {Uint8Array} A string of bytes containing the secret key OpenPGP packet.\n   */\n  write() {\n    const serializedPublicKey = this.writePublicKey();\n    if (this.unparseableKeyMaterial) {\n      return util.concatUint8Array([\n        serializedPublicKey,\n        this.unparseableKeyMaterial\n      ]);\n    }\n\n    const arr = [serializedPublicKey];\n    arr.push(new Uint8Array([this.s2kUsage]));\n\n    const optionalFieldsArr = [];\n    // - [Optional] If string-to-key usage octet was 255, 254, or 253, a\n    //   one- octet symmetric encryption algorithm.\n    if (this.s2kUsage === 255 || this.s2kUsage === 254 || this.s2kUsage === 253) {\n      optionalFieldsArr.push(this.symmetric);\n\n      // - [Optional] If string-to-key usage octet was 253, a one-octet\n      //   AEAD algorithm.\n      if (this.s2kUsage === 253) {\n        optionalFieldsArr.push(this.aead);\n      }\n\n      // - [Optional] If string-to-key usage octet was 255, 254, or 253, a\n      //   string-to-key specifier.  The length of the string-to-key\n      //   specifier is implied by its type, as described above.\n      optionalFieldsArr.push(...this.s2k.write());\n    }\n\n    // - [Optional] If secret data is encrypted (string-to-key usage octet\n    //   not zero), an Initial Vector (IV) of the same length as the\n    //   cipher's block size.\n    if (this.s2kUsage && this.s2k.type !== 'gnu-dummy') {\n      optionalFieldsArr.push(...this.iv);\n    }\n\n    if (this.version === 5) {\n      arr.push(new Uint8Array([optionalFieldsArr.length]));\n    }\n    arr.push(new Uint8Array(optionalFieldsArr));\n\n    if (!this.isDummy()) {\n      if (!this.s2kUsage) {\n        this.keyMaterial = crypto.serializeParams(this.algorithm, this.privateParams);\n      }\n\n      if (this.version === 5) {\n        arr.push(util.writeNumber(this.keyMaterial.length, 4));\n      }\n      arr.push(this.keyMaterial);\n\n      if (!this.s2kUsage) {\n        arr.push(util.writeChecksum(this.keyMaterial));\n      }\n    }\n\n    return util.concatUint8Array(arr);\n  }\n\n  /**\n   * Check whether secret-key data is available in decrypted form.\n   * Returns false for gnu-dummy keys and null for public keys.\n   * @returns {Boolean|null}\n   */\n  isDecrypted() {\n    return this.isEncrypted === false;\n  }\n\n  /**\n   * Check whether the key includes secret key material.\n   * Some secret keys do not include it, and can thus only be used\n   * for public-key operations (encryption and verification).\n   * Such keys are:\n   * - GNU-dummy keys, where the secret material has been stripped away\n   * - encrypted keys with unsupported S2K or cipher\n   */\n  isMissingSecretKeyMaterial() {\n    return this.unparseableKeyMaterial !== undefined || this.isDummy();\n  }\n\n  /**\n   * Check whether this is a gnu-dummy key\n   * @returns {Boolean}\n   */\n  isDummy() {\n    return !!(this.s2k && this.s2k.type === 'gnu-dummy');\n  }\n\n  /**\n   * Remove private key material, converting the key to a dummy one.\n   * The resulting key cannot be used for signing/decrypting but can still verify signatures.\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   */\n  makeDummy(config = defaultConfig) {\n    if (this.isDummy()) {\n      return;\n    }\n    if (this.isDecrypted()) {\n      this.clearPrivateParams();\n    }\n    delete this.unparseableKeyMaterial;\n    this.isEncrypted = null;\n    this.keyMaterial = null;\n    this.s2k = new S2K(config);\n    this.s2k.algorithm = 0;\n    this.s2k.c = 0;\n    this.s2k.type = 'gnu-dummy';\n    this.s2kUsage = 254;\n    this.symmetric = enums.symmetric.aes256;\n  }\n\n  /**\n   * Encrypt the payload. By default, we use aes256 and iterated, salted string\n   * to key specifier. If the key is in a decrypted state (isEncrypted === false)\n   * and the passphrase is empty or undefined, the key will be set as not encrypted.\n   * This can be used to remove passphrase protection after calling decrypt().\n   * @param {String} passphrase\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @throws {Error} if encryption was not successful\n   * @async\n   */\n  async encrypt(passphrase, config = defaultConfig) {\n    if (this.isDummy()) {\n      return;\n    }\n\n    if (!this.isDecrypted()) {\n      throw new Error('Key packet is already encrypted');\n    }\n\n    if (!passphrase) {\n      throw new Error('A non-empty passphrase is required for key encryption.');\n    }\n\n    this.s2k = new S2K(config);\n    this.s2k.salt = crypto.random.getRandomBytes(8);\n    const cleartext = crypto.serializeParams(this.algorithm, this.privateParams);\n    this.symmetric = enums.symmetric.aes256;\n    const key = await produceEncryptionKey(this.s2k, passphrase, this.symmetric);\n\n    const { blockSize } = crypto.getCipher(this.symmetric);\n    this.iv = crypto.random.getRandomBytes(blockSize);\n\n    if (config.aeadProtect) {\n      this.s2kUsage = 253;\n      this.aead = enums.aead.eax;\n      const mode = crypto.getAEADMode(this.aead);\n      const modeInstance = await mode(this.symmetric, key);\n      this.keyMaterial = await modeInstance.encrypt(cleartext, this.iv.subarray(0, mode.ivLength), new Uint8Array());\n    } else {\n      this.s2kUsage = 254;\n      this.keyMaterial = await crypto.mode.cfb.encrypt(this.symmetric, key, util.concatUint8Array([\n        cleartext,\n        await crypto.hash.sha1(cleartext, config)\n      ]), this.iv, config);\n    }\n  }\n\n  /**\n   * Decrypts the private key params which are needed to use the key.\n   * Successful decryption does not imply key integrity, call validate() to confirm that.\n   * {@link SecretKeyPacket.isDecrypted} should be false, as\n   * otherwise calls to this function will throw an error.\n   * @param {String} passphrase - The passphrase for this private key as string\n   * @throws {Error} if the key is already decrypted, or if decryption was not successful\n   * @async\n   */\n  async decrypt(passphrase) {\n    if (this.isDummy()) {\n      return false;\n    }\n\n    if (this.unparseableKeyMaterial) {\n      throw new Error('Key packet cannot be decrypted: unsupported S2K or cipher algo');\n    }\n\n    if (this.isDecrypted()) {\n      throw new Error('Key packet is already decrypted.');\n    }\n\n    let key;\n    if (this.s2kUsage === 254 || this.s2kUsage === 253) {\n      key = await produceEncryptionKey(this.s2k, passphrase, this.symmetric);\n    } else if (this.s2kUsage === 255) {\n      throw new Error('Encrypted private key is authenticated using an insecure two-byte hash');\n    } else {\n      throw new Error('Private key is encrypted using an insecure S2K function: unsalted MD5');\n    }\n\n    let cleartext;\n    if (this.s2kUsage === 253) {\n      const mode = crypto.getAEADMode(this.aead);\n      const modeInstance = await mode(this.symmetric, key);\n      try {\n        cleartext = await modeInstance.decrypt(this.keyMaterial, this.iv.subarray(0, mode.ivLength), new Uint8Array());\n      } catch (err) {\n        if (err.message === 'Authentication tag mismatch') {\n          throw new Error('Incorrect key passphrase: ' + err.message);\n        }\n        throw err;\n      }\n    } else {\n      const cleartextWithHash = await crypto.mode.cfb.decrypt(this.symmetric, key, this.keyMaterial, this.iv);\n\n      cleartext = cleartextWithHash.subarray(0, -20);\n      const hash = await crypto.hash.sha1(cleartext);\n\n      if (!util.equalsUint8Array(hash, cleartextWithHash.subarray(-20))) {\n        throw new Error('Incorrect key passphrase');\n      }\n    }\n\n    try {\n      const { privateParams } = crypto.parsePrivateKeyParams(this.algorithm, cleartext, this.publicParams);\n      this.privateParams = privateParams;\n    } catch (err) {\n      throw new Error('Error reading MPIs');\n    }\n    this.isEncrypted = false;\n    this.keyMaterial = null;\n    this.s2kUsage = 0;\n  }\n\n  /**\n   * Checks that the key parameters are consistent\n   * @throws {Error} if validation was not successful\n   * @async\n   */\n  async validate() {\n    if (this.isDummy()) {\n      return;\n    }\n\n    if (!this.isDecrypted()) {\n      throw new Error('Key is not decrypted');\n    }\n\n    let validParams;\n    try {\n      // this can throw if some parameters are undefined\n      validParams = await crypto.validateParams(this.algorithm, this.publicParams, this.privateParams);\n    } catch (_) {\n      validParams = false;\n    }\n    if (!validParams) {\n      throw new Error('Key is invalid');\n    }\n  }\n\n  async generate(bits, curve) {\n    const { privateParams, publicParams } = await crypto.generateParams(this.algorithm, bits, curve);\n    this.privateParams = privateParams;\n    this.publicParams = publicParams;\n    this.isEncrypted = false;\n  }\n\n  /**\n   * Clear private key parameters\n   */\n  clearPrivateParams() {\n    if (this.isMissingSecretKeyMaterial()) {\n      return;\n    }\n\n    Object.keys(this.privateParams).forEach(name => {\n      const param = this.privateParams[name];\n      param.fill(0);\n      delete this.privateParams[name];\n    });\n    this.privateParams = null;\n    this.isEncrypted = true;\n  }\n}\n\nasync function produceEncryptionKey(s2k, passphrase, algorithm) {\n  const { keySize } = crypto.getCipher(algorithm);\n  return s2k.produceKey(passphrase, keySize);\n}\n\nexport default SecretKeyPacket;\n","\n// email-addresses.js - RFC 5322 email address parser\n// v 3.1.0\n//\n// http://tools.ietf.org/html/rfc5322\n//\n// This library does not validate email addresses.\n// emailAddresses attempts to parse addresses using the (fairly liberal)\n// grammar specified in RFC 5322.\n//\n// email-addresses returns {\n//     ast: <an abstract syntax tree based on rfc5322>,\n//     addresses: [{\n//            node: <node in ast for this address>,\n//            name: <display-name>,\n//            address: <addr-spec>,\n//            local: <local-part>,\n//            domain: <domain>\n//         }, ...]\n// }\n//\n// emailAddresses.parseOneAddress and emailAddresses.parseAddressList\n// work as you might expect. Try it out.\n//\n// Many thanks to Dominic Sayers and his documentation on the is_email function,\n// http://code.google.com/p/isemail/ , which helped greatly in writing this parser.\n\n(function (global) {\n\"use strict\";\n\nfunction parse5322(opts) {\n\n    // tokenizing functions\n\n    function inStr() { return pos < len; }\n    function curTok() { return parseString[pos]; }\n    function getPos() { return pos; }\n    function setPos(i) { pos = i; }\n    function nextTok() { pos += 1; }\n    function initialize() {\n        pos = 0;\n        len = parseString.length;\n    }\n\n    // parser helper functions\n\n    function o(name, value) {\n        return {\n            name: name,\n            tokens: value || \"\",\n            semantic: value || \"\",\n            children: []\n        };\n    }\n\n    function wrap(name, ast) {\n        var n;\n        if (ast === null) { return null; }\n        n = o(name);\n        n.tokens = ast.tokens;\n        n.semantic = ast.semantic;\n        n.children.push(ast);\n        return n;\n    }\n\n    function add(parent, child) {\n        if (child !== null) {\n            parent.tokens += child.tokens;\n            parent.semantic += child.semantic;\n        }\n        parent.children.push(child);\n        return parent;\n    }\n\n    function compareToken(fxnCompare) {\n        var tok;\n        if (!inStr()) { return null; }\n        tok = curTok();\n        if (fxnCompare(tok)) {\n            nextTok();\n            return o('token', tok);\n        }\n        return null;\n    }\n\n    function literal(lit) {\n        return function literalFunc() {\n            return wrap('literal', compareToken(function (tok) {\n                return tok === lit;\n            }));\n        };\n    }\n\n    function and() {\n        var args = arguments;\n        return function andFunc() {\n            var i, s, result, start;\n            start = getPos();\n            s = o('and');\n            for (i = 0; i < args.length; i += 1) {\n                result = args[i]();\n                if (result === null) {\n                    setPos(start);\n                    return null;\n                }\n                add(s, result);\n            }\n            return s;\n        };\n    }\n\n    function or() {\n        var args = arguments;\n        return function orFunc() {\n            var i, result, start;\n            start = getPos();\n            for (i = 0; i < args.length; i += 1) {\n                result = args[i]();\n                if (result !== null) {\n                    return result;\n                }\n                setPos(start);\n            }\n            return null;\n        };\n    }\n\n    function opt(prod) {\n        return function optFunc() {\n            var result, start;\n            start = getPos();\n            result = prod();\n            if (result !== null) {\n                return result;\n            }\n            else {\n                setPos(start);\n                return o('opt');\n            }\n        };\n    }\n\n    function invis(prod) {\n        return function invisFunc() {\n            var result = prod();\n            if (result !== null) {\n                result.semantic = \"\";\n            }\n            return result;\n        };\n    }\n\n    function colwsp(prod) {\n        return function collapseSemanticWhitespace() {\n            var result = prod();\n            if (result !== null && result.semantic.length > 0) {\n                result.semantic = \" \";\n            }\n            return result;\n        };\n    }\n\n    function star(prod, minimum) {\n        return function starFunc() {\n            var s, result, count, start, min;\n            start = getPos();\n            s = o('star');\n            count = 0;\n            min = minimum === undefined ? 0 : minimum;\n            while ((result = prod()) !== null) {\n                count = count + 1;\n                add(s, result);\n            }\n            if (count >= min) {\n                return s;\n            }\n            else {\n                setPos(start);\n                return null;\n            }\n        };\n    }\n\n    // One expects names to get normalized like this:\n    // \"  First  Last \" -> \"First Last\"\n    // \"First Last\" -> \"First Last\"\n    // \"First   Last\" -> \"First Last\"\n    function collapseWhitespace(s) {\n        return s.replace(/([ \\t]|\\r\\n)+/g, ' ').replace(/^\\s*/, '').replace(/\\s*$/, '');\n    }\n\n    // UTF-8 pseudo-production (RFC 6532)\n    // RFC 6532 extends RFC 5322 productions to include UTF-8\n    // using the following productions:\n    // UTF8-non-ascii  =   UTF8-2 / UTF8-3 / UTF8-4\n    // UTF8-2          =   <Defined in Section 4 of RFC3629>\n    // UTF8-3          =   <Defined in Section 4 of RFC3629>\n    // UTF8-4          =   <Defined in Section 4 of RFC3629>\n    //\n    // For reference, the extended RFC 5322 productions are:\n    // VCHAR   =/  UTF8-non-ascii\n    // ctext   =/  UTF8-non-ascii\n    // atext   =/  UTF8-non-ascii\n    // qtext   =/  UTF8-non-ascii\n    // dtext   =/  UTF8-non-ascii\n    function isUTF8NonAscii(tok) {\n        // In JavaScript, we just deal directly with Unicode code points,\n        // so we aren't checking individual bytes for UTF-8 encoding.\n        // Just check that the character is non-ascii.\n        return tok.charCodeAt(0) >= 128;\n    }\n\n\n    // common productions (RFC 5234)\n    // http://tools.ietf.org/html/rfc5234\n    // B.1. Core Rules\n\n    // CR             =  %x0D\n    //                         ; carriage return\n    function cr() { return wrap('cr', literal('\\r')()); }\n\n    // CRLF           =  CR LF\n    //                         ; Internet standard newline\n    function crlf() { return wrap('crlf', and(cr, lf)()); }\n\n    // DQUOTE         =  %x22\n    //                         ; \" (Double Quote)\n    function dquote() { return wrap('dquote', literal('\"')()); }\n\n    // HTAB           =  %x09\n    //                         ; horizontal tab\n    function htab() { return wrap('htab', literal('\\t')()); }\n\n    // LF             =  %x0A\n    //                         ; linefeed\n    function lf() { return wrap('lf', literal('\\n')()); }\n\n    // SP             =  %x20\n    function sp() { return wrap('sp', literal(' ')()); }\n\n    // VCHAR          =  %x21-7E\n    //                         ; visible (printing) characters\n    function vchar() {\n        return wrap('vchar', compareToken(function vcharFunc(tok) {\n            var code = tok.charCodeAt(0);\n            var accept = (0x21 <= code && code <= 0x7E);\n            if (opts.rfc6532) {\n                accept = accept || isUTF8NonAscii(tok);\n            }\n            return accept;\n        }));\n    }\n\n    // WSP            =  SP / HTAB\n    //                         ; white space\n    function wsp() { return wrap('wsp', or(sp, htab)()); }\n\n\n    // email productions (RFC 5322)\n    // http://tools.ietf.org/html/rfc5322\n    // 3.2.1. Quoted characters\n\n    // quoted-pair     =   (\"\\\" (VCHAR / WSP)) / obs-qp\n    function quotedPair() {\n        var qp = wrap('quoted-pair',\n        or(\n            and(literal('\\\\'), or(vchar, wsp)),\n            obsQP\n        )());\n        if (qp === null) { return null; }\n        // a quoted pair will be two characters, and the \"\\\" character\n        // should be semantically \"invisible\" (RFC 5322 3.2.1)\n        qp.semantic = qp.semantic[1];\n        return qp;\n    }\n\n    // 3.2.2. Folding White Space and Comments\n\n    // FWS             =   ([*WSP CRLF] 1*WSP) /  obs-FWS\n    function fws() {\n        return wrap('fws', or(\n            obsFws,\n            and(\n                opt(and(\n                    star(wsp),\n                    invis(crlf)\n                   )),\n                star(wsp, 1)\n            )\n        )());\n    }\n\n    // ctext           =   %d33-39 /          ; Printable US-ASCII\n    //                     %d42-91 /          ;  characters not including\n    //                     %d93-126 /         ;  \"(\", \")\", or \"\\\"\n    //                     obs-ctext\n    function ctext() {\n        return wrap('ctext', or(\n            function ctextFunc1() {\n                return compareToken(function ctextFunc2(tok) {\n                    var code = tok.charCodeAt(0);\n                    var accept =\n                        (33 <= code && code <= 39) ||\n                        (42 <= code && code <= 91) ||\n                        (93 <= code && code <= 126);\n                    if (opts.rfc6532) {\n                        accept = accept || isUTF8NonAscii(tok);\n                    }\n                    return accept;\n                });\n            },\n            obsCtext\n        )());\n    }\n\n    // ccontent        =   ctext / quoted-pair / comment\n    function ccontent() {\n        return wrap('ccontent', or(ctext, quotedPair, comment)());\n    }\n\n    // comment         =   \"(\" *([FWS] ccontent) [FWS] \")\"\n    function comment() {\n        return wrap('comment', and(\n            literal('('),\n            star(and(opt(fws), ccontent)),\n            opt(fws),\n            literal(')')\n        )());\n    }\n\n    // CFWS            =   (1*([FWS] comment) [FWS]) / FWS\n    function cfws() {\n        return wrap('cfws', or(\n            and(\n                star(\n                    and(opt(fws), comment),\n                    1\n                ),\n                opt(fws)\n            ),\n            fws\n        )());\n    }\n\n    // 3.2.3. Atom\n\n    //atext           =   ALPHA / DIGIT /    ; Printable US-ASCII\n    //                       \"!\" / \"#\" /        ;  characters not including\n    //                       \"$\" / \"%\" /        ;  specials.  Used for atoms.\n    //                       \"&\" / \"'\" /\n    //                       \"*\" / \"+\" /\n    //                       \"-\" / \"/\" /\n    //                       \"=\" / \"?\" /\n    //                       \"^\" / \"_\" /\n    //                       \"`\" / \"{\" /\n    //                       \"|\" / \"}\" /\n    //                       \"~\"\n    function atext() {\n        return wrap('atext', compareToken(function atextFunc(tok) {\n            var accept =\n                ('a' <= tok && tok <= 'z') ||\n                ('A' <= tok && tok <= 'Z') ||\n                ('0' <= tok && tok <= '9') ||\n                (['!', '#', '$', '%', '&', '\\'', '*', '+', '-', '/',\n                  '=', '?', '^', '_', '`', '{', '|', '}', '~'].indexOf(tok) >= 0);\n            if (opts.rfc6532) {\n                accept = accept || isUTF8NonAscii(tok);\n            }\n            return accept;\n        }));\n    }\n\n    // atom            =   [CFWS] 1*atext [CFWS]\n    function atom() {\n        return wrap('atom', and(colwsp(opt(cfws)), star(atext, 1), colwsp(opt(cfws)))());\n    }\n\n    // dot-atom-text   =   1*atext *(\".\" 1*atext)\n    function dotAtomText() {\n        var s, maybeText;\n        s = wrap('dot-atom-text', star(atext, 1)());\n        if (s === null) { return s; }\n        maybeText = star(and(literal('.'), star(atext, 1)))();\n        if (maybeText !== null) {\n            add(s, maybeText);\n        }\n        return s;\n    }\n\n    // dot-atom        =   [CFWS] dot-atom-text [CFWS]\n    function dotAtom() {\n        return wrap('dot-atom', and(invis(opt(cfws)), dotAtomText, invis(opt(cfws)))());\n    }\n\n    // 3.2.4. Quoted Strings\n\n    //  qtext           =   %d33 /             ; Printable US-ASCII\n    //                      %d35-91 /          ;  characters not including\n    //                      %d93-126 /         ;  \"\\\" or the quote character\n    //                      obs-qtext\n    function qtext() {\n        return wrap('qtext', or(\n            function qtextFunc1() {\n                return compareToken(function qtextFunc2(tok) {\n                    var code = tok.charCodeAt(0);\n                    var accept =\n                        (33 === code) ||\n                        (35 <= code && code <= 91) ||\n                        (93 <= code && code <= 126);\n                    if (opts.rfc6532) {\n                        accept = accept || isUTF8NonAscii(tok);\n                    }\n                    return accept;\n                });\n            },\n            obsQtext\n        )());\n    }\n\n    // qcontent        =   qtext / quoted-pair\n    function qcontent() {\n        return wrap('qcontent', or(qtext, quotedPair)());\n    }\n\n    //  quoted-string   =   [CFWS]\n    //                      DQUOTE *([FWS] qcontent) [FWS] DQUOTE\n    //                      [CFWS]\n    function quotedString() {\n        return wrap('quoted-string', and(\n            invis(opt(cfws)),\n            invis(dquote), star(and(opt(colwsp(fws)), qcontent)), opt(invis(fws)), invis(dquote),\n            invis(opt(cfws))\n        )());\n    }\n\n    // 3.2.5 Miscellaneous Tokens\n\n    // word            =   atom / quoted-string\n    function word() {\n        return wrap('word', or(atom, quotedString)());\n    }\n\n    // phrase          =   1*word / obs-phrase\n    function phrase() {\n        return wrap('phrase', or(obsPhrase, star(word, 1))());\n    }\n\n    // 3.4. Address Specification\n    //   address         =   mailbox / group\n    function address() {\n        return wrap('address', or(mailbox, group)());\n    }\n\n    //   mailbox         =   name-addr / addr-spec\n    function mailbox() {\n        return wrap('mailbox', or(nameAddr, addrSpec)());\n    }\n\n    //   name-addr       =   [display-name] angle-addr\n    function nameAddr() {\n        return wrap('name-addr', and(opt(displayName), angleAddr)());\n    }\n\n    //   angle-addr      =   [CFWS] \"<\" addr-spec \">\" [CFWS] /\n    //                       obs-angle-addr\n    function angleAddr() {\n        return wrap('angle-addr', or(\n            and(\n                invis(opt(cfws)),\n                literal('<'),\n                addrSpec,\n                literal('>'),\n                invis(opt(cfws))\n            ),\n            obsAngleAddr\n        )());\n    }\n\n    //   group           =   display-name \":\" [group-list] \";\" [CFWS]\n    function group() {\n        return wrap('group', and(\n            displayName,\n            literal(':'),\n            opt(groupList),\n            literal(';'),\n            invis(opt(cfws))\n        )());\n    }\n\n    //   display-name    =   phrase\n    function displayName() {\n        return wrap('display-name', function phraseFixedSemantic() {\n            var result = phrase();\n            if (result !== null) {\n                result.semantic = collapseWhitespace(result.semantic);\n            }\n            return result;\n        }());\n    }\n\n    //   mailbox-list    =   (mailbox *(\",\" mailbox)) / obs-mbox-list\n    function mailboxList() {\n        return wrap('mailbox-list', or(\n            and(\n                mailbox,\n                star(and(literal(','), mailbox))\n            ),\n            obsMboxList\n        )());\n    }\n\n    //   address-list    =   (address *(\",\" address)) / obs-addr-list\n    function addressList() {\n        return wrap('address-list', or(\n            and(\n                address,\n                star(and(literal(','), address))\n            ),\n            obsAddrList\n        )());\n    }\n\n    //   group-list      =   mailbox-list / CFWS / obs-group-list\n    function groupList() {\n        return wrap('group-list', or(\n            mailboxList,\n            invis(cfws),\n            obsGroupList\n        )());\n    }\n\n    // 3.4.1 Addr-Spec Specification\n\n    // local-part      =   dot-atom / quoted-string / obs-local-part\n    function localPart() {\n        // note: quoted-string, dotAtom are proper subsets of obs-local-part\n        // so we really just have to look for obsLocalPart, if we don't care about the exact parse tree\n        return wrap('local-part', or(obsLocalPart, dotAtom, quotedString)());\n    }\n\n    //  dtext           =   %d33-90 /          ; Printable US-ASCII\n    //                      %d94-126 /         ;  characters not including\n    //                      obs-dtext          ;  \"[\", \"]\", or \"\\\"\n    function dtext() {\n        return wrap('dtext', or(\n            function dtextFunc1() {\n                return compareToken(function dtextFunc2(tok) {\n                    var code = tok.charCodeAt(0);\n                    var accept =\n                        (33 <= code && code <= 90) ||\n                        (94 <= code && code <= 126);\n                    if (opts.rfc6532) {\n                        accept = accept || isUTF8NonAscii(tok);\n                    }\n                    return accept;\n                });\n            },\n            obsDtext\n            )()\n        );\n    }\n\n    // domain-literal  =   [CFWS] \"[\" *([FWS] dtext) [FWS] \"]\" [CFWS]\n    function domainLiteral() {\n        return wrap('domain-literal', and(\n            invis(opt(cfws)),\n            literal('['),\n            star(and(opt(fws), dtext)),\n            opt(fws),\n            literal(']'),\n            invis(opt(cfws))\n        )());\n    }\n\n    // domain          =   dot-atom / domain-literal / obs-domain\n    function domain() {\n        return wrap('domain', function domainCheckTLD() {\n            var result = or(obsDomain, dotAtom, domainLiteral)();\n            if (opts.rejectTLD) {\n                if (result && result.semantic && result.semantic.indexOf('.') < 0) {\n                    return null;\n                }\n            }\n            // strip all whitespace from domains\n            if (result) {\n                result.semantic = result.semantic.replace(/\\s+/g, '');\n            }\n            return result;\n        }());\n    }\n\n    // addr-spec       =   local-part \"@\" domain\n    function addrSpec() {\n        return wrap('addr-spec', and(\n            localPart, literal('@'), domain\n        )());\n    }\n\n    // 3.6.2 Originator Fields\n    // Below we only parse the field body, not the name of the field\n    // like \"From:\", \"Sender:\", or \"Reply-To:\". Other libraries that\n    // parse email headers can parse those and defer to these productions\n    // for the \"RFC 5322\" part.\n\n    // RFC 6854 2.1. Replacement of RFC 5322, Section 3.6.2. Originator Fields\n    // from = \"From:\" (mailbox-list / address-list) CRLF\n    function fromSpec() {\n        return wrap('from', or(\n            mailboxList,\n            addressList\n        )());\n    }\n\n    // RFC 6854 2.1. Replacement of RFC 5322, Section 3.6.2. Originator Fields\n    // sender = \"Sender:\" (mailbox / address) CRLF\n    function senderSpec() {\n        return wrap('sender', or(\n            mailbox,\n            address\n        )());\n    }\n\n    // RFC 6854 2.1. Replacement of RFC 5322, Section 3.6.2. Originator Fields\n    // reply-to = \"Reply-To:\" address-list CRLF\n    function replyToSpec() {\n        return wrap('reply-to', addressList());\n    }\n\n    // 4.1. Miscellaneous Obsolete Tokens\n\n    //  obs-NO-WS-CTL   =   %d1-8 /            ; US-ASCII control\n    //                      %d11 /             ;  characters that do not\n    //                      %d12 /             ;  include the carriage\n    //                      %d14-31 /          ;  return, line feed, and\n    //                      %d127              ;  white space characters\n    function obsNoWsCtl() {\n        return opts.strict ? null : wrap('obs-NO-WS-CTL', compareToken(function (tok) {\n            var code = tok.charCodeAt(0);\n            return ((1 <= code && code <= 8) ||\n                    (11 === code || 12 === code) ||\n                    (14 <= code && code <= 31) ||\n                    (127 === code));\n        }));\n    }\n\n    // obs-ctext       =   obs-NO-WS-CTL\n    function obsCtext() { return opts.strict ? null : wrap('obs-ctext', obsNoWsCtl()); }\n\n    // obs-qtext       =   obs-NO-WS-CTL\n    function obsQtext() { return opts.strict ? null : wrap('obs-qtext', obsNoWsCtl()); }\n\n    // obs-qp          =   \"\\\" (%d0 / obs-NO-WS-CTL / LF / CR)\n    function obsQP() {\n        return opts.strict ? null : wrap('obs-qp', and(\n            literal('\\\\'),\n            or(literal('\\0'), obsNoWsCtl, lf, cr)\n        )());\n    }\n\n    // obs-phrase      =   word *(word / \".\" / CFWS)\n    function obsPhrase() {\n        if (opts.strict ) return null;\n        return opts.atInDisplayName ? wrap('obs-phrase', and(\n            word,\n            star(or(word, literal('.'), literal('@'), colwsp(cfws)))\n        )()) :\n        wrap('obs-phrase', and(\n            word,\n            star(or(word, literal('.'), colwsp(cfws)))\n        )());\n    }\n\n    // 4.2. Obsolete Folding White Space\n\n    // NOTE: read the errata http://www.rfc-editor.org/errata_search.php?rfc=5322&eid=1908\n    // obs-FWS         =   1*([CRLF] WSP)\n    function obsFws() {\n        return opts.strict ? null : wrap('obs-FWS', star(\n            and(invis(opt(crlf)), wsp),\n            1\n        )());\n    }\n\n    // 4.4. Obsolete Addressing\n\n    // obs-angle-addr  =   [CFWS] \"<\" obs-route addr-spec \">\" [CFWS]\n    function obsAngleAddr() {\n        return opts.strict ? null : wrap('obs-angle-addr', and(\n            invis(opt(cfws)),\n            literal('<'),\n            obsRoute,\n            addrSpec,\n            literal('>'),\n            invis(opt(cfws))\n        )());\n    }\n\n    // obs-route       =   obs-domain-list \":\"\n    function obsRoute() {\n        return opts.strict ? null : wrap('obs-route', and(\n            obsDomainList,\n            literal(':')\n        )());\n    }\n\n    //   obs-domain-list =   *(CFWS / \",\") \"@\" domain\n    //                       *(\",\" [CFWS] [\"@\" domain])\n    function obsDomainList() {\n        return opts.strict ? null : wrap('obs-domain-list', and(\n            star(or(invis(cfws), literal(','))),\n            literal('@'),\n            domain,\n            star(and(\n                literal(','),\n                invis(opt(cfws)),\n                opt(and(literal('@'), domain))\n            ))\n        )());\n    }\n\n    // obs-mbox-list   =   *([CFWS] \",\") mailbox *(\",\" [mailbox / CFWS])\n    function obsMboxList() {\n        return opts.strict ? null : wrap('obs-mbox-list', and(\n            star(and(\n                invis(opt(cfws)),\n                literal(',')\n            )),\n            mailbox,\n            star(and(\n                literal(','),\n                opt(and(\n                    mailbox,\n                    invis(cfws)\n                ))\n            ))\n        )());\n    }\n\n    // obs-addr-list   =   *([CFWS] \",\") address *(\",\" [address / CFWS])\n    function obsAddrList() {\n        return opts.strict ? null : wrap('obs-addr-list', and(\n            star(and(\n                invis(opt(cfws)),\n                literal(',')\n            )),\n            address,\n            star(and(\n                literal(','),\n                opt(and(\n                    address,\n                    invis(cfws)\n                ))\n            ))\n        )());\n    }\n\n    // obs-group-list  =   1*([CFWS] \",\") [CFWS]\n    function obsGroupList() {\n        return opts.strict ? null : wrap('obs-group-list', and(\n            star(and(\n                invis(opt(cfws)),\n                literal(',')\n            ), 1),\n            invis(opt(cfws))\n        )());\n    }\n\n    // obs-local-part = word *(\".\" word)\n    function obsLocalPart() {\n        return opts.strict ? null : wrap('obs-local-part', and(word, star(and(literal('.'), word)))());\n    }\n\n    // obs-domain       = atom *(\".\" atom)\n    function obsDomain() {\n        return opts.strict ? null : wrap('obs-domain', and(atom, star(and(literal('.'), atom)))());\n    }\n\n    // obs-dtext       =   obs-NO-WS-CTL / quoted-pair\n    function obsDtext() {\n        return opts.strict ? null : wrap('obs-dtext', or(obsNoWsCtl, quotedPair)());\n    }\n\n    /////////////////////////////////////////////////////\n\n    // ast analysis\n\n    function findNode(name, root) {\n        var i, stack, node;\n        if (root === null || root === undefined) { return null; }\n        stack = [root];\n        while (stack.length > 0) {\n            node = stack.pop();\n            if (node.name === name) {\n                return node;\n            }\n            for (i = node.children.length - 1; i >= 0; i -= 1) {\n                stack.push(node.children[i]);\n            }\n        }\n        return null;\n    }\n\n    function findAllNodes(name, root) {\n        var i, stack, node, result;\n        if (root === null || root === undefined) { return null; }\n        stack = [root];\n        result = [];\n        while (stack.length > 0) {\n            node = stack.pop();\n            if (node.name === name) {\n                result.push(node);\n            }\n            for (i = node.children.length - 1; i >= 0; i -= 1) {\n                stack.push(node.children[i]);\n            }\n        }\n        return result;\n    }\n\n    function findAllNodesNoChildren(names, root) {\n        var i, stack, node, result, namesLookup;\n        if (root === null || root === undefined) { return null; }\n        stack = [root];\n        result = [];\n        namesLookup = {};\n        for (i = 0; i < names.length; i += 1) {\n            namesLookup[names[i]] = true;\n        }\n\n        while (stack.length > 0) {\n            node = stack.pop();\n            if (node.name in namesLookup) {\n                result.push(node);\n                // don't look at children (hence findAllNodesNoChildren)\n            } else {\n                for (i = node.children.length - 1; i >= 0; i -= 1) {\n                    stack.push(node.children[i]);\n                }\n            }\n        }\n        return result;\n    }\n\n    function giveResult(ast) {\n        var addresses, groupsAndMailboxes, i, groupOrMailbox, result;\n        if (ast === null) {\n            return null;\n        }\n        addresses = [];\n\n        // An address is a 'group' (i.e. a list of mailboxes) or a 'mailbox'.\n        groupsAndMailboxes = findAllNodesNoChildren(['group', 'mailbox'], ast);\n        for (i = 0; i <  groupsAndMailboxes.length; i += 1) {\n            groupOrMailbox = groupsAndMailboxes[i];\n            if (groupOrMailbox.name === 'group') {\n                addresses.push(giveResultGroup(groupOrMailbox));\n            } else if (groupOrMailbox.name === 'mailbox') {\n                addresses.push(giveResultMailbox(groupOrMailbox));\n            }\n        }\n\n        result = {\n            ast: ast,\n            addresses: addresses,\n        };\n        if (opts.simple) {\n            result = simplifyResult(result);\n        }\n        if (opts.oneResult) {\n            return oneResult(result);\n        }\n        if (opts.simple) {\n            return result && result.addresses;\n        } else {\n            return result;\n        }\n    }\n\n    function giveResultGroup(group) {\n        var i;\n        var groupName = findNode('display-name', group);\n        var groupResultMailboxes = [];\n        var mailboxes = findAllNodesNoChildren(['mailbox'], group);\n        for (i = 0; i < mailboxes.length; i += 1) {\n            groupResultMailboxes.push(giveResultMailbox(mailboxes[i]));\n        }\n        return {\n            node: group,\n            parts: {\n                name: groupName,\n            },\n            type: group.name, // 'group'\n            name: grabSemantic(groupName),\n            addresses: groupResultMailboxes,\n        };\n    }\n\n    function giveResultMailbox(mailbox) {\n        var name = findNode('display-name', mailbox);\n        var aspec = findNode('addr-spec', mailbox);\n        var cfws = findAllNodes('cfws', mailbox);\n        var comments = findAllNodesNoChildren(['comment'], mailbox);\n\n\n        var local = findNode('local-part', aspec);\n        var domain = findNode('domain', aspec);\n        return {\n            node: mailbox,\n            parts: {\n                name: name,\n                address: aspec,\n                local: local,\n                domain: domain,\n                comments: cfws\n            },\n            type: mailbox.name, // 'mailbox'\n            name: grabSemantic(name),\n            address: grabSemantic(aspec),\n            local: grabSemantic(local),\n            domain: grabSemantic(domain),\n            comments: concatComments(comments),\n            groupName: grabSemantic(mailbox.groupName),\n        };\n    }\n\n    function grabSemantic(n) {\n        return n !== null && n !== undefined ? n.semantic : null;\n    }\n\n    function simplifyResult(result) {\n        var i;\n        if (result && result.addresses) {\n            for (i = 0; i < result.addresses.length; i += 1) {\n                delete result.addresses[i].node;\n            }\n        }\n        return result;\n    }\n\n    function concatComments(comments) {\n        var result = '';\n        if (comments) {\n            for (var i = 0; i < comments.length; i += 1) {\n                result += grabSemantic(comments[i]);\n            }\n        }\n        return result;\n    }\n\n    function oneResult(result) {\n        if (!result) { return null; }\n        if (!opts.partial && result.addresses.length > 1) { return null; }\n        return result.addresses && result.addresses[0];\n    }\n\n    /////////////////////////////////////////////////////\n\n    var parseString, pos, len, parsed, startProduction;\n\n    opts = handleOpts(opts, {});\n    if (opts === null) { return null; }\n\n    parseString = opts.input;\n\n    startProduction = {\n        'address': address,\n        'address-list': addressList,\n        'angle-addr': angleAddr,\n        'from': fromSpec,\n        'group': group,\n        'mailbox': mailbox,\n        'mailbox-list': mailboxList,\n        'reply-to': replyToSpec,\n        'sender': senderSpec,\n    }[opts.startAt] || addressList;\n\n    if (!opts.strict) {\n        initialize();\n        opts.strict = true;\n        parsed = startProduction(parseString);\n        if (opts.partial || !inStr()) {\n            return giveResult(parsed);\n        }\n        opts.strict = false;\n    }\n\n    initialize();\n    parsed = startProduction(parseString);\n    if (!opts.partial && inStr()) { return null; }\n    return giveResult(parsed);\n}\n\nfunction parseOneAddressSimple(opts) {\n    return parse5322(handleOpts(opts, {\n        oneResult: true,\n        rfc6532: true,\n        simple: true,\n        startAt: 'address-list',\n    }));\n}\n\nfunction parseAddressListSimple(opts) {\n    return parse5322(handleOpts(opts, {\n        rfc6532: true,\n        simple: true,\n        startAt: 'address-list',\n    }));\n}\n\nfunction parseFromSimple(opts) {\n    return parse5322(handleOpts(opts, {\n        rfc6532: true,\n        simple: true,\n        startAt: 'from',\n    }));\n}\n\nfunction parseSenderSimple(opts) {\n    return parse5322(handleOpts(opts, {\n        oneResult: true,\n        rfc6532: true,\n        simple: true,\n        startAt: 'sender',\n    }));\n}\n\nfunction parseReplyToSimple(opts) {\n    return parse5322(handleOpts(opts, {\n        rfc6532: true,\n        simple: true,\n        startAt: 'reply-to',\n    }));\n}\n\nfunction handleOpts(opts, defs) {\n    function isString(str) {\n        return Object.prototype.toString.call(str) === '[object String]';\n    }\n\n    function isObject(o) {\n        return o === Object(o);\n    }\n\n    function isNullUndef(o) {\n        return o === null || o === undefined;\n    }\n\n    var defaults, o;\n\n    if (isString(opts)) {\n        opts = { input: opts };\n    } else if (!isObject(opts)) {\n        return null;\n    }\n\n    if (!isString(opts.input)) { return null; }\n    if (!defs) { return null; }\n\n    defaults = {\n        oneResult: false,\n        partial: false,\n        rejectTLD: false,\n        rfc6532: false,\n        simple: false,\n        startAt: 'address-list',\n        strict: false,\n        atInDisplayName: false\n    };\n\n    for (o in defaults) {\n        if (isNullUndef(opts[o])) {\n            opts[o] = !isNullUndef(defs[o]) ? defs[o] : defaults[o];\n        }\n    }\n    return opts;\n}\n\nparse5322.parseOneAddress = parseOneAddressSimple;\nparse5322.parseAddressList = parseAddressListSimple;\nparse5322.parseFrom = parseFromSimple;\nparse5322.parseSender = parseSenderSimple;\nparse5322.parseReplyTo = parseReplyToSimple;\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = parse5322;\n} else {\n    global.emailAddresses = parse5322;\n}\n\n}(this));\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport emailAddresses from 'email-addresses';\n\nimport enums from '../enums';\nimport util from '../util';\nimport defaultConfig from '../config';\n\n/**\n * Implementation of the User ID Packet (Tag 13)\n *\n * A User ID packet consists of UTF-8 text that is intended to represent\n * the name and email address of the key holder.  By convention, it\n * includes an RFC 2822 [RFC2822] mail name-addr, but there are no\n * restrictions on its content.  The packet length in the header\n * specifies the length of the User ID.\n */\nclass UserIDPacket {\n  static get tag() {\n    return enums.packet.userID;\n  }\n\n  constructor() {\n    /** A string containing the user id. Usually in the form\n     * John Doe <john@example.com>\n     * @type {String}\n     */\n    this.userID = '';\n\n    this.name = '';\n    this.email = '';\n    this.comment = '';\n  }\n\n  /**\n   * Create UserIDPacket instance from object\n   * @param {Object} userID - Object specifying userID name, email and comment\n   * @returns {UserIDPacket}\n   * @static\n   */\n  static fromObject(userID) {\n    if (util.isString(userID) ||\n      (userID.name && !util.isString(userID.name)) ||\n      (userID.email && !util.isEmailAddress(userID.email)) ||\n      (userID.comment && !util.isString(userID.comment))) {\n      throw new Error('Invalid user ID format');\n    }\n    const packet = new UserIDPacket();\n    Object.assign(packet, userID);\n    const components = [];\n    if (packet.name) components.push(packet.name);\n    if (packet.comment) components.push(`(${packet.comment})`);\n    if (packet.email) components.push(`<${packet.email}>`);\n    packet.userID = components.join(' ');\n    return packet;\n  }\n\n  /**\n   * Parsing function for a user id packet (tag 13).\n   * @param {Uint8Array} input - Payload of a tag 13 packet\n   */\n  read(bytes, config = defaultConfig) {\n    const userID = util.decodeUTF8(bytes);\n    if (userID.length > config.maxUserIDLength) {\n      throw new Error('User ID string is too long');\n    }\n    try {\n      const { name, address: email, comments } = emailAddresses.parseOneAddress({ input: userID, atInDisplayName: true });\n      this.comment = comments.replace(/^\\(|\\)$/g, '');\n      this.name = name;\n      this.email = email;\n    } catch (e) {}\n    this.userID = userID;\n  }\n\n  /**\n   * Creates a binary representation of the user id packet\n   * @returns {Uint8Array} Binary representation.\n   */\n  write() {\n    return util.encodeUTF8(this.userID);\n  }\n\n  equals(otherUserID) {\n    return otherUserID && otherUserID.userID === this.userID;\n  }\n}\n\nexport default UserIDPacket;\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport SecretKeyPacket from './secret_key';\nimport enums from '../enums';\nimport defaultConfig from '../config';\n\n/**\n * A Secret-Subkey packet (tag 7) is the subkey analog of the Secret\n * Key packet and has exactly the same format.\n * @extends SecretKeyPacket\n */\nclass SecretSubkeyPacket extends SecretKeyPacket {\n  static get tag() {\n    return enums.packet.secretSubkey;\n  }\n\n  /**\n   * @param {Date} [date] - Creation date\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   */\n  constructor(date = new Date(), config = defaultConfig) {\n    super(date, config);\n  }\n}\n\nexport default SecretSubkeyPacket;\n","/**\n * @fileoverview Provides helpers methods for key module\n * @module key/helper\n * @private\n */\n\nimport {\n  SecretKeyPacket,\n  SecretSubkeyPacket,\n  SignaturePacket\n} from '../packet';\nimport enums from '../enums';\nimport crypto from '../crypto';\nimport util from '../util';\nimport defaultConfig from '../config';\n\nexport async function generateSecretSubkey(options, config) {\n  const secretSubkeyPacket = new SecretSubkeyPacket(options.date, config);\n  secretSubkeyPacket.packets = null;\n  secretSubkeyPacket.algorithm = enums.write(enums.publicKey, options.algorithm);\n  await secretSubkeyPacket.generate(options.rsaBits, options.curve);\n  await secretSubkeyPacket.computeFingerprintAndKeyID();\n  return secretSubkeyPacket;\n}\n\nexport async function generateSecretKey(options, config) {\n  const secretKeyPacket = new SecretKeyPacket(options.date, config);\n  secretKeyPacket.packets = null;\n  secretKeyPacket.algorithm = enums.write(enums.publicKey, options.algorithm);\n  await secretKeyPacket.generate(options.rsaBits, options.curve, options.config);\n  await secretKeyPacket.computeFingerprintAndKeyID();\n  return secretKeyPacket;\n}\n\n/**\n * Returns the valid and non-expired signature that has the latest creation date, while ignoring signatures created in the future.\n * @param {Array<SignaturePacket>} signatures - List of signatures\n * @param {PublicKeyPacket|PublicSubkeyPacket} publicKey - Public key packet to verify the signature\n * @param {Date} date - Use the given date instead of the current time\n * @param {Object} config - full configuration\n * @returns {Promise<SignaturePacket>} The latest valid signature.\n * @async\n */\nexport async function getLatestValidSignature(signatures, publicKey, signatureType, dataToVerify, date = new Date(), config) {\n  let latestValid;\n  let exception;\n  for (let i = signatures.length - 1; i >= 0; i--) {\n    try {\n      if (\n        (!latestValid || signatures[i].created >= latestValid.created)\n      ) {\n        await signatures[i].verify(publicKey, signatureType, dataToVerify, date, undefined, config);\n        latestValid = signatures[i];\n      }\n    } catch (e) {\n      exception = e;\n    }\n  }\n  if (!latestValid) {\n    throw util.wrapError(\n      `Could not find valid ${enums.read(enums.signature, signatureType)} signature in key ${publicKey.getKeyID().toHex()}`\n        .replace('certGeneric ', 'self-')\n        .replace(/([a-z])([A-Z])/g, (_, $1, $2) => $1 + ' ' + $2.toLowerCase()),\n      exception);\n  }\n  return latestValid;\n}\n\nexport function isDataExpired(keyPacket, signature, date = new Date()) {\n  const normDate = util.normalizeDate(date);\n  if (normDate !== null) {\n    const expirationTime = getKeyExpirationTime(keyPacket, signature);\n    return !(keyPacket.created <= normDate && normDate < expirationTime);\n  }\n  return false;\n}\n\n/**\n * Create Binding signature to the key according to the {@link https://tools.ietf.org/html/rfc4880#section-5.2.1}\n * @param {SecretSubkeyPacket} subkey - Subkey key packet\n * @param {SecretKeyPacket} primaryKey - Primary key packet\n * @param {Object} options\n * @param {Object} config - Full configuration\n */\nexport async function createBindingSignature(subkey, primaryKey, options, config) {\n  const dataToSign = {};\n  dataToSign.key = primaryKey;\n  dataToSign.bind = subkey;\n  const signatureProperties = { signatureType: enums.signature.subkeyBinding };\n  if (options.sign) {\n    signatureProperties.keyFlags = [enums.keyFlags.signData];\n    signatureProperties.embeddedSignature = await createSignaturePacket(dataToSign, null, subkey, {\n      signatureType: enums.signature.keyBinding\n    }, options.date, undefined, undefined, undefined, config);\n  } else {\n    signatureProperties.keyFlags = [enums.keyFlags.encryptCommunication | enums.keyFlags.encryptStorage];\n  }\n  if (options.keyExpirationTime > 0) {\n    signatureProperties.keyExpirationTime = options.keyExpirationTime;\n    signatureProperties.keyNeverExpires = false;\n  }\n  const subkeySignaturePacket = await createSignaturePacket(dataToSign, null, primaryKey, signatureProperties, options.date, undefined, undefined, undefined, config);\n  return subkeySignaturePacket;\n}\n\n/**\n * Returns the preferred signature hash algorithm of a key\n * @param {Key} [key] - The key to get preferences from\n * @param {SecretKeyPacket|SecretSubkeyPacket} keyPacket - key packet used for signing\n * @param {Date} [date] - Use the given date for verification instead of the current time\n * @param {Object} [userID] - User ID\n * @param {Object} config - full configuration\n * @returns {Promise<enums.hash>}\n * @async\n */\nexport async function getPreferredHashAlgo(key, keyPacket, date = new Date(), userID = {}, config) {\n  let hashAlgo = config.preferredHashAlgorithm;\n  let prefAlgo = hashAlgo;\n  if (key) {\n    const primaryUser = await key.getPrimaryUser(date, userID, config);\n    if (primaryUser.selfCertification.preferredHashAlgorithms) {\n      [prefAlgo] = primaryUser.selfCertification.preferredHashAlgorithms;\n      hashAlgo = crypto.hash.getHashByteLength(hashAlgo) <= crypto.hash.getHashByteLength(prefAlgo) ?\n        prefAlgo : hashAlgo;\n    }\n  }\n  switch (keyPacket.algorithm) {\n    case enums.publicKey.ecdsa:\n    case enums.publicKey.eddsaLegacy:\n    case enums.publicKey.ed25519:\n      prefAlgo = crypto.getPreferredCurveHashAlgo(keyPacket.algorithm, keyPacket.publicParams.oid);\n  }\n  return crypto.hash.getHashByteLength(hashAlgo) <= crypto.hash.getHashByteLength(prefAlgo) ?\n    prefAlgo : hashAlgo;\n}\n\n/**\n * Returns the preferred symmetric/aead/compression algorithm for a set of keys\n * @param {'symmetric'|'aead'|'compression'} type - Type of preference to return\n * @param {Array<Key>} [keys] - Set of keys\n * @param {Date} [date] - Use the given date for verification instead of the current time\n * @param {Array} [userIDs] - User IDs\n * @param {Object} [config] - Full configuration, defaults to openpgp.config\n * @returns {Promise<module:enums.symmetric|aead|compression>} Preferred algorithm\n * @async\n */\nexport async function getPreferredAlgo(type, keys = [], date = new Date(), userIDs = [], config = defaultConfig) {\n  const defaultAlgo = { // these are all must-implement in rfc4880bis\n    'symmetric': enums.symmetric.aes128,\n    'aead': enums.aead.eax,\n    'compression': enums.compression.uncompressed\n  }[type];\n  const preferredSenderAlgo = {\n    'symmetric': config.preferredSymmetricAlgorithm,\n    'aead': config.preferredAEADAlgorithm,\n    'compression': config.preferredCompressionAlgorithm\n  }[type];\n  const prefPropertyName = {\n    'symmetric': 'preferredSymmetricAlgorithms',\n    'aead': 'preferredAEADAlgorithms',\n    'compression': 'preferredCompressionAlgorithms'\n  }[type];\n\n  // if preferredSenderAlgo appears in the prefs of all recipients, we pick it\n  // otherwise we use the default algo\n  // if no keys are available, preferredSenderAlgo is returned\n  const senderAlgoSupport = await Promise.all(keys.map(async function(key, i) {\n    const primaryUser = await key.getPrimaryUser(date, userIDs[i], config);\n    const recipientPrefs = primaryUser.selfCertification[prefPropertyName];\n    return !!recipientPrefs && recipientPrefs.indexOf(preferredSenderAlgo) >= 0;\n  }));\n  return senderAlgoSupport.every(Boolean) ? preferredSenderAlgo : defaultAlgo;\n}\n\n/**\n * Create signature packet\n * @param {Object} dataToSign - Contains packets to be signed\n * @param {PrivateKey} privateKey - key to get preferences from\n * @param  {SecretKeyPacket|\n *          SecretSubkeyPacket}              signingKeyPacket secret key packet for signing\n * @param {Object} [signatureProperties] - Properties to write on the signature packet before signing\n * @param {Date} [date] - Override the creationtime of the signature\n * @param {Object} [userID] - User ID\n * @param {Array} [notations] - Notation Data to add to the signature, e.g. [{ name: 'test@example.org', value: new TextEncoder().encode('test'), humanReadable: true, critical: false }]\n * @param {Object} [detached] - Whether to create a detached signature packet\n * @param {Object} config - full configuration\n * @returns {Promise<SignaturePacket>} Signature packet.\n */\nexport async function createSignaturePacket(dataToSign, privateKey, signingKeyPacket, signatureProperties, date, userID, notations = [], detached = false, config) {\n  if (signingKeyPacket.isDummy()) {\n    throw new Error('Cannot sign with a gnu-dummy key.');\n  }\n  if (!signingKeyPacket.isDecrypted()) {\n    throw new Error('Signing key is not decrypted.');\n  }\n  const signaturePacket = new SignaturePacket();\n  Object.assign(signaturePacket, signatureProperties);\n  signaturePacket.publicKeyAlgorithm = signingKeyPacket.algorithm;\n  signaturePacket.hashAlgorithm = await getPreferredHashAlgo(privateKey, signingKeyPacket, date, userID, config);\n  signaturePacket.rawNotations = notations;\n  await signaturePacket.sign(signingKeyPacket, dataToSign, date, detached);\n  return signaturePacket;\n}\n\n/**\n * Merges signatures from source[attr] to dest[attr]\n * @param {Object} source\n * @param {Object} dest\n * @param {String} attr\n * @param {Date} [date] - date to use for signature expiration check, instead of the current time\n * @param {Function} [checkFn] - signature only merged if true\n */\nexport async function mergeSignatures(source, dest, attr, date = new Date(), checkFn) {\n  source = source[attr];\n  if (source) {\n    if (!dest[attr].length) {\n      dest[attr] = source;\n    } else {\n      await Promise.all(source.map(async function(sourceSig) {\n        if (!sourceSig.isExpired(date) && (!checkFn || await checkFn(sourceSig)) &&\n            !dest[attr].some(function(destSig) {\n              return util.equalsUint8Array(destSig.writeParams(), sourceSig.writeParams());\n            })) {\n          dest[attr].push(sourceSig);\n        }\n      }));\n    }\n  }\n}\n\n/**\n * Checks if a given certificate or binding signature is revoked\n * @param  {SecretKeyPacket|\n *          PublicKeyPacket}        primaryKey   The primary key packet\n * @param {Object} dataToVerify - The data to check\n * @param {Array<SignaturePacket>} revocations - The revocation signatures to check\n * @param {SignaturePacket} signature - The certificate or signature to check\n * @param  {PublicSubkeyPacket|\n *          SecretSubkeyPacket|\n *          PublicKeyPacket|\n *          SecretKeyPacket} key, optional The key packet to verify the signature, instead of the primary key\n * @param {Date} date - Use the given date instead of the current time\n * @param {Object} config - Full configuration\n * @returns {Promise<Boolean>} True if the signature revokes the data.\n * @async\n */\nexport async function isDataRevoked(primaryKey, signatureType, dataToVerify, revocations, signature, key, date = new Date(), config) {\n  key = key || primaryKey;\n  const revocationKeyIDs = [];\n  await Promise.all(revocations.map(async function(revocationSignature) {\n    try {\n      if (\n        // Note: a third-party revocation signature could legitimately revoke a\n        // self-signature if the signature has an authorized revocation key.\n        // However, we don't support passing authorized revocation keys, nor\n        // verifying such revocation signatures. Instead, we indicate an error\n        // when parsing a key with an authorized revocation key, and ignore\n        // third-party revocation signatures here. (It could also be revoking a\n        // third-party key certification, which should only affect\n        // `verifyAllCertifications`.)\n        !signature || revocationSignature.issuerKeyID.equals(signature.issuerKeyID)\n      ) {\n        await revocationSignature.verify(\n          key, signatureType, dataToVerify, config.revocationsExpire ? date : null, false, config\n        );\n\n        // TODO get an identifier of the revoked object instead\n        revocationKeyIDs.push(revocationSignature.issuerKeyID);\n      }\n    } catch (e) {}\n  }));\n  // TODO further verify that this is the signature that should be revoked\n  if (signature) {\n    signature.revoked = revocationKeyIDs.some(keyID => keyID.equals(signature.issuerKeyID)) ? true :\n      signature.revoked || false;\n    return signature.revoked;\n  }\n  return revocationKeyIDs.length > 0;\n}\n\n/**\n * Returns key expiration time based on the given certification signature.\n * The expiration time of the signature is ignored.\n * @param {PublicSubkeyPacket|PublicKeyPacket} keyPacket - key to check\n * @param {SignaturePacket} signature - signature to process\n * @returns {Date|Infinity} expiration time or infinity if the key does not expire\n */\nexport function getKeyExpirationTime(keyPacket, signature) {\n  let expirationTime;\n  // check V4 expiration time\n  if (signature.keyNeverExpires === false) {\n    expirationTime = keyPacket.created.getTime() + signature.keyExpirationTime * 1000;\n  }\n  return expirationTime ? new Date(expirationTime) : Infinity;\n}\n\n/**\n * Returns whether aead is supported by all keys in the set\n * @param {Array<Key>} keys - Set of keys\n * @param {Date} [date] - Use the given date for verification instead of the current time\n * @param {Array} [userIDs] - User IDs\n * @param {Object} config - full configuration\n * @returns {Promise<Boolean>}\n * @async\n */\nexport async function isAEADSupported(keys, date = new Date(), userIDs = [], config = defaultConfig) {\n  let supported = true;\n  // TODO replace when Promise.some or Promise.any are implemented\n  await Promise.all(keys.map(async function(key, i) {\n    const primaryUser = await key.getPrimaryUser(date, userIDs[i], config);\n    if (!primaryUser.selfCertification.features ||\n        !(primaryUser.selfCertification.features[0] & enums.features.aead)) {\n      supported = false;\n    }\n  }));\n  return supported;\n}\n\nexport function sanitizeKeyOptions(options, subkeyDefaults = {}) {\n  options.type = options.type || subkeyDefaults.type;\n  options.curve = options.curve || subkeyDefaults.curve;\n  options.rsaBits = options.rsaBits || subkeyDefaults.rsaBits;\n  options.keyExpirationTime = options.keyExpirationTime !== undefined ? options.keyExpirationTime : subkeyDefaults.keyExpirationTime;\n  options.passphrase = util.isString(options.passphrase) ? options.passphrase : subkeyDefaults.passphrase;\n  options.date = options.date || subkeyDefaults.date;\n\n  options.sign = options.sign || false;\n\n  switch (options.type) {\n    case 'ecc':\n      try {\n        options.curve = enums.write(enums.curve, options.curve);\n      } catch (e) {\n        throw new Error('Unknown curve');\n      }\n      if (options.curve === enums.curve.ed25519Legacy || options.curve === enums.curve.curve25519Legacy) {\n        options.curve = options.sign ? enums.curve.ed25519Legacy : enums.curve.curve25519Legacy;\n      }\n      if (options.sign) {\n        options.algorithm = options.curve === enums.curve.ed25519Legacy ? enums.publicKey.eddsaLegacy : enums.publicKey.ecdsa;\n      } else {\n        options.algorithm = enums.publicKey.ecdh;\n      }\n      break;\n    case 'rsa':\n      options.algorithm = enums.publicKey.rsaEncryptSign;\n      break;\n    default:\n      throw new Error(`Unsupported key type ${options.type}`);\n  }\n  return options;\n}\n\nexport function isValidSigningKeyPacket(keyPacket, signature) {\n  const keyAlgo = keyPacket.algorithm;\n  return keyAlgo !== enums.publicKey.rsaEncrypt &&\n    keyAlgo !== enums.publicKey.elgamal &&\n    keyAlgo !== enums.publicKey.ecdh &&\n    keyAlgo !== enums.publicKey.x25519 &&\n    (!signature.keyFlags ||\n      (signature.keyFlags[0] & enums.keyFlags.signData) !== 0);\n}\n\nexport function isValidEncryptionKeyPacket(keyPacket, signature) {\n  const keyAlgo = keyPacket.algorithm;\n  return keyAlgo !== enums.publicKey.dsa &&\n    keyAlgo !== enums.publicKey.rsaSign &&\n    keyAlgo !== enums.publicKey.ecdsa &&\n    keyAlgo !== enums.publicKey.eddsaLegacy &&\n    keyAlgo !== enums.publicKey.ed25519 &&\n    (!signature.keyFlags ||\n      (signature.keyFlags[0] & enums.keyFlags.encryptCommunication) !== 0 ||\n      (signature.keyFlags[0] & enums.keyFlags.encryptStorage) !== 0);\n}\n\nexport function isValidDecryptionKeyPacket(signature, config) {\n  if (config.allowInsecureDecryptionWithSigningKeys) {\n    // This is only relevant for RSA keys, all other signing algorithms cannot decrypt\n    return true;\n  }\n\n  return !signature.keyFlags ||\n    (signature.keyFlags[0] & enums.keyFlags.encryptCommunication) !== 0 ||\n    (signature.keyFlags[0] & enums.keyFlags.encryptStorage) !== 0;\n}\n\n/**\n * Check key against blacklisted algorithms and minimum strength requirements.\n * @param {SecretKeyPacket|PublicKeyPacket|\n *        SecretSubkeyPacket|PublicSubkeyPacket} keyPacket\n * @param {Config} config\n * @throws {Error} if the key packet does not meet the requirements\n */\nexport function checkKeyRequirements(keyPacket, config) {\n  const keyAlgo = enums.write(enums.publicKey, keyPacket.algorithm);\n  const algoInfo = keyPacket.getAlgorithmInfo();\n  if (config.rejectPublicKeyAlgorithms.has(keyAlgo)) {\n    throw new Error(`${algoInfo.algorithm} keys are considered too weak.`);\n  }\n  switch (keyAlgo) {\n    case enums.publicKey.rsaEncryptSign:\n    case enums.publicKey.rsaSign:\n    case enums.publicKey.rsaEncrypt:\n      if (algoInfo.bits < config.minRSABits) {\n        throw new Error(`RSA keys shorter than ${config.minRSABits} bits are considered too weak.`);\n      }\n      break;\n    case enums.publicKey.ecdsa:\n    case enums.publicKey.eddsaLegacy:\n    case enums.publicKey.ecdh:\n      if (config.rejectCurves.has(algoInfo.curve)) {\n        throw new Error(`Support for ${algoInfo.algorithm} keys using curve ${algoInfo.curve} is disabled.`);\n      }\n      break;\n    default:\n      break;\n  }\n}\n","/**\n * @module key/User\n * @private\n */\n\nimport enums from '../enums';\nimport util from '../util';\nimport { PacketList } from '../packet';\nimport { mergeSignatures, isDataRevoked, createSignaturePacket } from './helper';\nimport defaultConfig from '../config';\n\n/**\n * Class that represents an user ID or attribute packet and the relevant signatures.\n  * @param {UserIDPacket|UserAttributePacket} userPacket - packet containing the user info\n  * @param {Key} mainKey - reference to main Key object containing the primary key and subkeys that the user is associated with\n */\nclass User {\n  constructor(userPacket, mainKey) {\n    this.userID = userPacket.constructor.tag === enums.packet.userID ? userPacket : null;\n    this.userAttribute = userPacket.constructor.tag === enums.packet.userAttribute ? userPacket : null;\n    this.selfCertifications = [];\n    this.otherCertifications = [];\n    this.revocationSignatures = [];\n    this.mainKey = mainKey;\n  }\n\n  /**\n   * Transforms structured user data to packetlist\n   * @returns {PacketList}\n   */\n  toPacketList() {\n    const packetlist = new PacketList();\n    packetlist.push(this.userID || this.userAttribute);\n    packetlist.push(...this.revocationSignatures);\n    packetlist.push(...this.selfCertifications);\n    packetlist.push(...this.otherCertifications);\n    return packetlist;\n  }\n\n  /**\n   * Shallow clone\n   * @returns {User}\n   */\n  clone() {\n    const user = new User(this.userID || this.userAttribute, this.mainKey);\n    user.selfCertifications = [...this.selfCertifications];\n    user.otherCertifications = [...this.otherCertifications];\n    user.revocationSignatures = [...this.revocationSignatures];\n    return user;\n  }\n\n  /**\n   * Generate third-party certifications over this user and its primary key\n   * @param {Array<PrivateKey>} signingKeys - Decrypted private keys for signing\n   * @param {Date} [date] - Date to use as creation date of the certificate, instead of the current time\n   * @param {Object} config - Full configuration\n   * @returns {Promise<User>} New user with new certifications.\n   * @async\n   */\n  async certify(signingKeys, date, config) {\n    const primaryKey = this.mainKey.keyPacket;\n    const dataToSign = {\n      userID: this.userID,\n      userAttribute: this.userAttribute,\n      key: primaryKey\n    };\n    const user = new User(dataToSign.userID || dataToSign.userAttribute, this.mainKey);\n    user.otherCertifications = await Promise.all(signingKeys.map(async function(privateKey) {\n      if (!privateKey.isPrivate()) {\n        throw new Error('Need private key for signing');\n      }\n      if (privateKey.hasSameFingerprintAs(primaryKey)) {\n        throw new Error(\"The user's own key can only be used for self-certifications\");\n      }\n      const signingKey = await privateKey.getSigningKey(undefined, date, undefined, config);\n      return createSignaturePacket(dataToSign, privateKey, signingKey.keyPacket, {\n        // Most OpenPGP implementations use generic certification (0x10)\n        signatureType: enums.signature.certGeneric,\n        keyFlags: [enums.keyFlags.certifyKeys | enums.keyFlags.signData]\n      }, date, undefined, undefined, undefined, config);\n    }));\n    await user.update(this, date, config);\n    return user;\n  }\n\n  /**\n   * Checks if a given certificate of the user is revoked\n   * @param {SignaturePacket} certificate - The certificate to verify\n   * @param  {PublicSubkeyPacket|\n   *          SecretSubkeyPacket|\n   *          PublicKeyPacket|\n   *          SecretKeyPacket} [keyPacket] The key packet to verify the signature, instead of the primary key\n   * @param {Date} [date] - Use the given date for verification instead of the current time\n   * @param {Object} config - Full configuration\n   * @returns {Promise<Boolean>} True if the certificate is revoked.\n   * @async\n   */\n  async isRevoked(certificate, keyPacket, date = new Date(), config = defaultConfig) {\n    const primaryKey = this.mainKey.keyPacket;\n    return isDataRevoked(primaryKey, enums.signature.certRevocation, {\n      key: primaryKey,\n      userID: this.userID,\n      userAttribute: this.userAttribute\n    }, this.revocationSignatures, certificate, keyPacket, date, config);\n  }\n\n  /**\n   * Verifies the user certificate.\n   * @param {SignaturePacket} certificate - A certificate of this user\n   * @param {Array<PublicKey>} verificationKeys - Array of keys to verify certificate signatures\n   * @param {Date} [date] - Use the given date instead of the current time\n   * @param {Object} config - Full configuration\n   * @returns {Promise<true|null>} true if the certificate could be verified, or null if the verification keys do not correspond to the certificate\n   * @throws if the user certificate is invalid.\n   * @async\n   */\n  async verifyCertificate(certificate, verificationKeys, date = new Date(), config) {\n    const that = this;\n    const primaryKey = this.mainKey.keyPacket;\n    const dataToVerify = {\n      userID: this.userID,\n      userAttribute: this.userAttribute,\n      key: primaryKey\n    };\n    const { issuerKeyID } = certificate;\n    const issuerKeys = verificationKeys.filter(key => key.getKeys(issuerKeyID).length > 0);\n    if (issuerKeys.length === 0) {\n      return null;\n    }\n    await Promise.all(issuerKeys.map(async key => {\n      const signingKey = await key.getSigningKey(issuerKeyID, certificate.created, undefined, config);\n      if (certificate.revoked || await that.isRevoked(certificate, signingKey.keyPacket, date, config)) {\n        throw new Error('User certificate is revoked');\n      }\n      try {\n        await certificate.verify(signingKey.keyPacket, enums.signature.certGeneric, dataToVerify, date, undefined, config);\n      } catch (e) {\n        throw util.wrapError('User certificate is invalid', e);\n      }\n    }));\n    return true;\n  }\n\n  /**\n   * Verifies all user certificates\n   * @param {Array<PublicKey>} verificationKeys - Array of keys to verify certificate signatures\n   * @param {Date} [date] - Use the given date instead of the current time\n   * @param {Object} config - Full configuration\n   * @returns {Promise<Array<{\n   *   keyID: module:type/keyid~KeyID,\n   *   valid: Boolean | null\n   * }>>} List of signer's keyID and validity of signature.\n   *      Signature validity is null if the verification keys do not correspond to the certificate.\n   * @async\n   */\n  async verifyAllCertifications(verificationKeys, date = new Date(), config) {\n    const that = this;\n    const certifications = this.selfCertifications.concat(this.otherCertifications);\n    return Promise.all(certifications.map(async certification => ({\n      keyID: certification.issuerKeyID,\n      valid: await that.verifyCertificate(certification, verificationKeys, date, config).catch(() => false)\n    })));\n  }\n\n  /**\n   * Verify User. Checks for existence of self signatures, revocation signatures\n   * and validity of self signature.\n   * @param {Date} date - Use the given date instead of the current time\n   * @param {Object} config - Full configuration\n   * @returns {Promise<true>} Status of user.\n   * @throws {Error} if there are no valid self signatures.\n   * @async\n   */\n  async verify(date = new Date(), config) {\n    if (!this.selfCertifications.length) {\n      throw new Error('No self-certifications found');\n    }\n    const that = this;\n    const primaryKey = this.mainKey.keyPacket;\n    const dataToVerify = {\n      userID: this.userID,\n      userAttribute: this.userAttribute,\n      key: primaryKey\n    };\n    // TODO replace when Promise.some or Promise.any are implemented\n    let exception;\n    for (let i = this.selfCertifications.length - 1; i >= 0; i--) {\n      try {\n        const selfCertification = this.selfCertifications[i];\n        if (selfCertification.revoked || await that.isRevoked(selfCertification, undefined, date, config)) {\n          throw new Error('Self-certification is revoked');\n        }\n        try {\n          await selfCertification.verify(primaryKey, enums.signature.certGeneric, dataToVerify, date, undefined, config);\n        } catch (e) {\n          throw util.wrapError('Self-certification is invalid', e);\n        }\n        return true;\n      } catch (e) {\n        exception = e;\n      }\n    }\n    throw exception;\n  }\n\n  /**\n   * Update user with new components from specified user\n   * @param {User} sourceUser - Source user to merge\n   * @param {Date} date - Date to verify the validity of signatures\n   * @param {Object} config - Full configuration\n   * @returns {Promise<undefined>}\n   * @async\n   */\n  async update(sourceUser, date, config) {\n    const primaryKey = this.mainKey.keyPacket;\n    const dataToVerify = {\n      userID: this.userID,\n      userAttribute: this.userAttribute,\n      key: primaryKey\n    };\n    // self signatures\n    await mergeSignatures(sourceUser, this, 'selfCertifications', date, async function(srcSelfSig) {\n      try {\n        await srcSelfSig.verify(primaryKey, enums.signature.certGeneric, dataToVerify, date, false, config);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    });\n    // other signatures\n    await mergeSignatures(sourceUser, this, 'otherCertifications', date);\n    // revocation signatures\n    await mergeSignatures(sourceUser, this, 'revocationSignatures', date, function(srcRevSig) {\n      return isDataRevoked(primaryKey, enums.signature.certRevocation, dataToVerify, [srcRevSig], undefined, undefined, date, config);\n    });\n  }\n\n  /**\n   * Revokes the user\n   * @param {SecretKeyPacket} primaryKey - decrypted private primary key for revocation\n   * @param {Object} reasonForRevocation - optional, object indicating the reason for revocation\n   * @param  {module:enums.reasonForRevocation} reasonForRevocation.flag optional, flag indicating the reason for revocation\n   * @param  {String} reasonForRevocation.string optional, string explaining the reason for revocation\n   * @param {Date} date - optional, override the creationtime of the revocation signature\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<User>} New user with revocation signature.\n   * @async\n   */\n  async revoke(\n    primaryKey,\n    {\n      flag: reasonForRevocationFlag = enums.reasonForRevocation.noReason,\n      string: reasonForRevocationString = ''\n    } = {},\n    date = new Date(),\n    config = defaultConfig\n  ) {\n    const dataToSign = {\n      userID: this.userID,\n      userAttribute: this.userAttribute,\n      key: primaryKey\n    };\n    const user = new User(dataToSign.userID || dataToSign.userAttribute, this.mainKey);\n    user.revocationSignatures.push(await createSignaturePacket(dataToSign, null, primaryKey, {\n      signatureType: enums.signature.certRevocation,\n      reasonForRevocationFlag: enums.write(enums.reasonForRevocation, reasonForRevocationFlag),\n      reasonForRevocationString\n    }, date, undefined, undefined, false, config));\n    await user.update(this);\n    return user;\n  }\n}\n\nexport default User;\n","/**\n * @module key/Subkey\n * @private\n */\n\nimport enums from '../enums';\nimport * as helper from './helper';\nimport { PacketList } from '../packet';\nimport defaultConfig from '../config';\n\n/**\n * Class that represents a subkey packet and the relevant signatures.\n * @borrows PublicSubkeyPacket#getKeyID as Subkey#getKeyID\n * @borrows PublicSubkeyPacket#getFingerprint as Subkey#getFingerprint\n * @borrows PublicSubkeyPacket#hasSameFingerprintAs as Subkey#hasSameFingerprintAs\n * @borrows PublicSubkeyPacket#getAlgorithmInfo as Subkey#getAlgorithmInfo\n * @borrows PublicSubkeyPacket#getCreationTime as Subkey#getCreationTime\n * @borrows PublicSubkeyPacket#isDecrypted as Subkey#isDecrypted\n */\nclass Subkey {\n  /**\n   * @param {SecretSubkeyPacket|PublicSubkeyPacket} subkeyPacket - subkey packet to hold in the Subkey\n   * @param {Key} mainKey - reference to main Key object, containing the primary key packet corresponding to the subkey\n   */\n  constructor(subkeyPacket, mainKey) {\n    this.keyPacket = subkeyPacket;\n    this.bindingSignatures = [];\n    this.revocationSignatures = [];\n    this.mainKey = mainKey;\n  }\n\n  /**\n   * Transforms structured subkey data to packetlist\n   * @returns {PacketList}\n   */\n  toPacketList() {\n    const packetlist = new PacketList();\n    packetlist.push(this.keyPacket);\n    packetlist.push(...this.revocationSignatures);\n    packetlist.push(...this.bindingSignatures);\n    return packetlist;\n  }\n\n  /**\n   * Shallow clone\n   * @return {Subkey}\n   */\n  clone() {\n    const subkey = new Subkey(this.keyPacket, this.mainKey);\n    subkey.bindingSignatures = [...this.bindingSignatures];\n    subkey.revocationSignatures = [...this.revocationSignatures];\n    return subkey;\n  }\n\n  /**\n   * Checks if a binding signature of a subkey is revoked\n   * @param {SignaturePacket} signature - The binding signature to verify\n   * @param  {PublicSubkeyPacket|\n   *          SecretSubkeyPacket|\n   *          PublicKeyPacket|\n   *          SecretKeyPacket} key, optional The key to verify the signature\n   * @param {Date} [date] - Use the given date for verification instead of the current time\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Boolean>} True if the binding signature is revoked.\n   * @async\n   */\n  async isRevoked(signature, key, date = new Date(), config = defaultConfig) {\n    const primaryKey = this.mainKey.keyPacket;\n    return helper.isDataRevoked(\n      primaryKey, enums.signature.subkeyRevocation, {\n        key: primaryKey,\n        bind: this.keyPacket\n      }, this.revocationSignatures, signature, key, date, config\n    );\n  }\n\n  /**\n   * Verify subkey. Checks for revocation signatures, expiration time\n   * and valid binding signature.\n   * @param {Date} date - Use the given date instead of the current time\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<SignaturePacket>}\n   * @throws {Error}           if the subkey is invalid.\n   * @async\n   */\n  async verify(date = new Date(), config = defaultConfig) {\n    const primaryKey = this.mainKey.keyPacket;\n    const dataToVerify = { key: primaryKey, bind: this.keyPacket };\n    // check subkey binding signatures\n    const bindingSignature = await helper.getLatestValidSignature(this.bindingSignatures, primaryKey, enums.signature.subkeyBinding, dataToVerify, date, config);\n    // check binding signature is not revoked\n    if (bindingSignature.revoked || await this.isRevoked(bindingSignature, null, date, config)) {\n      throw new Error('Subkey is revoked');\n    }\n    // check for expiration time\n    if (helper.isDataExpired(this.keyPacket, bindingSignature, date)) {\n      throw new Error('Subkey is expired');\n    }\n    return bindingSignature;\n  }\n\n  /**\n   * Returns the expiration time of the subkey or Infinity if key does not expire.\n   * Returns null if the subkey is invalid.\n   * @param {Date} date - Use the given date instead of the current time\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Date | Infinity | null>}\n   * @async\n   */\n  async getExpirationTime(date = new Date(), config = defaultConfig) {\n    const primaryKey = this.mainKey.keyPacket;\n    const dataToVerify = { key: primaryKey, bind: this.keyPacket };\n    let bindingSignature;\n    try {\n      bindingSignature = await helper.getLatestValidSignature(this.bindingSignatures, primaryKey, enums.signature.subkeyBinding, dataToVerify, date, config);\n    } catch (e) {\n      return null;\n    }\n    const keyExpiry = helper.getKeyExpirationTime(this.keyPacket, bindingSignature);\n    const sigExpiry = bindingSignature.getExpirationTime();\n    return keyExpiry < sigExpiry ? keyExpiry : sigExpiry;\n  }\n\n  /**\n   * Update subkey with new components from specified subkey\n   * @param {Subkey} subkey - Source subkey to merge\n   * @param {Date} [date] - Date to verify validity of signatures\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @throws {Error} if update failed\n   * @async\n   */\n  async update(subkey, date = new Date(), config = defaultConfig) {\n    const primaryKey = this.mainKey.keyPacket;\n    if (!this.hasSameFingerprintAs(subkey)) {\n      throw new Error('Subkey update method: fingerprints of subkeys not equal');\n    }\n    // key packet\n    if (this.keyPacket.constructor.tag === enums.packet.publicSubkey &&\n        subkey.keyPacket.constructor.tag === enums.packet.secretSubkey) {\n      this.keyPacket = subkey.keyPacket;\n    }\n    // update missing binding signatures\n    const that = this;\n    const dataToVerify = { key: primaryKey, bind: that.keyPacket };\n    await helper.mergeSignatures(subkey, this, 'bindingSignatures', date, async function(srcBindSig) {\n      for (let i = 0; i < that.bindingSignatures.length; i++) {\n        if (that.bindingSignatures[i].issuerKeyID.equals(srcBindSig.issuerKeyID)) {\n          if (srcBindSig.created > that.bindingSignatures[i].created) {\n            that.bindingSignatures[i] = srcBindSig;\n          }\n          return false;\n        }\n      }\n      try {\n        await srcBindSig.verify(primaryKey, enums.signature.subkeyBinding, dataToVerify, date, undefined, config);\n        return true;\n      } catch (e) {\n        return false;\n      }\n    });\n    // revocation signatures\n    await helper.mergeSignatures(subkey, this, 'revocationSignatures', date, function(srcRevSig) {\n      return helper.isDataRevoked(primaryKey, enums.signature.subkeyRevocation, dataToVerify, [srcRevSig], undefined, undefined, date, config);\n    });\n  }\n\n  /**\n   * Revokes the subkey\n   * @param {SecretKeyPacket} primaryKey - decrypted private primary key for revocation\n   * @param {Object} reasonForRevocation - optional, object indicating the reason for revocation\n   * @param  {module:enums.reasonForRevocation} reasonForRevocation.flag optional, flag indicating the reason for revocation\n   * @param  {String} reasonForRevocation.string optional, string explaining the reason for revocation\n   * @param {Date} date - optional, override the creationtime of the revocation signature\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Subkey>} New subkey with revocation signature.\n   * @async\n   */\n  async revoke(\n    primaryKey,\n    {\n      flag: reasonForRevocationFlag = enums.reasonForRevocation.noReason,\n      string: reasonForRevocationString = ''\n    } = {},\n    date = new Date(),\n    config = defaultConfig\n  ) {\n    const dataToSign = { key: primaryKey, bind: this.keyPacket };\n    const subkey = new Subkey(this.keyPacket, this.mainKey);\n    subkey.revocationSignatures.push(await helper.createSignaturePacket(dataToSign, null, primaryKey, {\n      signatureType: enums.signature.subkeyRevocation,\n      reasonForRevocationFlag: enums.write(enums.reasonForRevocation, reasonForRevocationFlag),\n      reasonForRevocationString\n    }, date, undefined, undefined, false, config));\n    await subkey.update(this);\n    return subkey;\n  }\n\n  hasSameFingerprintAs(other) {\n    return this.keyPacket.hasSameFingerprintAs(other.keyPacket || other);\n  }\n}\n\n['getKeyID', 'getFingerprint', 'getAlgorithmInfo', 'getCreationTime', 'isDecrypted'].forEach(name => {\n  Subkey.prototype[name] =\n    function() {\n      return this.keyPacket[name]();\n    };\n});\n\nexport default Subkey;\n","// GPG4Browsers - An OpenPGP implementation in javascript\n// Copyright (C) 2011 Recurity Labs GmbH\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport { armor, unarmor } from '../encoding/armor';\nimport {\n  PacketList,\n  SignaturePacket\n} from '../packet';\nimport defaultConfig from '../config';\nimport enums from '../enums';\nimport util from '../util';\nimport User from './user';\nimport Subkey from './subkey';\nimport * as helper from './helper';\nimport { UnparseablePacket } from '../packet/packet';\n\n// A key revocation certificate can contain the following packets\nconst allowedRevocationPackets = /*#__PURE__*/ util.constructAllowedPackets([SignaturePacket]);\nconst mainKeyPacketTags = new Set([enums.packet.publicKey, enums.packet.privateKey]);\nconst keyPacketTags = new Set([\n  enums.packet.publicKey, enums.packet.privateKey,\n  enums.packet.publicSubkey, enums.packet.privateSubkey\n]);\n\n/**\n * Abstract class that represents an OpenPGP key. Must contain a primary key.\n * Can contain additional subkeys, signatures, user ids, user attributes.\n * @borrows PublicKeyPacket#getKeyID as Key#getKeyID\n * @borrows PublicKeyPacket#getFingerprint as Key#getFingerprint\n * @borrows PublicKeyPacket#hasSameFingerprintAs as Key#hasSameFingerprintAs\n * @borrows PublicKeyPacket#getAlgorithmInfo as Key#getAlgorithmInfo\n * @borrows PublicKeyPacket#getCreationTime as Key#getCreationTime\n */\nclass Key {\n  /**\n   * Transforms packetlist to structured key data\n   * @param {PacketList} packetlist - The packets that form a key\n   * @param {Set<enums.packet>} disallowedPackets - disallowed packet tags\n   */\n  packetListToStructure(packetlist, disallowedPackets = new Set()) {\n    let user;\n    let primaryKeyID;\n    let subkey;\n    let ignoreUntil;\n\n    for (const packet of packetlist) {\n\n      if (packet instanceof UnparseablePacket) {\n        const isUnparseableKeyPacket = keyPacketTags.has(packet.tag);\n        if (isUnparseableKeyPacket && !ignoreUntil) {\n          // Since non-key packets apply to the preceding key packet, if a (sub)key is Unparseable we must\n          // discard all non-key packets that follow, until another (sub)key packet is found.\n          if (mainKeyPacketTags.has(packet.tag)) {\n            ignoreUntil = mainKeyPacketTags;\n          } else {\n            ignoreUntil = keyPacketTags;\n          }\n        }\n        continue;\n      }\n\n      const tag = packet.constructor.tag;\n      if (ignoreUntil) {\n        if (!ignoreUntil.has(tag)) continue;\n        ignoreUntil = null;\n      }\n      if (disallowedPackets.has(tag)) {\n        throw new Error(`Unexpected packet type: ${tag}`);\n      }\n      switch (tag) {\n        case enums.packet.publicKey:\n        case enums.packet.secretKey:\n          if (this.keyPacket) {\n            throw new Error('Key block contains multiple keys');\n          }\n          this.keyPacket = packet;\n          primaryKeyID = this.getKeyID();\n          if (!primaryKeyID) {\n            throw new Error('Missing Key ID');\n          }\n          break;\n        case enums.packet.userID:\n        case enums.packet.userAttribute:\n          user = new User(packet, this);\n          this.users.push(user);\n          break;\n        case enums.packet.publicSubkey:\n        case enums.packet.secretSubkey:\n          user = null;\n          subkey = new Subkey(packet, this);\n          this.subkeys.push(subkey);\n          break;\n        case enums.packet.signature:\n          switch (packet.signatureType) {\n            case enums.signature.certGeneric:\n            case enums.signature.certPersona:\n            case enums.signature.certCasual:\n            case enums.signature.certPositive:\n              if (!user) {\n                util.printDebug('Dropping certification signatures without preceding user packet');\n                continue;\n              }\n              if (packet.issuerKeyID.equals(primaryKeyID)) {\n                user.selfCertifications.push(packet);\n              } else {\n                user.otherCertifications.push(packet);\n              }\n              break;\n            case enums.signature.certRevocation:\n              if (user) {\n                user.revocationSignatures.push(packet);\n              } else {\n                this.directSignatures.push(packet);\n              }\n              break;\n            case enums.signature.key:\n              this.directSignatures.push(packet);\n              break;\n            case enums.signature.subkeyBinding:\n              if (!subkey) {\n                util.printDebug('Dropping subkey binding signature without preceding subkey packet');\n                continue;\n              }\n              subkey.bindingSignatures.push(packet);\n              break;\n            case enums.signature.keyRevocation:\n              this.revocationSignatures.push(packet);\n              break;\n            case enums.signature.subkeyRevocation:\n              if (!subkey) {\n                util.printDebug('Dropping subkey revocation signature without preceding subkey packet');\n                continue;\n              }\n              subkey.revocationSignatures.push(packet);\n              break;\n          }\n          break;\n      }\n    }\n  }\n\n  /**\n   * Transforms structured key data to packetlist\n   * @returns {PacketList} The packets that form a key.\n   */\n  toPacketList() {\n    const packetlist = new PacketList();\n    packetlist.push(this.keyPacket);\n    packetlist.push(...this.revocationSignatures);\n    packetlist.push(...this.directSignatures);\n    this.users.map(user => packetlist.push(...user.toPacketList()));\n    this.subkeys.map(subkey => packetlist.push(...subkey.toPacketList()));\n    return packetlist;\n  }\n\n  /**\n   * Clones the key object. The copy is shallow, as it references the same packet objects as the original. However, if the top-level API is used, the two key instances are effectively independent.\n   * @param {Boolean} [clonePrivateParams=false] Only relevant for private keys: whether the secret key paramenters should be deeply copied. This is needed if e.g. `encrypt()` is to be called either on the clone or the original key.\n   * @returns {Promise<Key>} Clone of the key.\n   */\n  clone(clonePrivateParams = false) {\n    const key = new this.constructor(this.toPacketList());\n    if (clonePrivateParams) {\n      key.getKeys().forEach(k => {\n        // shallow clone the key packets\n        k.keyPacket = Object.create(\n          Object.getPrototypeOf(k.keyPacket),\n          Object.getOwnPropertyDescriptors(k.keyPacket)\n        );\n        if (!k.keyPacket.isDecrypted()) return;\n        // deep clone the private params, which are cleared during encryption\n        const privateParams = {};\n        Object.keys(k.keyPacket.privateParams).forEach(name => {\n          privateParams[name] = new Uint8Array(k.keyPacket.privateParams[name]);\n        });\n        k.keyPacket.privateParams = privateParams;\n      });\n    }\n    return key;\n  }\n\n  /**\n   * Returns an array containing all public or private subkeys matching keyID;\n   * If no keyID is given, returns all subkeys.\n   * @param {type/keyID} [keyID] - key ID to look for\n   * @returns {Array<Subkey>} array of subkeys\n   */\n  getSubkeys(keyID = null) {\n    const subkeys = this.subkeys.filter(subkey => (\n      !keyID || subkey.getKeyID().equals(keyID, true)\n    ));\n    return subkeys;\n  }\n\n  /**\n   * Returns an array containing all public or private keys matching keyID.\n   * If no keyID is given, returns all keys, starting with the primary key.\n   * @param {type/keyid~KeyID} [keyID] - key ID to look for\n   * @returns {Array<Key|Subkey>} array of keys\n   */\n  getKeys(keyID = null) {\n    const keys = [];\n    if (!keyID || this.getKeyID().equals(keyID, true)) {\n      keys.push(this);\n    }\n    return keys.concat(this.getSubkeys(keyID));\n  }\n\n  /**\n   * Returns key IDs of all keys\n   * @returns {Array<module:type/keyid~KeyID>}\n   */\n  getKeyIDs() {\n    return this.getKeys().map(key => key.getKeyID());\n  }\n\n  /**\n   * Returns userIDs\n   * @returns {Array<string>} Array of userIDs.\n   */\n  getUserIDs() {\n    return this.users.map(user => {\n      return user.userID ? user.userID.userID : null;\n    }).filter(userID => userID !== null);\n  }\n\n  /**\n   * Returns binary encoded key\n   * @returns {Uint8Array} Binary key.\n   */\n  write() {\n    return this.toPacketList().write();\n  }\n\n  /**\n   * Returns last created key or key by given keyID that is available for signing and verification\n   * @param  {module:type/keyid~KeyID} [keyID] - key ID of a specific key to retrieve\n   * @param  {Date} [date] - use the fiven date date to  to check key validity instead of the current date\n   * @param  {Object} [userID] - filter keys for the given user ID\n   * @param  {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Key|Subkey>} signing key\n   * @throws if no valid signing key was found\n   * @async\n   */\n  async getSigningKey(keyID = null, date = new Date(), userID = {}, config = defaultConfig) {\n    await this.verifyPrimaryKey(date, userID, config);\n    const primaryKey = this.keyPacket;\n    const subkeys = this.subkeys.slice().sort((a, b) => b.keyPacket.created - a.keyPacket.created);\n    let exception;\n    for (const subkey of subkeys) {\n      if (!keyID || subkey.getKeyID().equals(keyID)) {\n        try {\n          await subkey.verify(date, config);\n          const dataToVerify = { key: primaryKey, bind: subkey.keyPacket };\n          const bindingSignature = await helper.getLatestValidSignature(\n            subkey.bindingSignatures, primaryKey, enums.signature.subkeyBinding, dataToVerify, date, config\n          );\n          if (!helper.isValidSigningKeyPacket(subkey.keyPacket, bindingSignature)) {\n            continue;\n          }\n          if (!bindingSignature.embeddedSignature) {\n            throw new Error('Missing embedded signature');\n          }\n          // verify embedded signature\n          await helper.getLatestValidSignature(\n            [bindingSignature.embeddedSignature], subkey.keyPacket, enums.signature.keyBinding, dataToVerify, date, config\n          );\n          helper.checkKeyRequirements(subkey.keyPacket, config);\n          return subkey;\n        } catch (e) {\n          exception = e;\n        }\n      }\n    }\n\n    try {\n      const primaryUser = await this.getPrimaryUser(date, userID, config);\n      if ((!keyID || primaryKey.getKeyID().equals(keyID)) &&\n          helper.isValidSigningKeyPacket(primaryKey, primaryUser.selfCertification, config)) {\n        helper.checkKeyRequirements(primaryKey, config);\n        return this;\n      }\n    } catch (e) {\n      exception = e;\n    }\n    throw util.wrapError('Could not find valid signing key packet in key ' + this.getKeyID().toHex(), exception);\n  }\n\n  /**\n   * Returns last created key or key by given keyID that is available for encryption or decryption\n   * @param  {module:type/keyid~KeyID} [keyID] - key ID of a specific key to retrieve\n   * @param  {Date}   [date] - use the fiven date date to  to check key validity instead of the current date\n   * @param  {Object} [userID] - filter keys for the given user ID\n   * @param  {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Key|Subkey>} encryption key\n   * @throws if no valid encryption key was found\n   * @async\n   */\n  async getEncryptionKey(keyID, date = new Date(), userID = {}, config = defaultConfig) {\n    await this.verifyPrimaryKey(date, userID, config);\n    const primaryKey = this.keyPacket;\n    // V4: by convention subkeys are preferred for encryption service\n    const subkeys = this.subkeys.slice().sort((a, b) => b.keyPacket.created - a.keyPacket.created);\n    let exception;\n    for (const subkey of subkeys) {\n      if (!keyID || subkey.getKeyID().equals(keyID)) {\n        try {\n          await subkey.verify(date, config);\n          const dataToVerify = { key: primaryKey, bind: subkey.keyPacket };\n          const bindingSignature = await helper.getLatestValidSignature(subkey.bindingSignatures, primaryKey, enums.signature.subkeyBinding, dataToVerify, date, config);\n          if (helper.isValidEncryptionKeyPacket(subkey.keyPacket, bindingSignature)) {\n            helper.checkKeyRequirements(subkey.keyPacket, config);\n            return subkey;\n          }\n        } catch (e) {\n          exception = e;\n        }\n      }\n    }\n\n    try {\n      // if no valid subkey for encryption, evaluate primary key\n      const primaryUser = await this.getPrimaryUser(date, userID, config);\n      if ((!keyID || primaryKey.getKeyID().equals(keyID)) &&\n          helper.isValidEncryptionKeyPacket(primaryKey, primaryUser.selfCertification)) {\n        helper.checkKeyRequirements(primaryKey, config);\n        return this;\n      }\n    } catch (e) {\n      exception = e;\n    }\n    throw util.wrapError('Could not find valid encryption key packet in key ' + this.getKeyID().toHex(), exception);\n  }\n\n  /**\n   * Checks if a signature on a key is revoked\n   * @param {SignaturePacket} signature - The signature to verify\n   * @param  {PublicSubkeyPacket|\n   *          SecretSubkeyPacket|\n   *          PublicKeyPacket|\n   *          SecretKeyPacket} key, optional The key to verify the signature\n   * @param {Date} [date] - Use the given date for verification, instead of the current time\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Boolean>} True if the certificate is revoked.\n   * @async\n   */\n  async isRevoked(signature, key, date = new Date(), config = defaultConfig) {\n    return helper.isDataRevoked(\n      this.keyPacket, enums.signature.keyRevocation, { key: this.keyPacket }, this.revocationSignatures, signature, key, date, config\n    );\n  }\n\n  /**\n   * Verify primary key. Checks for revocation signatures, expiration time\n   * and valid self signature. Throws if the primary key is invalid.\n   * @param {Date} [date] - Use the given date for verification instead of the current time\n   * @param {Object} [userID] - User ID\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @throws {Error} If key verification failed\n   * @async\n   */\n  async verifyPrimaryKey(date = new Date(), userID = {}, config = defaultConfig) {\n    const primaryKey = this.keyPacket;\n    // check for key revocation signatures\n    if (await this.isRevoked(null, null, date, config)) {\n      throw new Error('Primary key is revoked');\n    }\n    // check for valid, unrevoked, unexpired self signature\n    const { selfCertification } = await this.getPrimaryUser(date, userID, config);\n    // check for expiration time in binding signatures\n    if (helper.isDataExpired(primaryKey, selfCertification, date)) {\n      throw new Error('Primary key is expired');\n    }\n    // check for expiration time in direct signatures\n    const directSignature = await helper.getLatestValidSignature(\n      this.directSignatures, primaryKey, enums.signature.key, { key: primaryKey }, date, config\n    ).catch(() => {}); // invalid signatures are discarded, to avoid breaking the key\n\n    if (directSignature && helper.isDataExpired(primaryKey, directSignature, date)) {\n      throw new Error('Primary key is expired');\n    }\n  }\n\n  /**\n   * Returns the expiration date of the primary key, considering self-certifications and direct-key signatures.\n   * Returns `Infinity` if the key doesn't expire, or `null` if the key is revoked or invalid.\n   * @param  {Object} [userID] - User ID to consider instead of the primary user\n   * @param  {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Date | Infinity | null>}\n   * @async\n   */\n  async getExpirationTime(userID, config = defaultConfig) {\n    let primaryKeyExpiry;\n    try {\n      const { selfCertification } = await this.getPrimaryUser(null, userID, config);\n      const selfSigKeyExpiry = helper.getKeyExpirationTime(this.keyPacket, selfCertification);\n      const selfSigExpiry = selfCertification.getExpirationTime();\n      const directSignature = await helper.getLatestValidSignature(\n        this.directSignatures, this.keyPacket, enums.signature.key, { key: this.keyPacket }, null, config\n      ).catch(() => {});\n      if (directSignature) {\n        const directSigKeyExpiry = helper.getKeyExpirationTime(this.keyPacket, directSignature);\n        // We do not support the edge case where the direct signature expires, since it would invalidate the corresponding key expiration,\n        // causing a discountinous validy period for the key\n        primaryKeyExpiry = Math.min(selfSigKeyExpiry, selfSigExpiry, directSigKeyExpiry);\n      } else {\n        primaryKeyExpiry = selfSigKeyExpiry < selfSigExpiry ? selfSigKeyExpiry : selfSigExpiry;\n      }\n    } catch (e) {\n      primaryKeyExpiry = null;\n    }\n\n    return util.normalizeDate(primaryKeyExpiry);\n  }\n\n\n  /**\n   * Returns primary user and most significant (latest valid) self signature\n   * - if multiple primary users exist, returns the one with the latest self signature\n   * - otherwise, returns the user with the latest self signature\n   * @param {Date} [date] - Use the given date for verification instead of the current time\n   * @param {Object} [userID] - User ID to get instead of the primary user, if it exists\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<{\n   *   user: User,\n   *   selfCertification: SignaturePacket\n   * }>} The primary user and the self signature\n   * @async\n   */\n  async getPrimaryUser(date = new Date(), userID = {}, config = defaultConfig) {\n    const primaryKey = this.keyPacket;\n    const users = [];\n    let exception;\n    for (let i = 0; i < this.users.length; i++) {\n      try {\n        const user = this.users[i];\n        if (!user.userID) {\n          continue;\n        }\n        if (\n          (userID.name !== undefined && user.userID.name !== userID.name) ||\n          (userID.email !== undefined && user.userID.email !== userID.email) ||\n          (userID.comment !== undefined && user.userID.comment !== userID.comment)\n        ) {\n          throw new Error('Could not find user that matches that user ID');\n        }\n        const dataToVerify = { userID: user.userID, key: primaryKey };\n        const selfCertification = await helper.getLatestValidSignature(user.selfCertifications, primaryKey, enums.signature.certGeneric, dataToVerify, date, config);\n        users.push({ index: i, user, selfCertification });\n      } catch (e) {\n        exception = e;\n      }\n    }\n    if (!users.length) {\n      throw exception || new Error('Could not find primary user');\n    }\n    await Promise.all(users.map(async function (a) {\n      return a.selfCertification.revoked || a.user.isRevoked(a.selfCertification, null, date, config);\n    }));\n    // sort by primary user flag and signature creation time\n    const primaryUser = users.sort(function(a, b) {\n      const A = a.selfCertification;\n      const B = b.selfCertification;\n      return B.revoked - A.revoked || A.isPrimaryUserID - B.isPrimaryUserID || A.created - B.created;\n    }).pop();\n    const { user, selfCertification: cert } = primaryUser;\n    if (cert.revoked || await user.isRevoked(cert, null, date, config)) {\n      throw new Error('Primary user is revoked');\n    }\n    return primaryUser;\n  }\n\n  /**\n   * Update key with new components from specified key with same key ID:\n   * users, subkeys, certificates are merged into the destination key,\n   * duplicates and expired signatures are ignored.\n   *\n   * If the source key is a private key and the destination key is public,\n   * a private key is returned.\n   * @param {Key} sourceKey - Source key to merge\n   * @param {Date} [date] - Date to verify validity of signatures and keys\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Key>} updated key\n   * @async\n   */\n  async update(sourceKey, date = new Date(), config = defaultConfig) {\n    if (!this.hasSameFingerprintAs(sourceKey)) {\n      throw new Error('Primary key fingerprints must be equal to update the key');\n    }\n    if (!this.isPrivate() && sourceKey.isPrivate()) {\n      // check for equal subkey packets\n      const equal = (this.subkeys.length === sourceKey.subkeys.length) &&\n            (this.subkeys.every(destSubkey => {\n              return sourceKey.subkeys.some(srcSubkey => {\n                return destSubkey.hasSameFingerprintAs(srcSubkey);\n              });\n            }));\n      if (!equal) {\n        throw new Error('Cannot update public key with private key if subkeys mismatch');\n      }\n\n      return sourceKey.update(this, config);\n    }\n    // from here on, either:\n    // - destination key is private, source key is public\n    // - the keys are of the same type\n    // hence we don't need to convert the destination key type\n    const updatedKey = this.clone();\n    // revocation signatures\n    await helper.mergeSignatures(sourceKey, updatedKey, 'revocationSignatures', date, srcRevSig => {\n      return helper.isDataRevoked(updatedKey.keyPacket, enums.signature.keyRevocation, updatedKey, [srcRevSig], null, sourceKey.keyPacket, date, config);\n    });\n    // direct signatures\n    await helper.mergeSignatures(sourceKey, updatedKey, 'directSignatures', date);\n    // update users\n    await Promise.all(sourceKey.users.map(async srcUser => {\n      // multiple users with the same ID/attribute are not explicitly disallowed by the spec\n      // hence we support them, just in case\n      const usersToUpdate = updatedKey.users.filter(dstUser => (\n        (srcUser.userID && srcUser.userID.equals(dstUser.userID)) ||\n        (srcUser.userAttribute && srcUser.userAttribute.equals(dstUser.userAttribute))\n      ));\n      if (usersToUpdate.length > 0) {\n        await Promise.all(\n          usersToUpdate.map(userToUpdate => userToUpdate.update(srcUser, date, config))\n        );\n      } else {\n        const newUser = srcUser.clone();\n        newUser.mainKey = updatedKey;\n        updatedKey.users.push(newUser);\n      }\n    }));\n    // update subkeys\n    await Promise.all(sourceKey.subkeys.map(async srcSubkey => {\n      // multiple subkeys with same fingerprint might be preset\n      const subkeysToUpdate = updatedKey.subkeys.filter(dstSubkey => (\n        dstSubkey.hasSameFingerprintAs(srcSubkey)\n      ));\n      if (subkeysToUpdate.length > 0) {\n        await Promise.all(\n          subkeysToUpdate.map(subkeyToUpdate => subkeyToUpdate.update(srcSubkey, date, config))\n        );\n      } else {\n        const newSubkey = srcSubkey.clone();\n        newSubkey.mainKey = updatedKey;\n        updatedKey.subkeys.push(newSubkey);\n      }\n    }));\n\n    return updatedKey;\n  }\n\n  /**\n   * Get revocation certificate from a revoked key.\n   *   (To get a revocation certificate for an unrevoked key, call revoke() first.)\n   * @param {Date} date - Use the given date instead of the current time\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<String>} Armored revocation certificate.\n   * @async\n   */\n  async getRevocationCertificate(date = new Date(), config = defaultConfig) {\n    const dataToVerify = { key: this.keyPacket };\n    const revocationSignature = await helper.getLatestValidSignature(this.revocationSignatures, this.keyPacket, enums.signature.keyRevocation, dataToVerify, date, config);\n    const packetlist = new PacketList();\n    packetlist.push(revocationSignature);\n    return armor(enums.armor.publicKey, packetlist.write(), null, null, 'This is a revocation certificate');\n  }\n\n  /**\n   * Applies a revocation certificate to a key\n   * This adds the first signature packet in the armored text to the key,\n   * if it is a valid revocation signature.\n   * @param {String} revocationCertificate - armored revocation certificate\n   * @param {Date} [date] - Date to verify the certificate\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Key>} Revoked key.\n   * @async\n   */\n  async applyRevocationCertificate(revocationCertificate, date = new Date(), config = defaultConfig) {\n    const input = await unarmor(revocationCertificate, config);\n    const packetlist = await PacketList.fromBinary(input.data, allowedRevocationPackets, config);\n    const revocationSignature = packetlist.findPacket(enums.packet.signature);\n    if (!revocationSignature || revocationSignature.signatureType !== enums.signature.keyRevocation) {\n      throw new Error('Could not find revocation signature packet');\n    }\n    if (!revocationSignature.issuerKeyID.equals(this.getKeyID())) {\n      throw new Error('Revocation signature does not match key');\n    }\n    try {\n      await revocationSignature.verify(this.keyPacket, enums.signature.keyRevocation, { key: this.keyPacket }, date, undefined, config);\n    } catch (e) {\n      throw util.wrapError('Could not verify revocation signature', e);\n    }\n    const key = this.clone();\n    key.revocationSignatures.push(revocationSignature);\n    return key;\n  }\n\n  /**\n   * Signs primary user of key\n   * @param {Array<PrivateKey>} privateKeys - decrypted private keys for signing\n   * @param {Date} [date] - Use the given date for verification instead of the current time\n   * @param {Object} [userID] - User ID to get instead of the primary user, if it exists\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Key>} Key with new certificate signature.\n   * @async\n   */\n  async signPrimaryUser(privateKeys, date, userID, config = defaultConfig) {\n    const { index, user } = await this.getPrimaryUser(date, userID, config);\n    const userSign = await user.certify(privateKeys, date, config);\n    const key = this.clone();\n    key.users[index] = userSign;\n    return key;\n  }\n\n  /**\n   * Signs all users of key\n   * @param {Array<PrivateKey>} privateKeys - decrypted private keys for signing\n   * @param {Date} [date] - Use the given date for signing, instead of the current time\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Key>} Key with new certificate signature.\n   * @async\n   */\n  async signAllUsers(privateKeys, date = new Date(), config = defaultConfig) {\n    const key = this.clone();\n    key.users = await Promise.all(this.users.map(function(user) {\n      return user.certify(privateKeys, date, config);\n    }));\n    return key;\n  }\n\n  /**\n   * Verifies primary user of key\n   * - if no arguments are given, verifies the self certificates;\n   * - otherwise, verifies all certificates signed with given keys.\n   * @param {Array<PublicKey>} [verificationKeys] - array of keys to verify certificate signatures, instead of the primary key\n   * @param {Date} [date] - Use the given date for verification instead of the current time\n   * @param {Object} [userID] - User ID to get instead of the primary user, if it exists\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Array<{\n   *   keyID: module:type/keyid~KeyID,\n   *   valid: Boolean|null\n   * }>>} List of signer's keyID and validity of signature.\n   *      Signature validity is null if the verification keys do not correspond to the certificate.\n   * @async\n   */\n  async verifyPrimaryUser(verificationKeys, date = new Date(), userID, config = defaultConfig) {\n    const primaryKey = this.keyPacket;\n    const { user } = await this.getPrimaryUser(date, userID, config);\n    const results = verificationKeys ?\n      await user.verifyAllCertifications(verificationKeys, date, config) :\n      [{ keyID: primaryKey.getKeyID(), valid: await user.verify(date, config).catch(() => false) }];\n    return results;\n  }\n\n  /**\n   * Verifies all users of key\n   * - if no arguments are given, verifies the self certificates;\n   * - otherwise, verifies all certificates signed with given keys.\n   * @param {Array<PublicKey>} [verificationKeys] - array of keys to verify certificate signatures\n   * @param {Date} [date] - Use the given date for verification instead of the current time\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Array<{\n   *   userID: String,\n   *   keyID: module:type/keyid~KeyID,\n   *   valid: Boolean|null\n   * }>>} List of userID, signer's keyID and validity of signature.\n   *      Signature validity is null if the verification keys do not correspond to the certificate.\n   * @async\n   */\n  async verifyAllUsers(verificationKeys, date = new Date(), config = defaultConfig) {\n    const primaryKey = this.keyPacket;\n    const results = [];\n    await Promise.all(this.users.map(async user => {\n      const signatures = verificationKeys ?\n        await user.verifyAllCertifications(verificationKeys, date, config) :\n        [{ keyID: primaryKey.getKeyID(), valid: await user.verify(date, config).catch(() => false) }];\n\n      results.push(...signatures.map(\n        signature => ({\n          userID: user.userID ? user.userID.userID : null,\n          userAttribute: user.userAttribute,\n          keyID: signature.keyID,\n          valid: signature.valid\n        }))\n      );\n    }));\n    return results;\n  }\n}\n\n['getKeyID', 'getFingerprint', 'getAlgorithmInfo', 'getCreationTime', 'hasSameFingerprintAs'].forEach(name => {\n  Key.prototype[name] =\n  Subkey.prototype[name];\n});\n\nexport default Key;\n","// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport { armor } from '../encoding/armor';\nimport defaultConfig from '../config';\nimport enums from '../enums';\nimport Key from './key';\n\n/**\n * Class that represents an OpenPGP Public Key\n */\nclass PublicKey extends Key {\n  /**\n   * @param {PacketList} packetlist - The packets that form this key\n   */\n  constructor(packetlist) {\n    super();\n    this.keyPacket = null;\n    this.revocationSignatures = [];\n    this.directSignatures = [];\n    this.users = [];\n    this.subkeys = [];\n    if (packetlist) {\n      this.packetListToStructure(packetlist, new Set([enums.packet.secretKey, enums.packet.secretSubkey]));\n      if (!this.keyPacket) {\n        throw new Error('Invalid key: missing public-key packet');\n      }\n    }\n  }\n\n  /**\n   * Returns true if this is a private key\n   * @returns {false}\n   */\n  isPrivate() {\n    return false;\n  }\n\n  /**\n   * Returns key as public key (shallow copy)\n   * @returns {PublicKey} New public Key\n   */\n  toPublic() {\n    return this;\n  }\n\n  /**\n   * Returns ASCII armored text of key\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {ReadableStream<String>} ASCII armor.\n   */\n  armor(config = defaultConfig) {\n    return armor(enums.armor.publicKey, this.toPacketList().write(), undefined, undefined, undefined, config);\n  }\n}\n\nexport default PublicKey;\n\n","import PublicKey from './public_key';\nimport { armor } from '../encoding/armor';\nimport {\n  PacketList,\n  PublicKeyPacket,\n  PublicSubkeyPacket\n} from '../packet';\nimport defaultConfig from '../config';\nimport enums from '../enums';\nimport * as helper from './helper';\n\n/**\n * Class that represents an OpenPGP Private key\n */\nclass PrivateKey extends PublicKey {\n  /**\n * @param {PacketList} packetlist - The packets that form this key\n */\n  constructor(packetlist) {\n    super();\n    this.packetListToStructure(packetlist, new Set([enums.packet.publicKey, enums.packet.publicSubkey]));\n    if (!this.keyPacket) {\n      throw new Error('Invalid key: missing private-key packet');\n    }\n  }\n\n  /**\n   * Returns true if this is a private key\n   * @returns {Boolean}\n   */\n  isPrivate() {\n    return true;\n  }\n\n  /**\n   * Returns key as public key (shallow copy)\n   * @returns {PublicKey} New public Key\n   */\n  toPublic() {\n    const packetlist = new PacketList();\n    const keyPackets = this.toPacketList();\n    for (const keyPacket of keyPackets) {\n      switch (keyPacket.constructor.tag) {\n        case enums.packet.secretKey: {\n          const pubKeyPacket = PublicKeyPacket.fromSecretKeyPacket(keyPacket);\n          packetlist.push(pubKeyPacket);\n          break;\n        }\n        case enums.packet.secretSubkey: {\n          const pubSubkeyPacket = PublicSubkeyPacket.fromSecretSubkeyPacket(keyPacket);\n          packetlist.push(pubSubkeyPacket);\n          break;\n        }\n        default:\n          packetlist.push(keyPacket);\n      }\n    }\n    return new PublicKey(packetlist);\n  }\n\n  /**\n   * Returns ASCII armored text of key\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {ReadableStream<String>} ASCII armor.\n   */\n  armor(config = defaultConfig) {\n    return armor(enums.armor.privateKey, this.toPacketList().write(), undefined, undefined, undefined, config);\n  }\n\n  /**\n   * Returns all keys that are available for decryption, matching the keyID when given\n   * This is useful to retrieve keys for session key decryption\n   * @param  {module:type/keyid~KeyID} keyID, optional\n   * @param  {Date}              date, optional\n   * @param  {String}            userID, optional\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<Array<Key|Subkey>>} Array of decryption keys.\n   * @async\n   */\n  async getDecryptionKeys(keyID, date = new Date(), userID = {}, config = defaultConfig) {\n    const primaryKey = this.keyPacket;\n    const keys = [];\n    for (let i = 0; i < this.subkeys.length; i++) {\n      if (!keyID || this.subkeys[i].getKeyID().equals(keyID, true)) {\n        try {\n          const dataToVerify = { key: primaryKey, bind: this.subkeys[i].keyPacket };\n          const bindingSignature = await helper.getLatestValidSignature(this.subkeys[i].bindingSignatures, primaryKey, enums.signature.subkeyBinding, dataToVerify, date, config);\n          if (helper.isValidDecryptionKeyPacket(bindingSignature, config)) {\n            keys.push(this.subkeys[i]);\n          }\n        } catch (e) {}\n      }\n    }\n\n    // evaluate primary key\n    const primaryUser = await this.getPrimaryUser(date, userID, config);\n    if ((!keyID || primaryKey.getKeyID().equals(keyID, true)) &&\n        helper.isValidDecryptionKeyPacket(primaryUser.selfCertification, config)) {\n      keys.push(this);\n    }\n\n    return keys;\n  }\n\n  /**\n   * Returns true if the primary key or any subkey is decrypted.\n   * A dummy key is considered encrypted.\n   */\n  isDecrypted() {\n    return this.getKeys().some(({ keyPacket }) => keyPacket.isDecrypted());\n  }\n\n  /**\n   * Check whether the private and public primary key parameters correspond\n   * Together with verification of binding signatures, this guarantees key integrity\n   * In case of gnu-dummy primary key, it is enough to validate any signing subkeys\n   *   otherwise all encryption subkeys are validated\n   * If only gnu-dummy keys are found, we cannot properly validate so we throw an error\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @throws {Error} if validation was not successful and the key cannot be trusted\n   * @async\n   */\n  async validate(config = defaultConfig) {\n    if (!this.isPrivate()) {\n      throw new Error('Cannot validate a public key');\n    }\n\n    let signingKeyPacket;\n    if (!this.keyPacket.isDummy()) {\n      signingKeyPacket = this.keyPacket;\n    } else {\n      /**\n       * It is enough to validate any signing keys\n       * since its binding signatures are also checked\n       */\n      const signingKey = await this.getSigningKey(null, null, undefined, { ...config, rejectPublicKeyAlgorithms: new Set(), minRSABits: 0 });\n      // This could again be a dummy key\n      if (signingKey && !signingKey.keyPacket.isDummy()) {\n        signingKeyPacket = signingKey.keyPacket;\n      }\n    }\n\n    if (signingKeyPacket) {\n      return signingKeyPacket.validate();\n    } else {\n      const keys = this.getKeys();\n      const allDummies = keys.map(key => key.keyPacket.isDummy()).every(Boolean);\n      if (allDummies) {\n        throw new Error('Cannot validate an all-gnu-dummy key');\n      }\n\n      return Promise.all(keys.map(async key => key.keyPacket.validate()));\n    }\n  }\n\n  /**\n   * Clear private key parameters\n   */\n  clearPrivateParams() {\n    this.getKeys().forEach(({ keyPacket }) => {\n      if (keyPacket.isDecrypted()) {\n        keyPacket.clearPrivateParams();\n      }\n    });\n  }\n\n  /**\n   * Revokes the key\n   * @param {Object} reasonForRevocation - optional, object indicating the reason for revocation\n   * @param  {module:enums.reasonForRevocation} reasonForRevocation.flag optional, flag indicating the reason for revocation\n   * @param  {String} reasonForRevocation.string optional, string explaining the reason for revocation\n   * @param {Date} date - optional, override the creationtime of the revocation signature\n   * @param {Object} [config] - Full configuration, defaults to openpgp.config\n   * @returns {Promise<PrivateKey>} New key with revocation signature.\n   * @async\n   */\n  async revoke(\n    {\n      flag: reasonForRevocationFlag = enums.reasonForRevocation.noReason,\n      string: reasonForRevocationString = ''\n    } = {},\n    date = new Date(),\n    config = defaultConfig\n  ) {\n    if (!this.isPrivate()) {\n      throw new Error('Need private key for revoking');\n    }\n    const dataToSign = { key: this.keyPacket };\n    const key = this.clone();\n    key.revocationSignatures.push(await helper.createSignaturePacket(dataToSign, null, this.keyPacket, {\n      signatureType: enums.signature.keyRevocation,\n      reasonForRevocationFlag: enums.write(enums.reasonForRevocation, reasonForRevocationFlag),\n      reasonForRevocationString\n    }, date, undefined, undefined, undefined, config));\n    return key;\n  }\n\n\n  /**\n   * Generates a new OpenPGP subkey, and returns a clone of the Key object with the new subkey added.\n   * Supports RSA and ECC keys. Defaults to the algorithm and bit size/curve of the primary key. DSA primary keys default to RSA subkeys.\n   * @param {ecc|rsa} options.type       The subkey algorithm: ECC or RSA\n   * @param {String}  options.curve      (optional) Elliptic curve for ECC keys\n   * @param {Integer} options.rsaBits    (optional) Number of bits for RSA subkeys\n   * @param {Number}  options.keyExpirationTime (optional) Number of seconds from the key creation time after which the key expires\n   * @param {Date}    options.date       (optional) Override the creation date of the key and the key signatures\n   * @param {Boolean} options.sign       (optional) Indicates whether the subkey should sign rather than encrypt. Defaults to false\n   * @param {Object}  options.config     (optional) custom configuration settings to overwrite those in [config]{@link module:config}\n   * @returns {Promise<PrivateKey>}\n   * @async\n   */\n  async addSubkey(options = {}) {\n    const config = { ...defaultConfig, ...options.config };\n    if (options.passphrase) {\n      throw new Error('Subkey could not be encrypted here, please encrypt whole key');\n    }\n    if (options.rsaBits < config.minRSABits) {\n      throw new Error(`rsaBits should be at least ${config.minRSABits}, got: ${options.rsaBits}`);\n    }\n    const secretKeyPacket = this.keyPacket;\n    if (secretKeyPacket.isDummy()) {\n      throw new Error('Cannot add subkey to gnu-dummy primary key');\n    }\n    if (!secretKeyPacket.isDecrypted()) {\n      throw new Error('Key is not decrypted');\n    }\n    const defaultOptions = secretKeyPacket.getAlgorithmInfo();\n    defaultOptions.type = defaultOptions.curve ? 'ecc' : 'rsa'; // DSA keys default to RSA\n    defaultOptions.rsaBits = defaultOptions.bits || 4096;\n    defaultOptions.curve = defaultOptions.curve || 'curve25519';\n    options = helper.sanitizeKeyOptions(options, defaultOptions);\n    const keyPacket = await helper.generateSecretSubkey(options);\n    helper.checkKeyRequirements(keyPacket, config);\n    const bindingSignature = await helper.createBindingSignature(keyPacket, secretKeyPacket, options, config);\n    const packetList = this.toPacketList();\n    packetList.push(keyPacket, bindingSignature);\n    return new PrivateKey(packetList);\n  }\n}\n\nexport default PrivateKey;\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2015-2016 Decentral\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport {\n  PacketList,\n  UserIDPacket,\n  SignaturePacket,\n  PublicKeyPacket,\n  PublicSubkeyPacket,\n  SecretKeyPacket,\n  SecretSubkeyPacket,\n  UserAttributePacket\n} from '../packet';\nimport PrivateKey from './private_key';\nimport PublicKey from './public_key';\nimport * as helper from './helper';\nimport enums from '../enums';\nimport util from '../util';\nimport defaultConfig from '../config';\nimport { unarmor } from '../encoding/armor';\n\n// A Key can contain the following packets\nconst allowedKeyPackets = /*#__PURE__*/ util.constructAllowedPackets([\n  PublicKeyPacket,\n  PublicSubkeyPacket,\n  SecretKeyPacket,\n  SecretSubkeyPacket,\n  UserIDPacket,\n  UserAttributePacket,\n  SignaturePacket\n]);\n\n/**\n * Creates a PublicKey or PrivateKey depending on the packetlist in input\n * @param {PacketList} - packets to parse\n * @return {Key} parsed key\n * @throws if no key packet was found\n */\nfunction createKey(packetlist) {\n  for (const packet of packetlist) {\n    switch (packet.constructor.tag) {\n      case enums.packet.secretKey:\n        return new PrivateKey(packetlist);\n      case enums.packet.publicKey:\n        return new PublicKey(packetlist);\n    }\n  }\n  throw new Error('No key packet found');\n}\n\n\n/**\n * Generates a new OpenPGP key. Supports RSA and ECC keys.\n * By default, primary and subkeys will be of same type.\n * @param {ecc|rsa} options.type                  The primary key algorithm type: ECC or RSA\n * @param {String}  options.curve                 Elliptic curve for ECC keys\n * @param {Integer} options.rsaBits               Number of bits for RSA keys\n * @param {Array<String|Object>} options.userIDs  User IDs as strings or objects: 'Jo Doe <info@jo.com>' or { name:'Jo Doe', email:'info@jo.com' }\n * @param {String}  options.passphrase            Passphrase used to encrypt the resulting private key\n * @param {Number}  options.keyExpirationTime     (optional) Number of seconds from the key creation time after which the key expires\n * @param {Date}    options.date                  Creation date of the key and the key signatures\n * @param {Object} config - Full configuration\n * @param {Array<Object>} options.subkeys         (optional) options for each subkey, default to main key options. e.g. [{sign: true, passphrase: '123'}]\n *                                                  sign parameter defaults to false, and indicates whether the subkey should sign rather than encrypt\n * @returns {Promise<{{ key: PrivateKey, revocationCertificate: String }}>}\n * @async\n * @static\n * @private\n */\nexport async function generate(options, config) {\n  options.sign = true; // primary key is always a signing key\n  options = helper.sanitizeKeyOptions(options);\n  options.subkeys = options.subkeys.map((subkey, index) => helper.sanitizeKeyOptions(options.subkeys[index], options));\n  let promises = [helper.generateSecretKey(options, config)];\n  promises = promises.concat(options.subkeys.map(options => helper.generateSecretSubkey(options, config)));\n  const packets = await Promise.all(promises);\n\n  const key = await wrapKeyObject(packets[0], packets.slice(1), options, config);\n  const revocationCertificate = await key.getRevocationCertificate(options.date, config);\n  key.revocationSignatures = [];\n  return { key, revocationCertificate };\n}\n\n/**\n * Reformats and signs an OpenPGP key with a given User ID. Currently only supports RSA keys.\n * @param {PrivateKey} options.privateKey         The private key to reformat\n * @param {Array<String|Object>} options.userIDs  User IDs as strings or objects: 'Jo Doe <info@jo.com>' or { name:'Jo Doe', email:'info@jo.com' }\n * @param {String} options.passphrase             Passphrase used to encrypt the resulting private key\n * @param {Number} options.keyExpirationTime      Number of seconds from the key creation time after which the key expires\n * @param {Date}   options.date                   Override the creation date of the key signatures\n * @param {Array<Object>} options.subkeys         (optional) options for each subkey, default to main key options. e.g. [{sign: true, passphrase: '123'}]\n * @param {Object} config - Full configuration\n *\n * @returns {Promise<{{ key: PrivateKey, revocationCertificate: String }}>}\n * @async\n * @static\n * @private\n */\nexport async function reformat(options, config) {\n  options = sanitize(options);\n  const { privateKey } = options;\n\n  if (!privateKey.isPrivate()) {\n    throw new Error('Cannot reformat a public key');\n  }\n\n  if (privateKey.keyPacket.isDummy()) {\n    throw new Error('Cannot reformat a gnu-dummy primary key');\n  }\n\n  const isDecrypted = privateKey.getKeys().every(({ keyPacket }) => keyPacket.isDecrypted());\n  if (!isDecrypted) {\n    throw new Error('Key is not decrypted');\n  }\n\n  const secretKeyPacket = privateKey.keyPacket;\n\n  if (!options.subkeys) {\n    options.subkeys = await Promise.all(privateKey.subkeys.map(async subkey => {\n      const secretSubkeyPacket = subkey.keyPacket;\n      const dataToVerify = { key: secretKeyPacket, bind: secretSubkeyPacket };\n      const bindingSignature = await (\n        helper.getLatestValidSignature(subkey.bindingSignatures, secretKeyPacket, enums.signature.subkeyBinding, dataToVerify, null, config)\n      ).catch(() => ({}));\n      return {\n        sign: bindingSignature.keyFlags && (bindingSignature.keyFlags[0] & enums.keyFlags.signData)\n      };\n    }));\n  }\n\n  const secretSubkeyPackets = privateKey.subkeys.map(subkey => subkey.keyPacket);\n  if (options.subkeys.length !== secretSubkeyPackets.length) {\n    throw new Error('Number of subkey options does not match number of subkeys');\n  }\n\n  options.subkeys = options.subkeys.map(subkeyOptions => sanitize(subkeyOptions, options));\n\n  const key = await wrapKeyObject(secretKeyPacket, secretSubkeyPackets, options, config);\n  const revocationCertificate = await key.getRevocationCertificate(options.date, config);\n  key.revocationSignatures = [];\n  return { key, revocationCertificate };\n\n  function sanitize(options, subkeyDefaults = {}) {\n    options.keyExpirationTime = options.keyExpirationTime || subkeyDefaults.keyExpirationTime;\n    options.passphrase = util.isString(options.passphrase) ? options.passphrase : subkeyDefaults.passphrase;\n    options.date = options.date || subkeyDefaults.date;\n\n    return options;\n  }\n}\n\n/**\n * Construct PrivateKey object from the given key packets, add certification signatures and set passphrase protection\n * The new key includes a revocation certificate that must be removed before returning the key, otherwise the key is considered revoked.\n * @param {SecretKeyPacket} secretKeyPacket\n * @param {SecretSubkeyPacket} secretSubkeyPackets\n * @param {Object} options\n * @param {Object} config - Full configuration\n * @returns {PrivateKey}\n */\nasync function wrapKeyObject(secretKeyPacket, secretSubkeyPackets, options, config) {\n  // set passphrase protection\n  if (options.passphrase) {\n    await secretKeyPacket.encrypt(options.passphrase, config);\n  }\n\n  await Promise.all(secretSubkeyPackets.map(async function(secretSubkeyPacket, index) {\n    const subkeyPassphrase = options.subkeys[index].passphrase;\n    if (subkeyPassphrase) {\n      await secretSubkeyPacket.encrypt(subkeyPassphrase, config);\n    }\n  }));\n\n  const packetlist = new PacketList();\n  packetlist.push(secretKeyPacket);\n\n  await Promise.all(options.userIDs.map(async function(userID, index) {\n    function createPreferredAlgos(algos, preferredAlgo) {\n      return [preferredAlgo, ...algos.filter(algo => algo !== preferredAlgo)];\n    }\n\n    const userIDPacket = UserIDPacket.fromObject(userID);\n    const dataToSign = {};\n    dataToSign.userID = userIDPacket;\n    dataToSign.key = secretKeyPacket;\n\n    const signatureProperties = {};\n    signatureProperties.signatureType = enums.signature.certGeneric;\n    signatureProperties.keyFlags = [enums.keyFlags.certifyKeys | enums.keyFlags.signData];\n    signatureProperties.preferredSymmetricAlgorithms = createPreferredAlgos([\n      // prefer aes256, aes128, then aes192 (no WebCrypto support: https://www.chromium.org/blink/webcrypto#TOC-AES-support)\n      enums.symmetric.aes256,\n      enums.symmetric.aes128,\n      enums.symmetric.aes192\n    ], config.preferredSymmetricAlgorithm);\n    if (config.aeadProtect) {\n      signatureProperties.preferredAEADAlgorithms = createPreferredAlgos([\n        enums.aead.eax,\n        enums.aead.ocb\n      ], config.preferredAEADAlgorithm);\n    }\n    signatureProperties.preferredHashAlgorithms = createPreferredAlgos([\n      // prefer fast asm.js implementations (SHA-256)\n      enums.hash.sha256,\n      enums.hash.sha512\n    ], config.preferredHashAlgorithm);\n    signatureProperties.preferredCompressionAlgorithms = createPreferredAlgos([\n      enums.compression.zlib,\n      enums.compression.zip,\n      enums.compression.uncompressed\n    ], config.preferredCompressionAlgorithm);\n    if (index === 0) {\n      signatureProperties.isPrimaryUserID = true;\n    }\n    // integrity protection always enabled\n    signatureProperties.features = [0];\n    signatureProperties.features[0] |= enums.features.modificationDetection;\n    if (config.aeadProtect) {\n      signatureProperties.features[0] |= enums.features.aead;\n    }\n    if (config.v5Keys) {\n      signatureProperties.features[0] |= enums.features.v5Keys;\n    }\n    if (options.keyExpirationTime > 0) {\n      signatureProperties.keyExpirationTime = options.keyExpirationTime;\n      signatureProperties.keyNeverExpires = false;\n    }\n\n    const signaturePacket = await helper.createSignaturePacket(dataToSign, null, secretKeyPacket, signatureProperties, options.date, undefined, undefined, undefined, config);\n\n    return { userIDPacket, signaturePacket };\n  })).then(list => {\n    list.forEach(({ userIDPacket, signaturePacket }) => {\n      packetlist.push(userIDPacket);\n      packetlist.push(signaturePacket);\n    });\n  });\n\n  await Promise.all(secretSubkeyPackets.map(async function(secretSubkeyPacket, index) {\n    const subkeyOptions = options.subkeys[index];\n    const subkeySignaturePacket = await helper.createBindingSignature(secretSubkeyPacket, secretKeyPacket, subkeyOptions, config);\n    return { secretSubkeyPacket, subkeySignaturePacket };\n  })).then(packets => {\n    packets.forEach(({ secretSubkeyPacket, subkeySignaturePacket }) => {\n      packetlist.push(secretSubkeyPacket);\n      packetlist.push(subkeySignaturePacket);\n    });\n  });\n\n  // Add revocation signature packet for creating a revocation certificate.\n  // This packet should be removed before returning the key.\n  const dataToSign = { key: secretKeyPacket };\n  packetlist.push(await helper.createSignaturePacket(dataToSign, null, secretKeyPacket, {\n    signatureType: enums.signature.keyRevocation,\n    reasonForRevocationFlag: enums.reasonForRevocation.noReason,\n    reasonForRevocationString: ''\n  }, options.date, undefined, undefined, undefined, config));\n\n  if (options.passphrase) {\n    secretKeyPacket.clearPrivateParams();\n  }\n\n  await Promise.all(secretSubkeyPackets.map(async function(secretSubkeyPacket, index) {\n    const subkeyPassphrase = options.subkeys[index].passphrase;\n    if (subkeyPassphrase) {\n      secretSubkeyPacket.clearPrivateParams();\n    }\n  }));\n\n  return new PrivateKey(packetlist);\n}\n\n/**\n * Reads an (optionally armored) OpenPGP key and returns a key object\n * @param {Object} options\n * @param {String} [options.armoredKey] - Armored key to be parsed\n * @param {Uint8Array} [options.binaryKey] - Binary key to be parsed\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<Key>} Key object.\n * @async\n * @static\n */\nexport async function readKey({ armoredKey, binaryKey, config, ...rest }) {\n  config = { ...defaultConfig, ...config };\n  if (!armoredKey && !binaryKey) {\n    throw new Error('readKey: must pass options object containing `armoredKey` or `binaryKey`');\n  }\n  if (armoredKey && !util.isString(armoredKey)) {\n    throw new Error('readKey: options.armoredKey must be a string');\n  }\n  if (binaryKey && !util.isUint8Array(binaryKey)) {\n    throw new Error('readKey: options.binaryKey must be a Uint8Array');\n  }\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  let input;\n  if (armoredKey) {\n    const { type, data } = await unarmor(armoredKey, config);\n    if (!(type === enums.armor.publicKey || type === enums.armor.privateKey)) {\n      throw new Error('Armored text not of type key');\n    }\n    input = data;\n  } else {\n    input = binaryKey;\n  }\n  const packetlist = await PacketList.fromBinary(input, allowedKeyPackets, config);\n  return createKey(packetlist);\n}\n\n/**\n * Reads an (optionally armored) OpenPGP private key and returns a PrivateKey object\n * @param {Object} options\n * @param {String} [options.armoredKey] - Armored key to be parsed\n * @param {Uint8Array} [options.binaryKey] - Binary key to be parsed\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<PrivateKey>} Key object.\n * @async\n * @static\n */\nexport async function readPrivateKey({ armoredKey, binaryKey, config, ...rest }) {\n  config = { ...defaultConfig, ...config };\n  if (!armoredKey && !binaryKey) {\n    throw new Error('readPrivateKey: must pass options object containing `armoredKey` or `binaryKey`');\n  }\n  if (armoredKey && !util.isString(armoredKey)) {\n    throw new Error('readPrivateKey: options.armoredKey must be a string');\n  }\n  if (binaryKey && !util.isUint8Array(binaryKey)) {\n    throw new Error('readPrivateKey: options.binaryKey must be a Uint8Array');\n  }\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  let input;\n  if (armoredKey) {\n    const { type, data } = await unarmor(armoredKey, config);\n    if (!(type === enums.armor.privateKey)) {\n      throw new Error('Armored text not of type private key');\n    }\n    input = data;\n  } else {\n    input = binaryKey;\n  }\n  const packetlist = await PacketList.fromBinary(input, allowedKeyPackets, config);\n  return new PrivateKey(packetlist);\n}\n\n/**\n * Reads an (optionally armored) OpenPGP key block and returns a list of key objects\n * @param {Object} options\n * @param {String} [options.armoredKeys] - Armored keys to be parsed\n * @param {Uint8Array} [options.binaryKeys] - Binary keys to be parsed\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<Array<Key>>} Key objects.\n * @async\n * @static\n */\nexport async function readKeys({ armoredKeys, binaryKeys, config, ...rest }) {\n  config = { ...defaultConfig, ...config };\n  let input = armoredKeys || binaryKeys;\n  if (!input) {\n    throw new Error('readKeys: must pass options object containing `armoredKeys` or `binaryKeys`');\n  }\n  if (armoredKeys && !util.isString(armoredKeys)) {\n    throw new Error('readKeys: options.armoredKeys must be a string');\n  }\n  if (binaryKeys && !util.isUint8Array(binaryKeys)) {\n    throw new Error('readKeys: options.binaryKeys must be a Uint8Array');\n  }\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  if (armoredKeys) {\n    const { type, data } = await unarmor(armoredKeys, config);\n    if (type !== enums.armor.publicKey && type !== enums.armor.privateKey) {\n      throw new Error('Armored text not of type key');\n    }\n    input = data;\n  }\n  const keys = [];\n  const packetlist = await PacketList.fromBinary(input, allowedKeyPackets, config);\n  const keyIndex = packetlist.indexOfTag(enums.packet.publicKey, enums.packet.secretKey);\n  if (keyIndex.length === 0) {\n    throw new Error('No key packet found');\n  }\n  for (let i = 0; i < keyIndex.length; i++) {\n    const oneKeyList = packetlist.slice(keyIndex[i], keyIndex[i + 1]);\n    const newKey = createKey(oneKeyList);\n    keys.push(newKey);\n  }\n  return keys;\n}\n\n/**\n * Reads an (optionally armored) OpenPGP private key block and returns a list of PrivateKey objects\n * @param {Object} options\n * @param {String} [options.armoredKeys] - Armored keys to be parsed\n * @param {Uint8Array} [options.binaryKeys] - Binary keys to be parsed\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<Array<PrivateKey>>} Key objects.\n * @async\n * @static\n */\nexport async function readPrivateKeys({ armoredKeys, binaryKeys, config }) {\n  config = { ...defaultConfig, ...config };\n  let input = armoredKeys || binaryKeys;\n  if (!input) {\n    throw new Error('readPrivateKeys: must pass options object containing `armoredKeys` or `binaryKeys`');\n  }\n  if (armoredKeys && !util.isString(armoredKeys)) {\n    throw new Error('readPrivateKeys: options.armoredKeys must be a string');\n  }\n  if (binaryKeys && !util.isUint8Array(binaryKeys)) {\n    throw new Error('readPrivateKeys: options.binaryKeys must be a Uint8Array');\n  }\n  if (armoredKeys) {\n    const { type, data } = await unarmor(armoredKeys, config);\n    if (type !== enums.armor.privateKey) {\n      throw new Error('Armored text not of type private key');\n    }\n    input = data;\n  }\n  const keys = [];\n  const packetlist = await PacketList.fromBinary(input, allowedKeyPackets, config);\n  const keyIndex = packetlist.indexOfTag(enums.packet.secretKey);\n  if (keyIndex.length === 0) {\n    throw new Error('No secret key packet found');\n  }\n  for (let i = 0; i < keyIndex.length; i++) {\n    const oneKeyList = packetlist.slice(keyIndex[i], keyIndex[i + 1]);\n    const newKey = new PrivateKey(oneKeyList);\n    keys.push(newKey);\n  }\n  return keys;\n}\n","// OpenPGP.js - An OpenPGP implementation in javascript\n// Copyright (C) 2016 Tankred Hase\n//\n// This library is free software; you can redistribute it and/or\n// modify it under the terms of the GNU Lesser General Public\n// License as published by the Free Software Foundation; either\n// version 3.0 of the License, or (at your option) any later version.\n//\n// This library is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n// Lesser General Public License for more details.\n//\n// You should have received a copy of the GNU Lesser General Public\n// License along with this library; if not, write to the Free Software\n// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nimport * as stream from '@openpgp/web-stream-tools';\nimport { Message } from './message';\nimport { CleartextMessage } from './cleartext';\nimport { generate, reformat, getPreferredAlgo } from './key';\nimport defaultConfig from './config';\nimport util from './util';\nimport { checkKeyRequirements } from './key/helper';\n\n\n//////////////////////\n//                  //\n//   Key handling   //\n//                  //\n//////////////////////\n\n\n/**\n * Generates a new OpenPGP key pair. Supports RSA and ECC keys. By default, primary and subkeys will be of same type.\n * The generated primary key will have signing capabilities. By default, one subkey with encryption capabilities is also generated.\n * @param {Object} options\n * @param {Object|Array<Object>} options.userIDs - User IDs as objects: `{ name: 'Jo Doe', email: 'info@jo.com' }`\n * @param {'ecc'|'rsa'} [options.type='ecc'] - The primary key algorithm type: ECC (default) or RSA\n * @param {String} [options.passphrase=(not protected)] - The passphrase used to encrypt the generated private key. If omitted or empty, the key won't be encrypted.\n * @param {Number} [options.rsaBits=4096] - Number of bits for RSA keys\n * @param {String} [options.curve='curve25519'] - Elliptic curve for ECC keys:\n *                                             curve25519 (default), p256, p384, p521, secp256k1,\n *                                             brainpoolP256r1, brainpoolP384r1, or brainpoolP512r1\n * @param {Date} [options.date=current date] - Override the creation date of the key and the key signatures\n * @param {Number} [options.keyExpirationTime=0 (never expires)] - Number of seconds from the key creation time after which the key expires\n * @param {Array<Object>} [options.subkeys=a single encryption subkey] - Options for each subkey e.g. `[{sign: true, passphrase: '123'}]`\n *                                             default to main key options, except for `sign` parameter that defaults to false, and indicates whether the subkey should sign rather than encrypt\n * @param {'armored'|'binary'|'object'} [options.format='armored'] - format of the output keys\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<Object>} The generated key object in the form:\n *                                     { privateKey:PrivateKey|Uint8Array|String, publicKey:PublicKey|Uint8Array|String, revocationCertificate:String }\n * @async\n * @static\n */\nexport async function generateKey({ userIDs = [], passphrase, type = 'ecc', rsaBits = 4096, curve = 'curve25519', keyExpirationTime = 0, date = new Date(), subkeys = [{}], format = 'armored', config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  userIDs = toArray(userIDs);\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  if (userIDs.length === 0) {\n    throw new Error('UserIDs are required for key generation');\n  }\n  if (type === 'rsa' && rsaBits < config.minRSABits) {\n    throw new Error(`rsaBits should be at least ${config.minRSABits}, got: ${rsaBits}`);\n  }\n\n  const options = { userIDs, passphrase, type, rsaBits, curve, keyExpirationTime, date, subkeys };\n\n  try {\n    const { key, revocationCertificate } = await generate(options, config);\n    key.getKeys().forEach(({ keyPacket }) => checkKeyRequirements(keyPacket, config));\n\n    return {\n      privateKey: formatObject(key, format, config),\n      publicKey: formatObject(key.toPublic(), format, config),\n      revocationCertificate\n    };\n  } catch (err) {\n    throw util.wrapError('Error generating keypair', err);\n  }\n}\n\n/**\n * Reformats signature packets for a key and rewraps key object.\n * @param {Object} options\n * @param {PrivateKey} options.privateKey - Private key to reformat\n * @param {Object|Array<Object>} options.userIDs - User IDs as objects: `{ name: 'Jo Doe', email: 'info@jo.com' }`\n * @param {String} [options.passphrase=(not protected)] - The passphrase used to encrypt the reformatted private key. If omitted or empty, the key won't be encrypted.\n * @param {Number} [options.keyExpirationTime=0 (never expires)] - Number of seconds from the key creation time after which the key expires\n * @param {Date}   [options.date] - Override the creation date of the key signatures. If the key was previously used to sign messages, it is recommended\n *                                  to set the same date as the key creation time to ensure that old message signatures will still be verifiable using the reformatted key.\n * @param {'armored'|'binary'|'object'} [options.format='armored'] - format of the output keys\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<Object>} The generated key object in the form:\n *                                     { privateKey:PrivateKey|Uint8Array|String, publicKey:PublicKey|Uint8Array|String, revocationCertificate:String }\n * @async\n * @static\n */\nexport async function reformatKey({ privateKey, userIDs = [], passphrase, keyExpirationTime = 0, date, format = 'armored', config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  userIDs = toArray(userIDs);\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  if (userIDs.length === 0) {\n    throw new Error('UserIDs are required for key reformat');\n  }\n  const options = { privateKey, userIDs, passphrase, keyExpirationTime, date };\n\n  try {\n    const { key: reformattedKey, revocationCertificate } = await reformat(options, config);\n\n    return {\n      privateKey: formatObject(reformattedKey, format, config),\n      publicKey: formatObject(reformattedKey.toPublic(), format, config),\n      revocationCertificate\n    };\n  } catch (err) {\n    throw util.wrapError('Error reformatting keypair', err);\n  }\n}\n\n/**\n * Revokes a key. Requires either a private key or a revocation certificate.\n *   If a revocation certificate is passed, the reasonForRevocation parameter will be ignored.\n * @param {Object} options\n * @param {Key} options.key - Public or private key to revoke\n * @param {String} [options.revocationCertificate] - Revocation certificate to revoke the key with\n * @param {Object} [options.reasonForRevocation] - Object indicating the reason for revocation\n * @param {module:enums.reasonForRevocation} [options.reasonForRevocation.flag=[noReason]{@link module:enums.reasonForRevocation}] - Flag indicating the reason for revocation\n * @param {String} [options.reasonForRevocation.string=\"\"] - String explaining the reason for revocation\n * @param {Date} [options.date] - Use the given date instead of the current time to verify validity of revocation certificate (if provided), or as creation time of the revocation signature\n * @param {'armored'|'binary'|'object'} [options.format='armored'] - format of the output key(s)\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<Object>} The revoked key in the form:\n *                              { privateKey:PrivateKey|Uint8Array|String, publicKey:PublicKey|Uint8Array|String } if private key is passed, or\n *                              { privateKey: null, publicKey:PublicKey|Uint8Array|String } otherwise\n * @async\n * @static\n */\nexport async function revokeKey({ key, revocationCertificate, reasonForRevocation, date = new Date(), format = 'armored', config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  try {\n    const revokedKey = revocationCertificate ?\n      await key.applyRevocationCertificate(revocationCertificate, date, config) :\n      await key.revoke(reasonForRevocation, date, config);\n\n    return revokedKey.isPrivate() ? {\n      privateKey: formatObject(revokedKey, format, config),\n      publicKey: formatObject(revokedKey.toPublic(), format, config)\n    } : {\n      privateKey: null,\n      publicKey: formatObject(revokedKey, format, config)\n    };\n  } catch (err) {\n    throw util.wrapError('Error revoking key', err);\n  }\n}\n\n/**\n * Unlock a private key with the given passphrase.\n * This method does not change the original key.\n * @param {Object} options\n * @param {PrivateKey} options.privateKey - The private key to decrypt\n * @param {String|Array<String>} options.passphrase - The user's passphrase(s)\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<PrivateKey>} The unlocked key object.\n * @async\n */\nexport async function decryptKey({ privateKey, passphrase, config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  if (!privateKey.isPrivate()) {\n    throw new Error('Cannot decrypt a public key');\n  }\n  const clonedPrivateKey = privateKey.clone(true);\n  const passphrases = util.isArray(passphrase) ? passphrase : [passphrase];\n\n  try {\n    await Promise.all(clonedPrivateKey.getKeys().map(key => (\n      // try to decrypt each key with any of the given passphrases\n      util.anyPromise(passphrases.map(passphrase => key.keyPacket.decrypt(passphrase)))\n    )));\n\n    await clonedPrivateKey.validate(config);\n    return clonedPrivateKey;\n  } catch (err) {\n    clonedPrivateKey.clearPrivateParams();\n    throw util.wrapError('Error decrypting private key', err);\n  }\n}\n\n/**\n * Lock a private key with the given passphrase.\n * This method does not change the original key.\n * @param {Object} options\n * @param {PrivateKey} options.privateKey - The private key to encrypt\n * @param {String|Array<String>} options.passphrase - If multiple passphrases, they should be in the same order as the packets each should encrypt\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<PrivateKey>} The locked key object.\n * @async\n */\nexport async function encryptKey({ privateKey, passphrase, config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  if (!privateKey.isPrivate()) {\n    throw new Error('Cannot encrypt a public key');\n  }\n  const clonedPrivateKey = privateKey.clone(true);\n\n  const keys = clonedPrivateKey.getKeys();\n  const passphrases = util.isArray(passphrase) ? passphrase : new Array(keys.length).fill(passphrase);\n  if (passphrases.length !== keys.length) {\n    throw new Error('Invalid number of passphrases given for key encryption');\n  }\n\n  try {\n    await Promise.all(keys.map(async (key, i) => {\n      const { keyPacket } = key;\n      await keyPacket.encrypt(passphrases[i], config);\n      keyPacket.clearPrivateParams();\n    }));\n    return clonedPrivateKey;\n  } catch (err) {\n    clonedPrivateKey.clearPrivateParams();\n    throw util.wrapError('Error encrypting private key', err);\n  }\n}\n\n\n///////////////////////////////////////////\n//                                       //\n//   Message encryption and decryption   //\n//                                       //\n///////////////////////////////////////////\n\n\n/**\n * Encrypts a message using public keys, passwords or both at once. At least one of `encryptionKeys`, `passwords` or `sessionKeys`\n *   must be specified. If signing keys are specified, those will be used to sign the message.\n * @param {Object} options\n * @param {Message} options.message - Message to be encrypted as created by {@link createMessage}\n * @param {PublicKey|PublicKey[]} [options.encryptionKeys] - Array of keys or single key, used to encrypt the message\n * @param {PrivateKey|PrivateKey[]} [options.signingKeys] - Private keys for signing. If omitted message will not be signed\n * @param {String|String[]} [options.passwords] - Array of passwords or a single password to encrypt the message\n * @param {Object} [options.sessionKey] - Session key in the form: `{ data:Uint8Array, algorithm:String }`\n * @param {'armored'|'binary'|'object'} [options.format='armored'] - Format of the returned message\n * @param {Signature} [options.signature] - A detached signature to add to the encrypted message\n * @param {Boolean} [options.wildcard=false] - Use a key ID of 0 instead of the public key IDs\n * @param {KeyID|KeyID[]} [options.signingKeyIDs=latest-created valid signing (sub)keys] - Array of key IDs to use for signing. Each `signingKeyIDs[i]` corresponds to `signingKeys[i]`\n * @param {KeyID|KeyID[]} [options.encryptionKeyIDs=latest-created valid encryption (sub)keys] - Array of key IDs to use for encryption. Each `encryptionKeyIDs[i]` corresponds to `encryptionKeys[i]`\n * @param {Date} [options.date=current date] - Override the creation date of the message signature\n * @param {Object|Object[]} [options.signingUserIDs=primary user IDs] - Array of user IDs to sign with, one per key in `signingKeys`, e.g. `[{ name: 'Steve Sender', email: 'steve@openpgp.org' }]`\n * @param {Object|Object[]} [options.encryptionUserIDs=primary user IDs] - Array of user IDs to encrypt for, one per key in `encryptionKeys`, e.g. `[{ name: 'Robert Receiver', email: 'robert@openpgp.org' }]`\n * @param {Object|Object[]} [options.signatureNotations=[]] - Array of notations to add to the signatures, e.g. `[{ name: 'test@example.org', value: new TextEncoder().encode('test'), humanReadable: true, critical: false }]`\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<MaybeStream<String>|MaybeStream<Uint8Array>>} Encrypted message (string if `armor` was true, the default; Uint8Array if `armor` was false).\n * @async\n * @static\n */\nexport async function encrypt({ message, encryptionKeys, signingKeys, passwords, sessionKey, format = 'armored', signature = null, wildcard = false, signingKeyIDs = [], encryptionKeyIDs = [], date = new Date(), signingUserIDs = [], encryptionUserIDs = [], signatureNotations = [], config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  checkMessage(message); checkOutputMessageFormat(format);\n  encryptionKeys = toArray(encryptionKeys); signingKeys = toArray(signingKeys); passwords = toArray(passwords);\n  signingKeyIDs = toArray(signingKeyIDs); encryptionKeyIDs = toArray(encryptionKeyIDs); signingUserIDs = toArray(signingUserIDs); encryptionUserIDs = toArray(encryptionUserIDs); signatureNotations = toArray(signatureNotations);\n  if (rest.detached) {\n    throw new Error(\"The `detached` option has been removed from openpgp.encrypt, separately call openpgp.sign instead. Don't forget to remove the `privateKeys` option as well.\");\n  }\n  if (rest.publicKeys) throw new Error('The `publicKeys` option has been removed from openpgp.encrypt, pass `encryptionKeys` instead');\n  if (rest.privateKeys) throw new Error('The `privateKeys` option has been removed from openpgp.encrypt, pass `signingKeys` instead');\n  if (rest.armor !== undefined) throw new Error('The `armor` option has been removed from openpgp.encrypt, pass `format` instead.');\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  if (!signingKeys) {\n    signingKeys = [];\n  }\n  const streaming = message.fromStream;\n  try {\n    if (signingKeys.length || signature) { // sign the message only if signing keys or signature is specified\n      message = await message.sign(signingKeys, signature, signingKeyIDs, date, signingUserIDs, signatureNotations, config);\n    }\n    message = message.compress(\n      await getPreferredAlgo('compression', encryptionKeys, date, encryptionUserIDs, config),\n      config\n    );\n    message = await message.encrypt(encryptionKeys, passwords, sessionKey, wildcard, encryptionKeyIDs, date, encryptionUserIDs, config);\n    if (format === 'object') return message;\n    // serialize data\n    const armor = format === 'armored';\n    const data = armor ? message.armor(config) : message.write();\n    return convertStream(data, streaming, armor ? 'utf8' : 'binary');\n  } catch (err) {\n    throw util.wrapError('Error encrypting message', err);\n  }\n}\n\n/**\n * Decrypts a message with the user's private key, a session key or a password.\n * One of `decryptionKeys`, `sessionkeys` or `passwords` must be specified (passing a combination of these options is not supported).\n * @param {Object} options\n * @param {Message} options.message - The message object with the encrypted data\n * @param {PrivateKey|PrivateKey[]} [options.decryptionKeys] - Private keys with decrypted secret key data or session key\n * @param {String|String[]} [options.passwords] - Passwords to decrypt the message\n * @param {Object|Object[]} [options.sessionKeys] - Session keys in the form: { data:Uint8Array, algorithm:String }\n * @param {PublicKey|PublicKey[]} [options.verificationKeys] - Array of public keys or single key, to verify signatures\n * @param {Boolean} [options.expectSigned=false] - If true, data decryption fails if the message is not signed with the provided publicKeys\n * @param {'utf8'|'binary'} [options.format='utf8'] - Whether to return data as a string(Stream) or Uint8Array(Stream). If 'utf8' (the default), also normalize newlines.\n * @param {Signature} [options.signature] - Detached signature for verification\n * @param {Date} [options.date=current date] - Use the given date for verification instead of the current time\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<Object>} Object containing decrypted and verified message in the form:\n *\n *     {\n *       data: MaybeStream<String>, (if format was 'utf8', the default)\n *       data: MaybeStream<Uint8Array>, (if format was 'binary')\n *       filename: String,\n *       signatures: [\n *         {\n *           keyID: module:type/keyid~KeyID,\n *           verified: Promise<true>,\n *           signature: Promise<Signature>\n *         }, ...\n *       ]\n *     }\n *\n *     where `signatures` contains a separate entry for each signature packet found in the input message.\n * @async\n * @static\n */\nexport async function decrypt({ message, decryptionKeys, passwords, sessionKeys, verificationKeys, expectSigned = false, format = 'utf8', signature = null, date = new Date(), config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  checkMessage(message); verificationKeys = toArray(verificationKeys); decryptionKeys = toArray(decryptionKeys); passwords = toArray(passwords); sessionKeys = toArray(sessionKeys);\n  if (rest.privateKeys) throw new Error('The `privateKeys` option has been removed from openpgp.decrypt, pass `decryptionKeys` instead');\n  if (rest.publicKeys) throw new Error('The `publicKeys` option has been removed from openpgp.decrypt, pass `verificationKeys` instead');\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  try {\n    const decrypted = await message.decrypt(decryptionKeys, passwords, sessionKeys, date, config);\n    if (!verificationKeys) {\n      verificationKeys = [];\n    }\n\n    const result = {};\n    result.signatures = signature ? await decrypted.verifyDetached(signature, verificationKeys, date, config) : await decrypted.verify(verificationKeys, date, config);\n    result.data = format === 'binary' ? decrypted.getLiteralData() : decrypted.getText();\n    result.filename = decrypted.getFilename();\n    linkStreams(result, message);\n    if (expectSigned) {\n      if (verificationKeys.length === 0) {\n        throw new Error('Verification keys are required to verify message signatures');\n      }\n      if (result.signatures.length === 0) {\n        throw new Error('Message is not signed');\n      }\n      result.data = stream.concat([\n        result.data,\n        stream.fromAsync(async () => {\n          await util.anyPromise(result.signatures.map(sig => sig.verified));\n        })\n      ]);\n    }\n    result.data = await convertStream(result.data, message.fromStream, format);\n    return result;\n  } catch (err) {\n    throw util.wrapError('Error decrypting message', err);\n  }\n}\n\n\n//////////////////////////////////////////\n//                                      //\n//   Message signing and verification   //\n//                                      //\n//////////////////////////////////////////\n\n\n/**\n * Signs a message.\n * @param {Object} options\n * @param {CleartextMessage|Message} options.message - (cleartext) message to be signed\n * @param {PrivateKey|PrivateKey[]} options.signingKeys - Array of keys or single key with decrypted secret key data to sign cleartext\n * @param {'armored'|'binary'|'object'} [options.format='armored'] - Format of the returned message\n * @param {Boolean} [options.detached=false] - If the return value should contain a detached signature\n * @param {KeyID|KeyID[]} [options.signingKeyIDs=latest-created valid signing (sub)keys] - Array of key IDs to use for signing. Each signingKeyIDs[i] corresponds to signingKeys[i]\n * @param {Date} [options.date=current date] - Override the creation date of the signature\n * @param {Object|Object[]} [options.signingUserIDs=primary user IDs] - Array of user IDs to sign with, one per key in `signingKeys`, e.g. `[{ name: 'Steve Sender', email: 'steve@openpgp.org' }]`\n * @param {Object|Object[]} [options.signatureNotations=[]] - Array of notations to add to the signatures, e.g. `[{ name: 'test@example.org', value: new TextEncoder().encode('test'), humanReadable: true, critical: false }]`\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<MaybeStream<String|Uint8Array>>} Signed message (string if `armor` was true, the default; Uint8Array if `armor` was false).\n * @async\n * @static\n */\nexport async function sign({ message, signingKeys, format = 'armored', detached = false, signingKeyIDs = [], date = new Date(), signingUserIDs = [], signatureNotations = [], config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  checkCleartextOrMessage(message); checkOutputMessageFormat(format);\n  signingKeys = toArray(signingKeys); signingKeyIDs = toArray(signingKeyIDs); signingUserIDs = toArray(signingUserIDs); signatureNotations = toArray(signatureNotations);\n\n  if (rest.privateKeys) throw new Error('The `privateKeys` option has been removed from openpgp.sign, pass `signingKeys` instead');\n  if (rest.armor !== undefined) throw new Error('The `armor` option has been removed from openpgp.sign, pass `format` instead.');\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  if (message instanceof CleartextMessage && format === 'binary') throw new Error('Cannot return signed cleartext message in binary format');\n  if (message instanceof CleartextMessage && detached) throw new Error('Cannot detach-sign a cleartext message');\n\n  if (!signingKeys || signingKeys.length === 0) {\n    throw new Error('No signing keys provided');\n  }\n\n  try {\n    let signature;\n    if (detached) {\n      signature = await message.signDetached(signingKeys, undefined, signingKeyIDs, date, signingUserIDs, signatureNotations, config);\n    } else {\n      signature = await message.sign(signingKeys, undefined, signingKeyIDs, date, signingUserIDs, signatureNotations, config);\n    }\n    if (format === 'object') return signature;\n\n    const armor = format === 'armored';\n    signature = armor ? signature.armor(config) : signature.write();\n    if (detached) {\n      signature = stream.transformPair(message.packets.write(), async (readable, writable) => {\n        await Promise.all([\n          stream.pipe(signature, writable),\n          stream.readToEnd(readable).catch(() => {})\n        ]);\n      });\n    }\n    return convertStream(signature, message.fromStream, armor ? 'utf8' : 'binary');\n  } catch (err) {\n    throw util.wrapError('Error signing message', err);\n  }\n}\n\n/**\n * Verifies signatures of cleartext signed message\n * @param {Object} options\n * @param {CleartextMessage|Message} options.message - (cleartext) message object with signatures\n * @param {PublicKey|PublicKey[]} options.verificationKeys - Array of publicKeys or single key, to verify signatures\n * @param {Boolean} [options.expectSigned=false] - If true, verification throws if the message is not signed with the provided publicKeys\n * @param {'utf8'|'binary'} [options.format='utf8'] - Whether to return data as a string(Stream) or Uint8Array(Stream). If 'utf8' (the default), also normalize newlines.\n * @param {Signature} [options.signature] - Detached signature for verification\n * @param {Date} [options.date=current date] - Use the given date for verification instead of the current time\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<Object>} Object containing verified message in the form:\n *\n *     {\n *       data: MaybeStream<String>, (if `message` was a CleartextMessage)\n *       data: MaybeStream<Uint8Array>, (if `message` was a Message)\n *       signatures: [\n *         {\n *           keyID: module:type/keyid~KeyID,\n *           verified: Promise<true>,\n *           signature: Promise<Signature>\n *         }, ...\n *       ]\n *     }\n *\n *     where `signatures` contains a separate entry for each signature packet found in the input message.\n * @async\n * @static\n */\nexport async function verify({ message, verificationKeys, expectSigned = false, format = 'utf8', signature = null, date = new Date(), config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  checkCleartextOrMessage(message); verificationKeys = toArray(verificationKeys);\n  if (rest.publicKeys) throw new Error('The `publicKeys` option has been removed from openpgp.verify, pass `verificationKeys` instead');\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  if (message instanceof CleartextMessage && format === 'binary') throw new Error(\"Can't return cleartext message data as binary\");\n  if (message instanceof CleartextMessage && signature) throw new Error(\"Can't verify detached cleartext signature\");\n\n  try {\n    const result = {};\n    if (signature) {\n      result.signatures = await message.verifyDetached(signature, verificationKeys, date, config);\n    } else {\n      result.signatures = await message.verify(verificationKeys, date, config);\n    }\n    result.data = format === 'binary' ? message.getLiteralData() : message.getText();\n    if (message.fromStream && !signature) linkStreams(result, message);\n    if (expectSigned) {\n      if (result.signatures.length === 0) {\n        throw new Error('Message is not signed');\n      }\n      result.data = stream.concat([\n        result.data,\n        stream.fromAsync(async () => {\n          await util.anyPromise(result.signatures.map(sig => sig.verified));\n        })\n      ]);\n    }\n    result.data = await convertStream(result.data, message.fromStream, format);\n    return result;\n  } catch (err) {\n    throw util.wrapError('Error verifying signed message', err);\n  }\n}\n\n\n///////////////////////////////////////////////\n//                                           //\n//   Session key encryption and decryption   //\n//                                           //\n///////////////////////////////////////////////\n\n/**\n * Generate a new session key object, taking the algorithm preferences of the passed public keys into account, if any.\n * @param {Object} options\n * @param {PublicKey|PublicKey[]} [options.encryptionKeys] - Array of public keys or single key used to select algorithm preferences for. If no keys are given, the algorithm will be [config.preferredSymmetricAlgorithm]{@link module:config.preferredSymmetricAlgorithm}\n * @param {Date} [options.date=current date] - Date to select algorithm preferences at\n * @param {Object|Object[]} [options.encryptionUserIDs=primary user IDs] - User IDs to select algorithm preferences for\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<{ data: Uint8Array, algorithm: String }>} Object with session key data and algorithm.\n * @async\n * @static\n */\nexport async function generateSessionKey({ encryptionKeys, date = new Date(), encryptionUserIDs = [], config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  encryptionKeys = toArray(encryptionKeys); encryptionUserIDs = toArray(encryptionUserIDs);\n  if (rest.publicKeys) throw new Error('The `publicKeys` option has been removed from openpgp.generateSessionKey, pass `encryptionKeys` instead');\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  try {\n    const sessionKeys = await Message.generateSessionKey(encryptionKeys, date, encryptionUserIDs, config);\n    return sessionKeys;\n  } catch (err) {\n    throw util.wrapError('Error generating session key', err);\n  }\n}\n\n/**\n * Encrypt a symmetric session key with public keys, passwords, or both at once.\n * At least one of `encryptionKeys` or `passwords` must be specified.\n * @param {Object} options\n * @param {Uint8Array} options.data - The session key to be encrypted e.g. 16 random bytes (for aes128)\n * @param {String} options.algorithm - Algorithm of the symmetric session key e.g. 'aes128' or 'aes256'\n * @param {String} [options.aeadAlgorithm] - AEAD algorithm, e.g. 'eax' or 'ocb'\n * @param {PublicKey|PublicKey[]} [options.encryptionKeys] - Array of public keys or single key, used to encrypt the key\n * @param {String|String[]} [options.passwords] - Passwords for the message\n * @param {'armored'|'binary'} [options.format='armored'] - Format of the returned value\n * @param {Boolean} [options.wildcard=false] - Use a key ID of 0 instead of the public key IDs\n * @param {KeyID|KeyID[]} [options.encryptionKeyIDs=latest-created valid encryption (sub)keys] - Array of key IDs to use for encryption. Each encryptionKeyIDs[i] corresponds to encryptionKeys[i]\n * @param {Date} [options.date=current date] - Override the date\n * @param {Object|Object[]} [options.encryptionUserIDs=primary user IDs] - Array of user IDs to encrypt for, one per key in `encryptionKeys`, e.g. `[{ name: 'Phil Zimmermann', email: 'phil@openpgp.org' }]`\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<String|Uint8Array>} Encrypted session keys (string if `armor` was true, the default; Uint8Array if `armor` was false).\n * @async\n * @static\n */\nexport async function encryptSessionKey({ data, algorithm, aeadAlgorithm, encryptionKeys, passwords, format = 'armored', wildcard = false, encryptionKeyIDs = [], date = new Date(), encryptionUserIDs = [], config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  checkBinary(data); checkString(algorithm, 'algorithm'); checkOutputMessageFormat(format);\n  encryptionKeys = toArray(encryptionKeys); passwords = toArray(passwords); encryptionKeyIDs = toArray(encryptionKeyIDs); encryptionUserIDs = toArray(encryptionUserIDs);\n  if (rest.publicKeys) throw new Error('The `publicKeys` option has been removed from openpgp.encryptSessionKey, pass `encryptionKeys` instead');\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  if ((!encryptionKeys || encryptionKeys.length === 0) && (!passwords || passwords.length === 0)) {\n    throw new Error('No encryption keys or passwords provided.');\n  }\n\n  try {\n    const message = await Message.encryptSessionKey(data, algorithm, aeadAlgorithm, encryptionKeys, passwords, wildcard, encryptionKeyIDs, date, encryptionUserIDs, config);\n    return formatObject(message, format, config);\n  } catch (err) {\n    throw util.wrapError('Error encrypting session key', err);\n  }\n}\n\n/**\n * Decrypt symmetric session keys using private keys or passwords (not both).\n * One of `decryptionKeys` or `passwords` must be specified.\n * @param {Object} options\n * @param {Message} options.message - A message object containing the encrypted session key packets\n * @param {PrivateKey|PrivateKey[]} [options.decryptionKeys] - Private keys with decrypted secret key data\n * @param {String|String[]} [options.passwords] - Passwords to decrypt the session key\n * @param {Date} [options.date] - Date to use for key verification instead of the current time\n * @param {Object} [options.config] - Custom configuration settings to overwrite those in [config]{@link module:config}\n * @returns {Promise<Object[]>} Array of decrypted session key, algorithm pairs in the form:\n *                                            { data:Uint8Array, algorithm:String }\n * @throws if no session key could be found or decrypted\n * @async\n * @static\n */\nexport async function decryptSessionKeys({ message, decryptionKeys, passwords, date = new Date(), config, ...rest }) {\n  config = { ...defaultConfig, ...config }; checkConfig(config);\n  checkMessage(message); decryptionKeys = toArray(decryptionKeys); passwords = toArray(passwords);\n  if (rest.privateKeys) throw new Error('The `privateKeys` option has been removed from openpgp.decryptSessionKeys, pass `decryptionKeys` instead');\n  const unknownOptions = Object.keys(rest); if (unknownOptions.length > 0) throw new Error(`Unknown option: ${unknownOptions.join(', ')}`);\n\n  try {\n    const sessionKeys = await message.decryptSessionKeys(decryptionKeys, passwords, date, config);\n    return sessionKeys;\n  } catch (err) {\n    throw util.wrapError('Error decrypting session keys', err);\n  }\n}\n\n\n//////////////////////////\n//                      //\n//   Helper functions   //\n//                      //\n//////////////////////////\n\n\n/**\n * Input validation\n * @private\n */\nfunction checkString(data, name) {\n  if (!util.isString(data)) {\n    throw new Error('Parameter [' + (name || 'data') + '] must be of type String');\n  }\n}\nfunction checkBinary(data, name) {\n  if (!util.isUint8Array(data)) {\n    throw new Error('Parameter [' + (name || 'data') + '] must be of type Uint8Array');\n  }\n}\nfunction checkMessage(message) {\n  if (!(message instanceof Message)) {\n    throw new Error('Parameter [message] needs to be of type Message');\n  }\n}\nfunction checkCleartextOrMessage(message) {\n  if (!(message instanceof CleartextMessage) && !(message instanceof Message)) {\n    throw new Error('Parameter [message] needs to be of type Message or CleartextMessage');\n  }\n}\nfunction checkOutputMessageFormat(format) {\n  if (format !== 'armored' && format !== 'binary' && format !== 'object') {\n    throw new Error(`Unsupported format ${format}`);\n  }\n}\nconst defaultConfigPropsCount = Object.keys(defaultConfig).length;\nfunction checkConfig(config) {\n  const inputConfigProps = Object.keys(config);\n  if (inputConfigProps.length !== defaultConfigPropsCount) {\n    for (const inputProp of inputConfigProps) {\n      if (defaultConfig[inputProp] === undefined) {\n        throw new Error(`Unknown config property: ${inputProp}`);\n      }\n    }\n  }\n}\n\n/**\n * Normalize parameter to an array if it is not undefined.\n * @param {Object} param - the parameter to be normalized\n * @returns {Array<Object>|undefined} The resulting array or undefined.\n * @private\n */\nfunction toArray(param) {\n  if (param && !util.isArray(param)) {\n    param = [param];\n  }\n  return param;\n}\n\n/**\n * Convert data to or from Stream\n * @param {Object} data - the data to convert\n * @param {'web'|'ponyfill'|'node'|false} streaming - Whether to return a ReadableStream, and of what type\n * @param {'utf8'|'binary'} [encoding] - How to return data in Node Readable streams\n * @returns {Promise<Object>} The data in the respective format.\n * @async\n * @private\n */\nasync function convertStream(data, streaming, encoding = 'utf8') {\n  const streamType = util.isStream(data);\n  if (streamType === 'array') {\n    return stream.readToEnd(data);\n  }\n  if (streaming === 'node') {\n    data = stream.webToNode(data);\n    if (encoding !== 'binary') data.setEncoding(encoding);\n    return data;\n  }\n  if (streaming === 'web' && streamType === 'ponyfill') {\n    return stream.toNativeReadable(data);\n  }\n  return data;\n}\n\n/**\n * Link result.data to the message stream for cancellation.\n * Also, forward errors in the message to result.data.\n * @param {Object} result - the data to convert\n * @param {Message} message - message object\n * @returns {Object}\n * @private\n */\nfunction linkStreams(result, message) {\n  result.data = stream.transformPair(message.packets.stream, async (readable, writable) => {\n    await stream.pipe(result.data, writable, {\n      preventClose: true\n    });\n    const writer = stream.getWriter(writable);\n    try {\n      // Forward errors in the message stream to result.data.\n      await stream.readToEnd(readable, _ => _);\n      await writer.close();\n    } catch (e) {\n      await writer.abort(e);\n    }\n  });\n}\n\n/**\n * Convert the object to the given format\n * @param {Key|Message} object\n * @param {'armored'|'binary'|'object'} format\n * @param {Object} config - Full configuration\n * @returns {String|Uint8Array|Object}\n */\nfunction formatObject(object, format, config) {\n  switch (format) {\n    case 'object':\n      return object;\n    case 'armored':\n      return object.armor(config);\n    case 'binary':\n      return object.write();\n    default:\n      throw new Error(`Unsupported format ${format}`);\n  }\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","/**\n * web-streams-polyfill v3.0.3\n */\n/// <reference lib=\"es2015.symbol\" />\nconst SymbolPolyfill = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ?\n    Symbol :\n    description => `Symbol(${description})`;\n\n/// <reference lib=\"dom\" />\nfunction noop() {\n    return undefined;\n}\nfunction getGlobals() {\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    else if (typeof window !== 'undefined') {\n        return window;\n    }\n    else if (typeof global !== 'undefined') {\n        return global;\n    }\n    return undefined;\n}\nconst globals = getGlobals();\n\nfunction typeIsObject(x) {\n    return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\nconst rethrowAssertionErrorRejection = noop;\n\nconst originalPromise = Promise;\nconst originalPromiseThen = Promise.prototype.then;\nconst originalPromiseResolve = Promise.resolve.bind(originalPromise);\nconst originalPromiseReject = Promise.reject.bind(originalPromise);\nfunction newPromise(executor) {\n    return new originalPromise(executor);\n}\nfunction promiseResolvedWith(value) {\n    return originalPromiseResolve(value);\n}\nfunction promiseRejectedWith(reason) {\n    return originalPromiseReject(reason);\n}\nfunction PerformPromiseThen(promise, onFulfilled, onRejected) {\n    // There doesn't appear to be any way to correctly emulate the behaviour from JavaScript, so this is just an\n    // approximation.\n    return originalPromiseThen.call(promise, onFulfilled, onRejected);\n}\nfunction uponPromise(promise, onFulfilled, onRejected) {\n    PerformPromiseThen(PerformPromiseThen(promise, onFulfilled, onRejected), undefined, rethrowAssertionErrorRejection);\n}\nfunction uponFulfillment(promise, onFulfilled) {\n    uponPromise(promise, onFulfilled);\n}\nfunction uponRejection(promise, onRejected) {\n    uponPromise(promise, undefined, onRejected);\n}\nfunction transformPromiseWith(promise, fulfillmentHandler, rejectionHandler) {\n    return PerformPromiseThen(promise, fulfillmentHandler, rejectionHandler);\n}\nfunction setPromiseIsHandledToTrue(promise) {\n    PerformPromiseThen(promise, undefined, rethrowAssertionErrorRejection);\n}\nconst queueMicrotask = (() => {\n    const globalQueueMicrotask = globals && globals.queueMicrotask;\n    if (typeof globalQueueMicrotask === 'function') {\n        return globalQueueMicrotask;\n    }\n    const resolvedPromise = promiseResolvedWith(undefined);\n    return (fn) => PerformPromiseThen(resolvedPromise, fn);\n})();\nfunction reflectCall(F, V, args) {\n    if (typeof F !== 'function') {\n        throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n}\nfunction promiseCall(F, V, args) {\n    try {\n        return promiseResolvedWith(reflectCall(F, V, args));\n    }\n    catch (value) {\n        return promiseRejectedWith(value);\n    }\n}\n\n// Original from Chromium\n// https://chromium.googlesource.com/chromium/src/+/0aee4434a4dba42a42abaea9bfbc0cd196a63bc1/third_party/blink/renderer/core/streams/SimpleQueue.js\nconst QUEUE_MAX_ARRAY_SIZE = 16384;\n/**\n * Simple queue structure.\n *\n * Avoids scalability issues with using a packed array directly by using\n * multiple arrays in a linked list and keeping the array size bounded.\n */\nclass SimpleQueue {\n    constructor() {\n        this._cursor = 0;\n        this._size = 0;\n        // _front and _back are always defined.\n        this._front = {\n            _elements: [],\n            _next: undefined\n        };\n        this._back = this._front;\n        // The cursor is used to avoid calling Array.shift().\n        // It contains the index of the front element of the array inside the\n        // front-most node. It is always in the range [0, QUEUE_MAX_ARRAY_SIZE).\n        this._cursor = 0;\n        // When there is only one node, size === elements.length - cursor.\n        this._size = 0;\n    }\n    get length() {\n        return this._size;\n    }\n    // For exception safety, this method is structured in order:\n    // 1. Read state\n    // 2. Calculate required state mutations\n    // 3. Perform state mutations\n    push(element) {\n        const oldBack = this._back;\n        let newBack = oldBack;\n        if (oldBack._elements.length === QUEUE_MAX_ARRAY_SIZE - 1) {\n            newBack = {\n                _elements: [],\n                _next: undefined\n            };\n        }\n        // push() is the mutation most likely to throw an exception, so it\n        // goes first.\n        oldBack._elements.push(element);\n        if (newBack !== oldBack) {\n            this._back = newBack;\n            oldBack._next = newBack;\n        }\n        ++this._size;\n    }\n    // Like push(), shift() follows the read -> calculate -> mutate pattern for\n    // exception safety.\n    shift() { // must not be called on an empty queue\n        const oldFront = this._front;\n        let newFront = oldFront;\n        const oldCursor = this._cursor;\n        let newCursor = oldCursor + 1;\n        const elements = oldFront._elements;\n        const element = elements[oldCursor];\n        if (newCursor === QUEUE_MAX_ARRAY_SIZE) {\n            newFront = oldFront._next;\n            newCursor = 0;\n        }\n        // No mutations before this point.\n        --this._size;\n        this._cursor = newCursor;\n        if (oldFront !== newFront) {\n            this._front = newFront;\n        }\n        // Permit shifted element to be garbage collected.\n        elements[oldCursor] = undefined;\n        return element;\n    }\n    // The tricky thing about forEach() is that it can be called\n    // re-entrantly. The queue may be mutated inside the callback. It is easy to\n    // see that push() within the callback has no negative effects since the end\n    // of the queue is checked for on every iteration. If shift() is called\n    // repeatedly within the callback then the next iteration may return an\n    // element that has been removed. In this case the callback will be called\n    // with undefined values until we either \"catch up\" with elements that still\n    // exist or reach the back of the queue.\n    forEach(callback) {\n        let i = this._cursor;\n        let node = this._front;\n        let elements = node._elements;\n        while (i !== elements.length || node._next !== undefined) {\n            if (i === elements.length) {\n                node = node._next;\n                elements = node._elements;\n                i = 0;\n                if (elements.length === 0) {\n                    break;\n                }\n            }\n            callback(elements[i]);\n            ++i;\n        }\n    }\n    // Return the element that would be returned if shift() was called now,\n    // without modifying the queue.\n    peek() { // must not be called on an empty queue\n        const front = this._front;\n        const cursor = this._cursor;\n        return front._elements[cursor];\n    }\n}\n\nfunction ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n        defaultReaderClosedPromiseInitialize(reader);\n    }\n    else if (stream._state === 'closed') {\n        defaultReaderClosedPromiseInitializeAsResolved(reader);\n    }\n    else {\n        defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n    }\n}\n// A client of ReadableStreamDefaultReader and ReadableStreamBYOBReader may use these functions directly to bypass state\n// check.\nfunction ReadableStreamReaderGenericCancel(reader, reason) {\n    const stream = reader._ownerReadableStream;\n    return ReadableStreamCancel(stream, reason);\n}\nfunction ReadableStreamReaderGenericRelease(reader) {\n    if (reader._ownerReadableStream._state === 'readable') {\n        defaultReaderClosedPromiseReject(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n    }\n    else {\n        defaultReaderClosedPromiseResetToRejected(reader, new TypeError(`Reader was released and can no longer be used to monitor the stream's closedness`));\n    }\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n}\n// Helper functions for the readers.\nfunction readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n}\n// Helper functions for the ReadableStreamDefaultReader.\nfunction defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = newPromise((resolve, reject) => {\n        reader._closedPromise_resolve = resolve;\n        reader._closedPromise_reject = reject;\n    });\n}\nfunction defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    defaultReaderClosedPromiseInitialize(reader);\n    defaultReaderClosedPromiseReject(reader, reason);\n}\nfunction defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    defaultReaderClosedPromiseInitialize(reader);\n    defaultReaderClosedPromiseResolve(reader);\n}\nfunction defaultReaderClosedPromiseReject(reader, reason) {\n    if (reader._closedPromise_reject === undefined) {\n        return;\n    }\n    setPromiseIsHandledToTrue(reader._closedPromise);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n}\nfunction defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    defaultReaderClosedPromiseInitializeAsRejected(reader, reason);\n}\nfunction defaultReaderClosedPromiseResolve(reader) {\n    if (reader._closedPromise_resolve === undefined) {\n        return;\n    }\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n}\n\nconst AbortSteps = SymbolPolyfill('[[AbortSteps]]');\nconst ErrorSteps = SymbolPolyfill('[[ErrorSteps]]');\nconst CancelSteps = SymbolPolyfill('[[CancelSteps]]');\nconst PullSteps = SymbolPolyfill('[[PullSteps]]');\n\n/// <reference lib=\"es2015.core\" />\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isFinite#Polyfill\nconst NumberIsFinite = Number.isFinite || function (x) {\n    return typeof x === 'number' && isFinite(x);\n};\n\n/// <reference lib=\"es2015.core\" />\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc#Polyfill\nconst MathTrunc = Math.trunc || function (v) {\n    return v < 0 ? Math.ceil(v) : Math.floor(v);\n};\n\n// https://heycam.github.io/webidl/#idl-dictionaries\nfunction isDictionary(x) {\n    return typeof x === 'object' || typeof x === 'function';\n}\nfunction assertDictionary(obj, context) {\n    if (obj !== undefined && !isDictionary(obj)) {\n        throw new TypeError(`${context} is not an object.`);\n    }\n}\n// https://heycam.github.io/webidl/#idl-callback-functions\nfunction assertFunction(x, context) {\n    if (typeof x !== 'function') {\n        throw new TypeError(`${context} is not a function.`);\n    }\n}\n// https://heycam.github.io/webidl/#idl-object\nfunction isObject(x) {\n    return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\nfunction assertObject(x, context) {\n    if (!isObject(x)) {\n        throw new TypeError(`${context} is not an object.`);\n    }\n}\nfunction assertRequiredArgument(x, position, context) {\n    if (x === undefined) {\n        throw new TypeError(`Parameter ${position} is required in '${context}'.`);\n    }\n}\nfunction assertRequiredField(x, field, context) {\n    if (x === undefined) {\n        throw new TypeError(`${field} is required in '${context}'.`);\n    }\n}\n// https://heycam.github.io/webidl/#idl-unrestricted-double\nfunction convertUnrestrictedDouble(value) {\n    return Number(value);\n}\nfunction censorNegativeZero(x) {\n    return x === 0 ? 0 : x;\n}\nfunction integerPart(x) {\n    return censorNegativeZero(MathTrunc(x));\n}\n// https://heycam.github.io/webidl/#idl-unsigned-long-long\nfunction convertUnsignedLongLongWithEnforceRange(value, context) {\n    const lowerBound = 0;\n    const upperBound = Number.MAX_SAFE_INTEGER;\n    let x = Number(value);\n    x = censorNegativeZero(x);\n    if (!NumberIsFinite(x)) {\n        throw new TypeError(`${context} is not a finite number`);\n    }\n    x = integerPart(x);\n    if (x < lowerBound || x > upperBound) {\n        throw new TypeError(`${context} is outside the accepted range of ${lowerBound} to ${upperBound}, inclusive`);\n    }\n    if (!NumberIsFinite(x) || x === 0) {\n        return 0;\n    }\n    // TODO Use BigInt if supported?\n    // let xBigInt = BigInt(integerPart(x));\n    // xBigInt = BigInt.asUintN(64, xBigInt);\n    // return Number(xBigInt);\n    return x;\n}\n\nfunction assertReadableStream(x, context) {\n    if (!IsReadableStream(x)) {\n        throw new TypeError(`${context} is not a ReadableStream.`);\n    }\n}\n\n// Abstract operations for the ReadableStream.\nfunction AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n}\n// ReadableStream API exposed for controllers.\nfunction ReadableStreamAddReadRequest(stream, readRequest) {\n    stream._reader._readRequests.push(readRequest);\n}\nfunction ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    const reader = stream._reader;\n    const readRequest = reader._readRequests.shift();\n    if (done) {\n        readRequest._closeSteps();\n    }\n    else {\n        readRequest._chunkSteps(chunk);\n    }\n}\nfunction ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n}\nfunction ReadableStreamHasDefaultReader(stream) {\n    const reader = stream._reader;\n    if (reader === undefined) {\n        return false;\n    }\n    if (!IsReadableStreamDefaultReader(reader)) {\n        return false;\n    }\n    return true;\n}\n/**\n * A default reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nclass ReadableStreamDefaultReader {\n    constructor(stream) {\n        assertRequiredArgument(stream, 1, 'ReadableStreamDefaultReader');\n        assertReadableStream(stream, 'First parameter');\n        if (IsReadableStreamLocked(stream)) {\n            throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n        }\n        ReadableStreamReaderGenericInitialize(this, stream);\n        this._readRequests = new SimpleQueue();\n    }\n    /**\n     * Returns a promise that will be fulfilled when the stream becomes closed,\n     * or rejected if the stream ever errors or the reader's lock is released before the stream finishes closing.\n     */\n    get closed() {\n        if (!IsReadableStreamDefaultReader(this)) {\n            return promiseRejectedWith(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n    }\n    /**\n     * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n     */\n    cancel(reason = undefined) {\n        if (!IsReadableStreamDefaultReader(this)) {\n            return promiseRejectedWith(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n    }\n    /**\n     * Returns a promise that allows access to the next chunk from the stream's internal queue, if available.\n     *\n     * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n     */\n    read() {\n        if (!IsReadableStreamDefaultReader(this)) {\n            return promiseRejectedWith(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('read from'));\n        }\n        let resolvePromise;\n        let rejectPromise;\n        const promise = newPromise((resolve, reject) => {\n            resolvePromise = resolve;\n            rejectPromise = reject;\n        });\n        const readRequest = {\n            _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n            _closeSteps: () => resolvePromise({ value: undefined, done: true }),\n            _errorSteps: e => rejectPromise(e)\n        };\n        ReadableStreamDefaultReaderRead(this, readRequest);\n        return promise;\n    }\n    /**\n     * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n     * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n     * from now on; otherwise, the reader will appear closed.\n     *\n     * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n     * the reader's {@link ReadableStreamDefaultReader.read | read()} method has not yet been settled. Attempting to\n     * do so will throw a `TypeError` and leave the reader locked to the stream.\n     */\n    releaseLock() {\n        if (!IsReadableStreamDefaultReader(this)) {\n            throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n            return;\n        }\n        if (this._readRequests.length > 0) {\n            throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n    }\n}\nObject.defineProperties(ReadableStreamDefaultReader.prototype, {\n    cancel: { enumerable: true },\n    read: { enumerable: true },\n    releaseLock: { enumerable: true },\n    closed: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableStreamDefaultReader.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableStreamDefaultReader',\n        configurable: true\n    });\n}\n// Abstract operations for the readers.\nfunction IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n        return false;\n    }\n    return true;\n}\nfunction ReadableStreamDefaultReaderRead(reader, readRequest) {\n    const stream = reader._ownerReadableStream;\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n        readRequest._closeSteps();\n    }\n    else if (stream._state === 'errored') {\n        readRequest._errorSteps(stream._storedError);\n    }\n    else {\n        stream._readableStreamController[PullSteps](readRequest);\n    }\n}\n// Helper functions for the ReadableStreamDefaultReader.\nfunction defaultReaderBrandCheckException(name) {\n    return new TypeError(`ReadableStreamDefaultReader.prototype.${name} can only be used on a ReadableStreamDefaultReader`);\n}\n\n/// <reference lib=\"es2018.asynciterable\" />\nlet AsyncIteratorPrototype;\nif (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n    // We're running inside a ES2018+ environment, but we're compiling to an older syntax.\n    // We cannot access %AsyncIteratorPrototype% without non-ES2018 syntax, but we can re-create it.\n    AsyncIteratorPrototype = {\n        // 25.1.3.1 %AsyncIteratorPrototype% [ @@asyncIterator ] ( )\n        // https://tc39.github.io/ecma262/#sec-asynciteratorprototype-asynciterator\n        [SymbolPolyfill.asyncIterator]() {\n            return this;\n        }\n    };\n    Object.defineProperty(AsyncIteratorPrototype, SymbolPolyfill.asyncIterator, { enumerable: false });\n}\n\n/// <reference lib=\"es2018.asynciterable\" />\nclass ReadableStreamAsyncIteratorImpl {\n    constructor(reader, preventCancel) {\n        this._ongoingPromise = undefined;\n        this._isFinished = false;\n        this._reader = reader;\n        this._preventCancel = preventCancel;\n    }\n    next() {\n        const nextSteps = () => this._nextSteps();\n        this._ongoingPromise = this._ongoingPromise ?\n            transformPromiseWith(this._ongoingPromise, nextSteps, nextSteps) :\n            nextSteps();\n        return this._ongoingPromise;\n    }\n    return(value) {\n        const returnSteps = () => this._returnSteps(value);\n        return this._ongoingPromise ?\n            transformPromiseWith(this._ongoingPromise, returnSteps, returnSteps) :\n            returnSteps();\n    }\n    _nextSteps() {\n        if (this._isFinished) {\n            return Promise.resolve({ value: undefined, done: true });\n        }\n        const reader = this._reader;\n        if (reader._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('iterate'));\n        }\n        let resolvePromise;\n        let rejectPromise;\n        const promise = newPromise((resolve, reject) => {\n            resolvePromise = resolve;\n            rejectPromise = reject;\n        });\n        const readRequest = {\n            _chunkSteps: chunk => {\n                this._ongoingPromise = undefined;\n                // This needs to be delayed by one microtask, otherwise we stop pulling too early which breaks a test.\n                // FIXME Is this a bug in the specification, or in the test?\n                queueMicrotask(() => resolvePromise({ value: chunk, done: false }));\n            },\n            _closeSteps: () => {\n                this._ongoingPromise = undefined;\n                this._isFinished = true;\n                ReadableStreamReaderGenericRelease(reader);\n                resolvePromise({ value: undefined, done: true });\n            },\n            _errorSteps: reason => {\n                this._ongoingPromise = undefined;\n                this._isFinished = true;\n                ReadableStreamReaderGenericRelease(reader);\n                rejectPromise(reason);\n            }\n        };\n        ReadableStreamDefaultReaderRead(reader, readRequest);\n        return promise;\n    }\n    _returnSteps(value) {\n        if (this._isFinished) {\n            return Promise.resolve({ value, done: true });\n        }\n        this._isFinished = true;\n        const reader = this._reader;\n        if (reader._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('finish iterating'));\n        }\n        if (!this._preventCancel) {\n            const result = ReadableStreamReaderGenericCancel(reader, value);\n            ReadableStreamReaderGenericRelease(reader);\n            return transformPromiseWith(result, () => ({ value, done: true }));\n        }\n        ReadableStreamReaderGenericRelease(reader);\n        return promiseResolvedWith({ value, done: true });\n    }\n}\nconst ReadableStreamAsyncIteratorPrototype = {\n    next() {\n        if (!IsReadableStreamAsyncIterator(this)) {\n            return promiseRejectedWith(streamAsyncIteratorBrandCheckException('next'));\n        }\n        return this._asyncIteratorImpl.next();\n    },\n    return(value) {\n        if (!IsReadableStreamAsyncIterator(this)) {\n            return promiseRejectedWith(streamAsyncIteratorBrandCheckException('return'));\n        }\n        return this._asyncIteratorImpl.return(value);\n    }\n};\nif (AsyncIteratorPrototype !== undefined) {\n    Object.setPrototypeOf(ReadableStreamAsyncIteratorPrototype, AsyncIteratorPrototype);\n}\n// Abstract operations for the ReadableStream.\nfunction AcquireReadableStreamAsyncIterator(stream, preventCancel) {\n    const reader = AcquireReadableStreamDefaultReader(stream);\n    const impl = new ReadableStreamAsyncIteratorImpl(reader, preventCancel);\n    const iterator = Object.create(ReadableStreamAsyncIteratorPrototype);\n    iterator._asyncIteratorImpl = impl;\n    return iterator;\n}\nfunction IsReadableStreamAsyncIterator(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_asyncIteratorImpl')) {\n        return false;\n    }\n    return true;\n}\n// Helper functions for the ReadableStream.\nfunction streamAsyncIteratorBrandCheckException(name) {\n    return new TypeError(`ReadableStreamAsyncIterator.${name} can only be used on a ReadableSteamAsyncIterator`);\n}\n\n/// <reference lib=\"es2015.core\" />\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN#Polyfill\nconst NumberIsNaN = Number.isNaN || function (x) {\n    // eslint-disable-next-line no-self-compare\n    return x !== x;\n};\n\nfunction IsFiniteNonNegativeNumber(v) {\n    if (!IsNonNegativeNumber(v)) {\n        return false;\n    }\n    if (v === Infinity) {\n        return false;\n    }\n    return true;\n}\nfunction IsNonNegativeNumber(v) {\n    if (typeof v !== 'number') {\n        return false;\n    }\n    if (NumberIsNaN(v)) {\n        return false;\n    }\n    if (v < 0) {\n        return false;\n    }\n    return true;\n}\n\nfunction DequeueValue(container) {\n    const pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n        container._queueTotalSize = 0;\n    }\n    return pair.value;\n}\nfunction EnqueueValueWithSize(container, value, size) {\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n        throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({ value, size });\n    container._queueTotalSize += size;\n}\nfunction PeekQueueValue(container) {\n    const pair = container._queue.peek();\n    return pair.value;\n}\nfunction ResetQueue(container) {\n    container._queue = new SimpleQueue();\n    container._queueTotalSize = 0;\n}\n\nfunction CreateArrayFromList(elements) {\n    // We use arrays to represent lists, so this is basically a no-op.\n    // Do a slice though just in case we happen to depend on the unique-ness.\n    return elements.slice();\n}\nfunction CopyDataBlockBytes(dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n}\n// Not implemented correctly\nfunction TransferArrayBuffer(O) {\n    return O;\n}\n// Not implemented correctly\nfunction IsDetachedBuffer(O) {\n    return false;\n}\n\n/**\n * A pull-into request in a {@link ReadableByteStreamController}.\n *\n * @public\n */\nclass ReadableStreamBYOBRequest {\n    constructor() {\n        throw new TypeError('Illegal constructor');\n    }\n    /**\n     * Returns the view for writing in to, or `null` if the BYOB request has already been responded to.\n     */\n    get view() {\n        if (!IsReadableStreamBYOBRequest(this)) {\n            throw byobRequestBrandCheckException('view');\n        }\n        return this._view;\n    }\n    respond(bytesWritten) {\n        if (!IsReadableStreamBYOBRequest(this)) {\n            throw byobRequestBrandCheckException('respond');\n        }\n        assertRequiredArgument(bytesWritten, 1, 'respond');\n        bytesWritten = convertUnsignedLongLongWithEnforceRange(bytesWritten, 'First parameter');\n        if (this._associatedReadableByteStreamController === undefined) {\n            throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (IsDetachedBuffer(this._view.buffer)) ;\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n    }\n    respondWithNewView(view) {\n        if (!IsReadableStreamBYOBRequest(this)) {\n            throw byobRequestBrandCheckException('respondWithNewView');\n        }\n        assertRequiredArgument(view, 1, 'respondWithNewView');\n        if (!ArrayBuffer.isView(view)) {\n            throw new TypeError('You can only respond with array buffer views');\n        }\n        if (view.byteLength === 0) {\n            throw new TypeError('chunk must have non-zero byteLength');\n        }\n        if (view.buffer.byteLength === 0) {\n            throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n            throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n    }\n}\nObject.defineProperties(ReadableStreamBYOBRequest.prototype, {\n    respond: { enumerable: true },\n    respondWithNewView: { enumerable: true },\n    view: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableStreamBYOBRequest.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableStreamBYOBRequest',\n        configurable: true\n    });\n}\n/**\n * Allows control of a {@link ReadableStream | readable byte stream}'s state and internal queue.\n *\n * @public\n */\nclass ReadableByteStreamController {\n    constructor() {\n        throw new TypeError('Illegal constructor');\n    }\n    /**\n     * Returns the current BYOB pull request, or `null` if there isn't one.\n     */\n    get byobRequest() {\n        if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === null && this._pendingPullIntos.length > 0) {\n            const firstDescriptor = this._pendingPullIntos.peek();\n            const view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n            const byobRequest = Object.create(ReadableStreamBYOBRequest.prototype);\n            SetUpReadableStreamBYOBRequest(byobRequest, this, view);\n            this._byobRequest = byobRequest;\n        }\n        return this._byobRequest;\n    }\n    /**\n     * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n     * over-full. An underlying byte source ought to use this information to determine when and how to apply backpressure.\n     */\n    get desiredSize() {\n        if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n    }\n    /**\n     * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n     * the stream, but once those are read, the stream will become closed.\n     */\n    close() {\n        if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested) {\n            throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        const state = this._controlledReadableByteStream._state;\n        if (state !== 'readable') {\n            throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be closed`);\n        }\n        ReadableByteStreamControllerClose(this);\n    }\n    enqueue(chunk) {\n        if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        assertRequiredArgument(chunk, 1, 'enqueue');\n        if (!ArrayBuffer.isView(chunk)) {\n            throw new TypeError('chunk must be an array buffer view');\n        }\n        if (chunk.byteLength === 0) {\n            throw new TypeError('chunk must have non-zero byteLength');\n        }\n        if (chunk.buffer.byteLength === 0) {\n            throw new TypeError(`chunk's buffer must have non-zero byteLength`);\n        }\n        if (this._closeRequested) {\n            throw new TypeError('stream is closed or draining');\n        }\n        const state = this._controlledReadableByteStream._state;\n        if (state !== 'readable') {\n            throw new TypeError(`The stream (in ${state} state) is not in the readable state and cannot be enqueued to`);\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n    }\n    /**\n     * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n     */\n    error(e = undefined) {\n        if (!IsReadableByteStreamController(this)) {\n            throw byteStreamControllerBrandCheckException('error');\n        }\n        ReadableByteStreamControllerError(this, e);\n    }\n    /** @internal */\n    [CancelSteps](reason) {\n        if (this._pendingPullIntos.length > 0) {\n            const firstDescriptor = this._pendingPullIntos.peek();\n            firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        const result = this._cancelAlgorithm(reason);\n        ReadableByteStreamControllerClearAlgorithms(this);\n        return result;\n    }\n    /** @internal */\n    [PullSteps](readRequest) {\n        const stream = this._controlledReadableByteStream;\n        if (this._queueTotalSize > 0) {\n            const entry = this._queue.shift();\n            this._queueTotalSize -= entry.byteLength;\n            ReadableByteStreamControllerHandleQueueDrain(this);\n            const view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n            readRequest._chunkSteps(view);\n            return;\n        }\n        const autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n            let buffer;\n            try {\n                buffer = new ArrayBuffer(autoAllocateChunkSize);\n            }\n            catch (bufferE) {\n                readRequest._errorSteps(bufferE);\n                return;\n            }\n            const pullIntoDescriptor = {\n                buffer,\n                byteOffset: 0,\n                byteLength: autoAllocateChunkSize,\n                bytesFilled: 0,\n                elementSize: 1,\n                viewConstructor: Uint8Array,\n                readerType: 'default'\n            };\n            this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        ReadableStreamAddReadRequest(stream, readRequest);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n    }\n}\nObject.defineProperties(ReadableByteStreamController.prototype, {\n    close: { enumerable: true },\n    enqueue: { enumerable: true },\n    error: { enumerable: true },\n    byobRequest: { enumerable: true },\n    desiredSize: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableByteStreamController.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableByteStreamController',\n        configurable: true\n    });\n}\n// Abstract operations for the ReadableByteStreamController.\nfunction IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableByteStream')) {\n        return false;\n    }\n    return true;\n}\nfunction IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n        return false;\n    }\n    return true;\n}\nfunction ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    const shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (!shouldPull) {\n        return;\n    }\n    if (controller._pulling) {\n        controller._pullAgain = true;\n        return;\n    }\n    controller._pulling = true;\n    // TODO: Test controller argument\n    const pullPromise = controller._pullAlgorithm();\n    uponPromise(pullPromise, () => {\n        controller._pulling = false;\n        if (controller._pullAgain) {\n            controller._pullAgain = false;\n            ReadableByteStreamControllerCallPullIfNeeded(controller);\n        }\n    }, e => {\n        ReadableByteStreamControllerError(controller, e);\n    });\n}\nfunction ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = new SimpleQueue();\n}\nfunction ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    let done = false;\n    if (stream._state === 'closed') {\n        done = true;\n    }\n    const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n        ReadableStreamFulfillReadRequest(stream, filledView, done);\n    }\n    else {\n        ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n}\nfunction ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    const bytesFilled = pullIntoDescriptor.bytesFilled;\n    const elementSize = pullIntoDescriptor.elementSize;\n    return new pullIntoDescriptor.viewConstructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n}\nfunction ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({ buffer, byteOffset, byteLength });\n    controller._queueTotalSize += byteLength;\n}\nfunction ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    const elementSize = pullIntoDescriptor.elementSize;\n    const currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    const maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    const maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    const maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    let totalBytesToCopyRemaining = maxBytesToCopy;\n    let ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n        totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n        ready = true;\n    }\n    const queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n        const headOfQueue = queue.peek();\n        const bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n        const destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n        CopyDataBlockBytes(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n        if (headOfQueue.byteLength === bytesToCopy) {\n            queue.shift();\n        }\n        else {\n            headOfQueue.byteOffset += bytesToCopy;\n            headOfQueue.byteLength -= bytesToCopy;\n        }\n        controller._queueTotalSize -= bytesToCopy;\n        ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n        totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    return ready;\n}\nfunction ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n}\nfunction ReadableByteStreamControllerHandleQueueDrain(controller) {\n    if (controller._queueTotalSize === 0 && controller._closeRequested) {\n        ReadableByteStreamControllerClearAlgorithms(controller);\n        ReadableStreamClose(controller._controlledReadableByteStream);\n    }\n    else {\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n}\nfunction ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === null) {\n        return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = null;\n    controller._byobRequest = null;\n}\nfunction ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    while (controller._pendingPullIntos.length > 0) {\n        if (controller._queueTotalSize === 0) {\n            return;\n        }\n        const pullIntoDescriptor = controller._pendingPullIntos.peek();\n        if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n            ReadableByteStreamControllerShiftPendingPullInto(controller);\n            ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n        }\n    }\n}\nfunction ReadableByteStreamControllerPullInto(controller, view, readIntoRequest) {\n    const stream = controller._controlledReadableByteStream;\n    let elementSize = 1;\n    if (view.constructor !== DataView) {\n        elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    const ctor = view.constructor;\n    const buffer = TransferArrayBuffer(view.buffer);\n    const pullIntoDescriptor = {\n        buffer,\n        byteOffset: view.byteOffset,\n        byteLength: view.byteLength,\n        bytesFilled: 0,\n        elementSize,\n        viewConstructor: ctor,\n        readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n        controller._pendingPullIntos.push(pullIntoDescriptor);\n        // No ReadableByteStreamControllerCallPullIfNeeded() call since:\n        // - No change happens on desiredSize\n        // - The source has already been notified of that there's at least 1 pending read(view)\n        ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n        return;\n    }\n    if (stream._state === 'closed') {\n        const emptyView = new ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n        readIntoRequest._closeSteps(emptyView);\n        return;\n    }\n    if (controller._queueTotalSize > 0) {\n        if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor)) {\n            const filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n            ReadableByteStreamControllerHandleQueueDrain(controller);\n            readIntoRequest._chunkSteps(filledView);\n            return;\n        }\n        if (controller._closeRequested) {\n            const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n            ReadableByteStreamControllerError(controller, e);\n            readIntoRequest._errorSteps(e);\n            return;\n        }\n    }\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    ReadableStreamAddReadIntoRequest(stream, readIntoRequest);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\nfunction ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    const stream = controller._controlledReadableByteStream;\n    if (ReadableStreamHasBYOBReader(stream)) {\n        while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n            const pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n            ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n        }\n    }\n}\nfunction ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n        throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n        // TODO: Figure out whether we should detach the buffer or not here.\n        return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    const remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n        const end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n        const remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableByteStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n}\nfunction ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    const firstDescriptor = controller._pendingPullIntos.peek();\n    const state = controller._controlledReadableByteStream._state;\n    if (state === 'closed') {\n        if (bytesWritten !== 0) {\n            throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n        }\n        ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    }\n    else {\n        ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\nfunction ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    const descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n}\nfunction ReadableByteStreamControllerShouldCallPull(controller) {\n    const stream = controller._controlledReadableByteStream;\n    if (stream._state !== 'readable') {\n        return false;\n    }\n    if (controller._closeRequested) {\n        return false;\n    }\n    if (!controller._started) {\n        return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n        return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        return true;\n    }\n    const desiredSize = ReadableByteStreamControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n        return true;\n    }\n    return false;\n}\nfunction ReadableByteStreamControllerClearAlgorithms(controller) {\n    controller._pullAlgorithm = undefined;\n    controller._cancelAlgorithm = undefined;\n}\n// A client of ReadableByteStreamController may use these functions directly to bypass state check.\nfunction ReadableByteStreamControllerClose(controller) {\n    const stream = controller._controlledReadableByteStream;\n    if (controller._closeRequested || stream._state !== 'readable') {\n        return;\n    }\n    if (controller._queueTotalSize > 0) {\n        controller._closeRequested = true;\n        return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n        const firstPendingPullInto = controller._pendingPullIntos.peek();\n        if (firstPendingPullInto.bytesFilled > 0) {\n            const e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n            ReadableByteStreamControllerError(controller, e);\n            throw e;\n        }\n    }\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamClose(stream);\n}\nfunction ReadableByteStreamControllerEnqueue(controller, chunk) {\n    const stream = controller._controlledReadableByteStream;\n    if (controller._closeRequested || stream._state !== 'readable') {\n        return;\n    }\n    const buffer = chunk.buffer;\n    const byteOffset = chunk.byteOffset;\n    const byteLength = chunk.byteLength;\n    const transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream)) {\n        if (ReadableStreamGetNumReadRequests(stream) === 0) {\n            ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        }\n        else {\n            const transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n            ReadableStreamFulfillReadRequest(stream, transferredView, false);\n        }\n    }\n    else if (ReadableStreamHasBYOBReader(stream)) {\n        // TODO: Ideally in this branch detaching should happen only if the buffer is not consumed fully.\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n        ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    }\n    else {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n}\nfunction ReadableByteStreamControllerError(controller, e) {\n    const stream = controller._controlledReadableByteStream;\n    if (stream._state !== 'readable') {\n        return;\n    }\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableByteStreamControllerClearAlgorithms(controller);\n    ReadableStreamError(stream, e);\n}\nfunction ReadableByteStreamControllerGetDesiredSize(controller) {\n    const state = controller._controlledReadableByteStream._state;\n    if (state === 'errored') {\n        return null;\n    }\n    if (state === 'closed') {\n        return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n}\nfunction ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (!IsFiniteNonNegativeNumber(bytesWritten)) {\n        throw new RangeError('bytesWritten must be a finite');\n    }\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n}\nfunction ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    const firstDescriptor = controller._pendingPullIntos.peek();\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n        throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n        throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n}\nfunction SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize) {\n    controller._controlledReadableByteStream = stream;\n    controller._pullAgain = false;\n    controller._pulling = false;\n    controller._byobRequest = null;\n    // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n    controller._queue = controller._queueTotalSize = undefined;\n    ResetQueue(controller);\n    controller._closeRequested = false;\n    controller._started = false;\n    controller._strategyHWM = highWaterMark;\n    controller._pullAlgorithm = pullAlgorithm;\n    controller._cancelAlgorithm = cancelAlgorithm;\n    controller._autoAllocateChunkSize = autoAllocateChunkSize;\n    controller._pendingPullIntos = new SimpleQueue();\n    stream._readableStreamController = controller;\n    const startResult = startAlgorithm();\n    uponPromise(promiseResolvedWith(startResult), () => {\n        controller._started = true;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }, r => {\n        ReadableByteStreamControllerError(controller, r);\n    });\n}\nfunction SetUpReadableByteStreamControllerFromUnderlyingSource(stream, underlyingByteSource, highWaterMark) {\n    const controller = Object.create(ReadableByteStreamController.prototype);\n    let startAlgorithm = () => undefined;\n    let pullAlgorithm = () => promiseResolvedWith(undefined);\n    let cancelAlgorithm = () => promiseResolvedWith(undefined);\n    if (underlyingByteSource.start !== undefined) {\n        startAlgorithm = () => underlyingByteSource.start(controller);\n    }\n    if (underlyingByteSource.pull !== undefined) {\n        pullAlgorithm = () => underlyingByteSource.pull(controller);\n    }\n    if (underlyingByteSource.cancel !== undefined) {\n        cancelAlgorithm = reason => underlyingByteSource.cancel(reason);\n    }\n    const autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n    if (autoAllocateChunkSize === 0) {\n        throw new TypeError('autoAllocateChunkSize must be greater than 0');\n    }\n    SetUpReadableByteStreamController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, autoAllocateChunkSize);\n}\nfunction SetUpReadableStreamBYOBRequest(request, controller, view) {\n    request._associatedReadableByteStreamController = controller;\n    request._view = view;\n}\n// Helper functions for the ReadableStreamBYOBRequest.\nfunction byobRequestBrandCheckException(name) {\n    return new TypeError(`ReadableStreamBYOBRequest.prototype.${name} can only be used on a ReadableStreamBYOBRequest`);\n}\n// Helper functions for the ReadableByteStreamController.\nfunction byteStreamControllerBrandCheckException(name) {\n    return new TypeError(`ReadableByteStreamController.prototype.${name} can only be used on a ReadableByteStreamController`);\n}\n\n// Abstract operations for the ReadableStream.\nfunction AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n}\n// ReadableStream API exposed for controllers.\nfunction ReadableStreamAddReadIntoRequest(stream, readIntoRequest) {\n    stream._reader._readIntoRequests.push(readIntoRequest);\n}\nfunction ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    const reader = stream._reader;\n    const readIntoRequest = reader._readIntoRequests.shift();\n    if (done) {\n        readIntoRequest._closeSteps(chunk);\n    }\n    else {\n        readIntoRequest._chunkSteps(chunk);\n    }\n}\nfunction ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n}\nfunction ReadableStreamHasBYOBReader(stream) {\n    const reader = stream._reader;\n    if (reader === undefined) {\n        return false;\n    }\n    if (!IsReadableStreamBYOBReader(reader)) {\n        return false;\n    }\n    return true;\n}\n/**\n * A BYOB reader vended by a {@link ReadableStream}.\n *\n * @public\n */\nclass ReadableStreamBYOBReader {\n    constructor(stream) {\n        assertRequiredArgument(stream, 1, 'ReadableStreamBYOBReader');\n        assertReadableStream(stream, 'First parameter');\n        if (IsReadableStreamLocked(stream)) {\n            throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n        }\n        if (!IsReadableByteStreamController(stream._readableStreamController)) {\n            throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' +\n                'source');\n        }\n        ReadableStreamReaderGenericInitialize(this, stream);\n        this._readIntoRequests = new SimpleQueue();\n    }\n    /**\n     * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n     * the reader's lock is released before the stream finishes closing.\n     */\n    get closed() {\n        if (!IsReadableStreamBYOBReader(this)) {\n            return promiseRejectedWith(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n    }\n    /**\n     * If the reader is active, behaves the same as {@link ReadableStream.cancel | stream.cancel(reason)}.\n     */\n    cancel(reason = undefined) {\n        if (!IsReadableStreamBYOBReader(this)) {\n            return promiseRejectedWith(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n    }\n    /**\n     * Attempts to reads bytes into view, and returns a promise resolved with the result.\n     *\n     * If reading a chunk causes the queue to become empty, more data will be pulled from the underlying source.\n     */\n    read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n            return promiseRejectedWith(byobReaderBrandCheckException('read'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n            return promiseRejectedWith(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n            return promiseRejectedWith(new TypeError('view must have non-zero byteLength'));\n        }\n        if (view.buffer.byteLength === 0) {\n            return promiseRejectedWith(new TypeError(`view's buffer must have non-zero byteLength`));\n        }\n        if (this._ownerReadableStream === undefined) {\n            return promiseRejectedWith(readerLockException('read from'));\n        }\n        let resolvePromise;\n        let rejectPromise;\n        const promise = newPromise((resolve, reject) => {\n            resolvePromise = resolve;\n            rejectPromise = reject;\n        });\n        const readIntoRequest = {\n            _chunkSteps: chunk => resolvePromise({ value: chunk, done: false }),\n            _closeSteps: chunk => resolvePromise({ value: chunk, done: true }),\n            _errorSteps: e => rejectPromise(e)\n        };\n        ReadableStreamBYOBReaderRead(this, view, readIntoRequest);\n        return promise;\n    }\n    /**\n     * Releases the reader's lock on the corresponding stream. After the lock is released, the reader is no longer active.\n     * If the associated stream is errored when the lock is released, the reader will appear errored in the same way\n     * from now on; otherwise, the reader will appear closed.\n     *\n     * A reader's lock cannot be released while it still has a pending read request, i.e., if a promise returned by\n     * the reader's {@link ReadableStreamBYOBReader.read | read()} method has not yet been settled. Attempting to\n     * do so will throw a `TypeError` and leave the reader locked to the stream.\n     */\n    releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n            throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n            return;\n        }\n        if (this._readIntoRequests.length > 0) {\n            throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n    }\n}\nObject.defineProperties(ReadableStreamBYOBReader.prototype, {\n    cancel: { enumerable: true },\n    read: { enumerable: true },\n    releaseLock: { enumerable: true },\n    closed: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableStreamBYOBReader.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableStreamBYOBReader',\n        configurable: true\n    });\n}\n// Abstract operations for the readers.\nfunction IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n        return false;\n    }\n    return true;\n}\nfunction ReadableStreamBYOBReaderRead(reader, view, readIntoRequest) {\n    const stream = reader._ownerReadableStream;\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n        readIntoRequest._errorSteps(stream._storedError);\n    }\n    else {\n        ReadableByteStreamControllerPullInto(stream._readableStreamController, view, readIntoRequest);\n    }\n}\n// Helper functions for the ReadableStreamBYOBReader.\nfunction byobReaderBrandCheckException(name) {\n    return new TypeError(`ReadableStreamBYOBReader.prototype.${name} can only be used on a ReadableStreamBYOBReader`);\n}\n\nfunction ExtractHighWaterMark(strategy, defaultHWM) {\n    const { highWaterMark } = strategy;\n    if (highWaterMark === undefined) {\n        return defaultHWM;\n    }\n    if (NumberIsNaN(highWaterMark) || highWaterMark < 0) {\n        throw new RangeError('Invalid highWaterMark');\n    }\n    return highWaterMark;\n}\nfunction ExtractSizeAlgorithm(strategy) {\n    const { size } = strategy;\n    if (!size) {\n        return () => 1;\n    }\n    return size;\n}\n\nfunction convertQueuingStrategy(init, context) {\n    assertDictionary(init, context);\n    const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n    const size = init === null || init === void 0 ? void 0 : init.size;\n    return {\n        highWaterMark: highWaterMark === undefined ? undefined : convertUnrestrictedDouble(highWaterMark),\n        size: size === undefined ? undefined : convertQueuingStrategySize(size, `${context} has member 'size' that`)\n    };\n}\nfunction convertQueuingStrategySize(fn, context) {\n    assertFunction(fn, context);\n    return chunk => convertUnrestrictedDouble(fn(chunk));\n}\n\nfunction convertUnderlyingSink(original, context) {\n    assertDictionary(original, context);\n    const abort = original === null || original === void 0 ? void 0 : original.abort;\n    const close = original === null || original === void 0 ? void 0 : original.close;\n    const start = original === null || original === void 0 ? void 0 : original.start;\n    const type = original === null || original === void 0 ? void 0 : original.type;\n    const write = original === null || original === void 0 ? void 0 : original.write;\n    return {\n        abort: abort === undefined ?\n            undefined :\n            convertUnderlyingSinkAbortCallback(abort, original, `${context} has member 'abort' that`),\n        close: close === undefined ?\n            undefined :\n            convertUnderlyingSinkCloseCallback(close, original, `${context} has member 'close' that`),\n        start: start === undefined ?\n            undefined :\n            convertUnderlyingSinkStartCallback(start, original, `${context} has member 'start' that`),\n        write: write === undefined ?\n            undefined :\n            convertUnderlyingSinkWriteCallback(write, original, `${context} has member 'write' that`),\n        type\n    };\n}\nfunction convertUnderlyingSinkAbortCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return (reason) => promiseCall(fn, original, [reason]);\n}\nfunction convertUnderlyingSinkCloseCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return () => promiseCall(fn, original, []);\n}\nfunction convertUnderlyingSinkStartCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return (controller) => reflectCall(fn, original, [controller]);\n}\nfunction convertUnderlyingSinkWriteCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n}\n\nfunction assertWritableStream(x, context) {\n    if (!IsWritableStream(x)) {\n        throw new TypeError(`${context} is not a WritableStream.`);\n    }\n}\n\n/**\n * A writable stream represents a destination for data, into which you can write.\n *\n * @public\n */\nclass WritableStream {\n    constructor(rawUnderlyingSink = {}, rawStrategy = {}) {\n        if (rawUnderlyingSink === undefined) {\n            rawUnderlyingSink = null;\n        }\n        else {\n            assertObject(rawUnderlyingSink, 'First parameter');\n        }\n        const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n        const underlyingSink = convertUnderlyingSink(rawUnderlyingSink, 'First parameter');\n        InitializeWritableStream(this);\n        const type = underlyingSink.type;\n        if (type !== undefined) {\n            throw new RangeError('Invalid type is specified');\n        }\n        const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n        const highWaterMark = ExtractHighWaterMark(strategy, 1);\n        SetUpWritableStreamDefaultControllerFromUnderlyingSink(this, underlyingSink, highWaterMark, sizeAlgorithm);\n    }\n    /**\n     * Returns whether or not the writable stream is locked to a writer.\n     */\n    get locked() {\n        if (!IsWritableStream(this)) {\n            throw streamBrandCheckException$2('locked');\n        }\n        return IsWritableStreamLocked(this);\n    }\n    /**\n     * Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be\n     * immediately moved to an errored state, with any queued-up writes discarded. This will also execute any abort\n     * mechanism of the underlying sink.\n     *\n     * The returned promise will fulfill if the stream shuts down successfully, or reject if the underlying sink signaled\n     * that there was an error doing so. Additionally, it will reject with a `TypeError` (without attempting to cancel\n     * the stream) if the stream is currently locked.\n     */\n    abort(reason = undefined) {\n        if (!IsWritableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$2('abort'));\n        }\n        if (IsWritableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n    }\n    /**\n     * Closes the stream. The underlying sink will finish processing any previously-written chunks, before invoking its\n     * close behavior. During this time any further attempts to write will fail (without erroring the stream).\n     *\n     * The method returns a promise that will fulfill if all remaining chunks are successfully written and the stream\n     * successfully closes, or rejects if an error is encountered during this process. Additionally, it will reject with\n     * a `TypeError` (without attempting to cancel the stream) if the stream is currently locked.\n     */\n    close() {\n        if (!IsWritableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$2('close'));\n        }\n        if (IsWritableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError('Cannot close a stream that already has a writer'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(this)) {\n            return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n        }\n        return WritableStreamClose(this);\n    }\n    /**\n     * Creates a {@link WritableStreamDefaultWriter | writer} and locks the stream to the new writer. While the stream\n     * is locked, no other writer can be acquired until this one is released.\n     *\n     * This functionality is especially useful for creating abstractions that desire the ability to write to a stream\n     * without interruption or interleaving. By getting a writer for the stream, you can ensure nobody else can write at\n     * the same time, which would cause the resulting written data to be unpredictable and probably useless.\n     */\n    getWriter() {\n        if (!IsWritableStream(this)) {\n            throw streamBrandCheckException$2('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n    }\n}\nObject.defineProperties(WritableStream.prototype, {\n    abort: { enumerable: true },\n    close: { enumerable: true },\n    getWriter: { enumerable: true },\n    locked: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(WritableStream.prototype, SymbolPolyfill.toStringTag, {\n        value: 'WritableStream',\n        configurable: true\n    });\n}\n// Abstract operations for the WritableStream.\nfunction AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n}\n// Throws if and only if startAlgorithm throws.\nfunction CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n    const stream = Object.create(WritableStream.prototype);\n    InitializeWritableStream(stream);\n    const controller = Object.create(WritableStreamDefaultController.prototype);\n    SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n    return stream;\n}\nfunction InitializeWritableStream(stream) {\n    stream._state = 'writable';\n    // The error that will be reported by new method calls once the state becomes errored. Only set when [[state]] is\n    // 'erroring' or 'errored'. May be set to an undefined value.\n    stream._storedError = undefined;\n    stream._writer = undefined;\n    // Initialize to undefined first because the constructor of the controller checks this\n    // variable to validate the caller.\n    stream._writableStreamController = undefined;\n    // This queue is placed here instead of the writer class in order to allow for passing a writer to the next data\n    // producer without waiting for the queued writes to finish.\n    stream._writeRequests = new SimpleQueue();\n    // Write requests are removed from _writeRequests when write() is called on the underlying sink. This prevents\n    // them from being erroneously rejected on error. If a write() call is in-flight, the request is stored here.\n    stream._inFlightWriteRequest = undefined;\n    // The promise that was returned from writer.close(). Stored here because it may be fulfilled after the writer\n    // has been detached.\n    stream._closeRequest = undefined;\n    // Close request is removed from _closeRequest when close() is called on the underlying sink. This prevents it\n    // from being erroneously rejected on error. If a close() call is in-flight, the request is stored here.\n    stream._inFlightCloseRequest = undefined;\n    // The promise that was returned from writer.abort(). This may also be fulfilled after the writer has detached.\n    stream._pendingAbortRequest = undefined;\n    // The backpressure signal set by the controller.\n    stream._backpressure = false;\n}\nfunction IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n        return false;\n    }\n    return true;\n}\nfunction IsWritableStreamLocked(stream) {\n    if (stream._writer === undefined) {\n        return false;\n    }\n    return true;\n}\nfunction WritableStreamAbort(stream, reason) {\n    const state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n        return promiseResolvedWith(undefined);\n    }\n    if (stream._pendingAbortRequest !== undefined) {\n        return stream._pendingAbortRequest._promise;\n    }\n    let wasAlreadyErroring = false;\n    if (state === 'erroring') {\n        wasAlreadyErroring = true;\n        // reason will not be used, so don't keep a reference to it.\n        reason = undefined;\n    }\n    const promise = newPromise((resolve, reject) => {\n        stream._pendingAbortRequest = {\n            _promise: undefined,\n            _resolve: resolve,\n            _reject: reject,\n            _reason: reason,\n            _wasAlreadyErroring: wasAlreadyErroring\n        };\n    });\n    stream._pendingAbortRequest._promise = promise;\n    if (!wasAlreadyErroring) {\n        WritableStreamStartErroring(stream, reason);\n    }\n    return promise;\n}\nfunction WritableStreamClose(stream) {\n    const state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n        return promiseRejectedWith(new TypeError(`The stream (in ${state} state) is not in the writable state and cannot be closed`));\n    }\n    const promise = newPromise((resolve, reject) => {\n        const closeRequest = {\n            _resolve: resolve,\n            _reject: reject\n        };\n        stream._closeRequest = closeRequest;\n    });\n    const writer = stream._writer;\n    if (writer !== undefined && stream._backpressure && state === 'writable') {\n        defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n}\n// WritableStream API exposed for controllers.\nfunction WritableStreamAddWriteRequest(stream) {\n    const promise = newPromise((resolve, reject) => {\n        const writeRequest = {\n            _resolve: resolve,\n            _reject: reject\n        };\n        stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n}\nfunction WritableStreamDealWithRejection(stream, error) {\n    const state = stream._state;\n    if (state === 'writable') {\n        WritableStreamStartErroring(stream, error);\n        return;\n    }\n    WritableStreamFinishErroring(stream);\n}\nfunction WritableStreamStartErroring(stream, reason) {\n    const controller = stream._writableStreamController;\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    const writer = stream._writer;\n    if (writer !== undefined) {\n        WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (!WritableStreamHasOperationMarkedInFlight(stream) && controller._started) {\n        WritableStreamFinishErroring(stream);\n    }\n}\nfunction WritableStreamFinishErroring(stream) {\n    stream._state = 'errored';\n    stream._writableStreamController[ErrorSteps]();\n    const storedError = stream._storedError;\n    stream._writeRequests.forEach(writeRequest => {\n        writeRequest._reject(storedError);\n    });\n    stream._writeRequests = new SimpleQueue();\n    if (stream._pendingAbortRequest === undefined) {\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        return;\n    }\n    const abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring) {\n        abortRequest._reject(storedError);\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n        return;\n    }\n    const promise = stream._writableStreamController[AbortSteps](abortRequest._reason);\n    uponPromise(promise, () => {\n        abortRequest._resolve();\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, (reason) => {\n        abortRequest._reject(reason);\n        WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n}\nfunction WritableStreamFinishInFlightWrite(stream) {\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n}\nfunction WritableStreamFinishInFlightWriteWithError(stream, error) {\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    WritableStreamDealWithRejection(stream, error);\n}\nfunction WritableStreamFinishInFlightClose(stream) {\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    const state = stream._state;\n    if (state === 'erroring') {\n        // The error was too late to do anything, so it is ignored.\n        stream._storedError = undefined;\n        if (stream._pendingAbortRequest !== undefined) {\n            stream._pendingAbortRequest._resolve();\n            stream._pendingAbortRequest = undefined;\n        }\n    }\n    stream._state = 'closed';\n    const writer = stream._writer;\n    if (writer !== undefined) {\n        defaultWriterClosedPromiseResolve(writer);\n    }\n}\nfunction WritableStreamFinishInFlightCloseWithError(stream, error) {\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    // Never execute sink abort() after sink close().\n    if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._reject(error);\n        stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n}\n// TODO(ricea): Fix alphabetical order.\nfunction WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n        return false;\n    }\n    return true;\n}\nfunction WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n        return false;\n    }\n    return true;\n}\nfunction WritableStreamMarkCloseRequestInFlight(stream) {\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n}\nfunction WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n}\nfunction WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    if (stream._closeRequest !== undefined) {\n        stream._closeRequest._reject(stream._storedError);\n        stream._closeRequest = undefined;\n    }\n    const writer = stream._writer;\n    if (writer !== undefined) {\n        defaultWriterClosedPromiseReject(writer, stream._storedError);\n    }\n}\nfunction WritableStreamUpdateBackpressure(stream, backpressure) {\n    const writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n        if (backpressure) {\n            defaultWriterReadyPromiseReset(writer);\n        }\n        else {\n            defaultWriterReadyPromiseResolve(writer);\n        }\n    }\n    stream._backpressure = backpressure;\n}\n/**\n * A default writer vended by a {@link WritableStream}.\n *\n * @public\n */\nclass WritableStreamDefaultWriter {\n    constructor(stream) {\n        assertRequiredArgument(stream, 1, 'WritableStreamDefaultWriter');\n        assertWritableStream(stream, 'First parameter');\n        if (IsWritableStreamLocked(stream)) {\n            throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n        }\n        this._ownerWritableStream = stream;\n        stream._writer = this;\n        const state = stream._state;\n        if (state === 'writable') {\n            if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._backpressure) {\n                defaultWriterReadyPromiseInitialize(this);\n            }\n            else {\n                defaultWriterReadyPromiseInitializeAsResolved(this);\n            }\n            defaultWriterClosedPromiseInitialize(this);\n        }\n        else if (state === 'erroring') {\n            defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n            defaultWriterClosedPromiseInitialize(this);\n        }\n        else if (state === 'closed') {\n            defaultWriterReadyPromiseInitializeAsResolved(this);\n            defaultWriterClosedPromiseInitializeAsResolved(this);\n        }\n        else {\n            const storedError = stream._storedError;\n            defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n            defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        }\n    }\n    /**\n     * Returns a promise that will be fulfilled when the stream becomes closed, or rejected if the stream ever errors or\n     * the writer’s lock is released before the stream finishes closing.\n     */\n    get closed() {\n        if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n    }\n    /**\n     * Returns the desired size to fill the stream’s internal queue. It can be negative, if the queue is over-full.\n     * A producer can use this information to determine the right amount of data to write.\n     *\n     * It will be `null` if the stream cannot be successfully written to (due to either being errored, or having an abort\n     * queued up). It will return zero if the stream is closed. And the getter will throw an exception if invoked when\n     * the writer’s lock is released.\n     */\n    get desiredSize() {\n        if (!IsWritableStreamDefaultWriter(this)) {\n            throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n            throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n    }\n    /**\n     * Returns a promise that will be fulfilled when the desired size to fill the stream’s internal queue transitions\n     * from non-positive to positive, signaling that it is no longer applying backpressure. Once the desired size dips\n     * back to zero or below, the getter will return a new promise that stays pending until the next transition.\n     *\n     * If the stream becomes errored or aborted, or the writer’s lock is released, the returned promise will become\n     * rejected.\n     */\n    get ready() {\n        if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n    }\n    /**\n     * If the reader is active, behaves the same as {@link WritableStream.abort | stream.abort(reason)}.\n     */\n    abort(reason = undefined) {\n        if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n            return promiseRejectedWith(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n    }\n    /**\n     * If the reader is active, behaves the same as {@link WritableStream.close | stream.close()}.\n     */\n    close() {\n        if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException('close'));\n        }\n        const stream = this._ownerWritableStream;\n        if (stream === undefined) {\n            return promiseRejectedWith(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream)) {\n            return promiseRejectedWith(new TypeError('Cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n    }\n    /**\n     * Releases the writer’s lock on the corresponding stream. After the lock is released, the writer is no longer active.\n     * If the associated stream is errored when the lock is released, the writer will appear errored in the same way from\n     * now on; otherwise, the writer will appear closed.\n     *\n     * Note that the lock can still be released even if some ongoing writes have not yet finished (i.e. even if the\n     * promises returned from previous calls to {@link WritableStreamDefaultWriter.write | write()} have not yet settled).\n     * It’s not necessary to hold the lock on the writer for the duration of the write; the lock instead simply prevents\n     * other producers from writing in an interleaved manner.\n     */\n    releaseLock() {\n        if (!IsWritableStreamDefaultWriter(this)) {\n            throw defaultWriterBrandCheckException('releaseLock');\n        }\n        const stream = this._ownerWritableStream;\n        if (stream === undefined) {\n            return;\n        }\n        WritableStreamDefaultWriterRelease(this);\n    }\n    write(chunk = undefined) {\n        if (!IsWritableStreamDefaultWriter(this)) {\n            return promiseRejectedWith(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n            return promiseRejectedWith(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n    }\n}\nObject.defineProperties(WritableStreamDefaultWriter.prototype, {\n    abort: { enumerable: true },\n    close: { enumerable: true },\n    releaseLock: { enumerable: true },\n    write: { enumerable: true },\n    closed: { enumerable: true },\n    desiredSize: { enumerable: true },\n    ready: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(WritableStreamDefaultWriter.prototype, SymbolPolyfill.toStringTag, {\n        value: 'WritableStreamDefaultWriter',\n        configurable: true\n    });\n}\n// Abstract operations for the WritableStreamDefaultWriter.\nfunction IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n        return false;\n    }\n    return true;\n}\n// A client of WritableStreamDefaultWriter may use these functions directly to bypass state check.\nfunction WritableStreamDefaultWriterAbort(writer, reason) {\n    const stream = writer._ownerWritableStream;\n    return WritableStreamAbort(stream, reason);\n}\nfunction WritableStreamDefaultWriterClose(writer) {\n    const stream = writer._ownerWritableStream;\n    return WritableStreamClose(stream);\n}\nfunction WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    const stream = writer._ownerWritableStream;\n    const state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n        return promiseResolvedWith(undefined);\n    }\n    if (state === 'errored') {\n        return promiseRejectedWith(stream._storedError);\n    }\n    return WritableStreamDefaultWriterClose(writer);\n}\nfunction WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n        defaultWriterClosedPromiseReject(writer, error);\n    }\n    else {\n        defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n}\nfunction WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n        defaultWriterReadyPromiseReject(writer, error);\n    }\n    else {\n        defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n}\nfunction WritableStreamDefaultWriterGetDesiredSize(writer) {\n    const stream = writer._ownerWritableStream;\n    const state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n        return null;\n    }\n    if (state === 'closed') {\n        return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n}\nfunction WritableStreamDefaultWriterRelease(writer) {\n    const stream = writer._ownerWritableStream;\n    const releasedError = new TypeError(`Writer was released and can no longer be used to monitor the stream's closedness`);\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    // The state transitions to \"errored\" before the sink abort() method runs, but the writer.closed promise is not\n    // rejected until afterwards. This means that simply testing state will not work.\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n}\nfunction WritableStreamDefaultWriterWrite(writer, chunk) {\n    const stream = writer._ownerWritableStream;\n    const controller = stream._writableStreamController;\n    const chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n        return promiseRejectedWith(defaultWriterLockException('write to'));\n    }\n    const state = stream._state;\n    if (state === 'errored') {\n        return promiseRejectedWith(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) || state === 'closed') {\n        return promiseRejectedWith(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n        return promiseRejectedWith(stream._storedError);\n    }\n    const promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n}\nconst closeSentinel = {};\n/**\n * Allows control of a {@link WritableStream | writable stream}'s state and internal queue.\n *\n * @public\n */\nclass WritableStreamDefaultController {\n    constructor() {\n        throw new TypeError('Illegal constructor');\n    }\n    /**\n     * Closes the controlled writable stream, making all future interactions with it fail with the given error `e`.\n     *\n     * This method is rarely used, since usually it suffices to return a rejected promise from one of the underlying\n     * sink's methods. However, it can be useful for suddenly shutting down a stream in response to an event outside the\n     * normal lifecycle of interactions with the underlying sink.\n     */\n    error(e = undefined) {\n        if (!IsWritableStreamDefaultController(this)) {\n            throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        const state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n            // The stream is closed, errored or will be soon. The sink can't do anything useful if it gets an error here, so\n            // just treat it as a no-op.\n            return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n    }\n    /** @internal */\n    [AbortSteps](reason) {\n        const result = this._abortAlgorithm(reason);\n        WritableStreamDefaultControllerClearAlgorithms(this);\n        return result;\n    }\n    /** @internal */\n    [ErrorSteps]() {\n        ResetQueue(this);\n    }\n}\nObject.defineProperties(WritableStreamDefaultController.prototype, {\n    error: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(WritableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n        value: 'WritableStreamDefaultController',\n        configurable: true\n    });\n}\n// Abstract operations implementing interface required by the WritableStream.\nfunction IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledWritableStream')) {\n        return false;\n    }\n    return true;\n}\nfunction SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm) {\n    controller._controlledWritableStream = stream;\n    stream._writableStreamController = controller;\n    // Need to set the slots so that the assert doesn't fire. In the spec the slots already exist implicitly.\n    controller._queue = undefined;\n    controller._queueTotalSize = undefined;\n    ResetQueue(controller);\n    controller._started = false;\n    controller._strategySizeAlgorithm = sizeAlgorithm;\n    controller._strategyHWM = highWaterMark;\n    controller._writeAlgorithm = writeAlgorithm;\n    controller._closeAlgorithm = closeAlgorithm;\n    controller._abortAlgorithm = abortAlgorithm;\n    const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n    WritableStreamUpdateBackpressure(stream, backpressure);\n    const startResult = startAlgorithm();\n    const startPromise = promiseResolvedWith(startResult);\n    uponPromise(startPromise, () => {\n        controller._started = true;\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, r => {\n        controller._started = true;\n        WritableStreamDealWithRejection(stream, r);\n    });\n}\nfunction SetUpWritableStreamDefaultControllerFromUnderlyingSink(stream, underlyingSink, highWaterMark, sizeAlgorithm) {\n    const controller = Object.create(WritableStreamDefaultController.prototype);\n    let startAlgorithm = () => undefined;\n    let writeAlgorithm = () => promiseResolvedWith(undefined);\n    let closeAlgorithm = () => promiseResolvedWith(undefined);\n    let abortAlgorithm = () => promiseResolvedWith(undefined);\n    if (underlyingSink.start !== undefined) {\n        startAlgorithm = () => underlyingSink.start(controller);\n    }\n    if (underlyingSink.write !== undefined) {\n        writeAlgorithm = chunk => underlyingSink.write(chunk, controller);\n    }\n    if (underlyingSink.close !== undefined) {\n        closeAlgorithm = () => underlyingSink.close();\n    }\n    if (underlyingSink.abort !== undefined) {\n        abortAlgorithm = reason => underlyingSink.abort(reason);\n    }\n    SetUpWritableStreamDefaultController(stream, controller, startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, highWaterMark, sizeAlgorithm);\n}\n// ClearAlgorithms may be called twice. Erroring the same stream in multiple ways will often result in redundant calls.\nfunction WritableStreamDefaultControllerClearAlgorithms(controller) {\n    controller._writeAlgorithm = undefined;\n    controller._closeAlgorithm = undefined;\n    controller._abortAlgorithm = undefined;\n    controller._strategySizeAlgorithm = undefined;\n}\nfunction WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, closeSentinel, 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\nfunction WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    try {\n        return controller._strategySizeAlgorithm(chunk);\n    }\n    catch (chunkSizeE) {\n        WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n        return 1;\n    }\n}\nfunction WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n}\nfunction WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n    }\n    catch (enqueueE) {\n        WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        return;\n    }\n    const stream = controller._controlledWritableStream;\n    if (!WritableStreamCloseQueuedOrInFlight(stream) && stream._state === 'writable') {\n        const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n}\n// Abstract operations for the WritableStreamDefaultController.\nfunction WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    const stream = controller._controlledWritableStream;\n    if (!controller._started) {\n        return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n        return;\n    }\n    const state = stream._state;\n    if (state === 'erroring') {\n        WritableStreamFinishErroring(stream);\n        return;\n    }\n    if (controller._queue.length === 0) {\n        return;\n    }\n    const value = PeekQueueValue(controller);\n    if (value === closeSentinel) {\n        WritableStreamDefaultControllerProcessClose(controller);\n    }\n    else {\n        WritableStreamDefaultControllerProcessWrite(controller, value);\n    }\n}\nfunction WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n        WritableStreamDefaultControllerError(controller, error);\n    }\n}\nfunction WritableStreamDefaultControllerProcessClose(controller) {\n    const stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    const sinkClosePromise = controller._closeAlgorithm();\n    WritableStreamDefaultControllerClearAlgorithms(controller);\n    uponPromise(sinkClosePromise, () => {\n        WritableStreamFinishInFlightClose(stream);\n    }, reason => {\n        WritableStreamFinishInFlightCloseWithError(stream, reason);\n    });\n}\nfunction WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    const stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    const sinkWritePromise = controller._writeAlgorithm(chunk);\n    uponPromise(sinkWritePromise, () => {\n        WritableStreamFinishInFlightWrite(stream);\n        const state = stream._state;\n        DequeueValue(controller);\n        if (!WritableStreamCloseQueuedOrInFlight(stream) && state === 'writable') {\n            const backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n            WritableStreamUpdateBackpressure(stream, backpressure);\n        }\n        WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, reason => {\n        if (stream._state === 'writable') {\n            WritableStreamDefaultControllerClearAlgorithms(controller);\n        }\n        WritableStreamFinishInFlightWriteWithError(stream, reason);\n    });\n}\nfunction WritableStreamDefaultControllerGetBackpressure(controller) {\n    const desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n}\n// A client of WritableStreamDefaultController may use these functions directly to bypass state check.\nfunction WritableStreamDefaultControllerError(controller, error) {\n    const stream = controller._controlledWritableStream;\n    WritableStreamDefaultControllerClearAlgorithms(controller);\n    WritableStreamStartErroring(stream, error);\n}\n// Helper functions for the WritableStream.\nfunction streamBrandCheckException$2(name) {\n    return new TypeError(`WritableStream.prototype.${name} can only be used on a WritableStream`);\n}\n// Helper functions for the WritableStreamDefaultWriter.\nfunction defaultWriterBrandCheckException(name) {\n    return new TypeError(`WritableStreamDefaultWriter.prototype.${name} can only be used on a WritableStreamDefaultWriter`);\n}\nfunction defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n}\nfunction defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = newPromise((resolve, reject) => {\n        writer._closedPromise_resolve = resolve;\n        writer._closedPromise_reject = reject;\n        writer._closedPromiseState = 'pending';\n    });\n}\nfunction defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    defaultWriterClosedPromiseInitialize(writer);\n    defaultWriterClosedPromiseReject(writer, reason);\n}\nfunction defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    defaultWriterClosedPromiseInitialize(writer);\n    defaultWriterClosedPromiseResolve(writer);\n}\nfunction defaultWriterClosedPromiseReject(writer, reason) {\n    if (writer._closedPromise_reject === undefined) {\n        return;\n    }\n    setPromiseIsHandledToTrue(writer._closedPromise);\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n}\nfunction defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    defaultWriterClosedPromiseInitializeAsRejected(writer, reason);\n}\nfunction defaultWriterClosedPromiseResolve(writer) {\n    if (writer._closedPromise_resolve === undefined) {\n        return;\n    }\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n}\nfunction defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = newPromise((resolve, reject) => {\n        writer._readyPromise_resolve = resolve;\n        writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n}\nfunction defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    defaultWriterReadyPromiseInitialize(writer);\n    defaultWriterReadyPromiseReject(writer, reason);\n}\nfunction defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    defaultWriterReadyPromiseInitialize(writer);\n    defaultWriterReadyPromiseResolve(writer);\n}\nfunction defaultWriterReadyPromiseReject(writer, reason) {\n    if (writer._readyPromise_reject === undefined) {\n        return;\n    }\n    setPromiseIsHandledToTrue(writer._readyPromise);\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n}\nfunction defaultWriterReadyPromiseReset(writer) {\n    defaultWriterReadyPromiseInitialize(writer);\n}\nfunction defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    defaultWriterReadyPromiseInitializeAsRejected(writer, reason);\n}\nfunction defaultWriterReadyPromiseResolve(writer) {\n    if (writer._readyPromise_resolve === undefined) {\n        return;\n    }\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n}\n\nfunction isAbortSignal(value) {\n    if (typeof value !== 'object' || value === null) {\n        return false;\n    }\n    try {\n        return typeof value.aborted === 'boolean';\n    }\n    catch (_a) {\n        // AbortSignal.prototype.aborted throws if its brand check fails\n        return false;\n    }\n}\n\n/// <reference lib=\"dom\" />\nconst NativeDOMException = typeof DOMException !== 'undefined' ? DOMException : undefined;\n\n/// <reference types=\"node\" />\nfunction isDOMExceptionConstructor(ctor) {\n    if (!(typeof ctor === 'function' || typeof ctor === 'object')) {\n        return false;\n    }\n    try {\n        new ctor();\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction createDOMExceptionPolyfill() {\n    // eslint-disable-next-line no-shadow\n    const ctor = function DOMException(message, name) {\n        this.message = message || '';\n        this.name = name || 'Error';\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n    };\n    ctor.prototype = Object.create(Error.prototype);\n    Object.defineProperty(ctor.prototype, 'constructor', { value: ctor, writable: true, configurable: true });\n    return ctor;\n}\n// eslint-disable-next-line no-redeclare\nconst DOMException$1 = isDOMExceptionConstructor(NativeDOMException) ? NativeDOMException : createDOMExceptionPolyfill();\n\nfunction ReadableStreamPipeTo(source, dest, preventClose, preventAbort, preventCancel, signal) {\n    const reader = AcquireReadableStreamDefaultReader(source);\n    const writer = AcquireWritableStreamDefaultWriter(dest);\n    source._disturbed = true;\n    let shuttingDown = false;\n    // This is used to keep track of the spec's requirement that we wait for ongoing writes during shutdown.\n    let currentWrite = promiseResolvedWith(undefined);\n    return newPromise((resolve, reject) => {\n        let abortAlgorithm;\n        if (signal !== undefined) {\n            abortAlgorithm = () => {\n                const error = new DOMException$1('Aborted', 'AbortError');\n                const actions = [];\n                if (!preventAbort) {\n                    actions.push(() => {\n                        if (dest._state === 'writable') {\n                            return WritableStreamAbort(dest, error);\n                        }\n                        return promiseResolvedWith(undefined);\n                    });\n                }\n                if (!preventCancel) {\n                    actions.push(() => {\n                        if (source._state === 'readable') {\n                            return ReadableStreamCancel(source, error);\n                        }\n                        return promiseResolvedWith(undefined);\n                    });\n                }\n                shutdownWithAction(() => Promise.all(actions.map(action => action())), true, error);\n            };\n            if (signal.aborted) {\n                abortAlgorithm();\n                return;\n            }\n            signal.addEventListener('abort', abortAlgorithm);\n        }\n        // Using reader and writer, read all chunks from this and write them to dest\n        // - Backpressure must be enforced\n        // - Shutdown must stop all activity\n        function pipeLoop() {\n            return newPromise((resolveLoop, rejectLoop) => {\n                function next(done) {\n                    if (done) {\n                        resolveLoop();\n                    }\n                    else {\n                        // Use `PerformPromiseThen` instead of `uponPromise` to avoid\n                        // adding unnecessary `.catch(rethrowAssertionErrorRejection)` handlers\n                        PerformPromiseThen(pipeStep(), next, rejectLoop);\n                    }\n                }\n                next(false);\n            });\n        }\n        function pipeStep() {\n            if (shuttingDown) {\n                return promiseResolvedWith(true);\n            }\n            return PerformPromiseThen(writer._readyPromise, () => {\n                return newPromise((resolveRead, rejectRead) => {\n                    ReadableStreamDefaultReaderRead(reader, {\n                        _chunkSteps: chunk => {\n                            currentWrite = PerformPromiseThen(WritableStreamDefaultWriterWrite(writer, chunk), undefined, noop);\n                            resolveRead(false);\n                        },\n                        _closeSteps: () => resolveRead(true),\n                        _errorSteps: rejectRead\n                    });\n                });\n            });\n        }\n        // Errors must be propagated forward\n        isOrBecomesErrored(source, reader._closedPromise, storedError => {\n            if (!preventAbort) {\n                shutdownWithAction(() => WritableStreamAbort(dest, storedError), true, storedError);\n            }\n            else {\n                shutdown(true, storedError);\n            }\n        });\n        // Errors must be propagated backward\n        isOrBecomesErrored(dest, writer._closedPromise, storedError => {\n            if (!preventCancel) {\n                shutdownWithAction(() => ReadableStreamCancel(source, storedError), true, storedError);\n            }\n            else {\n                shutdown(true, storedError);\n            }\n        });\n        // Closing must be propagated forward\n        isOrBecomesClosed(source, reader._closedPromise, () => {\n            if (!preventClose) {\n                shutdownWithAction(() => WritableStreamDefaultWriterCloseWithErrorPropagation(writer));\n            }\n            else {\n                shutdown();\n            }\n        });\n        // Closing must be propagated backward\n        if (WritableStreamCloseQueuedOrInFlight(dest) || dest._state === 'closed') {\n            const destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (!preventCancel) {\n                shutdownWithAction(() => ReadableStreamCancel(source, destClosed), true, destClosed);\n            }\n            else {\n                shutdown(true, destClosed);\n            }\n        }\n        setPromiseIsHandledToTrue(pipeLoop());\n        function waitForWritesToFinish() {\n            // Another write may have started while we were waiting on this currentWrite, so we have to be sure to wait\n            // for that too.\n            const oldCurrentWrite = currentWrite;\n            return PerformPromiseThen(currentWrite, () => oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined);\n        }\n        function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n                action(stream._storedError);\n            }\n            else {\n                uponRejection(promise, action);\n            }\n        }\n        function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n                action();\n            }\n            else {\n                uponFulfillment(promise, action);\n            }\n        }\n        function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown) {\n                return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                uponFulfillment(waitForWritesToFinish(), doTheRest);\n            }\n            else {\n                doTheRest();\n            }\n            function doTheRest() {\n                uponPromise(action(), () => finalize(originalIsError, originalError), newError => finalize(true, newError));\n            }\n        }\n        function shutdown(isError, error) {\n            if (shuttingDown) {\n                return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && !WritableStreamCloseQueuedOrInFlight(dest)) {\n                uponFulfillment(waitForWritesToFinish(), () => finalize(isError, error));\n            }\n            else {\n                finalize(isError, error);\n            }\n        }\n        function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (signal !== undefined) {\n                signal.removeEventListener('abort', abortAlgorithm);\n            }\n            if (isError) {\n                reject(error);\n            }\n            else {\n                resolve(undefined);\n            }\n        }\n    });\n}\n\n/**\n * Allows control of a {@link ReadableStream | readable stream}'s state and internal queue.\n *\n * @public\n */\nclass ReadableStreamDefaultController {\n    constructor() {\n        throw new TypeError('Illegal constructor');\n    }\n    /**\n     * Returns the desired size to fill the controlled stream's internal queue. It can be negative, if the queue is\n     * over-full. An underlying source ought to use this information to determine when and how to apply backpressure.\n     */\n    get desiredSize() {\n        if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n    }\n    /**\n     * Closes the controlled readable stream. Consumers will still be able to read any previously-enqueued chunks from\n     * the stream, but once those are read, the stream will become closed.\n     */\n    close() {\n        if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1('close');\n        }\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n            throw new TypeError('The stream is not in a state that permits close');\n        }\n        ReadableStreamDefaultControllerClose(this);\n    }\n    enqueue(chunk = undefined) {\n        if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1('enqueue');\n        }\n        if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(this)) {\n            throw new TypeError('The stream is not in a state that permits enqueue');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n    }\n    /**\n     * Errors the controlled readable stream, making all future interactions with it fail with the given error `e`.\n     */\n    error(e = undefined) {\n        if (!IsReadableStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException$1('error');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n    }\n    /** @internal */\n    [CancelSteps](reason) {\n        ResetQueue(this);\n        const result = this._cancelAlgorithm(reason);\n        ReadableStreamDefaultControllerClearAlgorithms(this);\n        return result;\n    }\n    /** @internal */\n    [PullSteps](readRequest) {\n        const stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n            const chunk = DequeueValue(this);\n            if (this._closeRequested && this._queue.length === 0) {\n                ReadableStreamDefaultControllerClearAlgorithms(this);\n                ReadableStreamClose(stream);\n            }\n            else {\n                ReadableStreamDefaultControllerCallPullIfNeeded(this);\n            }\n            readRequest._chunkSteps(chunk);\n        }\n        else {\n            ReadableStreamAddReadRequest(stream, readRequest);\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        }\n    }\n}\nObject.defineProperties(ReadableStreamDefaultController.prototype, {\n    close: { enumerable: true },\n    enqueue: { enumerable: true },\n    error: { enumerable: true },\n    desiredSize: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableStreamDefaultController',\n        configurable: true\n    });\n}\n// Abstract operations for the ReadableStreamDefaultController.\nfunction IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledReadableStream')) {\n        return false;\n    }\n    return true;\n}\nfunction ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    const shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (!shouldPull) {\n        return;\n    }\n    if (controller._pulling) {\n        controller._pullAgain = true;\n        return;\n    }\n    controller._pulling = true;\n    const pullPromise = controller._pullAlgorithm();\n    uponPromise(pullPromise, () => {\n        controller._pulling = false;\n        if (controller._pullAgain) {\n            controller._pullAgain = false;\n            ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n        }\n    }, e => {\n        ReadableStreamDefaultControllerError(controller, e);\n    });\n}\nfunction ReadableStreamDefaultControllerShouldCallPull(controller) {\n    const stream = controller._controlledReadableStream;\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n        return false;\n    }\n    if (!controller._started) {\n        return false;\n    }\n    if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n        return true;\n    }\n    const desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n        return true;\n    }\n    return false;\n}\nfunction ReadableStreamDefaultControllerClearAlgorithms(controller) {\n    controller._pullAlgorithm = undefined;\n    controller._cancelAlgorithm = undefined;\n    controller._strategySizeAlgorithm = undefined;\n}\n// A client of ReadableStreamDefaultController may use these functions directly to bypass state check.\nfunction ReadableStreamDefaultControllerClose(controller) {\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n        return;\n    }\n    const stream = controller._controlledReadableStream;\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n        ReadableStreamDefaultControllerClearAlgorithms(controller);\n        ReadableStreamClose(stream);\n    }\n}\nfunction ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(controller)) {\n        return;\n    }\n    const stream = controller._controlledReadableStream;\n    if (IsReadableStreamLocked(stream) && ReadableStreamGetNumReadRequests(stream) > 0) {\n        ReadableStreamFulfillReadRequest(stream, chunk, false);\n    }\n    else {\n        let chunkSize;\n        try {\n            chunkSize = controller._strategySizeAlgorithm(chunk);\n        }\n        catch (chunkSizeE) {\n            ReadableStreamDefaultControllerError(controller, chunkSizeE);\n            throw chunkSizeE;\n        }\n        try {\n            EnqueueValueWithSize(controller, chunk, chunkSize);\n        }\n        catch (enqueueE) {\n            ReadableStreamDefaultControllerError(controller, enqueueE);\n            throw enqueueE;\n        }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n}\nfunction ReadableStreamDefaultControllerError(controller, e) {\n    const stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n        return;\n    }\n    ResetQueue(controller);\n    ReadableStreamDefaultControllerClearAlgorithms(controller);\n    ReadableStreamError(stream, e);\n}\nfunction ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    const state = controller._controlledReadableStream._state;\n    if (state === 'errored') {\n        return null;\n    }\n    if (state === 'closed') {\n        return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n}\n// This is used in the implementation of TransformStream.\nfunction ReadableStreamDefaultControllerHasBackpressure(controller) {\n    if (ReadableStreamDefaultControllerShouldCallPull(controller)) {\n        return false;\n    }\n    return true;\n}\nfunction ReadableStreamDefaultControllerCanCloseOrEnqueue(controller) {\n    const state = controller._controlledReadableStream._state;\n    if (!controller._closeRequested && state === 'readable') {\n        return true;\n    }\n    return false;\n}\nfunction SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm) {\n    controller._controlledReadableStream = stream;\n    controller._queue = undefined;\n    controller._queueTotalSize = undefined;\n    ResetQueue(controller);\n    controller._started = false;\n    controller._closeRequested = false;\n    controller._pullAgain = false;\n    controller._pulling = false;\n    controller._strategySizeAlgorithm = sizeAlgorithm;\n    controller._strategyHWM = highWaterMark;\n    controller._pullAlgorithm = pullAlgorithm;\n    controller._cancelAlgorithm = cancelAlgorithm;\n    stream._readableStreamController = controller;\n    const startResult = startAlgorithm();\n    uponPromise(promiseResolvedWith(startResult), () => {\n        controller._started = true;\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    }, r => {\n        ReadableStreamDefaultControllerError(controller, r);\n    });\n}\nfunction SetUpReadableStreamDefaultControllerFromUnderlyingSource(stream, underlyingSource, highWaterMark, sizeAlgorithm) {\n    const controller = Object.create(ReadableStreamDefaultController.prototype);\n    let startAlgorithm = () => undefined;\n    let pullAlgorithm = () => promiseResolvedWith(undefined);\n    let cancelAlgorithm = () => promiseResolvedWith(undefined);\n    if (underlyingSource.start !== undefined) {\n        startAlgorithm = () => underlyingSource.start(controller);\n    }\n    if (underlyingSource.pull !== undefined) {\n        pullAlgorithm = () => underlyingSource.pull(controller);\n    }\n    if (underlyingSource.cancel !== undefined) {\n        cancelAlgorithm = reason => underlyingSource.cancel(reason);\n    }\n    SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n}\n// Helper functions for the ReadableStreamDefaultController.\nfunction defaultControllerBrandCheckException$1(name) {\n    return new TypeError(`ReadableStreamDefaultController.prototype.${name} can only be used on a ReadableStreamDefaultController`);\n}\n\nfunction ReadableStreamTee(stream, cloneForBranch2) {\n    const reader = AcquireReadableStreamDefaultReader(stream);\n    let reading = false;\n    let canceled1 = false;\n    let canceled2 = false;\n    let reason1;\n    let reason2;\n    let branch1;\n    let branch2;\n    let resolveCancelPromise;\n    const cancelPromise = newPromise(resolve => {\n        resolveCancelPromise = resolve;\n    });\n    function pullAlgorithm() {\n        if (reading) {\n            return promiseResolvedWith(undefined);\n        }\n        reading = true;\n        const readRequest = {\n            _chunkSteps: value => {\n                // This needs to be delayed a microtask because it takes at least a microtask to detect errors (using\n                // reader._closedPromise below), and we want errors in stream to error both branches immediately. We cannot let\n                // successful synchronously-available reads get ahead of asynchronously-available errors.\n                queueMicrotask(() => {\n                    reading = false;\n                    const value1 = value;\n                    const value2 = value;\n                    // There is no way to access the cloning code right now in the reference implementation.\n                    // If we add one then we'll need an implementation for serializable objects.\n                    // if (!canceled2 && cloneForBranch2) {\n                    //   value2 = StructuredDeserialize(StructuredSerialize(value2));\n                    // }\n                    if (!canceled1) {\n                        ReadableStreamDefaultControllerEnqueue(branch1._readableStreamController, value1);\n                    }\n                    if (!canceled2) {\n                        ReadableStreamDefaultControllerEnqueue(branch2._readableStreamController, value2);\n                    }\n                });\n            },\n            _closeSteps: () => {\n                reading = false;\n                if (!canceled1) {\n                    ReadableStreamDefaultControllerClose(branch1._readableStreamController);\n                }\n                if (!canceled2) {\n                    ReadableStreamDefaultControllerClose(branch2._readableStreamController);\n                }\n                if (!canceled1 || !canceled2) {\n                    resolveCancelPromise(undefined);\n                }\n            },\n            _errorSteps: () => {\n                reading = false;\n            }\n        };\n        ReadableStreamDefaultReaderRead(reader, readRequest);\n        return promiseResolvedWith(undefined);\n    }\n    function cancel1Algorithm(reason) {\n        canceled1 = true;\n        reason1 = reason;\n        if (canceled2) {\n            const compositeReason = CreateArrayFromList([reason1, reason2]);\n            const cancelResult = ReadableStreamCancel(stream, compositeReason);\n            resolveCancelPromise(cancelResult);\n        }\n        return cancelPromise;\n    }\n    function cancel2Algorithm(reason) {\n        canceled2 = true;\n        reason2 = reason;\n        if (canceled1) {\n            const compositeReason = CreateArrayFromList([reason1, reason2]);\n            const cancelResult = ReadableStreamCancel(stream, compositeReason);\n            resolveCancelPromise(cancelResult);\n        }\n        return cancelPromise;\n    }\n    function startAlgorithm() {\n        // do nothing\n    }\n    branch1 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel1Algorithm);\n    branch2 = CreateReadableStream(startAlgorithm, pullAlgorithm, cancel2Algorithm);\n    uponRejection(reader._closedPromise, (r) => {\n        ReadableStreamDefaultControllerError(branch1._readableStreamController, r);\n        ReadableStreamDefaultControllerError(branch2._readableStreamController, r);\n        if (!canceled1 || !canceled2) {\n            resolveCancelPromise(undefined);\n        }\n    });\n    return [branch1, branch2];\n}\n\nfunction convertUnderlyingDefaultOrByteSource(source, context) {\n    assertDictionary(source, context);\n    const original = source;\n    const autoAllocateChunkSize = original === null || original === void 0 ? void 0 : original.autoAllocateChunkSize;\n    const cancel = original === null || original === void 0 ? void 0 : original.cancel;\n    const pull = original === null || original === void 0 ? void 0 : original.pull;\n    const start = original === null || original === void 0 ? void 0 : original.start;\n    const type = original === null || original === void 0 ? void 0 : original.type;\n    return {\n        autoAllocateChunkSize: autoAllocateChunkSize === undefined ?\n            undefined :\n            convertUnsignedLongLongWithEnforceRange(autoAllocateChunkSize, `${context} has member 'autoAllocateChunkSize' that`),\n        cancel: cancel === undefined ?\n            undefined :\n            convertUnderlyingSourceCancelCallback(cancel, original, `${context} has member 'cancel' that`),\n        pull: pull === undefined ?\n            undefined :\n            convertUnderlyingSourcePullCallback(pull, original, `${context} has member 'pull' that`),\n        start: start === undefined ?\n            undefined :\n            convertUnderlyingSourceStartCallback(start, original, `${context} has member 'start' that`),\n        type: type === undefined ? undefined : convertReadableStreamType(type, `${context} has member 'type' that`)\n    };\n}\nfunction convertUnderlyingSourceCancelCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return (reason) => promiseCall(fn, original, [reason]);\n}\nfunction convertUnderlyingSourcePullCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return (controller) => promiseCall(fn, original, [controller]);\n}\nfunction convertUnderlyingSourceStartCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return (controller) => reflectCall(fn, original, [controller]);\n}\nfunction convertReadableStreamType(type, context) {\n    type = `${type}`;\n    if (type !== 'bytes') {\n        throw new TypeError(`${context} '${type}' is not a valid enumeration value for ReadableStreamType`);\n    }\n    return type;\n}\n\nfunction convertReaderOptions(options, context) {\n    assertDictionary(options, context);\n    const mode = options === null || options === void 0 ? void 0 : options.mode;\n    return {\n        mode: mode === undefined ? undefined : convertReadableStreamReaderMode(mode, `${context} has member 'mode' that`)\n    };\n}\nfunction convertReadableStreamReaderMode(mode, context) {\n    mode = `${mode}`;\n    if (mode !== 'byob') {\n        throw new TypeError(`${context} '${mode}' is not a valid enumeration value for ReadableStreamReaderMode`);\n    }\n    return mode;\n}\n\nfunction convertIteratorOptions(options, context) {\n    assertDictionary(options, context);\n    const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n    return { preventCancel: Boolean(preventCancel) };\n}\n\nfunction convertPipeOptions(options, context) {\n    assertDictionary(options, context);\n    const preventAbort = options === null || options === void 0 ? void 0 : options.preventAbort;\n    const preventCancel = options === null || options === void 0 ? void 0 : options.preventCancel;\n    const preventClose = options === null || options === void 0 ? void 0 : options.preventClose;\n    const signal = options === null || options === void 0 ? void 0 : options.signal;\n    if (signal !== undefined) {\n        assertAbortSignal(signal, `${context} has member 'signal' that`);\n    }\n    return {\n        preventAbort: Boolean(preventAbort),\n        preventCancel: Boolean(preventCancel),\n        preventClose: Boolean(preventClose),\n        signal\n    };\n}\nfunction assertAbortSignal(signal, context) {\n    if (!isAbortSignal(signal)) {\n        throw new TypeError(`${context} is not an AbortSignal.`);\n    }\n}\n\nfunction convertReadableWritablePair(pair, context) {\n    assertDictionary(pair, context);\n    const readable = pair === null || pair === void 0 ? void 0 : pair.readable;\n    assertRequiredField(readable, 'readable', 'ReadableWritablePair');\n    assertReadableStream(readable, `${context} has member 'readable' that`);\n    const writable = pair === null || pair === void 0 ? void 0 : pair.writable;\n    assertRequiredField(writable, 'writable', 'ReadableWritablePair');\n    assertWritableStream(writable, `${context} has member 'writable' that`);\n    return { readable, writable };\n}\n\n/**\n * A readable stream represents a source of data, from which you can read.\n *\n * @public\n */\nclass ReadableStream {\n    constructor(rawUnderlyingSource = {}, rawStrategy = {}) {\n        if (rawUnderlyingSource === undefined) {\n            rawUnderlyingSource = null;\n        }\n        else {\n            assertObject(rawUnderlyingSource, 'First parameter');\n        }\n        const strategy = convertQueuingStrategy(rawStrategy, 'Second parameter');\n        const underlyingSource = convertUnderlyingDefaultOrByteSource(rawUnderlyingSource, 'First parameter');\n        InitializeReadableStream(this);\n        if (underlyingSource.type === 'bytes') {\n            if (strategy.size !== undefined) {\n                throw new RangeError('The strategy for a byte stream cannot have a size function');\n            }\n            const highWaterMark = ExtractHighWaterMark(strategy, 0);\n            SetUpReadableByteStreamControllerFromUnderlyingSource(this, underlyingSource, highWaterMark);\n        }\n        else {\n            const sizeAlgorithm = ExtractSizeAlgorithm(strategy);\n            const highWaterMark = ExtractHighWaterMark(strategy, 1);\n            SetUpReadableStreamDefaultControllerFromUnderlyingSource(this, underlyingSource, highWaterMark, sizeAlgorithm);\n        }\n    }\n    /**\n     * Whether or not the readable stream is locked to a {@link ReadableStreamDefaultReader | reader}.\n     */\n    get locked() {\n        if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1('locked');\n        }\n        return IsReadableStreamLocked(this);\n    }\n    /**\n     * Cancels the stream, signaling a loss of interest in the stream by a consumer.\n     *\n     * The supplied `reason` argument will be given to the underlying source's {@link UnderlyingSource.cancel | cancel()}\n     * method, which might or might not use it.\n     */\n    cancel(reason = undefined) {\n        if (!IsReadableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$1('cancel'));\n        }\n        if (IsReadableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n    }\n    getReader(rawOptions = undefined) {\n        if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1('getReader');\n        }\n        const options = convertReaderOptions(rawOptions, 'First parameter');\n        if (options.mode === undefined) {\n            return AcquireReadableStreamDefaultReader(this);\n        }\n        return AcquireReadableStreamBYOBReader(this);\n    }\n    pipeThrough(rawTransform, rawOptions = {}) {\n        if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1('pipeThrough');\n        }\n        assertRequiredArgument(rawTransform, 1, 'pipeThrough');\n        const transform = convertReadableWritablePair(rawTransform, 'First parameter');\n        const options = convertPipeOptions(rawOptions, 'Second parameter');\n        if (IsReadableStreamLocked(this)) {\n            throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream');\n        }\n        if (IsWritableStreamLocked(transform.writable)) {\n            throw new TypeError('ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream');\n        }\n        const promise = ReadableStreamPipeTo(this, transform.writable, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n        setPromiseIsHandledToTrue(promise);\n        return transform.readable;\n    }\n    pipeTo(destination, rawOptions = {}) {\n        if (!IsReadableStream(this)) {\n            return promiseRejectedWith(streamBrandCheckException$1('pipeTo'));\n        }\n        if (destination === undefined) {\n            return promiseRejectedWith(`Parameter 1 is required in 'pipeTo'.`);\n        }\n        if (!IsWritableStream(destination)) {\n            return promiseRejectedWith(new TypeError(`ReadableStream.prototype.pipeTo's first argument must be a WritableStream`));\n        }\n        let options;\n        try {\n            options = convertPipeOptions(rawOptions, 'Second parameter');\n        }\n        catch (e) {\n            return promiseRejectedWith(e);\n        }\n        if (IsReadableStreamLocked(this)) {\n            return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(destination)) {\n            return promiseRejectedWith(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        return ReadableStreamPipeTo(this, destination, options.preventClose, options.preventAbort, options.preventCancel, options.signal);\n    }\n    /**\n     * Tees this readable stream, returning a two-element array containing the two resulting branches as\n     * new {@link ReadableStream} instances.\n     *\n     * Teeing a stream will lock it, preventing any other consumer from acquiring a reader.\n     * To cancel the stream, cancel both of the resulting branches; a composite cancellation reason will then be\n     * propagated to the stream's underlying source.\n     *\n     * Note that the chunks seen in each branch will be the same object. If the chunks are not immutable,\n     * this could allow interference between the two branches.\n     */\n    tee() {\n        if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1('tee');\n        }\n        const branches = ReadableStreamTee(this);\n        return CreateArrayFromList(branches);\n    }\n    values(rawOptions = undefined) {\n        if (!IsReadableStream(this)) {\n            throw streamBrandCheckException$1('values');\n        }\n        const options = convertIteratorOptions(rawOptions, 'First parameter');\n        return AcquireReadableStreamAsyncIterator(this, options.preventCancel);\n    }\n}\nObject.defineProperties(ReadableStream.prototype, {\n    cancel: { enumerable: true },\n    getReader: { enumerable: true },\n    pipeThrough: { enumerable: true },\n    pipeTo: { enumerable: true },\n    tee: { enumerable: true },\n    values: { enumerable: true },\n    locked: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ReadableStream',\n        configurable: true\n    });\n}\nif (typeof SymbolPolyfill.asyncIterator === 'symbol') {\n    Object.defineProperty(ReadableStream.prototype, SymbolPolyfill.asyncIterator, {\n        value: ReadableStream.prototype.values,\n        writable: true,\n        configurable: true\n    });\n}\n// Abstract operations for the ReadableStream.\n// Throws if and only if startAlgorithm throws.\nfunction CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark = 1, sizeAlgorithm = () => 1) {\n    const stream = Object.create(ReadableStream.prototype);\n    InitializeReadableStream(stream);\n    const controller = Object.create(ReadableStreamDefaultController.prototype);\n    SetUpReadableStreamDefaultController(stream, controller, startAlgorithm, pullAlgorithm, cancelAlgorithm, highWaterMark, sizeAlgorithm);\n    return stream;\n}\nfunction InitializeReadableStream(stream) {\n    stream._state = 'readable';\n    stream._reader = undefined;\n    stream._storedError = undefined;\n    stream._disturbed = false;\n}\nfunction IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n        return false;\n    }\n    return true;\n}\nfunction IsReadableStreamLocked(stream) {\n    if (stream._reader === undefined) {\n        return false;\n    }\n    return true;\n}\n// ReadableStream API exposed for controllers.\nfunction ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n        return promiseResolvedWith(undefined);\n    }\n    if (stream._state === 'errored') {\n        return promiseRejectedWith(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    const sourceCancelPromise = stream._readableStreamController[CancelSteps](reason);\n    return transformPromiseWith(sourceCancelPromise, noop);\n}\nfunction ReadableStreamClose(stream) {\n    stream._state = 'closed';\n    const reader = stream._reader;\n    if (reader === undefined) {\n        return;\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    if (IsReadableStreamDefaultReader(reader)) {\n        reader._readRequests.forEach(readRequest => {\n            readRequest._closeSteps();\n        });\n        reader._readRequests = new SimpleQueue();\n    }\n}\nfunction ReadableStreamError(stream, e) {\n    stream._state = 'errored';\n    stream._storedError = e;\n    const reader = stream._reader;\n    if (reader === undefined) {\n        return;\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    if (IsReadableStreamDefaultReader(reader)) {\n        reader._readRequests.forEach(readRequest => {\n            readRequest._errorSteps(e);\n        });\n        reader._readRequests = new SimpleQueue();\n    }\n    else {\n        reader._readIntoRequests.forEach(readIntoRequest => {\n            readIntoRequest._errorSteps(e);\n        });\n        reader._readIntoRequests = new SimpleQueue();\n    }\n}\n// Helper functions for the ReadableStream.\nfunction streamBrandCheckException$1(name) {\n    return new TypeError(`ReadableStream.prototype.${name} can only be used on a ReadableStream`);\n}\n\nfunction convertQueuingStrategyInit(init, context) {\n    assertDictionary(init, context);\n    const highWaterMark = init === null || init === void 0 ? void 0 : init.highWaterMark;\n    assertRequiredField(highWaterMark, 'highWaterMark', 'QueuingStrategyInit');\n    return {\n        highWaterMark: convertUnrestrictedDouble(highWaterMark)\n    };\n}\n\nconst byteLengthSizeFunction = function size(chunk) {\n    return chunk.byteLength;\n};\n/**\n * A queuing strategy that counts the number of bytes in each chunk.\n *\n * @public\n */\nclass ByteLengthQueuingStrategy {\n    constructor(options) {\n        assertRequiredArgument(options, 1, 'ByteLengthQueuingStrategy');\n        options = convertQueuingStrategyInit(options, 'First parameter');\n        this._byteLengthQueuingStrategyHighWaterMark = options.highWaterMark;\n    }\n    /**\n     * Returns the high water mark provided to the constructor.\n     */\n    get highWaterMark() {\n        if (!IsByteLengthQueuingStrategy(this)) {\n            throw byteLengthBrandCheckException('highWaterMark');\n        }\n        return this._byteLengthQueuingStrategyHighWaterMark;\n    }\n    /**\n     * Measures the size of `chunk` by returning the value of its `byteLength` property.\n     */\n    get size() {\n        if (!IsByteLengthQueuingStrategy(this)) {\n            throw byteLengthBrandCheckException('size');\n        }\n        return byteLengthSizeFunction;\n    }\n}\nObject.defineProperties(ByteLengthQueuingStrategy.prototype, {\n    highWaterMark: { enumerable: true },\n    size: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(ByteLengthQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n        value: 'ByteLengthQueuingStrategy',\n        configurable: true\n    });\n}\n// Helper functions for the ByteLengthQueuingStrategy.\nfunction byteLengthBrandCheckException(name) {\n    return new TypeError(`ByteLengthQueuingStrategy.prototype.${name} can only be used on a ByteLengthQueuingStrategy`);\n}\nfunction IsByteLengthQueuingStrategy(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_byteLengthQueuingStrategyHighWaterMark')) {\n        return false;\n    }\n    return true;\n}\n\nconst countSizeFunction = function size() {\n    return 1;\n};\n/**\n * A queuing strategy that counts the number of chunks.\n *\n * @public\n */\nclass CountQueuingStrategy {\n    constructor(options) {\n        assertRequiredArgument(options, 1, 'CountQueuingStrategy');\n        options = convertQueuingStrategyInit(options, 'First parameter');\n        this._countQueuingStrategyHighWaterMark = options.highWaterMark;\n    }\n    /**\n     * Returns the high water mark provided to the constructor.\n     */\n    get highWaterMark() {\n        if (!IsCountQueuingStrategy(this)) {\n            throw countBrandCheckException('highWaterMark');\n        }\n        return this._countQueuingStrategyHighWaterMark;\n    }\n    /**\n     * Measures the size of `chunk` by always returning 1.\n     * This ensures that the total queue size is a count of the number of chunks in the queue.\n     */\n    get size() {\n        if (!IsCountQueuingStrategy(this)) {\n            throw countBrandCheckException('size');\n        }\n        return countSizeFunction;\n    }\n}\nObject.defineProperties(CountQueuingStrategy.prototype, {\n    highWaterMark: { enumerable: true },\n    size: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(CountQueuingStrategy.prototype, SymbolPolyfill.toStringTag, {\n        value: 'CountQueuingStrategy',\n        configurable: true\n    });\n}\n// Helper functions for the CountQueuingStrategy.\nfunction countBrandCheckException(name) {\n    return new TypeError(`CountQueuingStrategy.prototype.${name} can only be used on a CountQueuingStrategy`);\n}\nfunction IsCountQueuingStrategy(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_countQueuingStrategyHighWaterMark')) {\n        return false;\n    }\n    return true;\n}\n\nfunction convertTransformer(original, context) {\n    assertDictionary(original, context);\n    const flush = original === null || original === void 0 ? void 0 : original.flush;\n    const readableType = original === null || original === void 0 ? void 0 : original.readableType;\n    const start = original === null || original === void 0 ? void 0 : original.start;\n    const transform = original === null || original === void 0 ? void 0 : original.transform;\n    const writableType = original === null || original === void 0 ? void 0 : original.writableType;\n    return {\n        flush: flush === undefined ?\n            undefined :\n            convertTransformerFlushCallback(flush, original, `${context} has member 'flush' that`),\n        readableType,\n        start: start === undefined ?\n            undefined :\n            convertTransformerStartCallback(start, original, `${context} has member 'start' that`),\n        transform: transform === undefined ?\n            undefined :\n            convertTransformerTransformCallback(transform, original, `${context} has member 'transform' that`),\n        writableType\n    };\n}\nfunction convertTransformerFlushCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return (controller) => promiseCall(fn, original, [controller]);\n}\nfunction convertTransformerStartCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return (controller) => reflectCall(fn, original, [controller]);\n}\nfunction convertTransformerTransformCallback(fn, original, context) {\n    assertFunction(fn, context);\n    return (chunk, controller) => promiseCall(fn, original, [chunk, controller]);\n}\n\n// Class TransformStream\n/**\n * A transform stream consists of a pair of streams: a {@link WritableStream | writable stream},\n * known as its writable side, and a {@link ReadableStream | readable stream}, known as its readable side.\n * In a manner specific to the transform stream in question, writes to the writable side result in new data being\n * made available for reading from the readable side.\n *\n * @public\n */\nclass TransformStream {\n    constructor(rawTransformer = {}, rawWritableStrategy = {}, rawReadableStrategy = {}) {\n        if (rawTransformer === undefined) {\n            rawTransformer = null;\n        }\n        const writableStrategy = convertQueuingStrategy(rawWritableStrategy, 'Second parameter');\n        const readableStrategy = convertQueuingStrategy(rawReadableStrategy, 'Third parameter');\n        const transformer = convertTransformer(rawTransformer, 'First parameter');\n        if (transformer.readableType !== undefined) {\n            throw new RangeError('Invalid readableType specified');\n        }\n        if (transformer.writableType !== undefined) {\n            throw new RangeError('Invalid writableType specified');\n        }\n        const readableHighWaterMark = ExtractHighWaterMark(readableStrategy, 0);\n        const readableSizeAlgorithm = ExtractSizeAlgorithm(readableStrategy);\n        const writableHighWaterMark = ExtractHighWaterMark(writableStrategy, 1);\n        const writableSizeAlgorithm = ExtractSizeAlgorithm(writableStrategy);\n        let startPromise_resolve;\n        const startPromise = newPromise(resolve => {\n            startPromise_resolve = resolve;\n        });\n        InitializeTransformStream(this, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n        SetUpTransformStreamDefaultControllerFromTransformer(this, transformer);\n        if (transformer.start !== undefined) {\n            startPromise_resolve(transformer.start(this._transformStreamController));\n        }\n        else {\n            startPromise_resolve(undefined);\n        }\n    }\n    /**\n     * The readable side of the transform stream.\n     */\n    get readable() {\n        if (!IsTransformStream(this)) {\n            throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n    }\n    /**\n     * The writable side of the transform stream.\n     */\n    get writable() {\n        if (!IsTransformStream(this)) {\n            throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n    }\n}\nObject.defineProperties(TransformStream.prototype, {\n    readable: { enumerable: true },\n    writable: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(TransformStream.prototype, SymbolPolyfill.toStringTag, {\n        value: 'TransformStream',\n        configurable: true\n    });\n}\nfunction InitializeTransformStream(stream, startPromise, writableHighWaterMark, writableSizeAlgorithm, readableHighWaterMark, readableSizeAlgorithm) {\n    function startAlgorithm() {\n        return startPromise;\n    }\n    function writeAlgorithm(chunk) {\n        return TransformStreamDefaultSinkWriteAlgorithm(stream, chunk);\n    }\n    function abortAlgorithm(reason) {\n        return TransformStreamDefaultSinkAbortAlgorithm(stream, reason);\n    }\n    function closeAlgorithm() {\n        return TransformStreamDefaultSinkCloseAlgorithm(stream);\n    }\n    stream._writable = CreateWritableStream(startAlgorithm, writeAlgorithm, closeAlgorithm, abortAlgorithm, writableHighWaterMark, writableSizeAlgorithm);\n    function pullAlgorithm() {\n        return TransformStreamDefaultSourcePullAlgorithm(stream);\n    }\n    function cancelAlgorithm(reason) {\n        TransformStreamErrorWritableAndUnblockWrite(stream, reason);\n        return promiseResolvedWith(undefined);\n    }\n    stream._readable = CreateReadableStream(startAlgorithm, pullAlgorithm, cancelAlgorithm, readableHighWaterMark, readableSizeAlgorithm);\n    // The [[backpressure]] slot is set to undefined so that it can be initialised by TransformStreamSetBackpressure.\n    stream._backpressure = undefined;\n    stream._backpressureChangePromise = undefined;\n    stream._backpressureChangePromise_resolve = undefined;\n    TransformStreamSetBackpressure(stream, true);\n    stream._transformStreamController = undefined;\n}\nfunction IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n        return false;\n    }\n    return true;\n}\n// This is a no-op if both sides are already errored.\nfunction TransformStreamError(stream, e) {\n    ReadableStreamDefaultControllerError(stream._readable._readableStreamController, e);\n    TransformStreamErrorWritableAndUnblockWrite(stream, e);\n}\nfunction TransformStreamErrorWritableAndUnblockWrite(stream, e) {\n    TransformStreamDefaultControllerClearAlgorithms(stream._transformStreamController);\n    WritableStreamDefaultControllerErrorIfNeeded(stream._writable._writableStreamController, e);\n    if (stream._backpressure) {\n        // Pretend that pull() was called to permit any pending write() calls to complete. TransformStreamSetBackpressure()\n        // cannot be called from enqueue() or pull() once the ReadableStream is errored, so this will will be the final time\n        // _backpressure is set.\n        TransformStreamSetBackpressure(stream, false);\n    }\n}\nfunction TransformStreamSetBackpressure(stream, backpressure) {\n    // Passes also when called during construction.\n    if (stream._backpressureChangePromise !== undefined) {\n        stream._backpressureChangePromise_resolve();\n    }\n    stream._backpressureChangePromise = newPromise(resolve => {\n        stream._backpressureChangePromise_resolve = resolve;\n    });\n    stream._backpressure = backpressure;\n}\n// Class TransformStreamDefaultController\n/**\n * Allows control of the {@link ReadableStream} and {@link WritableStream} of the associated {@link TransformStream}.\n *\n * @public\n */\nclass TransformStreamDefaultController {\n    constructor() {\n        throw new TypeError('Illegal constructor');\n    }\n    /**\n     * Returns the desired size to fill the readable side’s internal queue. It can be negative, if the queue is over-full.\n     */\n    get desiredSize() {\n        if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException('desiredSize');\n        }\n        const readableController = this._controlledTransformStream._readable._readableStreamController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n    }\n    enqueue(chunk = undefined) {\n        if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamDefaultControllerEnqueue(this, chunk);\n    }\n    /**\n     * Errors both the readable side and the writable side of the controlled transform stream, making all future\n     * interactions with it fail with the given error `e`. Any chunks queued for transformation will be discarded.\n     */\n    error(reason = undefined) {\n        if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamDefaultControllerError(this, reason);\n    }\n    /**\n     * Closes the readable side and errors the writable side of the controlled transform stream. This is useful when the\n     * transformer only needs to consume a portion of the chunks written to the writable side.\n     */\n    terminate() {\n        if (!IsTransformStreamDefaultController(this)) {\n            throw defaultControllerBrandCheckException('terminate');\n        }\n        TransformStreamDefaultControllerTerminate(this);\n    }\n}\nObject.defineProperties(TransformStreamDefaultController.prototype, {\n    enqueue: { enumerable: true },\n    error: { enumerable: true },\n    terminate: { enumerable: true },\n    desiredSize: { enumerable: true }\n});\nif (typeof SymbolPolyfill.toStringTag === 'symbol') {\n    Object.defineProperty(TransformStreamDefaultController.prototype, SymbolPolyfill.toStringTag, {\n        value: 'TransformStreamDefaultController',\n        configurable: true\n    });\n}\n// Transform Stream Default Controller Abstract Operations\nfunction IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n        return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n        return false;\n    }\n    return true;\n}\nfunction SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm) {\n    controller._controlledTransformStream = stream;\n    stream._transformStreamController = controller;\n    controller._transformAlgorithm = transformAlgorithm;\n    controller._flushAlgorithm = flushAlgorithm;\n}\nfunction SetUpTransformStreamDefaultControllerFromTransformer(stream, transformer) {\n    const controller = Object.create(TransformStreamDefaultController.prototype);\n    let transformAlgorithm = (chunk) => {\n        try {\n            TransformStreamDefaultControllerEnqueue(controller, chunk);\n            return promiseResolvedWith(undefined);\n        }\n        catch (transformResultE) {\n            return promiseRejectedWith(transformResultE);\n        }\n    };\n    let flushAlgorithm = () => promiseResolvedWith(undefined);\n    if (transformer.transform !== undefined) {\n        transformAlgorithm = chunk => transformer.transform(chunk, controller);\n    }\n    if (transformer.flush !== undefined) {\n        flushAlgorithm = () => transformer.flush(controller);\n    }\n    SetUpTransformStreamDefaultController(stream, controller, transformAlgorithm, flushAlgorithm);\n}\nfunction TransformStreamDefaultControllerClearAlgorithms(controller) {\n    controller._transformAlgorithm = undefined;\n    controller._flushAlgorithm = undefined;\n}\nfunction TransformStreamDefaultControllerEnqueue(controller, chunk) {\n    const stream = controller._controlledTransformStream;\n    const readableController = stream._readable._readableStreamController;\n    if (!ReadableStreamDefaultControllerCanCloseOrEnqueue(readableController)) {\n        throw new TypeError('Readable side is not in a state that permits enqueue');\n    }\n    // We throttle transform invocations based on the backpressure of the ReadableStream, but we still\n    // accept TransformStreamDefaultControllerEnqueue() calls.\n    try {\n        ReadableStreamDefaultControllerEnqueue(readableController, chunk);\n    }\n    catch (e) {\n        // This happens when readableStrategy.size() throws.\n        TransformStreamErrorWritableAndUnblockWrite(stream, e);\n        throw stream._readable._storedError;\n    }\n    const backpressure = ReadableStreamDefaultControllerHasBackpressure(readableController);\n    if (backpressure !== stream._backpressure) {\n        TransformStreamSetBackpressure(stream, true);\n    }\n}\nfunction TransformStreamDefaultControllerError(controller, e) {\n    TransformStreamError(controller._controlledTransformStream, e);\n}\nfunction TransformStreamDefaultControllerPerformTransform(controller, chunk) {\n    const transformPromise = controller._transformAlgorithm(chunk);\n    return transformPromiseWith(transformPromise, undefined, r => {\n        TransformStreamError(controller._controlledTransformStream, r);\n        throw r;\n    });\n}\nfunction TransformStreamDefaultControllerTerminate(controller) {\n    const stream = controller._controlledTransformStream;\n    const readableController = stream._readable._readableStreamController;\n    ReadableStreamDefaultControllerClose(readableController);\n    const error = new TypeError('TransformStream terminated');\n    TransformStreamErrorWritableAndUnblockWrite(stream, error);\n}\n// TransformStreamDefaultSink Algorithms\nfunction TransformStreamDefaultSinkWriteAlgorithm(stream, chunk) {\n    const controller = stream._transformStreamController;\n    if (stream._backpressure) {\n        const backpressureChangePromise = stream._backpressureChangePromise;\n        return transformPromiseWith(backpressureChangePromise, () => {\n            const writable = stream._writable;\n            const state = writable._state;\n            if (state === 'erroring') {\n                throw writable._storedError;\n            }\n            return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n        });\n    }\n    return TransformStreamDefaultControllerPerformTransform(controller, chunk);\n}\nfunction TransformStreamDefaultSinkAbortAlgorithm(stream, reason) {\n    // abort() is not called synchronously, so it is possible for abort() to be called when the stream is already\n    // errored.\n    TransformStreamError(stream, reason);\n    return promiseResolvedWith(undefined);\n}\nfunction TransformStreamDefaultSinkCloseAlgorithm(stream) {\n    // stream._readable cannot change after construction, so caching it across a call to user code is safe.\n    const readable = stream._readable;\n    const controller = stream._transformStreamController;\n    const flushPromise = controller._flushAlgorithm();\n    TransformStreamDefaultControllerClearAlgorithms(controller);\n    // Return a promise that is fulfilled with undefined on success.\n    return transformPromiseWith(flushPromise, () => {\n        if (readable._state === 'errored') {\n            throw readable._storedError;\n        }\n        ReadableStreamDefaultControllerClose(readable._readableStreamController);\n    }, r => {\n        TransformStreamError(stream, r);\n        throw readable._storedError;\n    });\n}\n// TransformStreamDefaultSource Algorithms\nfunction TransformStreamDefaultSourcePullAlgorithm(stream) {\n    // Invariant. Enforced by the promises returned by start() and pull().\n    TransformStreamSetBackpressure(stream, false);\n    // Prevent the next pull() call until there is backpressure.\n    return stream._backpressureChangePromise;\n}\n// Helper functions for the TransformStreamDefaultController.\nfunction defaultControllerBrandCheckException(name) {\n    return new TypeError(`TransformStreamDefaultController.prototype.${name} can only be used on a TransformStreamDefaultController`);\n}\n// Helper functions for the TransformStream.\nfunction streamBrandCheckException(name) {\n    return new TypeError(`TransformStream.prototype.${name} can only be used on a TransformStream`);\n}\n\nexport { ByteLengthQueuingStrategy, CountQueuingStrategy, ReadableByteStreamController, ReadableStream, ReadableStreamBYOBReader, ReadableStreamBYOBRequest, ReadableStreamDefaultController, ReadableStreamDefaultReader, TransformStream, TransformStreamDefaultController, WritableStream, WritableStreamDefaultController, WritableStreamDefaultWriter };\n//# sourceMappingURL=ponyfill.es6.mjs.map\n","/*! *****************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise */\n\nvar extendStatics = function(d, b) {\n    extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n    return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n    if (typeof b !== \"function\" && b !== null)\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nfunction assert(test) {\n    if (!test) {\n        throw new TypeError('Assertion failed');\n    }\n}\n\nfunction noop() {\n    return;\n}\nfunction typeIsObject(x) {\n    return (typeof x === 'object' && x !== null) || typeof x === 'function';\n}\n\nfunction isStreamConstructor(ctor) {\n    if (typeof ctor !== 'function') {\n        return false;\n    }\n    var startCalled = false;\n    try {\n        new ctor({\n            start: function () {\n                startCalled = true;\n            }\n        });\n    }\n    catch (e) {\n        // ignore\n    }\n    return startCalled;\n}\nfunction isReadableStream(readable) {\n    if (!typeIsObject(readable)) {\n        return false;\n    }\n    if (typeof readable.getReader !== 'function') {\n        return false;\n    }\n    return true;\n}\nfunction isReadableStreamConstructor(ctor) {\n    if (!isStreamConstructor(ctor)) {\n        return false;\n    }\n    if (!isReadableStream(new ctor())) {\n        return false;\n    }\n    return true;\n}\nfunction isWritableStream(writable) {\n    if (!typeIsObject(writable)) {\n        return false;\n    }\n    if (typeof writable.getWriter !== 'function') {\n        return false;\n    }\n    return true;\n}\nfunction isWritableStreamConstructor(ctor) {\n    if (!isStreamConstructor(ctor)) {\n        return false;\n    }\n    if (!isWritableStream(new ctor())) {\n        return false;\n    }\n    return true;\n}\nfunction isTransformStream(transform) {\n    if (!typeIsObject(transform)) {\n        return false;\n    }\n    if (!isReadableStream(transform.readable)) {\n        return false;\n    }\n    if (!isWritableStream(transform.writable)) {\n        return false;\n    }\n    return true;\n}\nfunction isTransformStreamConstructor(ctor) {\n    if (!isStreamConstructor(ctor)) {\n        return false;\n    }\n    if (!isTransformStream(new ctor())) {\n        return false;\n    }\n    return true;\n}\nfunction supportsByobReader(readable) {\n    try {\n        var reader = readable.getReader({ mode: 'byob' });\n        reader.releaseLock();\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction supportsByteSource(ctor) {\n    try {\n        new ctor({ type: 'bytes' });\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\nfunction createReadableStreamWrapper(ctor) {\n    assert(isReadableStreamConstructor(ctor));\n    var byteSourceSupported = supportsByteSource(ctor);\n    return function (readable, _a) {\n        var _b = _a === void 0 ? {} : _a, type = _b.type;\n        type = parseReadableType(type);\n        if (type === 'bytes' && !byteSourceSupported) {\n            type = undefined;\n        }\n        if (readable.constructor === ctor) {\n            if (type !== 'bytes' || supportsByobReader(readable)) {\n                return readable;\n            }\n        }\n        if (type === 'bytes') {\n            var source = createWrappingReadableSource(readable, { type: type });\n            return new ctor(source);\n        }\n        else {\n            var source = createWrappingReadableSource(readable);\n            return new ctor(source);\n        }\n    };\n}\nfunction createWrappingReadableSource(readable, _a) {\n    var _b = _a === void 0 ? {} : _a, type = _b.type;\n    assert(isReadableStream(readable));\n    assert(readable.locked === false);\n    type = parseReadableType(type);\n    var source;\n    if (type === 'bytes') {\n        source = new WrappingReadableByteStreamSource(readable);\n    }\n    else {\n        source = new WrappingReadableStreamDefaultSource(readable);\n    }\n    return source;\n}\nfunction parseReadableType(type) {\n    var typeString = String(type);\n    if (typeString === 'bytes') {\n        return typeString;\n    }\n    else if (type === undefined) {\n        return type;\n    }\n    else {\n        throw new RangeError('Invalid type is specified');\n    }\n}\nvar AbstractWrappingReadableStreamSource = /** @class */ (function () {\n    function AbstractWrappingReadableStreamSource(underlyingStream) {\n        this._underlyingReader = undefined;\n        this._readerMode = undefined;\n        this._readableStreamController = undefined;\n        this._pendingRead = undefined;\n        this._underlyingStream = underlyingStream;\n        // always keep a reader attached to detect close/error\n        this._attachDefaultReader();\n    }\n    AbstractWrappingReadableStreamSource.prototype.start = function (controller) {\n        this._readableStreamController = controller;\n    };\n    AbstractWrappingReadableStreamSource.prototype.cancel = function (reason) {\n        assert(this._underlyingReader !== undefined);\n        return this._underlyingReader.cancel(reason);\n    };\n    AbstractWrappingReadableStreamSource.prototype._attachDefaultReader = function () {\n        if (this._readerMode === \"default\" /* DEFAULT */) {\n            return;\n        }\n        this._detachReader();\n        var reader = this._underlyingStream.getReader();\n        this._readerMode = \"default\" /* DEFAULT */;\n        this._attachReader(reader);\n    };\n    AbstractWrappingReadableStreamSource.prototype._attachReader = function (reader) {\n        var _this = this;\n        assert(this._underlyingReader === undefined);\n        this._underlyingReader = reader;\n        var closed = this._underlyingReader.closed;\n        if (!closed) {\n            return;\n        }\n        closed\n            .then(function () { return _this._finishPendingRead(); })\n            .then(function () {\n            if (reader === _this._underlyingReader) {\n                _this._readableStreamController.close();\n            }\n        }, function (reason) {\n            if (reader === _this._underlyingReader) {\n                _this._readableStreamController.error(reason);\n            }\n        })\n            .catch(noop);\n    };\n    AbstractWrappingReadableStreamSource.prototype._detachReader = function () {\n        if (this._underlyingReader === undefined) {\n            return;\n        }\n        this._underlyingReader.releaseLock();\n        this._underlyingReader = undefined;\n        this._readerMode = undefined;\n    };\n    AbstractWrappingReadableStreamSource.prototype._pullWithDefaultReader = function () {\n        var _this = this;\n        this._attachDefaultReader();\n        // TODO Backpressure?\n        var read = this._underlyingReader.read()\n            .then(function (result) {\n            var controller = _this._readableStreamController;\n            if (result.done) {\n                _this._tryClose();\n            }\n            else {\n                controller.enqueue(result.value);\n            }\n        });\n        this._setPendingRead(read);\n        return read;\n    };\n    AbstractWrappingReadableStreamSource.prototype._tryClose = function () {\n        try {\n            this._readableStreamController.close();\n        }\n        catch (_a) {\n            // already errored or closed\n        }\n    };\n    AbstractWrappingReadableStreamSource.prototype._setPendingRead = function (readPromise) {\n        var _this = this;\n        var pendingRead;\n        var finishRead = function () {\n            if (_this._pendingRead === pendingRead) {\n                _this._pendingRead = undefined;\n            }\n        };\n        this._pendingRead = pendingRead = readPromise.then(finishRead, finishRead);\n    };\n    AbstractWrappingReadableStreamSource.prototype._finishPendingRead = function () {\n        var _this = this;\n        if (!this._pendingRead) {\n            return undefined;\n        }\n        var afterRead = function () { return _this._finishPendingRead(); };\n        return this._pendingRead.then(afterRead, afterRead);\n    };\n    return AbstractWrappingReadableStreamSource;\n}());\nvar WrappingReadableStreamDefaultSource = /** @class */ (function (_super) {\n    __extends(WrappingReadableStreamDefaultSource, _super);\n    function WrappingReadableStreamDefaultSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WrappingReadableStreamDefaultSource.prototype.pull = function () {\n        return this._pullWithDefaultReader();\n    };\n    return WrappingReadableStreamDefaultSource;\n}(AbstractWrappingReadableStreamSource));\nfunction toUint8Array(view) {\n    return new Uint8Array(view.buffer, view.byteOffset, view.byteLength);\n}\nfunction copyArrayBufferView(from, to) {\n    var fromArray = toUint8Array(from);\n    var toArray = toUint8Array(to);\n    toArray.set(fromArray, 0);\n}\nvar WrappingReadableByteStreamSource = /** @class */ (function (_super) {\n    __extends(WrappingReadableByteStreamSource, _super);\n    function WrappingReadableByteStreamSource(underlyingStream) {\n        var _this = this;\n        var supportsByob = supportsByobReader(underlyingStream);\n        _this = _super.call(this, underlyingStream) || this;\n        _this._supportsByob = supportsByob;\n        return _this;\n    }\n    Object.defineProperty(WrappingReadableByteStreamSource.prototype, \"type\", {\n        get: function () {\n            return 'bytes';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WrappingReadableByteStreamSource.prototype._attachByobReader = function () {\n        if (this._readerMode === \"byob\" /* BYOB */) {\n            return;\n        }\n        assert(this._supportsByob);\n        this._detachReader();\n        var reader = this._underlyingStream.getReader({ mode: 'byob' });\n        this._readerMode = \"byob\" /* BYOB */;\n        this._attachReader(reader);\n    };\n    WrappingReadableByteStreamSource.prototype.pull = function () {\n        if (this._supportsByob) {\n            var byobRequest = this._readableStreamController.byobRequest;\n            if (byobRequest) {\n                return this._pullWithByobRequest(byobRequest);\n            }\n        }\n        return this._pullWithDefaultReader();\n    };\n    WrappingReadableByteStreamSource.prototype._pullWithByobRequest = function (byobRequest) {\n        var _this = this;\n        this._attachByobReader();\n        // reader.read(view) detaches the input view, therefore we cannot pass byobRequest.view directly\n        // create a separate buffer to read into, then copy that to byobRequest.view\n        var buffer = new Uint8Array(byobRequest.view.byteLength);\n        // TODO Backpressure?\n        var read = this._underlyingReader.read(buffer)\n            .then(function (result) {\n            _this._readableStreamController;\n            if (result.done) {\n                _this._tryClose();\n                byobRequest.respond(0);\n            }\n            else {\n                copyArrayBufferView(result.value, byobRequest.view);\n                byobRequest.respond(result.value.byteLength);\n            }\n        });\n        this._setPendingRead(read);\n        return read;\n    };\n    return WrappingReadableByteStreamSource;\n}(AbstractWrappingReadableStreamSource));\n\nfunction createWritableStreamWrapper(ctor) {\n    assert(isWritableStreamConstructor(ctor));\n    return function (writable) {\n        if (writable.constructor === ctor) {\n            return writable;\n        }\n        var sink = createWrappingWritableSink(writable);\n        return new ctor(sink);\n    };\n}\nfunction createWrappingWritableSink(writable) {\n    assert(isWritableStream(writable));\n    assert(writable.locked === false);\n    var writer = writable.getWriter();\n    return new WrappingWritableStreamSink(writer);\n}\nvar WrappingWritableStreamSink = /** @class */ (function () {\n    function WrappingWritableStreamSink(underlyingWriter) {\n        var _this = this;\n        this._writableStreamController = undefined;\n        this._pendingWrite = undefined;\n        this._state = \"writable\" /* WRITABLE */;\n        this._storedError = undefined;\n        this._underlyingWriter = underlyingWriter;\n        this._errorPromise = new Promise(function (resolve, reject) {\n            _this._errorPromiseReject = reject;\n        });\n        this._errorPromise.catch(noop);\n    }\n    WrappingWritableStreamSink.prototype.start = function (controller) {\n        var _this = this;\n        this._writableStreamController = controller;\n        this._underlyingWriter.closed\n            .then(function () {\n            _this._state = \"closed\" /* CLOSED */;\n        })\n            .catch(function (reason) { return _this._finishErroring(reason); });\n    };\n    WrappingWritableStreamSink.prototype.write = function (chunk) {\n        var _this = this;\n        var writer = this._underlyingWriter;\n        // Detect past errors\n        if (writer.desiredSize === null) {\n            return writer.ready;\n        }\n        var writeRequest = writer.write(chunk);\n        // Detect future errors\n        writeRequest.catch(function (reason) { return _this._finishErroring(reason); });\n        writer.ready.catch(function (reason) { return _this._startErroring(reason); });\n        // Reject write when errored\n        var write = Promise.race([writeRequest, this._errorPromise]);\n        this._setPendingWrite(write);\n        return write;\n    };\n    WrappingWritableStreamSink.prototype.close = function () {\n        var _this = this;\n        if (this._pendingWrite === undefined) {\n            return this._underlyingWriter.close();\n        }\n        return this._finishPendingWrite().then(function () { return _this.close(); });\n    };\n    WrappingWritableStreamSink.prototype.abort = function (reason) {\n        if (this._state === \"errored\" /* ERRORED */) {\n            return undefined;\n        }\n        var writer = this._underlyingWriter;\n        return writer.abort(reason);\n    };\n    WrappingWritableStreamSink.prototype._setPendingWrite = function (writePromise) {\n        var _this = this;\n        var pendingWrite;\n        var finishWrite = function () {\n            if (_this._pendingWrite === pendingWrite) {\n                _this._pendingWrite = undefined;\n            }\n        };\n        this._pendingWrite = pendingWrite = writePromise.then(finishWrite, finishWrite);\n    };\n    WrappingWritableStreamSink.prototype._finishPendingWrite = function () {\n        var _this = this;\n        if (this._pendingWrite === undefined) {\n            return Promise.resolve();\n        }\n        var afterWrite = function () { return _this._finishPendingWrite(); };\n        return this._pendingWrite.then(afterWrite, afterWrite);\n    };\n    WrappingWritableStreamSink.prototype._startErroring = function (reason) {\n        var _this = this;\n        if (this._state === \"writable\" /* WRITABLE */) {\n            this._state = \"erroring\" /* ERRORING */;\n            this._storedError = reason;\n            var afterWrite = function () { return _this._finishErroring(reason); };\n            if (this._pendingWrite === undefined) {\n                afterWrite();\n            }\n            else {\n                this._finishPendingWrite().then(afterWrite, afterWrite);\n            }\n            this._writableStreamController.error(reason);\n        }\n    };\n    WrappingWritableStreamSink.prototype._finishErroring = function (reason) {\n        if (this._state === \"writable\" /* WRITABLE */) {\n            this._startErroring(reason);\n        }\n        if (this._state === \"erroring\" /* ERRORING */) {\n            this._state = \"errored\" /* ERRORED */;\n            this._errorPromiseReject(this._storedError);\n        }\n    };\n    return WrappingWritableStreamSink;\n}());\n\nfunction createTransformStreamWrapper(ctor) {\n    assert(isTransformStreamConstructor(ctor));\n    return function (transform) {\n        if (transform.constructor === ctor) {\n            return transform;\n        }\n        var transformer = createWrappingTransformer(transform);\n        return new ctor(transformer);\n    };\n}\nfunction createWrappingTransformer(transform) {\n    assert(isTransformStream(transform));\n    var readable = transform.readable, writable = transform.writable;\n    assert(readable.locked === false);\n    assert(writable.locked === false);\n    var reader = readable.getReader();\n    var writer;\n    try {\n        writer = writable.getWriter();\n    }\n    catch (e) {\n        reader.releaseLock(); // do not leak reader\n        throw e;\n    }\n    return new WrappingTransformStreamTransformer(reader, writer);\n}\nvar WrappingTransformStreamTransformer = /** @class */ (function () {\n    function WrappingTransformStreamTransformer(reader, writer) {\n        var _this = this;\n        this._transformStreamController = undefined;\n        this._onRead = function (result) {\n            if (result.done) {\n                return;\n            }\n            _this._transformStreamController.enqueue(result.value);\n            return _this._reader.read().then(_this._onRead);\n        };\n        this._onError = function (reason) {\n            _this._flushReject(reason);\n            _this._transformStreamController.error(reason);\n            _this._reader.cancel(reason).catch(noop);\n            _this._writer.abort(reason).catch(noop);\n        };\n        this._onTerminate = function () {\n            _this._flushResolve();\n            _this._transformStreamController.terminate();\n            var error = new TypeError('TransformStream terminated');\n            _this._writer.abort(error).catch(noop);\n        };\n        this._reader = reader;\n        this._writer = writer;\n        this._flushPromise = new Promise(function (resolve, reject) {\n            _this._flushResolve = resolve;\n            _this._flushReject = reject;\n        });\n    }\n    WrappingTransformStreamTransformer.prototype.start = function (controller) {\n        this._transformStreamController = controller;\n        this._reader.read()\n            .then(this._onRead)\n            .then(this._onTerminate, this._onError);\n        var readerClosed = this._reader.closed;\n        if (readerClosed) {\n            readerClosed\n                .then(this._onTerminate, this._onError);\n        }\n    };\n    WrappingTransformStreamTransformer.prototype.transform = function (chunk) {\n        return this._writer.write(chunk);\n    };\n    WrappingTransformStreamTransformer.prototype.flush = function () {\n        var _this = this;\n        return this._writer.close()\n            .then(function () { return _this._flushPromise; });\n    };\n    return WrappingTransformStreamTransformer;\n}());\n\nexport { createReadableStreamWrapper, createTransformStreamWrapper, createWrappingReadableSource, createWrappingTransformer, createWrappingWritableSink, createWritableStreamWrapper };\n//# sourceMappingURL=web-streams-adapter.mjs.map\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","import BN from 'bn.js';\n\n/**\n * @fileoverview\n * BigInteger implementation of basic operations\n * Wrapper of bn.js library (wwww.github.com/indutny/bn.js)\n * @module biginteger/bn\n * @private\n */\n\n/**\n * @private\n */\nexport default class BigInteger {\n  /**\n   * Get a BigInteger (input must be big endian for strings and arrays)\n   * @param {Number|String|Uint8Array} n - Value to convert\n   * @throws {Error} on undefined input\n   */\n  constructor(n) {\n    if (n === undefined) {\n      throw new Error('Invalid BigInteger input');\n    }\n\n    this.value = new BN(n);\n  }\n\n  clone() {\n    const clone = new BigInteger(null);\n    this.value.copy(clone.value);\n    return clone;\n  }\n\n  /**\n   * BigInteger increment in place\n   */\n  iinc() {\n    this.value.iadd(new BN(1));\n    return this;\n  }\n\n  /**\n   * BigInteger increment\n   * @returns {BigInteger} this + 1.\n   */\n  inc() {\n    return this.clone().iinc();\n  }\n\n  /**\n   * BigInteger decrement in place\n   */\n  idec() {\n    this.value.isub(new BN(1));\n    return this;\n  }\n\n  /**\n   * BigInteger decrement\n   * @returns {BigInteger} this - 1.\n   */\n  dec() {\n    return this.clone().idec();\n  }\n\n\n  /**\n   * BigInteger addition in place\n   * @param {BigInteger} x - Value to add\n   */\n  iadd(x) {\n    this.value.iadd(x.value);\n    return this;\n  }\n\n  /**\n   * BigInteger addition\n   * @param {BigInteger} x - Value to add\n   * @returns {BigInteger} this + x.\n   */\n  add(x) {\n    return this.clone().iadd(x);\n  }\n\n  /**\n   * BigInteger subtraction in place\n   * @param {BigInteger} x - Value to subtract\n   */\n  isub(x) {\n    this.value.isub(x.value);\n    return this;\n  }\n\n  /**\n   * BigInteger subtraction\n   * @param {BigInteger} x - Value to subtract\n   * @returns {BigInteger} this - x.\n   */\n  sub(x) {\n    return this.clone().isub(x);\n  }\n\n  /**\n   * BigInteger multiplication in place\n   * @param {BigInteger} x - Value to multiply\n   */\n  imul(x) {\n    this.value.imul(x.value);\n    return this;\n  }\n\n  /**\n   * BigInteger multiplication\n   * @param {BigInteger} x - Value to multiply\n   * @returns {BigInteger} this * x.\n   */\n  mul(x) {\n    return this.clone().imul(x);\n  }\n\n  /**\n   * Compute value modulo m, in place\n   * @param {BigInteger} m - Modulo\n   */\n  imod(m) {\n    this.value = this.value.umod(m.value);\n    return this;\n  }\n\n  /**\n   * Compute value modulo m\n   * @param {BigInteger} m - Modulo\n   * @returns {BigInteger} this mod m.\n   */\n  mod(m) {\n    return this.clone().imod(m);\n  }\n\n  /**\n   * Compute modular exponentiation\n   * Much faster than this.exp(e).mod(n)\n   * @param {BigInteger} e - Exponent\n   * @param {BigInteger} n - Modulo\n   * @returns {BigInteger} this ** e mod n.\n   */\n  modExp(e, n) {\n    // We use either Montgomery or normal reduction context\n    // Montgomery requires coprime n and R (montogmery multiplier)\n    //  bn.js picks R as power of 2, so n must be odd\n    const nred = n.isEven() ? BN.red(n.value) : BN.mont(n.value);\n    const x = this.clone();\n    x.value = x.value.toRed(nred).redPow(e.value).fromRed();\n    return x;\n  }\n\n  /**\n   * Compute the inverse of this value modulo n\n   * Note: this and and n must be relatively prime\n   * @param {BigInteger} n - Modulo\n   * @returns {BigInteger} x such that this*x = 1 mod n\n   * @throws {Error} if the inverse does not exist\n   */\n  modInv(n) {\n    // invm returns a wrong result if the inverse does not exist\n    if (!this.gcd(n).isOne()) {\n      throw new Error('Inverse does not exist');\n    }\n    return new BigInteger(this.value.invm(n.value));\n  }\n\n  /**\n   * Compute greatest common divisor between this and n\n   * @param {BigInteger} n - Operand\n   * @returns {BigInteger} gcd\n   */\n  gcd(n) {\n    return new BigInteger(this.value.gcd(n.value));\n  }\n\n  /**\n   * Shift this to the left by x, in place\n   * @param {BigInteger} x - Shift value\n   */\n  ileftShift(x) {\n    this.value.ishln(x.value.toNumber());\n    return this;\n  }\n\n  /**\n   * Shift this to the left by x\n   * @param {BigInteger} x - Shift value\n   * @returns {BigInteger} this << x.\n   */\n  leftShift(x) {\n    return this.clone().ileftShift(x);\n  }\n\n  /**\n   * Shift this to the right by x, in place\n   * @param {BigInteger} x - Shift value\n   */\n  irightShift(x) {\n    this.value.ishrn(x.value.toNumber());\n    return this;\n  }\n\n  /**\n   * Shift this to the right by x\n   * @param {BigInteger} x - Shift value\n   * @returns {BigInteger} this >> x.\n   */\n  rightShift(x) {\n    return this.clone().irightShift(x);\n  }\n\n  /**\n   * Whether this value is equal to x\n   * @param {BigInteger} x\n   * @returns {Boolean}\n   */\n  equal(x) {\n    return this.value.eq(x.value);\n  }\n\n  /**\n   * Whether this value is less than x\n   * @param {BigInteger} x\n   * @returns {Boolean}\n   */\n  lt(x) {\n    return this.value.lt(x.value);\n  }\n\n  /**\n   * Whether this value is less than or equal to x\n   * @param {BigInteger} x\n   * @returns {Boolean}\n   */\n  lte(x) {\n    return this.value.lte(x.value);\n  }\n\n  /**\n   * Whether this value is greater than x\n   * @param {BigInteger} x\n   * @returns {Boolean}\n   */\n  gt(x) {\n    return this.value.gt(x.value);\n  }\n\n  /**\n   * Whether this value is greater than or equal to x\n   * @param {BigInteger} x\n   * @returns {Boolean}\n   */\n  gte(x) {\n    return this.value.gte(x.value);\n  }\n\n  isZero() {\n    return this.value.isZero();\n  }\n\n  isOne() {\n    return this.value.eq(new BN(1));\n  }\n\n  isNegative() {\n    return this.value.isNeg();\n  }\n\n  isEven() {\n    return this.value.isEven();\n  }\n\n  abs() {\n    const res = this.clone();\n    res.value = res.value.abs();\n    return res;\n  }\n\n  /**\n   * Get this value as a string\n   * @returns {String} this value.\n   */\n  toString() {\n    return this.value.toString();\n  }\n\n  /**\n   * Get this value as an exact Number (max 53 bits)\n   * Fails if this value is too large\n   * @returns {Number}\n   */\n  toNumber() {\n    return this.value.toNumber();\n  }\n\n  /**\n   * Get value of i-th bit\n   * @param {Number} i - Bit index\n   * @returns {Number} Bit value.\n   */\n  getBit(i) {\n    return this.value.testn(i) ? 1 : 0;\n  }\n\n  /**\n   * Compute bit length\n   * @returns {Number} Bit length.\n   */\n  bitLength() {\n    return this.value.bitLength();\n  }\n\n  /**\n   * Compute byte length\n   * @returns {Number} Byte length.\n   */\n  byteLength() {\n    return this.value.byteLength();\n  }\n\n  /**\n   * Get Uint8Array representation of this number\n   * @param {String} endian - Endianess of output array (defaults to 'be')\n   * @param {Number} length - Of output array\n   * @returns {Uint8Array}\n   */\n  toUint8Array(endian = 'be', length) {\n    return this.value.toArrayLike(Uint8Array, endian, length);\n  }\n}\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  // Note: this implementation is according to the original paper\n  // by P. Montgomery, NOT the one by D. J. Bernstein.\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  var bytes = utils.toArray(bytes, enc);\n\n  // TODO Curve448\n  // Montgomery curve points must be represented in the compressed format\n  // https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-02#appendix-B\n  if (bytes.length === 33 && bytes[0] === 0x40)\n    bytes = bytes.slice(1, 33).reverse(); // point must be little-endian\n  if (bytes.length !== 32)\n    throw new Error('Unknown point compression format');\n  return this.point(bytes, 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n\n  // Note: the output should always be little-endian\n  // https://tools.ietf.org/html/draft-ietf-openpgp-rfc4880bis-02#appendix-B\n  if (compact) {\n    return [ 0x40 ].concat(this.getX().toArray('le', len));\n  } else {\n    return this.getX().toArray('be', len);\n  }\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else if (options.type === 'mont')\n    this.curve = new curve.mont(options);\n  else throw new Error('Unknown curve type.');\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, n*G != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\n// https://tools.ietf.org/html/rfc7748#section-4.1\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  cofactor: '8',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  cofactor: '8',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\n// https://tools.ietf.org/html/rfc5639#section-3.4\ndefineCurve('brainpoolP256r1', {\n  type: 'short',\n  prime: null,\n  p: 'A9FB57DB A1EEA9BC 3E660A90 9D838D72 6E3BF623 D5262028 2013481D 1F6E5377',\n  a: '7D5A0975 FC2C3057 EEF67530 417AFFE7 FB8055C1 26DC5C6C E94A4B44 F330B5D9',\n  b: '26DC5C6C E94A4B44 F330B5D9 BBD77CBF 95841629 5CF7E1CE 6BCCDC18 FF8C07B6',\n  n: 'A9FB57DB A1EEA9BC 3E660A90 9D838D71 8C397AA3 B561A6F7 901E0E82 974856A7',\n  hash: hash.sha256, // or 384, or 512\n  gRed: false,\n  g: [\n    '8BD2AEB9CB7E57CB2C4B482FFC81B7AFB9DE27E1E3BD23C23A4453BD9ACE3262',\n    '547EF835C3DAC4FD97F8461A14611DC9C27745132DED8E545C1D54C72F046997'\n  ]\n});\n\n// https://tools.ietf.org/html/rfc5639#section-3.6\ndefineCurve('brainpoolP384r1', {\n  type: 'short',\n  prime: null,\n  p: '8CB91E82 A3386D28 0F5D6F7E 50E641DF 152F7109 ED5456B4 12B1DA19 7FB71123' +\n    'ACD3A729 901D1A71 87470013 3107EC53',\n  a: '7BC382C6 3D8C150C 3C72080A CE05AFA0 C2BEA28E 4FB22787 139165EF BA91F90F' +\n    '8AA5814A 503AD4EB 04A8C7DD 22CE2826',\n  b: '04A8C7DD 22CE2826 8B39B554 16F0447C 2FB77DE1 07DCD2A6 2E880EA5 3EEB62D5' +\n    '7CB43902 95DBC994 3AB78696 FA504C11',\n  n: '8CB91E82 A3386D28 0F5D6F7E 50E641DF 152F7109 ED5456B3 1F166E6C AC0425A7' +\n    'CF3AB6AF 6B7FC310 3B883202 E9046565',\n  hash: hash.sha384, // or 512\n  gRed: false,\n  g: [\n    '1D1C64F068CF45FFA2A63A81B7C13F6B8847A3E77EF14FE3DB7FCAFE0CBD10' +\n      'E8E826E03436D646AAEF87B2E247D4AF1E',\n    '8ABE1D7520F9C2A45CB1EB8E95CFD55262B70B29FEEC5864E19C054FF99129' +\n      '280E4646217791811142820341263C5315'\n  ]\n});\n\n// https://tools.ietf.org/html/rfc5639#section-3.7\ndefineCurve('brainpoolP512r1', {\n  type: 'short',\n  prime: null,\n  p: 'AADD9DB8 DBE9C48B 3FD4E6AE 33C9FC07 CB308DB3 B3C9D20E D6639CCA 70330871' +\n    '7D4D9B00 9BC66842 AECDA12A E6A380E6 2881FF2F 2D82C685 28AA6056 583A48F3',\n  a: '7830A331 8B603B89 E2327145 AC234CC5 94CBDD8D 3DF91610 A83441CA EA9863BC' +\n    '2DED5D5A A8253AA1 0A2EF1C9 8B9AC8B5 7F1117A7 2BF2C7B9 E7C1AC4D 77FC94CA',\n  b: '3DF91610 A83441CA EA9863BC 2DED5D5A A8253AA1 0A2EF1C9 8B9AC8B5 7F1117A7' +\n    '2BF2C7B9 E7C1AC4D 77FC94CA DC083E67 984050B7 5EBAE5DD 2809BD63 8016F723',\n  n: 'AADD9DB8 DBE9C48B 3FD4E6AE 33C9FC07 CB308DB3 B3C9D20E D6639CCA 70330870' +\n    '553E5C41 4CA92619 41866119 7FAC1047 1DB1D381 085DDADD B5879682 9CA90069',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '81AEE4BDD82ED9645A21322E9C4C6A9385ED9F70B5D916C1B43B62EEF4D009' +\n      '8EFF3B1F78E2D0D48D50D1687B93B97D5F7C6D5047406A5E688B352209BCB9F822',\n    '7DDE385D566332ECC0EABFA9CF7822FDF209F70024A57B1AA000C55B881F81' +\n      '11B2DCDE494A5F485E5BCA4BD88A2763AED1CA2B2FA8F0540678CD1E0F3AD80892'\n  ]\n});\n\n// https://en.bitcoin.it/wiki/Secp256k1\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\n// TODO: should not validate for X25519\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc, compact) {\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // For Curve25519/Curve448 we have a specific procedure.\n  // TODO Curve448\n  if (this.ec.curve.type === 'mont') {\n    var one = this.ec.curve.one;\n    var mask = one.ushln(255 - 3).sub(one).ushln(3);\n    this.priv = this.priv.or(one.ushln(255 - 1));\n    this.priv = this.priv.and(mask);\n  } else\n    // Ensure that the priv won't be bigger than n, otherwise we may fail\n    // in fixed multiplication method\n    this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  // Key generation for curve25519 is simpler\n  if (this.curve.type === 'mont') {\n    var priv = new BN(drbg.generate(32));\n    return this.keyFromPrivate(priv);\n  }\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly, bitSize) {\n  bitSize = bitSize || msg.byteLength() * 8;\n  var delta = bitSize - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.truncateMsg  = function truncateMSG(msg) {\n  // Bit size is only determined correctly for Uint8Arrays and hex strings\n  var bitSize;\n  if (msg instanceof Uint8Array) {\n    bitSize = msg.byteLength * 8;\n    msg = this._truncateToN(new BN(msg, 16), false, bitSize);\n  } else if (typeof msg === 'string') {\n    bitSize = msg.length * 4;\n    msg = this._truncateToN(new BN(msg, 16), false, bitSize);\n  } else {\n    msg = this._truncateToN(new BN(msg, 16));\n  }\n  return msg;\n}\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this.truncateMsg(msg);\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n  // Fallback to the old code\n  var ret = this._verify(this.truncateMsg(msg), signature, key) ||\n  this._verify(this._truncateToN(new BN(msg, 16)), signature, key);\n  return ret;\n};\n\nEC.prototype._verify = function _verify(msg, signature, key) {\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  if (params.hasOwnProperty('secret'))\n    this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else {\n    this._pubBytes = parseBytes(params.pub);\n    if (this._pubBytes && this._pubBytes.length === 33 &&\n        this._pubBytes[0] === 0x40)\n      this._pubBytes = this._pubBytes.slice(1, 33);\n    if (this._pubBytes && this._pubBytes.length !== 32)\n      throw new Error('Unknown point compression format');\n  }\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  // https://tools.ietf.org/html/rfc8032#section-5.1.5\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc, compact) {\n  return utils.encode((compact ? [ 0x40 ] : []).concat(this.pubBytes()), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar HmacDRBG = require('hmac-drbg');\nvar rand = require('brorand');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.curve.n.toArray()\n  });\n\n  return this.keyFromSecret(drbg.generate(32));\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","/**\n * 暗号鍵生成に関するユーティリティ関数群\n * Web Crypto API、node-forge、openpgp.jsを使用\n */\nimport * as openpgp from 'openpgp';\nimport * as forge from 'node-forge';\n\n/**\n * RSA鍵ペアを生成\n * @param {number} size - 鍵サイズ（2048/3072/4096）\n * @returns {Promise<CryptoKeyPair>} 生成された鍵ペア\n */\nexport async function generateRSAKeyPair(size) {\n    try {\n        // 鍵サイズの検証\n        if (![2048, 3072, 4096].includes(size)) {\n            throw new Error('RSAの鍵サイズは2048/3072/4096ビットのみ対応しています');\n        }\n\n        return await window.crypto.subtle.generateKey(\n            {\n                name: 'RSA-OAEP',\n                modulusLength: size,\n                publicExponent: new Uint8Array([1, 0, 1]),\n                hash: 'SHA-256',\n            },\n            true,\n            ['encrypt', 'decrypt']\n        );\n    } catch (error) {\n        console.error('RSA鍵生成エラー:', error);\n        throw error;\n    }\n}\n\n/**\n * ECDSA鍵ペアを生成\n * @param {string} curve - 楕円曲線（'P-256'/'P-384'）\n * @returns {Promise<CryptoKeyPair>} 生成された鍵ペア\n */\nexport async function generateECDSAKeyPair(curve) {\n    try {\n        // 曲線の検証\n        if (!['P-256', 'P-384'].includes(curve)) {\n            throw new Error('ECDSAはP-256/P-384のみ対応しています');\n        }\n\n        return await window.crypto.subtle.generateKey(\n            {\n                name: 'ECDSA',\n                namedCurve: curve,\n            },\n            true,\n            ['sign', 'verify']\n        );\n    } catch (error) {\n        console.error('ECDSA鍵生成エラー:', error);\n        throw error;\n    }\n}\n\n/**\n * EdDSA鍵ペアを生成\n * @param {string} curve - 楕円曲線（'Ed25519'）\n * @returns {Promise<Object>} 生成された鍵ペア\n */\nexport async function generateEdDSAKeyPair(curve) {\n    try {\n        // 曲線の検証\n        if (curve !== 'Ed25519') {\n            throw new Error('EdDSAはEd25519のみ対応しています');\n        }\n\n        return await openpgp.generateKey({\n            type: curve.toLowerCase(),\n            format: 'object'\n        });\n    } catch (error) {\n        console.error('EdDSA鍵生成エラー:', error);\n        throw error;\n    }\n}\n\n/**\n * 鍵をPEM形式に変換\n * @param {CryptoKeyPair} keyPair - 変換する鍵ペア\n * @param {string} passphrase - 秘密鍵暗号化用パスフレーズ（オプション）\n * @returns {Promise<Object>} PEM形式の公開鍵と秘密鍵\n */\nexport async function convertToPEM(keyPair, passphrase = '') {\n    try {\n        const spki = await window.crypto.subtle.exportKey('spki', keyPair.publicKey);\n        const pkcs8 = await window.crypto.subtle.exportKey('pkcs8', keyPair.privateKey);\n\n        const publicPem = forge.pki.publicKeyToPem(\n            forge.pki.publicKeyFromAsn1(\n                forge.asn1.fromDer(forge.util.createBuffer(new Uint8Array(spki)))\n            )\n        );\n\n        let privatePem = forge.pki.privateKeyToPem(\n            forge.pki.privateKeyFromAsn1(\n                forge.asn1.fromDer(forge.util.createBuffer(new Uint8Array(pkcs8)))\n            )\n        );\n\n        if (passphrase) {\n            privatePem = forge.pki.encryptRsaPrivateKey(\n                forge.pki.privateKeyFromPem(privatePem),\n                passphrase,\n                { algorithm: 'aes256' }\n            );\n        }\n\n        return { publicKey: publicPem, privateKey: privatePem };\n    } catch (error) {\n        console.error('PEM変換エラー:', error);\n        throw error;\n    }\n}\n\n/**\n * 鍵をJWK形式に変換\n * @param {CryptoKeyPair} keyPair - 変換する鍵ペア\n * @returns {Promise<Object>} JWK形式の公開鍵と秘密鍵\n */\nexport async function convertToJWK(keyPair) {\n    try {\n        const publicJwk = await window.crypto.subtle.exportKey('jwk', keyPair.publicKey);\n        const privateJwk = await window.crypto.subtle.exportKey('jwk', keyPair.privateKey);\n\n        return {\n            publicKey: JSON.stringify(publicJwk, null, 2),\n            privateKey: JSON.stringify(privateJwk, null, 2)\n        };\n    } catch (error) {\n        console.error('JWK変換エラー:', error);\n        throw error;\n    }\n}\n\n/**\n * 鍵をSSH形式に変換\n * @param {CryptoKeyPair} keyPair - 変換する鍵ペア\n * @param {string} passphrase - 秘密鍵暗号化用パスフレーズ（オプション）\n * @returns {Promise<Object>} SSH形式の公開鍵と秘密鍵\n */\nexport async function convertToSSH(keyPair, passphrase = '') {\n    try {\n        const publicKey = forge.ssh.publicKeyToOpenSSH(keyPair.publicKey);\n        const privateKey = passphrase\n            ? forge.ssh.privateKeyToOpenSSH(keyPair.privateKey, passphrase)\n            : forge.ssh.privateKeyToPem(keyPair.privateKey);\n\n        return { publicKey, privateKey };\n    } catch (error) {\n        console.error('SSH変換エラー:', error);\n        throw error;\n    }\n}\n\n/**\n * 鍵をOpenPGP形式に変換\n * @param {Object} options - OpenPGP鍵生成オプション\n * @returns {Promise<Object>} OpenPGP形式の公開鍵と秘密鍵\n */\nexport async function convertToOpenPGP(options) {\n    try {\n        const { publicKey, privateKey } = await openpgp.generateKey({\n            userIds: [{ name: options.name, email: options.email }],\n            type: options.type,\n            passphrase: options.passphrase,\n            format: 'armored'\n        });\n\n        return { publicKey, privateKey };\n    } catch (error) {\n        console.error('OpenPGP変換エラー:', error);\n        throw error;\n    }\n}\n\n/**\n * メタデータを生成\n * @param {Object} params - 鍵生成パラメータ\n * @returns {Object} メタデータオブジェクト\n */\nexport function generateMetadata(params) {\n    return {\n        type: params.keyType,\n        size: params.keySize,\n        format: params.outputFormat,\n        generated: new Date().toISOString(),\n        hasPassphrase: !!params.passphrase\n    };\n} ","/**\n * メインアプリケーションコンポーネント\n */\nimport React, { useState } from 'react';\nimport Step1 from './components/Step1';\nimport Step2 from './components/Step2';\nimport Step3 from './components/Step3';\nimport Step4 from './components/Step4';\nimport Step5 from './components/Step5';\nimport { createMetadata } from './utils/metadata'; // 修正\nimport { validateAll } from './utils/errorHandler';\nimport {\n    generateRSAKeyPair,\n    generateECDSAKeyPair,\n    generateEdDSAKeyPair,\n    convertToPEM,\n    convertToJWK,\n    convertToSSH,\n    convertToOpenPGP\n} from './utils/crypto';\n\n\nexport default function App() {\n    const [step, setStep] = useState(1);\n    const [keyType, setKeyType] = useState('');\n    const [keySize, setKeySize] = useState('');\n    const [outputFormat, setOutputFormat] = useState('');\n    const [passphrase, setPassphrase] = useState('');\n    const [language, setLanguage] = useState('ja');\n    const [isGenerating, setIsGenerating] = useState(false);\n    const [generatedKeys, setGeneratedKeys] = useState(null); // 生成された鍵を保持\n    const [showResults, setShowResults] = useState(false); // 結果モーダルの表示制御\n\n    const handleNext = () => {\n        setStep(prev => Math.min(prev + 1, 5));\n    };\n\n    const handleBack = () => {\n        setStep(prev => Math.max(prev - 1, 1));\n    };\n\n    // 鍵生成処理\n    const handleGenerate = async () => {\n        setIsGenerating(true);\n        try {\n            // パラメータをまとめる\n            const params = { keyType, keySize, outputFormat, passphrase };\n\n            // バリデーション（念のため再確認）\n            const validation = validateAll(params);\n            if (!validation.isValid) {\n                throw new Error(validation.message);\n            }\n\n            // 鍵生成\n            let keyPair;\n            switch (keyType) {\n                case 'rsa':\n                    keyPair = await generateRSAKeyPair(keySize);\n                    break;\n                case 'ecdsa':\n                    keyPair = await generateECDSAKeyPair(keySize);\n                    break;\n                case 'eddsa':\n                    keyPair = await generateEdDSAKeyPair(keySize);\n                    break;\n                default:\n                    throw new Error('Invalid key type');\n            }\n\n            // 出力形式に変換\n            let publicKey, privateKey;\n            switch (outputFormat) {\n                case 'pem':\n                    publicKey = convertToPEM(keyPair.publicKey, 'public');\n                    privateKey = convertToPEM(keyPair.privateKey, 'private', passphrase);\n                    break;\n                case 'jwk':\n                    publicKey = convertToJWK(keyPair.publicKey);\n                    privateKey = convertToJWK(keyPair.privateKey);\n                    break;\n                case 'ssh':\n                    publicKey = convertToSSH(keyPair.publicKey);\n                    privateKey = convertToSSH(keyPair.privateKey);\n                    break;\n                case 'pgp':\n                    publicKey = await convertToOpenPGP(keyPair.publicKey, 'public');\n                    privateKey = await convertToOpenPGP(keyPair.privateKey, 'private', passphrase);\n                    break;\n                default:\n                    throw new Error('Invalid output format');\n            }\n\n            // メタデータ生成\n            const metadata = createMetadata({ // 修正\n                keyType,\n                keySize,\n                outputFormat,\n                passphrase: !!passphrase,\n                generatedAt: new Date().toISOString()\n            });\n\n            // 生成結果を保存\n            setGeneratedKeys({\n                publicKey,\n                privateKey,\n                metadata\n            });\n\n            // 結果モーダルを表示\n            setShowResults(true);\n        } catch (err) {\n            console.error('Key generation failed:', err);\n            setGeneratedKeys(null);\n            setShowResults(false);\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    // ファイルダウンロード処理\n    const downloadFile = (content, fileName) => {\n        const blob = new Blob([content], { type: 'text/plain' });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = fileName;\n        link.click();\n        URL.revokeObjectURL(url);\n    };\n\n    // 一括ダウンロード（簡易版）\n    const downloadAll = () => {\n        if (!generatedKeys) return;\n        const { publicKey, privateKey, metadata } = generatedKeys;\n        downloadFile(publicKey, `public_${keyType}_${keySize}.${outputFormat}`);\n        downloadFile(privateKey, `private_${keyType}_${keySize}.${outputFormat}`);\n        downloadFile(JSON.stringify(metadata, null, 2), `metadata_${keyType}_${keySize}.json`);\n    };\n\n    const renderStep = () => {\n        switch (step) {\n            case 1:\n                return (\n                    <Step1\n                        selected={keyType}\n                        onSelect={setKeyType}\n                        onNext={handleNext}\n                        language={language}\n                    />\n                );\n            case 2:\n                return (\n                    <Step2\n                        keyType={keyType}\n                        selected={keySize}\n                        onSelect={setKeySize}\n                        onBack={handleBack}\n                        onNext={handleNext}\n                        language={language}\n                    />\n                );\n            case 3:\n                return (\n                    <Step3\n                        keyType={keyType}\n                        keySize={keySize}\n                        selected={outputFormat}\n                        onSelect={setOutputFormat}\n                        onBack={handleBack}\n                        onNext={handleNext}\n                        language={language}\n                    />\n                );\n            case 4:\n                return (\n                    <Step4\n                        outputFormat={outputFormat}\n                        passphrase={passphrase}\n                        onSelect={setPassphrase}\n                        onBack={handleBack}\n                        onNext={handleNext}\n                        language={language}\n                    />\n                );\n            case 5:\n                return (\n                    <Step5\n                        params={{ keyType, keySize, outputFormat, passphrase }}\n                        onGenerate={handleGenerate}\n                        onBack={handleBack}\n                        isGenerating={isGenerating}\n                        language={language}\n                    />\n                );\n            default:\n                return null;\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-3xl mx-auto\">\n                <div className=\"bg-white shadow sm:rounded-lg\">\n                    <div className=\"px-4 py-5 sm:p-6\">\n                        {renderStep()}\n                    </div>\n                </div>\n\n                {/* 結果表示モーダル */}\n                {showResults && generatedKeys && (\n                    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n                        <div className=\"bg-white rounded-lg max-w-2xl w-full p-6 max-h-[90vh] overflow-y-auto\">\n                            <div className=\"flex justify-between items-start\">\n                                <h3 className=\"text-xl font-bold\">\n                                    {language === 'ja' ? '生成結果' : 'Generated Keys'}\n                                </h3>\n                                <button\n                                    onClick={() => setShowResults(false)}\n                                    className=\"text-gray-500 hover:text-gray-700\"\n                                >\n                                    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                                    </svg>\n                                </button>\n                            </div>\n\n                            <div className=\"mt-4 space-y-4\">\n                                <div>\n                                    <h4 className=\"font-bold\">{language === 'ja' ? '公開鍵' : 'Public Key'}</h4>\n                                    <textarea\n                                        className=\"mt-1 w-full h-32 p-2 border rounded\"\n                                        value={generatedKeys.publicKey}\n                                        readOnly\n                                    />\n                                    <button\n                                        onClick={() => downloadFile(generatedKeys.publicKey, `public_${keyType}_${keySize}.${outputFormat}`)}\n                                        className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                                    >\n                                        {language === 'ja' ? 'ダウンロード' : 'Download'}\n                                    </button>\n                                </div>\n\n                                <div>\n                                    <h4 className=\"font-bold\">{language === 'ja' ? '秘密鍵' : 'Private Key'}</h4>\n                                    <textarea\n                                        className=\"mt-1 w-full h-32 p-2 border rounded\"\n                                        value={generatedKeys.privateKey}\n                                        readOnly\n                                    />\n                                    <button\n                                        onClick={() => downloadFile(generatedKeys.privateKey, `private_${keyType}_${keySize}.${outputFormat}`)}\n                                        className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                                    >\n                                        {language === 'ja' ? 'ダウンロード' : 'Download'}\n                                    </button>\n                                </div>\n\n                                <div>\n                                    <h4 className=\"font-bold\">{language === 'ja' ? 'メタデータ' : 'Metadata'}</h4>\n                                    <textarea\n                                        className=\"mt-1 w-full h-32 p-2 border rounded\"\n                                        value={JSON.stringify(generatedKeys.metadata, null, 2)}\n                                        readOnly\n                                    />\n                                    <button\n                                        onClick={() => downloadFile(JSON.stringify(generatedKeys.metadata, null, 2), `metadata_${keyType}_${keySize}.json`)}\n                                        className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                                    >\n                                        {language === 'ja' ? 'ダウンロード' : 'Download'}\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div className=\"mt-6 flex justify-between\">\n                                <button\n                                    onClick={downloadAll}\n                                    className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n                                >\n                                    {language === 'ja' ? '一括ダウンロード' : 'Download All'}\n                                </button>\n                                <button\n                                    onClick={() => setShowResults(false)}\n                                    className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\"\n                                >\n                                    {language === 'ja' ? '閉じる' : 'Close'}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// パフォーマンス計測が必要な場合はコメントを解除してください\n// reportWebVitals(console.log); "],"names":["module","exports","options","usePureJavaScript","require","forge","asn1","pki","pemToDer","pem","msg","decode","procType","type","Error","util","createBuffer","body","privateKeyFromPem","error","headerType","obj","fromDer","privateKeyFromAsn1","privateKeyToPem","key","maxline","toDer","privateKeyToAsn1","getBytes","encode","privateKeyInfoToPem","tls","initConnectionState","state","c","sp","client","entity","ConnectionEnd","read","cipherState","init","cipher","createDecipher","keys","server_write_key","client_write_key","iv","server_write_IV","client_write_IV","write","createCipher","cipherFunction","decrypt_aes_cbc_sha1","encrypt_aes_cbc_sha1","macLength","mac_length","macFunction","hmac_sha1","record","s","rval","mac","macKey","sequenceNumber","fragment","putBytes","updateSequenceNumber","version","minor","Versions","TLS_1_0","random","getBytesSync","start","TLS_1_1","output","update","finish","encrypt_aes_cbc_sha1_padding","length","blockSize","input","decrypt","padding","fillWithByte","decrypt_aes_cbc_sha1_padding","len","paddingLength","last","i","at","truncate","macLen","mac2","mac1","hmac","create","digest","compareMacs","CipherSuites","id","name","initSecurityParameters","bulk_cipher_algorithm","BulkCipherAlgorithm","aes","cipher_type","CipherType","block","enc_key_length","block_length","fixed_iv_length","record_iv_length","mac_algorithm","MACAlgorithm","mac_key_length","f","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","ref","__self","__source","q","a","g","b","d","e","h","call","defaultProps","$$typeof","props","_owner","current","jsx","jsxs","_crypto","isNodejs","process","versions","prng","plugin","ctx","seed","time","reseeds","generated","keyBytes","md","pools","Array","_reseedSync","messageLength","_seed","needed","collect","seedFileSync","_2powK","seedBytes","formatKey","formatSeed","defaultSeedFile","getRandomValues","globalScope","crypto","msCrypto","arr","count","Math","max","min","entropy","Uint32Array","floor","putInt32","QuotaExceededError","hi","lo","next","putByte","pool","generate","callback","generateSync","increment","err","nextTick","seedFile","bytes","_reseed","setImmediate","randomBytes","toString","substr","collectInt","x","String","fromCharCode","registerWorker","worker","self","addEventListener","listener","data","removeEventListener","postMessage","piTable","rol","word","bits","ror","rc2","expandKey","effKeyBits","L","T","T1","T8","ceil","TM","setAt","encrypt","mixRound","mashRound","j","_finish","_input","_output","_iv","K","push","getInt16Le","R","runPlan","plan","val","putInt16Le","ptr","ctr","putBuffer","pad","startEncrypting","createEncryptionCipher","startDecrypting","createDecryptionCipher","modes","transformIV","isArray","tmp","ints","blocks","getInt32","inc32","from64To32","num","ecb","this","_ints","_inBlock","_outBlock","unpad","overflow","cbc","_prev","slice","cfb","_partialBlock","_partialOutput","_partialBytes","inputLength","partialBytes","clear","ofb","gcm","_R","additionalData","_cipherLength","_tagLength","tagLength","_tag","tag","_hashBlock","_hashSubkey","componentBits","_m","generateHashTable","ivLength","_j0","ghash","concat","_aDataLength","_s","afterFinish","lengths","multiply","y","z_i","v_i","pow","out","lsb","tableMultiply","z","x_i","ah","multiplier","perInt","size","shft","generateSubHashTable","mid","half","m_i","m_j","mgf","mgf1","maskLen","t","ByteBuffer","digestLength","log","levels","sLevelInfo","sLoggers","sConsoleLogger","LEVEL_LOCKED","NO_LEVEL_CHECK","INTERPOLATE","level","index","toUpperCase","logMessage","message","messageLevelIndex","logger","flags","prepareStandard","standard","category","prepareFull","args","full","format","apply","prepareStandardFull","standardFull","arguments","timestamp","Date","makeLogger","logFunction","setLevel","lock","addLogger","console","warn","info","debug","levelHandlers","warning","verbose","handler","window","location","query","URL","href","searchParams","has","get","consoleLogger","ssh","_addBigIntegerToBuffer","buffer","hexVal","hexToBytes","_addStringToBuffer","putString","_sha1","sha","sha1","privateKeyToPutty","privateKey","passphrase","comment","algorithm","encryptionAlgorithm","ppk","pubbuffer","pub","encode64","priv","privbuffer","qInv","encLen","aeskey","copy","encrypted","mackey","macbuffer","toHex","publicKeyToOpenSSH","privateKeyToOpenSSH","encryptRsaPrivateKey","legacy","getPublicKeyFingerprint","md5","encoding","hex","delimiter","match","join","aa","ca","encodeURIComponent","da","Set","ea","fa","ha","add","ia","document","createElement","ja","ka","la","ma","v","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","split","forEach","toLowerCase","ra","sa","ta","pa","isNaN","qa","test","oa","removeAttribute","setAttribute","setAttributeNS","replace","xlinkHref","ua","va","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","assign","Ma","stack","trim","Na","Oa","prepareStackTrace","defineProperty","set","Reflect","construct","displayName","includes","Pa","render","Qa","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","constructor","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","value","Xa","activeElement","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","indexOf","setProperty","charAt","substring","tb","menuitem","area","base","br","col","embed","hr","img","keygen","link","meta","param","source","track","wbr","ub","vb","is","wb","xb","target","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","shift","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","code","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","number","password","range","search","tel","text","url","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","end","selectionStart","selectionEnd","defaultView","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","instance","D","of","pf","qf","rf","sf","bind","capture","passive","J","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Promise","Jf","queueMicrotask","resolve","then","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","_stringRef","refs","Mg","Ng","Og","Pg","Qg","Rg","implementation","Sg","Tg","r","done","Ug","Vg","Wg","Xg","Yg","Zg","$g","_currentValue","bh","childLanes","ch","dependencies","firstContext","lanes","dh","eh","context","memoizedValue","fh","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","lh","mh","eventTime","lane","payload","nh","oh","ph","qh","rh","sh","th","uh","vh","wh","xh","yh","tagName","zh","Ah","Bh","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","M","N","O","Ih","Jh","Kh","Lh","P","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","ai","getSnapshot","bi","ci","Q","di","lastEffect","stores","ei","fi","gi","ii","destroy","deps","ji","ki","li","mi","ni","oi","pi","qi","ri","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","Ki","Li","Mi","WeakMap","Ni","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","Si","pingCache","Ti","Ui","Vi","Wi","Xi","Yi","Zi","$i","aj","compare","bj","cj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","jj","kj","pendingContext","lj","zj","Aj","Bj","Cj","mj","nj","oj","fallback","pj","qj","sj","dataset","dgst","tj","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","tail","tailMode","xj","Dj","S","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","Gj","Hj","Ij","Jj","U","Kj","WeakSet","V","Lj","W","Mj","Nj","Pj","Qj","Rj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","X","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","display","hk","ik","jk","kk","__reactInternalSnapshotBeforeUpdate","src","Vk","lk","mk","nk","ok","Y","Z","pk","qk","rk","sk","tk","Infinity","uk","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","al","mutableSourceEagerHydrationData","bl","cache","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","yj","Zk","kl","reportError","ll","_internalRoot","ml","nl","ol","pl","rl","ql","unmount","unstable_scheduleHydration","splice","querySelectorAll","JSON","stringify","form","sl","usingClientEntryPoint","Events","tl","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","vl","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","jQuery","prng_aes","_prng_aes_output","_prng_aes_buffer","spawnPrng","_expandKey","_updateBlock","sha256","_ctx","navigator","_navBytes","mousemove","keypress","createInstance","registerAlgorithm","des","Algorithm","_createCipher","inBlock","outBlock","_keys","initialize","pc2bytes0","pc2bytes1","pc2bytes2","pc2bytes3","pc2bytes4","pc2bytes5","pc2bytes6","pc2bytes7","pc2bytes8","pc2bytes9","pc2bytes10","pc2bytes11","pc2bytes12","pc2bytes13","iterations","shifts","right","lefttmp","righttmp","_createKeys","spfunction1","spfunction2","spfunction3","spfunction4","spfunction5","spfunction6","spfunction7","spfunction8","looping","endloop","loopinc","right1","right2","oids","_IN","_I_","kem","BigInteger","jsbn","_createKDF","kdf","counterStart","hash","rsa","publicKey","keyLength","byteLength","bitLength","bytesToHex","mod","compareTo","ONE","zeros","fillString","encapsulation","kdf1","kdf2","pbe","encryptedPrivateKeyValidator","tagClass","Class","UNIVERSAL","Type","SEQUENCE","constructed","OID","captureAsn1","OCTETSTRING","PBES2AlgorithmsValidator","INTEGER","optional","pkcs12PbeParamsValidator","prfOidToMessageDigest","prfOid","prfAlgorithm","derToOid","oid","supported","prfAlgorithmToMessageDigest","factory","sha512","encryptPrivateKeyInfo","saltSize","dkLen","encryptedData","salt","countBytes","integerToDer","ivLen","encOid","cipherFn","pkcs5","pbkdf2","params","oidToDer","NULL","createPbkdf2Params","saltBytes","generatePkcs12Key","decryptPrivateKeyInfo","errors","validate","encryptionOid","getCipher","encryptionParams","encryptedPrivateKeyToPem","epki","encryptedPrivateKeyFromPem","rsaKey","wrapRsaPrivateKey","opensslDeriveBytes","dekInfo","parameters","decryptRsaPrivateKey","iter","blockLength","result","passBuf","undefined","putInt16","charCodeAt","Slen","Plen","buf","round","Inew","chunk","getCipherForPBES2","getCipherForPKCS12PBE","supportedOids","kdfOid","kdfSalt","kdfIterationCount","getInt","encIv","dIvLen","digests","p12","pkcs12","contentInfoValidator","CONTEXT_SPECIFIC","pfxValidator","safeBagValidator","SET","attributeValidator","certBagValidator","_getBagsByAttribute","safeContents","attrName","attrValue","bagType","safeBags","bag","attributes","_decodePkcs7Data","composed","_decryptSafeContents","pkcs7","encryptedDataValidator","contentType","encAlgorithm","encParameter","encryptedContentAsn1","_decodeSafeContents","strict","res","safeBag","validator","decoder","bagId","_decodeBagAttributes","bagAttributes","bagAsn1","bagValue","pkcs8ShroudedKeyBag","keyBag","certBag","certId","x509Certificate","certAsn1","cert","certificateFromAsn1","decodedAttrs","values","pkcs12FromAsn1","pfx","getBags","filter","localKeyId","localKeyIdHex","friendlyName","getBagsByFriendlyName","getBagsByLocalKeyId","content","macKeyBytes","macAlgorithm","sha384","macSalt","macIterations","parseInt","generateKey","getMac","macDigest","authSafe","contentInfo","_decodeAuthenticatedSafe","toPkcs12Asn1","useMac","generateLocalKeyId","bagAttrs","pairedCert","certificateFromPem","certificateToAsn1","attrs","BMPSTRING","contents","chain","certSafeBags","certBagAttrs","certSafeBag","certSafeContents","certCI","pkAsn1","keySafeContents","keyCI","macData","safe","macValue","algorithms","_initialized","_padding","_state","_w","fullMessageLength","messageLengthSize","messageLength64","int32s","h0","h1","h2","h3","h4","encodeUtf8","_update","compact","finalBlock","s2","_k","h5","h6","h7","t1","t2","s0","maj","baseN","_checkBitsParam","ByteStringBuffer","isArrayBuffer","isArrayBufferView","Buffer","Uint8Array","_constructedStringLength","browser","callbacks","MutationObserver","attr","div","observe","oldSetImmediate","global","ArrayBuffer","_optimizeConstructedString","isEmpty","str","putInt24","putInt24Le","putInt32Le","putInt","putSignedInt","getByte","getInt16","getInt24","getInt24Le","getInt32Le","getSignedInt","decodeUtf8","DataBuffer","readOffset","growSize","DataView","byteOffset","writeOffset","accommodate","amount","dst","setUint8","binary","base64","raw","Uint16Array","utf16","setInt16","setInt8","setInt32","getInt8","getUint8","utf8","xorBytes","s1","s3","int32ToBytes","_base64","_base64Idx","_base58","chr1","chr2","chr3","line","decode64","enc1","enc2","enc3","enc4","unescape","decodeURIComponent","escape","base58","subarray","deflate","api","inflate","_setStorageObject","removeItem","setItem","_getStorageObject","getItem","parse","_setItem","_getItem","_removeItem","empty","prop","_clearItems","_callStorageFunction","func","exception","idx","localStorage","ex","clearItems","part","argi","parts","exec","lastIndex","formatNumber","decimals","dec_point","thousands_sep","abs","toFixed","formatSize","bytesFromIP","ip","bytesFromIPv4","bytesFromIPv6","blanks","bytesToIP","bytesToIPv4","bytesToIPv6","zeroGroups","zeroMaxGroup","group","estimateCores","cores","hardwareConcurrency","Worker","Blob","blobUrl","createObjectURL","st","et","sample","samples","numWorkers","avg","reduce","revokeObjectURL","workers","results","terminate","map","overlaps","r1","overlap","r2","pss","saltLength","sLen","hLen","salt_","pssobj","modBits","emBits","emLen","mHash","m_","ps","dbMask","maskedDB","mask","em","checkLen","setState","forceUpdate","_status","_result","default","Children","toArray","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","_shortNames","publicKeyValidator","x509CertificateValidator","UTCTIME","GENERALIZEDTIME","BITSTRING","captureBitStringValue","rsassaPssParameterValidator","certificationRequestInfoValidator","certificationRequestValidator","_getAttribute","shortName","RDNAttributesAsArray","rdn","valueTagClass","CRIAttributesAsArray","seq","extensionRequest","extensions","certificateExtensionFromAsn1","_readSignatureParameters","fillDefaults","algorithmOid","hashOid","maskGenOid","maskGenHashOid","_createSignatureDigest","signatureOid","_verifySignature","scheme","certificate","sha1WithRSAEncryption","sha1WithRSASignature","signatureParameters","verify","signature","_dnToAsn1","PRINTABLESTRING","UTF8","_fillMissingFields","attribute","valueConstructed","certificateExtensionToAsn1","_fillMissingExtensionFields","extension","unused","b2","b3","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","cA","BOOLEAN","pathLenConstraint","server","objsign","reserved","sslCA","emailCA","objCA","altNames","altName","IA5STRING","ski","generateSubjectKeyIdentifier","subjectKeyIdentifier","keyIdentifier","authorityCertIssuer","issuer","serialNumber","subSeq","fullNameGeneralNames","_signatureParametersToAsn1","_CRIAttributesToAsn1","csr","computeHash","certificateToPem","publicKeyFromPem","publicKeyFromAsn1","publicKeyToPem","publicKeyToAsn1","publicKeyToRSAPublicKeyPem","publicKeyToRSAPublicKey","certificationRequestFromPem","certificationRequestFromAsn1","certificationRequestToPem","certificationRequestToAsn1","createCertificate","siginfo","validity","notBefore","notAfter","getField","sn","addField","subject","setSubject","uniqueId","setIssuer","setExtensions","exts","getExtension","ext","sign","tbsCertificate","getTBSCertificate","issued","expectedIssuer","actualIssuer","isIssuer","parent","iattr","sattr","verifySubjectKeyIdentifier","publicKeyOid","rsaEncryption","certVersion","serial","certSerialNumber","certSignatureOid","certSignatureParams","certinfoSignatureOid","certinfoSignatureParams","certSignature","certValidity1UTCTime","utcTimeToDate","certValidity2GeneralizedTime","generalizedTimeToDate","certValidity3UTCTime","certValidity4GeneralizedTime","imd","ibytes","certIssuer","certIssuerUniqueId","smd","sbytes","certSubject","certSubjectUniqueId","certExtensions","certificateExtensionsFromAsn1","subjectPublicKeyInfo","extseq","critical","ev","derToInteger","gn","createCertificationRequest","csrVersion","csrSignatureOid","csrSignatureParams","csrSignature","certificationRequestInfo","certificationRequestInfoSubject","getAttribute","addAttribute","certificationRequestInfoAttributes","setAttributes","getCertificationRequestInfo","cri","jan_1_1950","jan_1_2050","_dateToAsn1","dateToUtcTime","dateToGeneralizedTime","tbs","certificateExtensionsToAsn1","distinguishedNameToAsn1","dn","createCaStore","certs","caStore","getBySubject","ensureSubjectHasHash","getIssuer","addCertificate","hasCertificate","der1","listAllCertificates","certList","removeCertificate","certificateError","bad_certificate","unsupported_certificate","certificate_revoked","certificate_expired","certificate_unknown","unknown_ca","verifyCertificateChain","validityCheckDate","first","depth","selfSigned","parents","verified","keyUsage","basicConstraints","bcExt","keyUsageExt","vfd","ret","p7","_recipientFromAsn1","recipientInfoValidator","encryptedContent","parameter","encKey","_recipientsToAsn1","recipients","_signerToAsn1","digestAlgorithm","authenticatedAttributesAsn1","signatureAlgorithm","unauthenticatedAttributes","attrsAsn1","_attributeToAsn1","messageDigest","signingTime","_fromAsn1","rawCapture","_decryptContent","ciph","messageFromPem","messageFromAsn1","messageToPem","pemObj","toAsn1","envelopedData","createEnvelopedData","createEncryptedData","signedData","createSignedData","fromAsn1","certificates","crls","signers","digestAlgorithmIdentifiers","signerInfos","signedDataValidator","addSigner","signer","authenticatedAttributes","detached","detachedContent","mds","getBerValueLength","_signersToAsn1","addSignerInfos","addDigestAlgorithmIds","addCertificateRevokationList","crl","envelopedDataValidator","infos","_recipientsFromAsn1","recipientInfos","findRecipient","sAttr","rAttr","recipient","privKey","desCBC","addRecipient","keyLen","ciphFn","foldHeader","header","insertSpace","$1","candidate","insert","ltrim","contentDomain","headers","rMessage","rHeader","rCRLF","lines","_checkBufferLength","remaining","available","requested","APPLICATION","PRIVATE","NONE","ODESC","EXTERNAL","REAL","ENUMERATED","EMBEDDED","ROID","bitStringContents","original","excludeBitStringContents","equals","obj1","obj2","equal","includeBitStringContents","_fromDer","b1","longFormBytes","_getValueLength","decodeBitStrings","savedRead","savedRemaining","used","asn1Options","parseAllBytes","byteCount","useBitStringContents","lenBytes","valueBytes","utc","year","MM","DD","mm","ss","setUTCFullYear","setUTCHours","setTime","gentime","YYYY","fff","isUTC","parseFloat","setFullYear","setHours","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","integer","captureBitStringContents","_nonLatinRegex","prettyPrint","indentation","indent","IA5String","subvalues","sub","prf_TLS1","secret","label","slen","md5itr","sha1itr","md5bytes","sha1bytes","readVector","writeVector","major","TLS_1_2","SupportedVersions","Version","MaxFragment","PRFAlgorithm","tls_prf_sha256","none","rc4","des3","stream","aead","hmac_md5","hmac_sha256","hmac_sha384","hmac_sha512","CompressionMethod","ContentType","change_cipher_spec","alert","handshake","application_data","heartbeat","HandshakeType","hello_request","client_hello","server_hello","server_key_exchange","certificate_request","server_hello_done","certificate_verify","client_key_exchange","finished","Alert","Level","fatal","Description","close_notify","unexpected_message","bad_record_mac","decryption_failed","record_overflow","decompression_failure","handshake_failure","illegal_parameter","access_denied","decode_error","decrypt_error","export_restriction","protocol_version","insufficient_security","internal_error","user_canceled","no_renegotiation","HeartbeatMessageType","heartbeat_request","heartbeat_response","getCipherSuite","twoBytes","cs","handleUnexpected","open","send","description","handleHelloRequest","handshaking","handshakes","createAlert","flush","parseHelloMessage","session_id","cipher_suite","compression_method","cipher_suites","compression_methods","snl","session","server_name","serverNameList","cipherSuite","compressionMethod","createSecurityParameters","msgRandom","cRandom","client_random","sRandom","createRandom","prf_algorithm","compression_algorithm","pre_master_secret","master_secret","server_random","handleServerHello","fail","sessionId","expect","SCC","resuming","SCE","handleClientHello","sessionCache","getSession","clientHelloVersion","CCC","verifyClient","CCE","CKE","createRecord","createServerHello","createChangeCipherSpec","createConnectionState","createFinished","createServerKeyExchange","createCertificateRequest","createServerHelloDone","handleCertificate","certificate_list","cause","SKE","serverCertificate","clientCertificate","handleServerKeyExchange","SCR","handleClientKeyExchange","enc_pre_master_secret","getPrivateKey","CCV","handleCertificateRequest","certificate_types","certificate_authorities","certificateRequest","SHD","handleCertificateVerify","msgBytes","handleServerHelloDone","createClientKeyExchange","SER","createCertificateVerify","getClientSignature","handleChangeCipherSpec","SFI","CFI","handleFinished","SAD","CAD","peerCertificate","isConnected","connected","handleAlert","close","origin","handleHandshake","fragmented","hsTable","handleApplicationData","dataReady","handleHeartbeat","createHeartbeat","expectedHeartbeatPayload","heartbeatReceived","__","R0","R1","R2","R3","R4","ctTable","H0","H1","H2","H3","H4","H5","H6","H7","H8","H9","generateKeys","prf","tls10","km","client_write_MAC_key","server_write_MAC_key","createMode","compressionState","compressFunction","getTimezoneOffset","createClientHello","cipherSuites","cSuites","compressionMethods","cMethods","virtualHost","serverName","snList","extLength","hint","getCertificate","der","certBuffer","getSignature","certTypes","cAs","byteBuffer","payloadLength","plaintextLength","records","rec","tlsData","tlsDataReady","_certErrorToAlertDesc","verifyOptions","desc","_alertDescToCertError","createSessionCache","capacity","setSession","createConnection","cn","dpth","cts","closed","clearFail","reset","ready","compatibleVersion","_readRecordHeader","_readRecord","aligned","handlers","prepare","prepareHeartbeatRequest","prf_tls1","seqNum","_reverseAlphabets","alphabet","TypeError","digits","carry","_encodeWithByteBuffer","regex","RegExp","table","from","reverse","_g","_r","sin","pop","sortIndex","performance","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","pkcs1","rsa_mgf1","maskLength","encode_rsa_oaep","mgf1Md","maxLength","lHash","PS","PS_length","DB","seedLength","seedMask","decode_rsa_oaep","expectedLength","maskedSeed","lHashPrime","in_ps","checkDCE","pbkdf2Sync","xor","u_c","u_c1","outer","inner","sha224","_states","_h","messageLength128","hlen","t1_hi","t1_lo","t2_hi","t2_lo","s0_hi","s0_lo","s1_hi","ch_hi","maj_hi","maj_lo","a_hi","a_lo","b_hi","b_lo","c_hi","c_lo","d_hi","d_lo","e_hi","e_lo","f_hi","f_lo","g_hi","g_lo","h_hi","h_lo","w2","w7","w15","w16","_key","_md","_ipadding","_opadding","keylen","prime","GCD_30_DELTA","THIRTY","fromInt","op_or","generateProbablePrime","rng","nextBytes","primeincFindPrimeWithoutWorkers","generateRandom","workLoad","workerScript","workerMessage","found","dAddOffset","primeincFindPrimeWithWorkers","primeincFindPrime","mrTests","getMillerRabinTests","millerRabinTests","maxBlockTime","_primeinc","deltaIdx","isProbablePrime","bits1","testBit","bitwiseTo","shiftLeft","byteValue","p7v","pkcs7asn1","encryptedContentInfoValidator","signerValidator","getAlgorithm","BlockCipher","_op","_decrypt","opts","privateKeyValidator","encryptOp","sbox","isbox","rcon","mix","imix","xtime","e2","e4","e8","sx","sx2","ime","temp","iNk","m0","m1","m2","m3","wnew","a2","c2","Nr","rsaPrivateKeyValidator","rsaPublicKeyValidator","digestInfoValidator","emsaPkcs1v15encode","oidBytes","digestInfo","_modPow","modPow","dP","subtract","dQ","modInverse","gcd","xp","xq","_encodePkcs1_v1_5","bt","padByte","padNum","numZeros","padBytes","_decodePkcs1_v1_5","_bnToBytes","_getMillerRabinTests","_detectNodeCrypto","fn","_detectSubtleCrypto","subtle","_detectSubtleMsCrypto","_intToUint8Array","yhex","expected","xhex","createKeyPairGenerationState","eInt","qBits","pBits","pqState","stepKeyPairGenerationState","total","p1","q1","phi","setPrivateKey","setPublicKey","generateKeyPair","modulusLength","publicExponent","publicKeyEncoding","privateKeyEncoding","pair","exportKey","pkcs8","setRsaPublicKey","genOp","oncomplete","exportOp","onerror","keypair","generateKeyPairSync","getPrime","_generateKeyPair","schemeOptions","_parseAllDigestBytes","algorithmIdentifier","md2","setRsaPrivateKey","privateKeyModulus","privateKeyPublicExponent","privateKeyPrivateExponent","privateKeyPrime1","privateKeyPrime2","privateKeyExponent1","privateKeyExponent2","privateKeyCoefficient","privateKeyToRSAPrivateKey","rsaPublicKey","publicKeyModulus","publicKeyExponent","publicKeyToSubjectPublicKeyInfo","dbits","fromNumber","fromString","nbi","am3","xl","am","appName","DM","DV","FV","F1","F2","rr","vv","BI_RC","int2char","intAt","nbv","nbits","Classic","Montgomery","mp","invDigit","mpl","mph","um","mt2","op_and","op_xor","op_andnot","lbit","cbit","NullExp","nNop","Barrett","q3","dlShiftTo","mu","divide","convert","revert","divRemTo","mulTo","multiplyTo","sqrTo","squareTo","ZERO","subTo","copyTo","u0","clamp","drShiftTo","fromRadix","lShiftTo","bs","cbs","bm","ds","rShiftTo","pm","pt","ts","ms","nsh","ys","y0","yt","d1","d2","isEven","exp","negate","toRadix","modPowInt","multiplyUpperTo","multiplyLowerTo","lowprimes","lplim","chunkSize","signum","intValue","dMultiply","op","changeBit","addTo","modInt","millerRabin","n1","getLowestSetBit","shiftRight","clone","shortValue","toByteArray","and","or","andNot","not","bitCount","setBit","clearBit","flipBit","remainder","divideAndRemainder","k1","g2","is1","asn1Validator","NativeBuffer","ed25519","messageToNativeBuffer","constants","PUBLIC_KEY_BYTE_LENGTH","PRIVATE_KEY_BYTE_LENGTH","SEED_BYTE_LENGTH","SIGN_BYTE_LENGTH","HASH_BYTE_LENGTH","scalarbase","pack","crypto_sign_keypair","privateKeyOid","ed25519Oid","EdDSA25519","privateKeyBytes","publicKeyBytes","ed25519PublicKey","publicKeyFromPrivateKey","signedMsg","sm","Float64Array","smlen","modL","crypto_sign","sig","chk","den","den2","den4","den6","set25519","gf1","o","unpack25519","pow2523","neq25519","par25519","gf0","unpackneg","scalarmult","crypto_verify_32","crypto_sign_open","D2","msgLen","cswap","sel25519","tx","ty","inv25519","pack25519","car25519","vn","t0","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","globalThis","Function","keyTypes","details","title","useCases","security","Step1","_ref","onSelect","onNext","language","showDetails","setShowDetails","texts","subtitle","en","_jsxs","className","_jsx","onDoubleClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","find","use","keySizes","speed","compatibility","recommendation","ecdsa","eddsa","Step2","keyType","onBack","back","availableSizes","validateOutputFormat","keySize","outputFormat","isValid","validatePassphrase","validateAll","cryptoCheck","validateCryptoParams","formatCheck","passphraseCheck","outputFormats","features","Step3","setError","validation","handleSelect","feature","useCase","Step4","showPassword","setShowPassword","confirmPassphrase","setConfirmPassphrase","passphraseLabel","passphrasePlaceholder","confirmLabel","confirmPlaceholder","hidePassword","errorMatch","errorLength","recommendations","onChange","placeholder","validateInput","Step5","onGenerate","isGenerating","notSet","generating","jwk","pgp","items","handleGenerate","xmlns","fillRule","clipRule","item","getSecurityInfo","bitStrength","standards","getUsageInfo","usage","signing","encryption","keyExchange","authentication","recommended","getCompatibilityInfo","browsers","tools","libraries","_typeof","toPropertyKey","toPrimitive","Number","_defineProperty","writable","ownKeys","getOwnPropertySymbols","_objectSpread2","getOwnPropertyDescriptors","defineProperties","super","getReader","getWriter","releaseLock","async","readToEnd","abort","ReadableStream","isPrototypeOf","pause","on","isBuffer","enqueue","pull","resume","cancel","_reader","_read","_destroy","_releaseLock","_cancel","readLine","readByte","readBytes","peekBytes","_len","WritableStream","TransformStream","some","all","preventClose","readable","preventAbort","preventCancel","pipeTo","highWaterMark","transform","tee","entries","BigInt","iinc","inc","idec","dec","iadd","isub","imul","mul","imod","isNegative","modExp","isZero","isOne","modInv","_egcd","ileftShift","leftShift","irightShift","rightShift","lt","lte","gt","gte","toNumber","MAX_SAFE_INTEGER","getBit","toUint8Array","$","curve","p256","secp256r1","prime256v1","p384","secp384r1","p521","secp521r1","secp256k1","ed25519Legacy","ED25519","Ed25519","curve25519Legacy","X25519","cv25519","curve25519","Curve25519","brainpoolP256r1","brainpoolP384r1","brainpoolP512r1","s2k","simple","salted","iterated","gnu","rsaEncryptSign","rsaEncrypt","rsaSign","elgamal","dsa","ecdh","eddsaLegacy","aedh","aedsa","x25519","x448","ed448","symmetric","plaintext","idea","tripledes","cast5","blowfish","aes128","aes192","aes256","twofish","compression","uncompressed","zip","zlib","bzip2","ripemd","webHash","eax","ocb","experimentalGCM","packet","publicKeyEncryptedSessionKey","symEncryptedSessionKey","onePassSignature","secretKey","secretSubkey","compressedData","symmetricallyEncryptedData","marker","literalData","trust","userID","publicSubkey","userAttribute","symEncryptedIntegrityProtectedData","modificationDetectionCode","aeadEncryptedData","literal","mime","standalone","certGeneric","certPersona","certCasual","certPositive","certRevocation","subkeyBinding","keyBinding","keyRevocation","subkeyRevocation","thirdParty","signatureSubpacket","signatureCreationTime","signatureExpirationTime","exportableCertification","trustSignature","regularExpression","revocable","keyExpirationTime","placeholderBackwardsCompatibility","preferredSymmetricAlgorithms","revocationKey","notationData","preferredHashAlgorithms","preferredCompressionAlgorithms","keyServerPreferences","preferredKeyServer","primaryUserID","policyURI","keyFlags","signersUserID","reasonForRevocation","signatureTarget","embeddedSignature","issuerFingerprint","preferredAEADAlgorithms","certifyKeys","signData","encryptCommunication","encryptStorage","splitPrivateKey","sharedPrivateKey","armor","multipartSection","multipartLast","signed","noReason","keySuperseded","keyCompromised","keyRetired","userIDInvalid","modificationDetection","v5Keys","_ref2","isString","isUint8Array","isStream","readNumber","writeNumber","readDate","writeDate","getTime","normalizeDate","readMPI","leftPad","uint8ArrayToMPI","uint8ArrayBitLength","concatUint8Array","hexToUint8Array","uint8ArrayToHex","stringToUint8Array","uint8ArrayToString","encodeUTF8","TextEncoder","decodeUTF8","TextDecoder","equalsUint8Array","writeChecksum","printDebug","printDebugError","double","getWebCrypto","getBigInteger","uy","getNodeCrypto","getNodeZlib","getNodeBuffer","getHardwareConcurrency","cpus","isEmailAddress","canonicalizeEOL","nativeEOL","copyWithin","removeTrailingSpaces","wrapError","constructAllowedPackets","anyPromise","selectUint8Array","selectUint8","isAES","btoa","atob","preferredHashAlgorithm","preferredSymmetricAlgorithm","preferredCompressionAlgorithm","deflateLevel","aeadProtect","preferredAEADAlgorithm","aeadChunkSizeByte","s2kIterationCountByte","allowUnauthenticatedMessages","allowUnauthenticatedStream","checksumRequired","minRSABits","passwordCollisionCheck","revocationsExpire","allowInsecureDecryptionWithSigningKeys","allowInsecureVerificationWithReformattedKeys","constantTimePKCS1Decryption","constantTimePKCS1DecryptionSupportedSymmetricAlgorithms","minBytesForWebCrypto","ignoreUnsupportedPackets","ignoreMalformedPackets","additionalAllowedPackets","showVersion","showComment","versionString","commentString","maxUserIDLength","knownNotations","useIndutnyElliptic","rejectHashAlgorithms","rejectMessageHashAlgorithms","rejectPublicKeyAlgorithms","rejectCurves","Int16Array","lastIndexOf","checksum","isWildcard","isNull","mapToHex","fromID","wildcard","_","set_rounds","set_state","set_iv","set_nonce","set_mask","set_counter","get_state","get_iv","gcm_init","set_key","ENC","ECB","CBC","CFB","OFB","CTR","DEC","MAC","GCM","HEAP_DATA","_len2","_key2","_e","pos","acquire_asm","heap","asm","release_asm","getUint32","AES_Encrypt_process","AES_Encrypt_finish","AES_Decrypt_process","AES_Decrypt_finish","BlockSize","KeySize","setKey","masking","rotate","keySchedule","getBlockSize","blocksize","finalize","encryptBlock","BLOCKSIZE","SBOXES","PARRAY","NN","_clean","_F","sboxes","_encryptBlock","parray","_decryptBlock","freeze","__proto__","Ge","hmac_reset","hmac_init","hmac_finish","pbkdf2_generate_block","HASH_SIZE","NAME","BLOCK_SIZE","heap_pool","asm_pool","asm_function","tt","rt","it","nt","super_","ct","ht","dt","inherits","htonl","toHex32","zero2","zero8","join32","split32","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","pendingTotal","outSize","hmacStrength","padLength","endian","_delta8","_delta32","_pad","_digest","mt","BlockHash","vt","_t","kt","At","St","Et","Pt","xt","Mt","Kt","Ct","Dt","Ut","Rt","It","Bt","Tt","zt","qt","Ft","Ot","Lt","Nt","jt","Ht","Wt","Gt","Vt","$t","Zt","Xt","Yt","Qt","Jt","er","tr","ir","nr","ar","sr","cr","ur","dr","fr","_prepareBlock","lr","pr","yr","mr","gr","wr","vr","kr","Ar","Sr","Pr","Er","xr","Mr","ripemd160","Kr","Dr","Ur","Rr","Ir","qr","Cr","Br","Tr","zr","Fr","Or","Lr","getHashes","createHash","jr","Hr","Wr","Gr","getHashByteLength","Vr","$r","Zr","Xr","Yr","getCiphers","Qr","Jr","createCipheriv","importKey","createDecipheriv","AES_CTR_set_options","counter","final","getNonce","tagSize","gamma0","_gcm_mac_process","adata","RangeError","AES_GCM_encrypt","AES_GCM_decrypt","AES_GCM_Encrypt_process","AES_GCM_Encrypt_finish","AES_GCM_Decrypt_process","AES_GCM_Decrypt_finish","setAAD","getAuthTag","setAuthTag","scalarMult","box","keyPair","fromSecretKey","fromSeed","setPRNG","nacl","getRandomBytes","getRandomBigInteger","every","emeEncode","emeDecode","emsaEncode","define","int","tn","rn","kty","dp","dq","sy","subn","createSign","modulus","privateExponent","prime1","prime2","exponent1","exponent2","coefficient","createPrivateKey","createVerify","RSA_PKCS1_PADDING","publicEncrypt","privateDecrypt","toArrayLike","validateParams","nn","c1","an","getName","un","hn","ln","pn","yn","bn","captureStackTrace","mn","rawContent","wn","_n","getCurves","kn","An","web","payloadSize","sharedSize","Sn","genKeyPair","namedCurve","Pn","createECDH","getPublicKey","getPublic","getPrivate","En","eq","xn","crv","Mn","Kn","Cn","Dn","Bn","In","Un","_ref3","_ref4","zn","subjectPublicKey","Rn","octstr","explicit","any","bitstr","Tn","objid","qn","Fn","_ref5","On","Ln","RS","_ref6","getPreferredHashAlgo","Nn","Hn","Wn","jn","setUint32","Gn","wrap","unwrap","Vn","$n","Zn","Xn","Yn","Qn","Jn","sharedKey","deriveBits","public","computeSecret","derive","wrappedKey","webcrypto","computeHMAC","createHmac","ephemeralPublicKey","CurveWithOID","ecdhX","elliptic","parseSignatureParams","fromObject","_ref7","publicKeyEncrypt","kdfParams","publicKeyDecrypt","parsePublicKeyParams","publicParams","parsePrivateKeyParams","privateParams","parseEncSessionKeyParams","serializeParams","generateParams","_ref8","_ref9","_ref0","_ref1","_ref10","_ref11","getPrefixRandom","generateSessionKey","getAEADMode","getPreferredCurveHashAlgo","ga","aesKW","Int32Array","_a","arraySet","flattenChunks","rs","ls","gs","ws","vs","ks","As","static_tree","extra_bits","extra_base","elems","max_length","has_stree","Ss","Es","Ps","xs","dyn_tree","max_code","stat_desc","Ms","Ks","pending_buf","Cs","bi_valid","bi_buf","Ds","Us","Rs","Is","dyn_ltree","dyn_dtree","bl_tree","opt_len","static_len","last_lit","matches","Bs","Ts","zs","heap_len","qs","d_buf","l_buf","Fs","heap_max","bl_count","Os","Ls","Ns","Hs","Vs","lit_bufsize","$s","Zs","Xs","Ys","eo","to","oo","co","uo","bo","mo","go","wo","avail_out","pending_out","next_out","total_out","vo","strm","data_type","l_desc","d_desc","bl_desc","ns","strategy","Gs","block_start","strstart","_o","ko","Ao","avail_in","next_in","adler","total_in","So","max_chain_length","prev_length","nice_match","w_size","w_mask","prev","good_match","lookahead","match_start","Eo","window_size","hash_size","head","ins_h","hash_shift","hash_mask","Po","match_length","max_lazy_match","Js","xo","prev_match","match_available","Mo","good_length","max_lazy","nice_length","max_chain","Ko","pending_buf_size","Co","status","gzhead","gzindex","method","last_flush","w_bits","hash_bits","Do","es","js","Uo","hcrc","extra","os","Ws","Ro","Io","Bo","To","_objectSpread","windowBits","memLevel","gzip","ended","chunks","dictionary","_dict_set","onEnd","onData","Fo","dmax","wsize","whave","wnext","hold","lencode","distcode","lenbits","distbits","sane","Oo","Go","Vo","$o","Zo","Xo","havedict","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","was","xflags","extra_len","bitOffset","curByte","hasByte","_ensureByte","seek","writeByte","getCRC","updateCRC","updateCRCRun","eu","tu","errorCode","ru","writePos","writeCurrent","writeCount","_start_bunzip","_init_block","_get_next_block","blockCRC","reader","dbufSize","nextoutput","outputStream","streamCRC","targetBlockCRC","permute","limit","minLen","maxLen","MAX_VALUE","dbuf","writeRun","_read_bunzip","outputsize","au","eof","iu","getBuffer","_coerced","nu","ou","cu","uu","signatureType","hashAlgorithm","publicKeyAlgorithm","signatureData","unhashedSubpackets","signedHashValue","created","signatureNeverExpires","exportable","trustLevel","trustAmount","keyNeverExpires","revocationKeyClass","revocationKeyAlgorithm","revocationKeyFingerprint","issuerKeyID","rawNotations","notations","isPrimaryUserID","reasonForRevocationFlag","reasonForRevocationString","signatureTargetPublicKeyAlgorithm","signatureTargetHashAlgorithm","signatureTargetHash","issuerKeyVersion","revoked","readSubPackets","writeParams","writeUnhashedSubPackets","getFingerprintBytes","getKeyID","writeHashedSubPackets","toHash","hu","_ref12","humanReadable","readSubPacket","toSign","getText","writeForHash","calculateTrailer","writeHeader","hashed","getExpirationTime","_ref13","isExpired","du","_len3","_key3","correspondingSig","fu","lu","fromBinary","packets","fromStream","filterByTag","_len4","_key4","findPacket","indexOfTag","_len5","_key5","bu","gu","pipe","wu","vu","inflateRaw","createInflateRaw","createInflate","Ku","getCount","produceKey","Du","expirationTimeV3","fingerprint","keyID","fromSecretKeyPacket","computeFingerprintAndKeyID","writePublicKey","isDecrypted","getCreationTime","computeFingerprint","getFingerprint","hasSameFingerprintAs","getAlgorithmInfo","readPublicKey","Bu","fromSecretSubkeyPacket","zu","keyMaterial","isEncrypted","s2kUsage","unparseableKeyMaterial","isDummy","isMissingSecretKeyMaterial","makeDummy","clearPrivateParams","qu","Fu","tokens","semantic","rfc6532","rejectTLD","atInDisplayName","ast","addresses","oneResult","partial","address","local","domain","comments","groupName","mailbox","sender","startAt","parseOneAddress","parseAddressList","parseFrom","parseSender","parseReplyTo","Ou","Lu","Gu","rsaBits","Vu","config","$u","Zu","Xu","Ju","Yu","getPrimaryUser","selfCertification","selfCertifications","otherCertifications","revocationSignatures","mainKey","toPacketList","certify","keyPacket","isPrivate","getSigningKey","isRevoked","verifyCertificate","getKeys","verifyAllCertifications","valid","revoke","flag","string","bindingSignatures","privateSubkey","packetListToStructure","users","subkeys","directSignatures","getPrototypeOf","getSubkeys","getKeyIDs","getUserIDs","verifyPrimaryKey","sort","getEncryptionKey","user","getRevocationCertificate","applyRevocationCertificate","signPrimaryUser","signAllUsers","verifyPrimaryUser","verifyAllUsers","toPublic","getDecryptionKeys","_ref16","Boolean","_ref17","addSubkey","userIDs","userIDPacket","signaturePacket","_ref18","secretSubkeyPacket","subkeySignaturePacket","_ref19","_ref29","propertyIsEnumerable","_objectWithoutProperties","_excluded9","revocationCertificate","_ref30","reject","_d","_cursor","_size","_front","_elements","_next","_back","peek","Sd","_ownerReadableStream","Kd","_storedError","Ed","up","Cd","_closedPromise","_closedPromise_resolve","_closedPromise_reject","Ud","isFinite","trunc","Wd","Gd","_readRequests","_closeSteps","_chunkSteps","cp","_errorSteps","_disturbed","_readableStreamController","toStringTag","asyncIterator","_ongoingPromise","_isFinished","_preventCancel","nextSteps","_nextSteps","returnSteps","_returnSteps","_asyncIteratorImpl","setPrototypeOf","_queue","_queueTotalSize","_view","respond","_associatedReadableByteStreamController","respondWithNewView","isView","_pendingPullIntos","bytesFilled","byobRequest","_byobRequest","desiredSize","_closeRequested","_controlledReadableByteStream","hp","_f","_cancelAlgorithm","_autoAllocateChunkSize","elementSize","viewConstructor","readerType","_started","_pulling","_pullAgain","_pullAlgorithm","_readIntoRequests","kf","_strategyHWM","BYTES_PER_ELEMENT","jf","startAlgorithm","writeAlgorithm","closeAlgorithm","abortAlgorithm","locked","El","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","_promise","_resolve","_reject","_reason","_wasAlreadyErroring","Tl","_l","Cl","Ul","_ownerWritableStream","Il","Ml","Rl","Dl","Kl","Pl","_readyPromise","yl","_readyPromiseState","Bl","_closedPromiseState","_strategySizeAlgorithm","_controlledWritableStream","Al","Sl","_abortAlgorithm","wl","_writeAlgorithm","_closeAlgorithm","_readyPromise_resolve","_readyPromise_reject","zl","DOMException","Fl","aborted","Ol","Ll","Yl","$l","Zl","Wl","Gl","Vl","Hl","_controlledReadableStream","Nl","jl","Xl","Ql","Jl","ep","tp","rp","signal","np","autoAllocateChunkSize","pullAlgorithm","cancelAlgorithm","fp","pipeThrough","ap","lp","pp","yp","_byteLengthQueuingStrategyHighWaterMark","bp","gp","wp","_countQueuingStrategyHighWaterMark","_p","vp","kp","Ap","Sp","Ep","readableType","writableType","_writable","_transformStreamController","_backpressureChangePromise","Ip","_readable","_flushAlgorithm","Kp","Mp","_backpressureChangePromise_resolve","Cp","Rp","flushAlgorithm","_controlledTransformStream","_transformAlgorithm","Pp","Tp","Dp","Bp","qp","Fp","Op","Lp","Vp","Xp","_underlyingReader","_readerMode","_pendingRead","_underlyingStream","_attachDefaultReader","_detachReader","_attachReader","_finishPendingRead","_pullWithDefaultReader","_tryClose","_setPendingRead","Qp","_supportsByob","_attachByobReader","_pullWithByobRequest","_pendingWrite","_underlyingWriter","_errorPromise","_errorPromiseReject","_finishErroring","_startErroring","race","_setPendingWrite","_finishPendingWrite","_onRead","_onError","_flushReject","_onTerminate","_flushResolve","_flushPromise","ay","isBN","negative","words","red","BN","wordSize","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","imuln","_iaddn","_expand","_normSign","inspect","modn","idivn","toJSON","toBuffer","andln","iushrn","_countBits","_zeroBits","zeroBits","toTwos","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","uor","iuand","iand","uand","iuxor","ixor","uxor","setn","mulp","makeRBT","revBin","cos","PI","guessLen13b","conjugate","normalize13b","convert13b","stub","mulf","muln","sqr","isqr","iushln","ishln","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","iabs","_ishlnsubmul","_wordDiv","divmod","divn","umod","divRound","egcd","isOdd","_invmp","cmpn","invm","bincn","ucmp","gtn","gten","ltn","lten","eqn","toRed","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","k256","p224","p192","p25519","_tmp","_prime","rinv","minv","ireduce","imulK","mont","__moduleExports","oy","cy","hy","dy","assert","getNAF","getJSF","cachedProperty","parseBytes","intFromLE","fy","ly","rand","py","_rand","yy","Rand","by","my","gy","wy","zero","one","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","redN","_maxwellTrick","vy","_y","precomputed","point","_fixedNafMul","_getDoubles","step","jpoint","mixedAdd","points","toP","_wnafMul","_getNAFPoints","wnd","dblp","_wnafMulAdd","toJ","BasePoint","decodePoint","pointFromX","encodeCompressed","_encode","getX","getY","precompute","doubles","naf","beta","_getBeta","_hasDoubles","dbl","ky","Ay","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","Sy","Ey","inf","Py","zOne","xy","i4","a24","_getEndoRoots","lambda","basis","_getEndoBasis","_endoSplit","k2","_endoWnafMulAdd","fromJSON","isInfinity","mulAdd","jmulAdd","_zeroDbl","_threeDbl","_dbl","trpl","eqXToP","My","Ky","normalize","diffAdd","jumlAdd","Cy","Dy","twisted","mOneA","extended","oneC","Uy","Ry","_mulA","_mulC","pointFromY","_extDbl","_projDbl","_extAdd","_projAdd","Iy","short","edwards","By","Ty","zy","qy","Fy","Oy","Ly","Ny","jy","Hy","Hash","Wy","Gy","utils","common","Vy","$y","PresetCurve","cofactor","Zy","predResist","outLen","minEntropy","reseedInterval","entropyEnc","nonce","nonceEnc","pers","persEnc","Xy","_hmac","reseed","Yy","Qy","_importPrivate","privEnc","_importPublic","pubEnc","Jy","fromPublic","fromPrivate","reason","_importDER","recoveryParam","place","toDER","keyFromPrivate","keyFromPublic","_truncateToN","truncateMsg","canonical","_verify","recoverPubKey","getKeyRecoveryParam","_secret","isPoint","_pub","_pubBytes","fromSecret","encodePoint","encodingLength","decodeInt","privBytes","getSecret","pubBytes","_S","_Rencoded","Rencoded","_Sencoded","Sencoded","encodeInt","toBytes","_b","pointClass","keyFromSecret","hashInt","messagePrefix","makeSignature","curves","convertToPEM","spki","publicPem","privatePem","convertToJWK","publicJwk","privateJwk","convertToSSH","convertToOpenPGP","openpgp","userIds","App","setStep","setKeyType","setKeySize","setOutputFormat","setPassphrase","setLanguage","setIsGenerating","generatedKeys","setGeneratedKeys","showResults","setShowResults","handleNext","handleBack","generateRSAKeyPair","generateECDSAKeyPair","generateEdDSAKeyPair","metadata","toISOString","hasPassphrase","createMetadata","generatedAt","downloadFile","fileName","blob","download","click","renderStep","readOnly","downloadAll","ReactDOM","getElementById","React"],"sourceRoot":""}