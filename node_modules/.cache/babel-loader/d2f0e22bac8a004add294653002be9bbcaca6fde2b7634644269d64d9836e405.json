{"ast":null,"code":"/**\n * メインアプリケーションコンポーネント\n */import React,{useState,useEffect}from'react';import Step1 from'./components/Step1';import Step2 from'./components/Step2';import Step3 from'./components/Step3';import Step4 from'./components/Step4';import Step5 from'./components/Step5';import{createMetadata}from'./utils/metadata';import{validateAll}from'./utils/errorHandler';import{generateRSAKeyPair,generateECDSAKeyPair,generateEdDSAKeyPair,convertToPEM,convertToJWK,convertToSSH,convertToOpenPGP}from'./utils/crypto';// デバッグ用カスタムフック\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const useDebugState=(name,value)=>{useEffect(()=>{console.log(\"[Debug] \".concat(name,\" updated:\"),value);},[name,value]);return value;};export default function App(){// 状態をlocalStorageから初期化\nconst[step,setStep]=useState(()=>{const saved=localStorage.getItem('step');return saved?parseInt(saved):1;});const[keyType,setKeyType]=useState(()=>localStorage.getItem('keyType')||'');const[keySize,setKeySize]=useState(()=>localStorage.getItem('keySize')||'');const[outputFormat,setOutputFormat]=useState(()=>localStorage.getItem('outputFormat')||'');const[passphrase,setPassphrase]=useState(()=>localStorage.getItem('passphrase')||'');const[language,setLanguage]=useState(()=>localStorage.getItem('language')||'ja');const[isGenerating,setIsGenerating]=useState(false);const[generatedKeys,setGeneratedKeys]=useState(null);const[showResults,setShowResults]=useState(false);const[debugMode,setDebugMode]=useState(true);// デバッグモードのトグル\n// 状態変更時にログとlocalStorageに保存\nuseDebugState('step',step);useDebugState('keyType',keyType);useDebugState('keySize',keySize);useDebugState('outputFormat',outputFormat);useDebugState('passphrase',passphrase);useDebugState('language',language);useDebugState('isGenerating',isGenerating);useDebugState('showResults',showResults);useEffect(()=>{localStorage.setItem('step',step.toString());},[step]);useEffect(()=>{localStorage.setItem('keyType',keyType);},[keyType]);useEffect(()=>{localStorage.setItem('keySize',keySize);},[keySize]);useEffect(()=>{localStorage.setItem('outputFormat',outputFormat);},[outputFormat]);useEffect(()=>{localStorage.setItem('passphrase',passphrase);},[passphrase]);useEffect(()=>{localStorage.setItem('language',language);},[language]);const handleNext=()=>{console.log('[Debug] handleNext called, current step:',step);setStep(prev=>{const newStep=Math.min(prev+1,5);console.log('[Debug] Moving to step:',newStep);return newStep;});};const handleBack=()=>{console.log('[Debug] handleBack called, current step:',step);setStep(prev=>{const newStep=Math.max(prev-1,1);console.log('[Debug] Moving to step:',newStep);return newStep;});};// 状態設定関数にログを追加\nconst setKeyTypeWithLog=value=>{console.log('[Debug] setKeyType called with:',value);setKeyType(value);};const setKeySizeWithLog=value=>{console.log('[Debug] setKeySize called with:',value);setKeySize(value);};const setOutputFormatWithLog=value=>{console.log('[Debug] setOutputFormat called with:',value);setOutputFormat(value);};const setPassphraseWithLog=value=>{console.log('[Debug] setPassphrase called with:',value);setPassphrase(value);};// 鍵生成処理\nconst handleGenerate=async()=>{console.log('[Debug] handleGenerate called with params:',{keyType,keySize,outputFormat,passphrase});setIsGenerating(true);try{const params={keyType,keySize,outputFormat,passphrase};const validation=validateAll(params);console.log('[Debug] Validation result:',validation);if(!validation.isValid){throw new Error(validation.message);}let keyPair;console.log('[Debug] Generating key pair for keyType:',keyType);switch(keyType){case'rsa':keyPair=await generateRSAKeyPair(keySize);break;case'ecdsa':keyPair=await generateECDSAKeyPair(keySize);break;case'eddsa':keyPair=await generateEdDSAKeyPair(keySize);break;default:throw new Error('Invalid key type');}console.log('[Debug] Generated key pair:',keyPair);let publicKey,privateKey;console.log('[Debug] Converting to output format:',outputFormat);switch(outputFormat){case'pem':publicKey=convertToPEM(keyPair.publicKey,'public');privateKey=convertToPEM(keyPair.privateKey,'private',passphrase);break;case'jwk':publicKey=convertToJWK(keyPair.publicKey);privateKey=convertToJWK(keyPair.privateKey);break;case'ssh':publicKey=convertToSSH(keyPair.publicKey);privateKey=convertToSSH(keyPair.privateKey);break;case'pgp':publicKey=await convertToOpenPGP(keyPair.publicKey,'public');privateKey=await convertToOpenPGP(keyPair.privateKey,'private',passphrase);break;default:throw new Error('Invalid output format');}console.log('[Debug] Converted keys:',{publicKey,privateKey});const metadata=createMetadata({keyType,keySize,outputFormat,passphrase:!!passphrase,generatedAt:new Date().toISOString()});console.log('[Debug] Generated metadata:',metadata);setGeneratedKeys({publicKey,privateKey,metadata});setShowResults(true);}catch(err){console.error('[Debug] Key generation failed:',err);setGeneratedKeys(null);setShowResults(false);}finally{setIsGenerating(false);}};const downloadFile=(content,fileName)=>{console.log('[Debug] Downloading file:',fileName);const blob=new Blob([content],{type:'text/plain'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.href=url;link.download=fileName;link.click();URL.revokeObjectURL(url);};const downloadAll=()=>{if(!generatedKeys)return;console.log('[Debug] Downloading all files');const{publicKey,privateKey,metadata}=generatedKeys;downloadFile(publicKey,\"public_\".concat(keyType,\"_\").concat(keySize,\".\").concat(outputFormat));downloadFile(privateKey,\"private_\".concat(keyType,\"_\").concat(keySize,\".\").concat(outputFormat));downloadFile(JSON.stringify(metadata,null,2),\"metadata_\".concat(keyType,\"_\").concat(keySize,\".json\"));};const renderStep=()=>{console.log('[Debug] Rendering step:',step);console.log('[Debug] Current params:',{keyType,keySize,outputFormat,passphrase});switch(step){case 1:return/*#__PURE__*/_jsx(Step1,{selected:keyType,onSelect:setKeyTypeWithLog,onNext:handleNext,language:language});case 2:return/*#__PURE__*/_jsx(Step2,{keyType:keyType,selected:keySize,onSelect:setKeySizeWithLog,onBack:handleBack,onNext:handleNext,language:language});case 3:return/*#__PURE__*/_jsx(Step3,{keyType:keyType,keySize:keySize,selected:outputFormat,onSelect:setOutputFormatWithLog,onBack:handleBack,onNext:handleNext,language:language});case 4:return/*#__PURE__*/_jsx(Step4,{outputFormat:outputFormat,passphrase:passphrase,onSelect:setPassphraseWithLog,onBack:handleBack,onNext:handleNext,language:language});case 5:return/*#__PURE__*/_jsx(Step5,{params:{keyType,keySize,outputFormat,passphrase},onGenerate:handleGenerate,onBack:handleBack,isGenerating:isGenerating,language:language});default:return null;}};return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-3xl mx-auto\",children:[debugMode&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-100 p-4 mb-4 rounded-lg shadow\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold mb-2\",children:\"[Debug Panel]\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setDebugMode(false),className:\"mb-2 px-2 py-1 bg-red-500 text-white rounded hover:bg-red-600\",children:\"Hide Debug Panel\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Step:\"}),\" \",step]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"KeyType:\"}),\" \",keyType||'Not selected']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"KeySize:\"}),\" \",keySize||'Not selected']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"OutputFormat:\"}),\" \",outputFormat||'Not selected']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Passphrase:\"}),\" \",passphrase?'Set':'Not set']}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Language:\"}),\" \",language]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setStep(1);setKeyType('');setKeySize('');setOutputFormat('');setPassphrase('');console.log('[Debug] State reset');},className:\"mt-2 px-2 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600\",children:\"Reset State\"})]}),!debugMode&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setDebugMode(true),className:\"mb-4 px-2 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\",children:\"Show Debug Panel\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-white shadow sm:rounded-lg\",children:/*#__PURE__*/_jsx(\"div\",{className:\"px-4 py-5 sm:p-6\",children:renderStep()})}),showResults&&generatedKeys&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg max-w-2xl w-full p-6 max-h-[90vh] overflow-y-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-start\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold\",children:language==='ja'?'生成結果':'Generated Keys'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowResults(false),className:\"text-gray-500 hover:text-gray-700\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-6 h-6\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M6 18L18 6M6 6l12 12\"})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-bold\",children:language==='ja'?'公開鍵':'Public Key'}),/*#__PURE__*/_jsx(\"textarea\",{className:\"mt-1 w-full h-32 p-2 border rounded\",value:generatedKeys.publicKey,readOnly:true}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>downloadFile(generatedKeys.publicKey,\"public_\".concat(keyType,\"_\").concat(keySize,\".\").concat(outputFormat)),className:\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",children:language==='ja'?'ダウンロード':'Download'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-bold\",children:language==='ja'?'秘密鍵':'Private Key'}),/*#__PURE__*/_jsx(\"textarea\",{className:\"mt-1 w-full h-32 p-2 border rounded\",value:generatedKeys.privateKey,readOnly:true}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>downloadFile(generatedKeys.privateKey,\"private_\".concat(keyType,\"_\").concat(keySize,\".\").concat(outputFormat)),className:\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",children:language==='ja'?'ダウンロード':'Download'})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-bold\",children:language==='ja'?'メタデータ':'Metadata'}),/*#__PURE__*/_jsx(\"textarea\",{className:\"mt-1 w-full h-32 p-2 border rounded\",value:JSON.stringify(generatedKeys.metadata,null,2),readOnly:true}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>downloadFile(JSON.stringify(generatedKeys.metadata,null,2),\"metadata_\".concat(keyType,\"_\").concat(keySize,\".json\")),className:\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\",children:language==='ja'?'ダウンロード':'Download'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex justify-between\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:downloadAll,className:\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\",children:language==='ja'?'一括ダウンロード':'Download All'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowResults(false),className:\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\",children:language==='ja'?'閉じる':'Close'})]})]})})]})});}","map":{"version":3,"names":["React","useState","useEffect","Step1","Step2","Step3","Step4","Step5","createMetadata","validateAll","generateRSAKeyPair","generateECDSAKeyPair","generateEdDSAKeyPair","convertToPEM","convertToJWK","convertToSSH","convertToOpenPGP","jsx","_jsx","jsxs","_jsxs","useDebugState","name","value","console","log","concat","App","step","setStep","saved","localStorage","getItem","parseInt","keyType","setKeyType","keySize","setKeySize","outputFormat","setOutputFormat","passphrase","setPassphrase","language","setLanguage","isGenerating","setIsGenerating","generatedKeys","setGeneratedKeys","showResults","setShowResults","debugMode","setDebugMode","setItem","toString","handleNext","prev","newStep","Math","min","handleBack","max","setKeyTypeWithLog","setKeySizeWithLog","setOutputFormatWithLog","setPassphraseWithLog","handleGenerate","params","validation","isValid","Error","message","keyPair","publicKey","privateKey","metadata","generatedAt","Date","toISOString","err","error","downloadFile","content","fileName","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","downloadAll","JSON","stringify","renderStep","selected","onSelect","onNext","onBack","onGenerate","className","children","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","readOnly"],"sources":["/home/uco/business/gh_pages/Kokai2/src/App.js"],"sourcesContent":["/**\n * メインアプリケーションコンポーネント\n */\nimport React, { useState, useEffect } from 'react';\nimport Step1 from './components/Step1';\nimport Step2 from './components/Step2';\nimport Step3 from './components/Step3';\nimport Step4 from './components/Step4';\nimport Step5 from './components/Step5';\nimport { createMetadata } from './utils/metadata';\nimport { validateAll } from './utils/errorHandler';\nimport {\n    generateRSAKeyPair,\n    generateECDSAKeyPair,\n    generateEdDSAKeyPair,\n    convertToPEM,\n    convertToJWK,\n    convertToSSH,\n    convertToOpenPGP\n} from './utils/crypto';\n\n// デバッグ用カスタムフック\nconst useDebugState = (name, value) => {\n    useEffect(() => {\n        console.log(`[Debug] ${name} updated:`, value);\n    }, [name, value]);\n    return value;\n};\n\nexport default function App() {\n    // 状態をlocalStorageから初期化\n    const [step, setStep] = useState(() => {\n        const saved = localStorage.getItem('step');\n        return saved ? parseInt(saved) : 1;\n    });\n    const [keyType, setKeyType] = useState(() => localStorage.getItem('keyType') || '');\n    const [keySize, setKeySize] = useState(() => localStorage.getItem('keySize') || '');\n    const [outputFormat, setOutputFormat] = useState(() => localStorage.getItem('outputFormat') || '');\n    const [passphrase, setPassphrase] = useState(() => localStorage.getItem('passphrase') || '');\n    const [language, setLanguage] = useState(() => localStorage.getItem('language') || 'ja');\n    const [isGenerating, setIsGenerating] = useState(false);\n    const [generatedKeys, setGeneratedKeys] = useState(null);\n    const [showResults, setShowResults] = useState(false);\n    const [debugMode, setDebugMode] = useState(true); // デバッグモードのトグル\n\n    // 状態変更時にログとlocalStorageに保存\n    useDebugState('step', step);\n    useDebugState('keyType', keyType);\n    useDebugState('keySize', keySize);\n    useDebugState('outputFormat', outputFormat);\n    useDebugState('passphrase', passphrase);\n    useDebugState('language', language);\n    useDebugState('isGenerating', isGenerating);\n    useDebugState('showResults', showResults);\n\n    useEffect(() => {\n        localStorage.setItem('step', step.toString());\n    }, [step]);\n    useEffect(() => {\n        localStorage.setItem('keyType', keyType);\n    }, [keyType]);\n    useEffect(() => {\n        localStorage.setItem('keySize', keySize);\n    }, [keySize]);\n    useEffect(() => {\n        localStorage.setItem('outputFormat', outputFormat);\n    }, [outputFormat]);\n    useEffect(() => {\n        localStorage.setItem('passphrase', passphrase);\n    }, [passphrase]);\n    useEffect(() => {\n        localStorage.setItem('language', language);\n    }, [language]);\n\n    const handleNext = () => {\n        console.log('[Debug] handleNext called, current step:', step);\n        setStep(prev => {\n            const newStep = Math.min(prev + 1, 5);\n            console.log('[Debug] Moving to step:', newStep);\n            return newStep;\n        });\n    };\n\n    const handleBack = () => {\n        console.log('[Debug] handleBack called, current step:', step);\n        setStep(prev => {\n            const newStep = Math.max(prev - 1, 1);\n            console.log('[Debug] Moving to step:', newStep);\n            return newStep;\n        });\n    };\n\n    // 状態設定関数にログを追加\n    const setKeyTypeWithLog = (value) => {\n        console.log('[Debug] setKeyType called with:', value);\n        setKeyType(value);\n    };\n\n    const setKeySizeWithLog = (value) => {\n        console.log('[Debug] setKeySize called with:', value);\n        setKeySize(value);\n    };\n\n    const setOutputFormatWithLog = (value) => {\n        console.log('[Debug] setOutputFormat called with:', value);\n        setOutputFormat(value);\n    };\n\n    const setPassphraseWithLog = (value) => {\n        console.log('[Debug] setPassphrase called with:', value);\n        setPassphrase(value);\n    };\n\n    // 鍵生成処理\n    const handleGenerate = async () => {\n        console.log('[Debug] handleGenerate called with params:', { keyType, keySize, outputFormat, passphrase });\n        setIsGenerating(true);\n        try {\n            const params = { keyType, keySize, outputFormat, passphrase };\n            const validation = validateAll(params);\n            console.log('[Debug] Validation result:', validation);\n            if (!validation.isValid) {\n                throw new Error(validation.message);\n            }\n\n            let keyPair;\n            console.log('[Debug] Generating key pair for keyType:', keyType);\n            switch (keyType) {\n                case 'rsa':\n                    keyPair = await generateRSAKeyPair(keySize);\n                    break;\n                case 'ecdsa':\n                    keyPair = await generateECDSAKeyPair(keySize);\n                    break;\n                case 'eddsa':\n                    keyPair = await generateEdDSAKeyPair(keySize);\n                    break;\n                default:\n                    throw new Error('Invalid key type');\n            }\n            console.log('[Debug] Generated key pair:', keyPair);\n\n            let publicKey, privateKey;\n            console.log('[Debug] Converting to output format:', outputFormat);\n            switch (outputFormat) {\n                case 'pem':\n                    publicKey = convertToPEM(keyPair.publicKey, 'public');\n                    privateKey = convertToPEM(keyPair.privateKey, 'private', passphrase);\n                    break;\n                case 'jwk':\n                    publicKey = convertToJWK(keyPair.publicKey);\n                    privateKey = convertToJWK(keyPair.privateKey);\n                    break;\n                case 'ssh':\n                    publicKey = convertToSSH(keyPair.publicKey);\n                    privateKey = convertToSSH(keyPair.privateKey);\n                    break;\n                case 'pgp':\n                    publicKey = await convertToOpenPGP(keyPair.publicKey, 'public');\n                    privateKey = await convertToOpenPGP(keyPair.privateKey, 'private', passphrase);\n                    break;\n                default:\n                    throw new Error('Invalid output format');\n            }\n            console.log('[Debug] Converted keys:', { publicKey, privateKey });\n\n            const metadata = createMetadata({\n                keyType,\n                keySize,\n                outputFormat,\n                passphrase: !!passphrase,\n                generatedAt: new Date().toISOString()\n            });\n            console.log('[Debug] Generated metadata:', metadata);\n\n            setGeneratedKeys({\n                publicKey,\n                privateKey,\n                metadata\n            });\n            setShowResults(true);\n        } catch (err) {\n            console.error('[Debug] Key generation failed:', err);\n            setGeneratedKeys(null);\n            setShowResults(false);\n        } finally {\n            setIsGenerating(false);\n        }\n    };\n\n    const downloadFile = (content, fileName) => {\n        console.log('[Debug] Downloading file:', fileName);\n        const blob = new Blob([content], { type: 'text/plain' });\n        const url = URL.createObjectURL(blob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = fileName;\n        link.click();\n        URL.revokeObjectURL(url);\n    };\n\n    const downloadAll = () => {\n        if (!generatedKeys) return;\n        console.log('[Debug] Downloading all files');\n        const { publicKey, privateKey, metadata } = generatedKeys;\n        downloadFile(publicKey, `public_${keyType}_${keySize}.${outputFormat}`);\n        downloadFile(privateKey, `private_${keyType}_${keySize}.${outputFormat}`);\n        downloadFile(JSON.stringify(metadata, null, 2), `metadata_${keyType}_${keySize}.json`);\n    };\n\n    const renderStep = () => {\n        console.log('[Debug] Rendering step:', step);\n        console.log('[Debug] Current params:', { keyType, keySize, outputFormat, passphrase });\n\n        switch (step) {\n            case 1:\n                return (\n                    <Step1\n                        selected={keyType}\n                        onSelect={setKeyTypeWithLog}\n                        onNext={handleNext}\n                        language={language}\n                    />\n                );\n            case 2:\n                return (\n                    <Step2\n                        keyType={keyType}\n                        selected={keySize}\n                        onSelect={setKeySizeWithLog}\n                        onBack={handleBack}\n                        onNext={handleNext}\n                        language={language}\n                    />\n                );\n            case 3:\n                return (\n                    <Step3\n                        keyType={keyType}\n                        keySize={keySize}\n                        selected={outputFormat}\n                        onSelect={setOutputFormatWithLog}\n                        onBack={handleBack}\n                        onNext={handleNext}\n                        language={language}\n                    />\n                );\n            case 4:\n                return (\n                    <Step4\n                        outputFormat={outputFormat}\n                        passphrase={passphrase}\n                        onSelect={setPassphraseWithLog}\n                        onBack={handleBack}\n                        onNext={handleNext}\n                        language={language}\n                    />\n                );\n            case 5:\n                return (\n                    <Step5\n                        params={{ keyType, keySize, outputFormat, passphrase }}\n                        onGenerate={handleGenerate}\n                        onBack={handleBack}\n                        isGenerating={isGenerating}\n                        language={language}\n                    />\n                );\n            default:\n                return null;\n        }\n    };\n\n    return (\n        <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n            <div className=\"max-w-3xl mx-auto\">\n                {/* デバッグパネル */}\n                {debugMode && (\n                    <div className=\"bg-gray-100 p-4 mb-4 rounded-lg shadow\">\n                        <h3 className=\"text-lg font-bold mb-2\">[Debug Panel]</h3>\n                        <button\n                            onClick={() => setDebugMode(false)}\n                            className=\"mb-2 px-2 py-1 bg-red-500 text-white rounded hover:bg-red-600\"\n                        >\n                            Hide Debug Panel\n                        </button>\n                        <p><strong>Step:</strong> {step}</p>\n                        <p><strong>KeyType:</strong> {keyType || 'Not selected'}</p>\n                        <p><strong>KeySize:</strong> {keySize || 'Not selected'}</p>\n                        <p><strong>OutputFormat:</strong> {outputFormat || 'Not selected'}</p>\n                        <p><strong>Passphrase:</strong> {passphrase ? 'Set' : 'Not set'}</p>\n                        <p><strong>Language:</strong> {language}</p>\n                        <button\n                            onClick={() => {\n                                setStep(1);\n                                setKeyType('');\n                                setKeySize('');\n                                setOutputFormat('');\n                                setPassphrase('');\n                                console.log('[Debug] State reset');\n                            }}\n                            className=\"mt-2 px-2 py-1 bg-yellow-500 text-white rounded hover:bg-yellow-600\"\n                        >\n                            Reset State\n                        </button>\n                    </div>\n                )}\n                {!debugMode && (\n                    <button\n                        onClick={() => setDebugMode(true)}\n                        className=\"mb-4 px-2 py-1 bg-blue-500 text-white rounded hover:bg-blue-600\"\n                    >\n                        Show Debug Panel\n                    </button>\n                )}\n\n                <div className=\"bg-white shadow sm:rounded-lg\">\n                    <div className=\"px-4 py-5 sm:p-6\">\n                        {renderStep()}\n                    </div>\n                </div>\n\n                {/* 結果表示モーダル */}\n                {showResults && generatedKeys && (\n                    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\n                        <div className=\"bg-white rounded-lg max-w-2xl w-full p-6 max-h-[90vh] overflow-y-auto\">\n                            <div className=\"flex justify-between items-start\">\n                                <h3 className=\"text-xl font-bold\">\n                                    {language === 'ja' ? '生成結果' : 'Generated Keys'}\n                                </h3>\n                                <button\n                                    onClick={() => setShowResults(false)}\n                                    className=\"text-gray-500 hover:text-gray-700\"\n                                >\n                                    <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\n                                    </svg>\n                                </button>\n                            </div>\n\n                            <div className=\"mt-4 space-y-4\">\n                                <div>\n                                    <h4 className=\"font-bold\">{language === 'ja' ? '公開鍵' : 'Public Key'}</h4>\n                                    <textarea\n                                        className=\"mt-1 w-full h-32 p-2 border rounded\"\n                                        value={generatedKeys.publicKey}\n                                        readOnly\n                                    />\n                                    <button\n                                        onClick={() => downloadFile(generatedKeys.publicKey, `public_${keyType}_${keySize}.${outputFormat}`)}\n                                        className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                                    >\n                                        {language === 'ja' ? 'ダウンロード' : 'Download'}\n                                    </button>\n                                </div>\n\n                                <div>\n                                    <h4 className=\"font-bold\">{language === 'ja' ? '秘密鍵' : 'Private Key'}</h4>\n                                    <textarea\n                                        className=\"mt-1 w-full h-32 p-2 border rounded\"\n                                        value={generatedKeys.privateKey}\n                                        readOnly\n                                    />\n                                    <button\n                                        onClick={() => downloadFile(generatedKeys.privateKey, `private_${keyType}_${keySize}.${outputFormat}`)}\n                                        className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                                    >\n                                        {language === 'ja' ? 'ダウンロード' : 'Download'}\n                                    </button>\n                                </div>\n\n                                <div>\n                                    <h4 className=\"font-bold\">{language === 'ja' ? 'メタデータ' : 'Metadata'}</h4>\n                                    <textarea\n                                        className=\"mt-1 w-full h-32 p-2 border rounded\"\n                                        value={JSON.stringify(generatedKeys.metadata, null, 2)}\n                                        readOnly\n                                    />\n                                    <button\n                                        onClick={() => downloadFile(JSON.stringify(generatedKeys.metadata, null, 2), `metadata_${keyType}_${keySize}.json`)}\n                                        className=\"mt-2 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\"\n                                    >\n                                        {language === 'ja' ? 'ダウンロード' : 'Download'}\n                                    </button>\n                                </div>\n                            </div>\n\n                            <div className=\"mt-6 flex justify-between\">\n                                <button\n                                    onClick={downloadAll}\n                                    className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700\"\n                                >\n                                    {language === 'ja' ? '一括ダウンロード' : 'Download All'}\n                                </button>\n                                <button\n                                    onClick={() => setShowResults(false)}\n                                    className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\"\n                                >\n                                    {language === 'ja' ? '閉じる' : 'Close'}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}